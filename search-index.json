[{"documents":[{"i":1,"t":"three.js 基础","u":"/blog/2022/10/18/threejs","b":["Blog"]},{"i":26,"t":"Flask（PythonWeb）+MongoDB 实现简单Web后端","u":"/blog/2022/10/27/flask-back","b":["Blog"]},{"i":58,"t":"","u":"/blog/archive","b":["Blog"]},{"i":59,"t":"使用百度API实现老照片上色","u":"/blog/baiduoldpic","b":["Blog"]},{"i":69,"t":"在线编码器","u":"/blog/codingbox","b":["Blog"]},{"i":71,"t":"浅尝 DaisyUI","u":"/blog/daily","b":["Blog"]},{"i":96,"t":"EasyX图形界面构建","u":"/blog/easyx","b":["Blog"]},{"i":106,"t":"认识Vue框架","u":"/blog/first-blog-post","b":["Blog"]},{"i":119,"t":"git commit 规范","u":"/blog/gitrules","b":["Blog"]},{"i":127,"t":"即时设计和 codefun 使用","u":"/blog/jsdesigncodefun","b":["Blog"]},{"i":143,"t":"","u":"/blog/page/2","b":["Blog"]},{"i":216,"t":"记一次图床迁移","u":"/blog/Picbed","b":["Blog"]},{"i":235,"t":"爬取强智教务系统获取课表信息","u":"/blog/qiangzhi","b":["Blog"]},{"i":269,"t":"React-Native 编译 Android 应用报错","u":"/blog/rnbug","b":["Blog"]},{"i":281,"t":"使用 GitHub Actions 自动报平安","u":"/blog/rpeace","b":["Blog"]},{"i":296,"t":"Unity 中的脚本","u":"/blog/UnityCsharp","b":["Blog"]},{"i":313,"t":"前端发展概况介绍","u":"/blog/webfront","b":["Blog"]},{"i":331,"t":"自动推送微信消息和课表","u":"/blog/wxpush","b":["Blog"]},{"i":383,"t":"服务端引入","u":"/docs/back","b":["服务端"]},{"i":386,"t":"运算符","u":"/docs/BackEnd/Java/caculates","b":["服务端","Java"]},{"i":397,"t":"Character 类","u":"/docs/BackEnd/Java/Character","b":["服务端","Java"]},{"i":403,"t":"循环结构和选择结构","u":"/docs/BackEnd/Java/cycling","b":["服务端","Java"]},{"i":427,"t":"面向对象特征","u":"/docs/BackEnd/Java/duixiang","b":["服务端","Java"]},{"i":454,"t":"面向对象高级属性","u":"/docs/BackEnd/Java/duixianghigh","b":["服务端","Java"]},{"i":458,"t":"Java特点","u":"/docs/BackEnd/Java/environment","b":["服务端","Java"]},{"i":465,"t":"IDEA安装和快捷语句","u":"/docs/BackEnd/Java/IDEA","b":["服务端","Java"]},{"i":481,"t":"Number 和 Math 类","u":"/docs/BackEnd/Java/javanumber","b":["服务端","Java"]},{"i":535,"t":"Java概述","u":"/docs/BackEnd/Java/language","b":["服务端","Java"]},{"i":557,"t":"Java基础语法","u":"/docs/BackEnd/Java/languages11","b":["服务端","Java"]},{"i":586,"t":"数组","u":"/docs/BackEnd/Java/numberlist","b":["服务端","Java"]},{"i":619,"t":"String 类","u":"/docs/BackEnd/Java/stringclass","b":["服务端","Java"]},{"i":630,"t":"起步","u":"/docs/BackEnd/MySql/mysqlstart","b":["服务端","数据库"]},{"i":649,"t":"关系型数据库","u":"/docs/BackEnd/MySql/relationdb","b":["服务端","数据库"]},{"i":688,"t":"SQL语言基础","u":"/docs/BackEnd/MySql/sql","b":["服务端","数据库"]},{"i":701,"t":"数据库系统概述","u":"/docs/BackEnd/MySql/xulun","b":["服务端","数据库"]},{"i":760,"t":"认识 Express","u":"/docs/BackEnd/Node.js/Express/Express1","b":["服务端","Node.js","Express"]},{"i":771,"t":"基本使用","u":"/docs/BackEnd/Node.js/Express/Express2","b":["服务端","Node.js","Express"]},{"i":796,"t":"路由","u":"/docs/BackEnd/Node.js/Express/Express3","b":["服务端","Node.js","Express"]},{"i":813,"t":"中间件","u":"/docs/BackEnd/Node.js/Express/Express4","b":["服务端","Node.js","Express"]},{"i":849,"t":"案例：时钟","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","b":["服务端","Node.js","Node.js基础"]},{"i":874,"t":"案例：时钟后端","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","b":["服务端","Node.js","Node.js基础"]},{"i":888,"t":"HTTP 模块","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","b":["服务端","Node.js","Node.js基础"]},{"i":915,"t":"初识 Node.js","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","b":["服务端","Node.js","Node.js基础"]},{"i":928,"t":"Node.js 运行","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs2","b":["服务端","Node.js","Node.js基础"]},{"i":931,"t":"fs 文件系统模块","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","b":["服务端","Node.js","Node.js基础"]},{"i":956,"t":"模块化","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","b":["服务端","Node.js","Node.js基础"]},{"i":976,"t":"path 路径模块","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","b":["服务端","Node.js","Node.js基础"]},{"i":997,"t":"前端引入","u":"/docs/front","b":["前端"]},{"i":1002,"t":"创建新一篇文档或博客","u":"/docs/FrontEnd/Docus/CreateNewBlog","b":["前端","借助Docu恐龙搭建博客"]},{"i":1013,"t":"配置","u":"/docs/FrontEnd/Docus/docs-config","b":["前端","借助Docu恐龙搭建博客"]},{"i":1040,"t":"介绍和安装","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","b":["前端","借助Docu恐龙搭建博客"]},{"i":1052,"t":"进阶内容","u":"/docs/FrontEnd/Docus/improveit","b":["前端","借助Docu恐龙搭建博客"]},{"i":1063,"t":"怎么插入图片？","u":"/docs/FrontEnd/Docus/imgeswhere","b":["前端","借助Docu恐龙搭建博客"]},{"i":1071,"t":"托管你的站点","u":"/docs/FrontEnd/Docus/putinNetlify","b":["前端","借助Docu恐龙搭建博客"]},{"i":1089,"t":"样式修改","u":"/docs/FrontEnd/Docus/style-modification","b":["前端","借助Docu恐龙搭建博客"]},{"i":1097,"t":"使用 Nebula 创建宇宙星空","u":"/docs/FrontEnd/FETricks/createUniverse","b":["前端","前端技巧"]},{"i":1109,"t":"使用免费的微博图床","u":"/docs/FrontEnd/FETricks/freeweibo","b":["前端","前端技巧"]},{"i":1116,"t":"从0开始部署一个Github Pages","u":"/docs/FrontEnd/FETricks/github-pages","b":["前端","前端技巧"]},{"i":1133,"t":"安装NodeJs和NPM","u":"/docs/FrontEnd/FETricks/install-nodejs-and-npm","b":["前端","前端技巧"]},{"i":1140,"t":"情侣商城微信小程序部署详细教程","u":"/docs/FrontEnd/FETricks/mini-inannan","b":["前端","前端技巧"]},{"i":1161,"t":"记一次图床迁移","u":"/docs/FrontEnd/FETricks/picbed-migration","b":["前端","前端技巧"]},{"i":1179,"t":"使用github进行项目协同","u":"/docs/FrontEnd/FETricks/project-coll","b":["前端","前端技巧"]},{"i":1209,"t":"使用Netlify进行静态网页托管","u":"/docs/FrontEnd/FETricks/use-netlify","b":["前端","前端技巧"]},{"i":1221,"t":"游戏完善","u":"/docs/FrontEnd/React/React-in/make-game-better","b":["前端","React.js","React案例"]},{"i":1242,"t":"React.js引入","u":"/docs/FrontEnd/React/React-in/react-introduction","b":["前端","React.js","React案例"]},{"i":1249,"t":"React.js概览","u":"/docs/FrontEnd/React/React-in/React.jsHello","b":["前端","React.js","React案例"]},{"i":1264,"t":"React.js基本用法","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","b":["前端","React.js","React案例"]},{"i":1302,"t":"React 概述","u":"/docs/FrontEnd/React/Reactjs/gaishu","b":["前端","React.js","React教程"]},{"i":1313,"t":"无后端异步渲染全景图","u":"/docs/FrontEnd/threejsPano/async-render-panorama","b":["前端","threejs全景图网站"]},{"i":1330,"t":"创建全景图解析引擎","u":"/docs/FrontEnd/threejsPano/create-pano-engine","b":["前端","threejs全景图网站"]},{"i":1347,"t":"在vue中安装threejs引擎","u":"/docs/FrontEnd/threejsPano/install-threejs-in-vue","b":["前端","threejs全景图网站"]},{"i":1354,"t":"vue前端","u":"/docs/FrontEnd/threejsPano/vue-front-pano","b":["前端","threejs全景图网站"]},{"i":1369,"t":"Class 与 Style 绑定","u":"/docs/FrontEnd/vue.js/classbind","b":["前端","Vue.js"]},{"i":1387,"t":"引入","u":"/docs/FrontEnd/vue.js/guide","b":["前端","Vue.js"]},{"i":1400,"t":"实例","u":"/docs/FrontEnd/vue.js/instance","b":["前端","Vue.js"]},{"i":1407,"t":"计算属性和侦听器","u":"/docs/FrontEnd/vue.js/jisuanshuxing","b":["前端","Vue.js"]},{"i":1421,"t":"列表渲染","u":"/docs/FrontEnd/vue.js/lvueist","b":["前端","Vue.js"]},{"i":1446,"t":"Vue.js 脚手架搭建工程","u":"/docs/FrontEnd/vue.js/VueCli","b":["前端","Vue.js"]},{"i":1461,"t":"条件渲染","u":"/docs/FrontEnd/vue.js/vueif","b":["前端","Vue.js"]},{"i":1479,"t":"模板语法","u":"/docs/FrontEnd/vue.js/vuetemplate","b":["前端","Vue.js"]},{"i":1506,"t":"css入场动画","u":"/docs/FrontEnd/webBasis/css/css-entry-animation","b":["前端","web基础","css"]},{"i":1508,"t":"css实现图片网格遮罩","u":"/docs/FrontEnd/webBasis/css/css-grid-mask","b":["前端","web基础","css"]},{"i":1512,"t":"css下雨特效","u":"/docs/FrontEnd/webBasis/css/cssRaining","b":["前端","web基础","css"]},{"i":1523,"t":"css高阶-高级选择器","u":"/docs/FrontEnd/webBasis/css/cssSelector","b":["前端","web基础","css"]},{"i":1533,"t":"HTML概述","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","b":["前端","web基础","HTML"]},{"i":1548,"t":"<head> 标签","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","b":["前端","web基础","HTML"]},{"i":1566,"t":"超链接","u":"/docs/FrontEnd/webBasis/HTML/hyperlink","b":["前端","web基础","HTML"]},{"i":1573,"t":"媒体嵌入","u":"/docs/FrontEnd/webBasis/HTML/mediainput","b":["前端","web基础","HTML"]},{"i":1593,"t":"文字处理","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","b":["前端","web基础","HTML"]},{"i":1619,"t":"基本语法","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","b":["前端","web基础","JavaScript"]},{"i":1647,"t":"对象","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","b":["前端","web基础","JavaScript"]},{"i":1662,"t":"JSchallenger","u":"/docs/FrontEnd/webBasis/JavaScript/JSChallenger","b":["前端","web基础","JavaScript"]},{"i":1668,"t":"输出","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","b":["前端","web基础","JavaScript"]},{"i":1680,"t":"数据类型和函数","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","b":["前端","web基础","JavaScript"]},{"i":1716,"t":"数字和数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","b":["前端","web基础","JavaScript"]},{"i":1814,"t":"事件","u":"/docs/FrontEnd/webBasis/JavaScript/shijian","b":["前端","web基础","JavaScript"]},{"i":1819,"t":"什么是 JavaScript","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","b":["前端","web基础","JavaScript"]},{"i":1830,"t":"字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","b":["前端","web基础","JavaScript"]},{"i":1855,"t":"实战：云开发数据库","u":"/docs/FrontEnd/WxMini/DataBaseDemo","b":["前端","微信小程序开发"]},{"i":1880,"t":"微信小程序开发-重点：组件库","u":"/docs/FrontEnd/WxMini/wxmini-component","b":["前端","微信小程序开发"]},{"i":1901,"t":"微信小程序开发-举例","u":"/docs/FrontEnd/WxMini/wxmini-example","b":["前端","微信小程序开发"]},{"i":1907,"t":"微信小程序开发-Git协作","u":"/docs/FrontEnd/WxMini/wxmini-git","b":["前端","微信小程序开发"]},{"i":1916,"t":"微信小程序开发-逻辑层架构","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","b":["前端","微信小程序开发"]},{"i":1929,"t":"微信小程序开发-页面配置","u":"/docs/FrontEnd/WxMini/wxmini-page-config","b":["前端","微信小程序开发"]},{"i":1936,"t":"微信小程序开发-准备工作","u":"/docs/FrontEnd/WxMini/wxmini-pre","b":["前端","微信小程序开发"]},{"i":1961,"t":"微信小程序开发-服务器数据交互","u":"/docs/FrontEnd/WxMini/wxmini-server","b":["前端","微信小程序开发"]},{"i":1967,"t":"微信小程序开发-源代码解读","u":"/docs/FrontEnd/WxMini/wxmini-source-code","b":["前端","微信小程序开发"]},{"i":1982,"t":"微信小程序开发-代码结构及语法","u":"/docs/FrontEnd/WxMini/wxmini-structure","b":["前端","微信小程序开发"]},{"i":2008,"t":"Hello","u":"/docs/intro","b":[]},{"i":2023,"t":"概论","u":"/docs/Notes/computergraphics/first","b":["学习笔记","计算机图形学"]},{"i":2024,"t":"应用层","u":"/docs/Notes/ComputerNetwork/application-layer","b":["学习笔记","计算机网络"]},{"i":2060,"t":"应用层-DNS","u":"/docs/Notes/ComputerNetwork/application-layer-dns","b":["学习笔记","计算机网络"]},{"i":2073,"t":"基础知识","u":"/docs/Notes/ComputerNetwork/basic-knowledge","b":["学习笔记","计算机网络"]},{"i":2093,"t":"中英文概念","u":"/docs/Notes/ComputerNetwork/chinese-english-concept","b":["学习笔记","计算机网络"]},{"i":2099,"t":"数据链路层-以太网","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","b":["学习笔记","计算机网络"]},{"i":2137,"t":"习题","u":"/docs/Notes/ComputerNetwork/exercise-cn","b":["学习笔记","计算机网络"]},{"i":2139,"t":"网络分类和分层架构","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","b":["学习笔记","计算机网络"]},{"i":2157,"t":"网络层","u":"/docs/Notes/ComputerNetwork/network-layer","b":["学习笔记","计算机网络"]},{"i":2225,"t":"物理层","u":"/docs/Notes/ComputerNetwork/physical-layer","b":["学习笔记","计算机网络"]},{"i":2228,"t":"运输层-TCP连接建立过程","u":"/docs/Notes/ComputerNetwork/tcp-connection-establishment-process","b":["学习笔记","计算机网络"]},{"i":2237,"t":"TCP/IP分层图","u":"/docs/Notes/ComputerNetwork/tcp-ip-layered-diagram","b":["学习笔记","计算机网络"]},{"i":2238,"t":"运输层","u":"/docs/Notes/ComputerNetwork/transport-layer","b":["学习笔记","计算机网络"]},{"i":2261,"t":"运输层-可靠数据传输(rdt)","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","b":["学习笔记","计算机网络"]},{"i":2283,"t":"分组嗅探和WireShark","u":"/docs/Notes/ComputerNetwork/WireShark","b":["学习笔记","计算机网络"]},{"i":2294,"t":"绪论","u":"/docs/Notes/DataStruct/DSBasic","b":["学习笔记","数据结构"]},{"i":2320,"t":"第一章-简介","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","b":["学习笔记","数媒基础"]},{"i":2374,"t":"第二章 数字图形处理","u":"/docs/Notes/digitalMediaBasis/smjc-2","b":["学习笔记","数媒基础"]},{"i":2455,"t":"第三章-数字音频处理","u":"/docs/Notes/digitalMediaBasis/smjc-3","b":["学习笔记","数媒基础"]},{"i":2504,"t":"第四章-数字视频技术","u":"/docs/Notes/digitalMediaBasis/smjc-4","b":["学习笔记","数媒基础"]},{"i":2528,"t":"第七章-多媒体信息检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","b":["学习笔记","数媒基础"]},{"i":2537,"t":"第七章-多媒体信息检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","b":["学习笔记","数媒基础"]},{"i":2546,"t":"第七章-多媒体信息检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","b":["学习笔记","数媒基础"]},{"i":2555,"t":"学习笔记引入","u":"/docs/study","b":["学习笔记"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[0,3.841,1,0.204]],["t/26",[2,3.841,3,3.841]],["t/58",[]],["t/59",[4,5.103]],["t/69",[1,0.272]],["t/71",[1,0.204,5,3.841]],["t/96",[6,5.103]],["t/106",[7,4.523]],["t/119",[1,0.164,8,2.729,9,3.079]],["t/127",[1,0.25,10,3.079]],["t/143",[]],["t/216",[1,0.272]],["t/235",[1,0.272]],["t/269",[1,0.192,11,1.954,12,2.204,13,2.204]],["t/281",[1,0.217,14,2.277,15,2.569]],["t/296",[1,0.204,16,3.841]],["t/313",[1,0.272]],["t/331",[1,0.272]],["t/383",[1,0.272]],["t/386",[1,0.272]],["t/397",[1,0.204,17,3.841]],["t/403",[1,0.272]],["t/427",[1,0.272]],["t/454",[1,0.272]],["t/458",[18,4.141]],["t/465",[19,5.103]],["t/481",[1,0.217,20,2.569,21,2.569]],["t/535",[18,4.141]],["t/557",[18,4.141]],["t/586",[1,0.272]],["t/619",[1,0.204,22,3.841]],["t/630",[1,0.272]],["t/649",[1,0.272]],["t/688",[23,5.103]],["t/701",[1,0.272]],["t/760",[1,0.204,24,3.841]],["t/771",[1,0.272]],["t/796",[1,0.272]],["t/813",[1,0.272]],["t/849",[1,0.272]],["t/874",[1,0.272]],["t/888",[1,0.204,25,3.841]],["t/915",[1,0.204,26,3.404]],["t/928",[1,0.204,26,3.404]],["t/931",[1,0.204,27,3.841]],["t/956",[1,0.272]],["t/976",[1,0.204,28,3.841]],["t/997",[1,0.272]],["t/1002",[1,0.272]],["t/1013",[1,0.272]],["t/1040",[1,0.272]],["t/1052",[1,0.272]],["t/1063",[1,0.272]],["t/1071",[1,0.272]],["t/1089",[1,0.272]],["t/1097",[1,0.25,29,3.079]],["t/1109",[1,0.272]],["t/1116",[30,3.841,31,3.841]],["t/1133",[32,5.103]],["t/1140",[1,0.272]],["t/1161",[1,0.272]],["t/1179",[14,4.523]],["t/1209",[33,5.103]],["t/1221",[1,0.272]],["t/1242",[34,4.141]],["t/1249",[34,4.141]],["t/1264",[34,4.141]],["t/1302",[1,0.204,11,3.404]],["t/1313",[1,0.272]],["t/1330",[1,0.272]],["t/1347",[35,5.103]],["t/1354",[7,4.523]],["t/1369",[1,0.217,36,2.569,37,2.569]],["t/1387",[1,0.272]],["t/1400",[1,0.272]],["t/1407",[1,0.272]],["t/1421",[1,0.272]],["t/1446",[1,0.204,38,3.841]],["t/1461",[1,0.272]],["t/1479",[1,0.272]],["t/1506",[39,3.855]],["t/1508",[39,3.855]],["t/1512",[39,3.855]],["t/1523",[1,0.204,39,2.901]],["t/1533",[40,5.103]],["t/1548",[1,0.204,41,3.841]],["t/1566",[1,0.272]],["t/1573",[1,0.272]],["t/1593",[1,0.272]],["t/1619",[1,0.272]],["t/1647",[1,0.272]],["t/1662",[42,5.103]],["t/1668",[1,0.272]],["t/1680",[1,0.272]],["t/1716",[1,0.272]],["t/1814",[1,0.272]],["t/1819",[1,0.204,43,3.841]],["t/1830",[1,0.272]],["t/1855",[1,0.272]],["t/1880",[1,0.294]],["t/1901",[1,0.294]],["t/1907",[1,0.204,8,3.404]],["t/1916",[1,0.294]],["t/1929",[1,0.294]],["t/1936",[1,0.294]],["t/1961",[1,0.294]],["t/1967",[1,0.294]],["t/1982",[1,0.294]],["t/2008",[44,5.103]],["t/2023",[1,0.272]],["t/2024",[1,0.272]],["t/2060",[1,0.204,45,3.841]],["t/2073",[1,0.272]],["t/2093",[1,0.272]],["t/2099",[1,0.294]],["t/2137",[1,0.272]],["t/2139",[1,0.272]],["t/2157",[1,0.272]],["t/2225",[1,0.272]],["t/2228",[1,0.204,46,3.841]],["t/2237",[47,5.103]],["t/2238",[1,0.272]],["t/2261",[1,0.204,48,3.841]],["t/2283",[49,5.103]],["t/2294",[1,0.272]],["t/2320",[1,0.294]],["t/2374",[1,0.294]],["t/2455",[1,0.294]],["t/2504",[1,0.294]],["t/2528",[1,0.294]],["t/2537",[1,0.294]],["t/2546",[1,0.294]],["t/2555",[1,0.272]]],"invertedIndex":[["",{"_index":1,"t":{"1":{"position":[[9,2]]},"69":{"position":[[0,5]]},"71":{"position":[[0,2]]},"119":{"position":[[11,2]]},"127":{"position":[[0,5],[14,2]]},"216":{"position":[[0,7]]},"235":{"position":[[0,14]]},"269":{"position":[[13,2],[24,4]]},"281":{"position":[[0,2],[18,5]]},"296":{"position":[[6,4]]},"313":{"position":[[0,8]]},"331":{"position":[[0,11]]},"383":{"position":[[0,5]]},"386":{"position":[[0,3]]},"397":{"position":[[10,1]]},"403":{"position":[[0,9]]},"427":{"position":[[0,6]]},"454":{"position":[[0,8]]},"481":{"position":[[7,1],[14,1]]},"586":{"position":[[0,2]]},"619":{"position":[[7,1]]},"630":{"position":[[0,2]]},"649":{"position":[[0,6]]},"701":{"position":[[0,7]]},"760":{"position":[[0,2]]},"771":{"position":[[0,4]]},"796":{"position":[[0,2]]},"813":{"position":[[0,3]]},"849":{"position":[[0,5]]},"874":{"position":[[0,7]]},"888":{"position":[[5,2]]},"915":{"position":[[0,2]]},"928":{"position":[[8,2]]},"931":{"position":[[3,6]]},"956":{"position":[[0,3]]},"976":{"position":[[5,4]]},"997":{"position":[[0,4]]},"1002":{"position":[[0,10]]},"1013":{"position":[[0,2]]},"1040":{"position":[[0,5]]},"1052":{"position":[[0,4]]},"1063":{"position":[[0,7]]},"1071":{"position":[[0,6]]},"1089":{"position":[[0,4]]},"1097":{"position":[[0,2],[10,6]]},"1109":{"position":[[0,9]]},"1140":{"position":[[0,15]]},"1161":{"position":[[0,7]]},"1221":{"position":[[0,4]]},"1302":{"position":[[6,2]]},"1313":{"position":[[0,10]]},"1330":{"position":[[0,9]]},"1369":{"position":[[6,1],[14,2]]},"1387":{"position":[[0,2]]},"1400":{"position":[[0,2]]},"1407":{"position":[[0,8]]},"1421":{"position":[[0,4]]},"1446":{"position":[[7,7]]},"1461":{"position":[[0,4]]},"1479":{"position":[[0,4]]},"1523":{"position":[[6,5]]},"1548":{"position":[[7,2]]},"1566":{"position":[[0,3]]},"1573":{"position":[[0,4]]},"1593":{"position":[[0,4]]},"1619":{"position":[[0,4]]},"1647":{"position":[[0,2]]},"1668":{"position":[[0,2]]},"1680":{"position":[[0,7]]},"1716":{"position":[[0,5]]},"1814":{"position":[[0,2]]},"1819":{"position":[[0,3]]},"1830":{"position":[[0,3]]},"1855":{"position":[[0,9]]},"1880":{"position":[[0,7],[8,6]]},"1901":{"position":[[0,7],[8,2]]},"1907":{"position":[[0,7]]},"1916":{"position":[[0,7],[8,5]]},"1929":{"position":[[0,7],[8,4]]},"1936":{"position":[[0,7],[8,4]]},"1961":{"position":[[0,7],[8,7]]},"1967":{"position":[[0,7],[8,5]]},"1982":{"position":[[0,7],[8,7]]},"2023":{"position":[[0,2]]},"2024":{"position":[[0,3]]},"2060":{"position":[[0,3]]},"2073":{"position":[[0,4]]},"2093":{"position":[[0,5]]},"2099":{"position":[[0,5],[6,3]]},"2137":{"position":[[0,2]]},"2139":{"position":[[0,9]]},"2157":{"position":[[0,3]]},"2225":{"position":[[0,3]]},"2228":{"position":[[0,3]]},"2238":{"position":[[0,3]]},"2261":{"position":[[0,3]]},"2294":{"position":[[0,2]]},"2320":{"position":[[0,3],[4,2]]},"2374":{"position":[[0,3],[4,6]]},"2455":{"position":[[0,3],[4,6]]},"2504":{"position":[[0,3],[4,6]]},"2528":{"position":[[0,3],[4,7]]},"2537":{"position":[[0,3],[4,7]]},"2546":{"position":[[0,3],[4,7]]},"2555":{"position":[[0,6]]}}}],["0开始部署一个github",{"_index":30,"t":{"1116":{"position":[[0,14]]}}}],["action",{"_index":15,"t":{"281":{"position":[[10,7]]}}}],["android",{"_index":13,"t":{"269":{"position":[[16,7]]}}}],["api",{"_index":4,"t":{"59":{"position":[[0,14]]}}}],["charact",{"_index":17,"t":{"397":{"position":[[0,9]]}}}],["class",{"_index":36,"t":{"1369":{"position":[[0,5]]}}}],["codefun",{"_index":10,"t":{"127":{"position":[[6,7]]}}}],["commit",{"_index":9,"t":{"119":{"position":[[4,6]]}}}],["css",{"_index":39,"t":{"1506":{"position":[[0,7]]},"1508":{"position":[[0,11]]},"1512":{"position":[[0,7]]},"1523":{"position":[[0,5]]}}}],["daisyui",{"_index":5,"t":{"71":{"position":[[3,7]]}}}],["dn",{"_index":45,"t":{"2060":{"position":[[4,3]]}}}],["easyx",{"_index":6,"t":{"96":{"position":[[0,11]]}}}],["express",{"_index":24,"t":{"760":{"position":[[3,7]]}}}],["flask（pythonweb）+mongodb",{"_index":2,"t":{"26":{"position":[[0,24]]}}}],["fs",{"_index":27,"t":{"931":{"position":[[0,2]]}}}],["git",{"_index":8,"t":{"119":{"position":[[0,3]]},"1907":{"position":[[8,5]]}}}],["github",{"_index":14,"t":{"281":{"position":[[3,6]]},"1179":{"position":[[0,14]]}}}],["head",{"_index":41,"t":{"1548":{"position":[[0,6]]}}}],["hello",{"_index":44,"t":{"2008":{"position":[[0,5]]}}}],["html",{"_index":40,"t":{"1533":{"position":[[0,6]]}}}],["http",{"_index":25,"t":{"888":{"position":[[0,4]]}}}],["idea",{"_index":19,"t":{"465":{"position":[[0,11]]}}}],["java",{"_index":18,"t":{"458":{"position":[[0,6]]},"535":{"position":[[0,6]]},"557":{"position":[[0,8]]}}}],["javascript",{"_index":43,"t":{"1819":{"position":[[4,10]]}}}],["jschalleng",{"_index":42,"t":{"1662":{"position":[[0,12]]}}}],["math",{"_index":21,"t":{"481":{"position":[[9,4]]}}}],["nativ",{"_index":12,"t":{"269":{"position":[[6,6]]}}}],["nebula",{"_index":29,"t":{"1097":{"position":[[3,6]]}}}],["netlifi",{"_index":33,"t":{"1209":{"position":[[0,17]]}}}],["node.j",{"_index":26,"t":{"915":{"position":[[3,7]]},"928":{"position":[[0,7]]}}}],["nodejs和npm",{"_index":32,"t":{"1133":{"position":[[0,12]]}}}],["number",{"_index":20,"t":{"481":{"position":[[0,6]]}}}],["page",{"_index":31,"t":{"1116":{"position":[[15,5]]}}}],["path",{"_index":28,"t":{"976":{"position":[[0,4]]}}}],["rdt",{"_index":48,"t":{"2261":{"position":[[4,11]]}}}],["react",{"_index":11,"t":{"269":{"position":[[0,5]]},"1302":{"position":[[0,5]]}}}],["react.j",{"_index":34,"t":{"1242":{"position":[[0,10]]},"1249":{"position":[[0,10]]},"1264":{"position":[[0,12]]}}}],["sql",{"_index":23,"t":{"688":{"position":[[0,7]]}}}],["string",{"_index":22,"t":{"619":{"position":[[0,6]]}}}],["style",{"_index":37,"t":{"1369":{"position":[[8,5]]}}}],["tcp",{"_index":46,"t":{"2228":{"position":[[4,9]]}}}],["tcp/ip",{"_index":47,"t":{"2237":{"position":[[0,9]]}}}],["three.j",{"_index":0,"t":{"1":{"position":[[0,8]]}}}],["uniti",{"_index":16,"t":{"296":{"position":[[0,5]]}}}],["vue",{"_index":7,"t":{"106":{"position":[[0,7]]},"1354":{"position":[[0,5]]}}}],["vue.j",{"_index":38,"t":{"1446":{"position":[[0,6]]}}}],["vue中安装threej",{"_index":35,"t":{"1347":{"position":[[0,16]]}}}],["web",{"_index":3,"t":{"26":{"position":[[25,9]]}}}],["wireshark",{"_index":49,"t":{"2283":{"position":[[0,14]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":3,"t":"three.js 简介","u":"/blog/2022/10/18/threejs","h":"#threejs-简介","p":1},{"i":5,"t":"引入 three.js","u":"/blog/2022/10/18/threejs","h":"#引入-threejs","p":1},{"i":7,"t":"程序结构","u":"/blog/2022/10/18/threejs","h":"#程序结构","p":1},{"i":9,"t":"基本使用","u":"/blog/2022/10/18/threejs","h":"#基本使用","p":1},{"i":11,"t":"几何体 Geometry","u":"/blog/2022/10/18/threejs","h":"#几何体-geometry","p":1},{"i":13,"t":"材质 Material","u":"/blog/2022/10/18/threejs","h":"#材质-material","p":1},{"i":15,"t":"光源 Light","u":"/blog/2022/10/18/threejs","h":"#光源-light","p":1},{"i":17,"t":"相机 Camera","u":"/blog/2022/10/18/threejs","h":"#相机-camera","p":1},{"i":19,"t":"渲染器 Renderer","u":"/blog/2022/10/18/threejs","h":"#渲染器-renderer","p":1},{"i":21,"t":"场景——相机——渲染器","u":"/blog/2022/10/18/threejs","h":"#场景相机渲染器","p":1},{"i":22,"t":"周期渲染","u":"/blog/2022/10/18/threejs","h":"#周期渲染","p":1},{"i":24,"t":"鼠标动作","u":"/blog/2022/10/18/threejs","h":"#鼠标动作","p":1},{"i":28,"t":"介绍","u":"/blog/2022/10/27/flask-back","h":"#介绍","p":26},{"i":30,"t":"前端部分","u":"/blog/2022/10/27/flask-back","h":"#前端部分","p":26},{"i":32,"t":"Flask API接口","u":"/blog/2022/10/27/flask-back","h":"#flask-api接口","p":26},{"i":34,"t":"接口测试","u":"/blog/2022/10/27/flask-back","h":"#接口测试","p":26},{"i":36,"t":"在前端中请求接口","u":"/blog/2022/10/27/flask-back","h":"#在前端中请求接口","p":26},{"i":38,"t":"MongoDB 数据库","u":"/blog/2022/10/27/flask-back","h":"#mongodb-数据库","p":26},{"i":40,"t":"注册 MongoDB 账号","u":"/blog/2022/10/27/flask-back","h":"#注册-mongodb-账号","p":26},{"i":42,"t":"账号注册","u":"/blog/2022/10/27/flask-back","h":"#账号注册","p":26},{"i":44,"t":"创建数据库","u":"/blog/2022/10/27/flask-back","h":"#创建数据库","p":26},{"i":46,"t":"连接数据库","u":"/blog/2022/10/27/flask-back","h":"#连接数据库","p":26},{"i":48,"t":"创建数据集","u":"/blog/2022/10/27/flask-back","h":"#创建数据集","p":26},{"i":50,"t":"Flask 多个接口","u":"/blog/2022/10/27/flask-back","h":"#flask-多个接口","p":26},{"i":52,"t":"扩展应用","u":"/blog/2022/10/27/flask-back","h":"#扩展应用","p":26},{"i":54,"t":"部署","u":"/blog/2022/10/27/flask-back","h":"#部署","p":26},{"i":56,"t":"开源源代码","u":"/blog/2022/10/27/flask-back","h":"#开源源代码","p":26},{"i":61,"t":"前言","u":"/blog/baiduoldpic","h":"#前言","p":59},{"i":63,"t":"一、注册百度开发者账号","u":"/blog/baiduoldpic","h":"#一注册百度开发者账号","p":59},{"i":65,"t":"二、编码","u":"/blog/baiduoldpic","h":"#二编码","p":59},{"i":67,"t":"备注","u":"/blog/baiduoldpic","h":"#备注","p":59},{"i":72,"t":"了解 DaisyUI","u":"/blog/daily","h":"#了解-daisyui","p":71},{"i":73,"t":"DaisyUI","u":"/blog/daily","h":"#daisyui","p":71},{"i":75,"t":"Tailwind CSS","u":"/blog/daily","h":"#tailwind-css","p":71},{"i":77,"t":"前提工作","u":"/blog/daily","h":"#前提工作","p":71},{"i":79,"t":"安装 DaisyUI","u":"/blog/daily","h":"#安装-daisyui","p":71},{"i":81,"t":"安装 Tailwind","u":"/blog/daily","h":"#安装-tailwind","p":71},{"i":83,"t":"安装 DaisyUI","u":"/blog/daily","h":"#安装-daisyui-1","p":71},{"i":85,"t":"创建 css 文件","u":"/blog/daily","h":"#创建-css-文件","p":71},{"i":87,"t":"在 Nuxt.js 中尝试","u":"/blog/daily","h":"#在-nuxtjs-中尝试","p":71},{"i":88,"t":"在 React 中尝试","u":"/blog/daily","h":"#在-react-中尝试","p":71},{"i":89,"t":"全局配置","u":"/blog/daily","h":"#全局配置","p":71},{"i":91,"t":"参数说明","u":"/blog/daily","h":"#参数说明","p":71},{"i":93,"t":"使用举例","u":"/blog/daily","h":"#使用举例","p":71},{"i":94,"t":"创建按钮","u":"/blog/daily","h":"#创建按钮","p":71},{"i":98,"t":"EasyX用户图形界面的构建","u":"/blog/easyx","h":"#easyx用户图形界面的构建","p":96},{"i":100,"t":"1.菜单构建","u":"/blog/easyx","h":"#1菜单构建","p":96},{"i":102,"t":"2.数据的输入和显示","u":"/blog/easyx","h":"#2数据的输入和显示","p":96},{"i":104,"t":"实现效果","u":"/blog/easyx","h":"#实现效果","p":96},{"i":108,"t":"Vue.js简介","u":"/blog/first-blog-post","h":"#vuejs简介","p":106},{"i":109,"t":"定义它","u":"/blog/first-blog-post","h":"#定义它","p":106},{"i":111,"t":"谁创造了他？","u":"/blog/first-blog-post","h":"#谁创造了他","p":106},{"i":113,"t":"Vue.js的特点","u":"/blog/first-blog-post","h":"#vuejs的特点","p":106},{"i":115,"t":"Vue的生命周期","u":"/blog/first-blog-post","h":"#vue的生命周期","p":106},{"i":117,"t":"Vue-cli","u":"/blog/first-blog-post","h":"#vue-cli","p":106},{"i":121,"t":"意义","u":"/blog/gitrules","h":"#意义","p":119},{"i":123,"t":"语法","u":"/blog/gitrules","h":"#语法","p":119},{"i":125,"t":"示例","u":"/blog/gitrules","h":"#示例","p":119},{"i":129,"t":"前言","u":"/blog/jsdesigncodefun","h":"#前言","p":127},{"i":131,"t":"即时设计使用","u":"/blog/jsdesigncodefun","h":"#即时设计使用","p":127},{"i":132,"t":"介绍","u":"/blog/jsdesigncodefun","h":"#介绍","p":127},{"i":134,"t":"下载和安装","u":"/blog/jsdesigncodefun","h":"#下载和安装","p":127},{"i":136,"t":"导出切图","u":"/blog/jsdesigncodefun","h":"#导出切图","p":127},{"i":138,"t":"Codefun 使用","u":"/blog/jsdesigncodefun","h":"#codefun-使用","p":127},{"i":139,"t":"介绍","u":"/blog/jsdesigncodefun","h":"#介绍-1","p":127},{"i":141,"t":"下载和安装","u":"/blog/jsdesigncodefun","h":"#下载和安装-1","p":127},{"i":144,"t":"前端发展概况介绍","u":"/blog/page/2","h":"","p":143},{"i":146,"t":"前言","u":"/blog/page/2","h":"#前言","p":143},{"i":147,"t":"什么是前端","u":"/blog/page/2","h":"#什么是前端","p":143},{"i":149,"t":"前端发展概况","u":"/blog/page/2","h":"#前端发展概况","p":143},{"i":151,"t":"Web1.0- 静态内容呈现","u":"/blog/page/2","h":"#web10--静态内容呈现","p":143},{"i":153,"t":"Web2.0- 交互时代","u":"/blog/page/2","h":"#web20--交互时代","p":143},{"i":155,"t":"Web3.0","u":"/blog/page/2","h":"#web30","p":143},{"i":157,"t":"当前的前端生态","u":"/blog/page/2","h":"#当前的前端生态","p":143},{"i":158,"t":"nodejs的兴起","u":"/blog/page/2","h":"#nodejs的兴起","p":143},{"i":160,"t":"组件化开发和MVVM的兴起","u":"/blog/page/2","h":"#组件化开发和mvvm的兴起","p":143},{"i":162,"t":"在线编码器","u":"/blog/page/2","h":"","p":143},{"i":164,"t":"使用百度API实现老照片上色","u":"/blog/page/2","h":"","p":143},{"i":166,"t":"前言","u":"/blog/page/2","h":"#前言","p":143},{"i":168,"t":"一、注册百度开发者账号","u":"/blog/page/2","h":"#一注册百度开发者账号","p":143},{"i":170,"t":"二、编码","u":"/blog/page/2","h":"#二编码","p":143},{"i":172,"t":"备注","u":"/blog/page/2","h":"#备注","p":143},{"i":174,"t":"记一次图床迁移","u":"/blog/page/2","h":"","p":143},{"i":176,"t":"前言","u":"/blog/page/2","h":"#前言","p":143},{"i":178,"t":"爬取已经使用的图片","u":"/blog/page/2","h":"#爬取已经使用的图片","p":143},{"i":180,"t":"阿里云oss注册","u":"/blog/page/2","h":"#阿里云oss注册","p":143},{"i":181,"t":"注册","u":"/blog/page/2","h":"#注册","p":143},{"i":183,"t":"创建bucket","u":"/blog/page/2","h":"#创建bucket","p":143},{"i":185,"t":"获取地域结点信息","u":"/blog/page/2","h":"#获取地域结点信息","p":143},{"i":187,"t":"创建AccessKey","u":"/blog/page/2","h":"#创建accesskey","p":143},{"i":189,"t":"PicGo配置","u":"/blog/page/2","h":"#picgo配置","p":143},{"i":191,"t":"替换原来博客中的微博图床","u":"/blog/page/2","h":"#替换原来博客中的微博图床","p":143},{"i":193,"t":"EasyX图形界面构建","u":"/blog/page/2","h":"","p":143},{"i":195,"t":"EasyX用户图形界面的构建","u":"/blog/page/2","h":"#easyx用户图形界面的构建","p":143},{"i":197,"t":"1.菜单构建","u":"/blog/page/2","h":"#1菜单构建","p":143},{"i":199,"t":"2.数据的输入和显示","u":"/blog/page/2","h":"#2数据的输入和显示","p":143},{"i":201,"t":"实现效果","u":"/blog/page/2","h":"#实现效果","p":143},{"i":203,"t":"认识Vue框架","u":"/blog/page/2","h":"","p":143},{"i":205,"t":"Vue.js简介","u":"/blog/page/2","h":"#vuejs简介","p":143},{"i":206,"t":"定义它","u":"/blog/page/2","h":"#定义它","p":143},{"i":208,"t":"谁创造了他？","u":"/blog/page/2","h":"#谁创造了他","p":143},{"i":210,"t":"Vue.js的特点","u":"/blog/page/2","h":"#vuejs的特点","p":143},{"i":212,"t":"Vue的生命周期","u":"/blog/page/2","h":"#vue的生命周期","p":143},{"i":214,"t":"Vue-cli","u":"/blog/page/2","h":"#vue-cli","p":143},{"i":218,"t":"前言","u":"/blog/Picbed","h":"#前言","p":216},{"i":220,"t":"爬取已经使用的图片","u":"/blog/Picbed","h":"#爬取已经使用的图片","p":216},{"i":222,"t":"阿里云oss注册","u":"/blog/Picbed","h":"#阿里云oss注册","p":216},{"i":223,"t":"注册","u":"/blog/Picbed","h":"#注册","p":216},{"i":225,"t":"创建bucket","u":"/blog/Picbed","h":"#创建bucket","p":216},{"i":227,"t":"获取地域结点信息","u":"/blog/Picbed","h":"#获取地域结点信息","p":216},{"i":229,"t":"创建AccessKey","u":"/blog/Picbed","h":"#创建accesskey","p":216},{"i":231,"t":"PicGo配置","u":"/blog/Picbed","h":"#picgo配置","p":216},{"i":233,"t":"替换原来博客中的微博图床","u":"/blog/Picbed","h":"#替换原来博客中的微博图床","p":216},{"i":237,"t":"前言","u":"/blog/qiangzhi","h":"#前言","p":235},{"i":239,"t":"获取课表接口","u":"/blog/qiangzhi","h":"#获取课表接口","p":235},{"i":240,"t":"接口链接","u":"/blog/qiangzhi","h":"#接口链接","p":235},{"i":242,"t":"参数说明","u":"/blog/qiangzhi","h":"#参数说明","p":235},{"i":244,"t":"接口分析","u":"/blog/qiangzhi","h":"#接口分析","p":235},{"i":246,"t":"脚本编写","u":"/blog/qiangzhi","h":"#脚本编写","p":235},{"i":248,"t":"创建 API 请求","u":"/blog/qiangzhi","h":"#创建-api-请求","p":235},{"i":250,"t":"获取当前周次","u":"/blog/qiangzhi","h":"#获取当前周次","p":235},{"i":252,"t":"获取今天星期几","u":"/blog/qiangzhi","h":"#获取今天星期几","p":235},{"i":254,"t":"获取现在的时间应该在上哪节课","u":"/blog/qiangzhi","h":"#获取现在的时间应该在上哪节课","p":235},{"i":256,"t":"解析 json 为列表字典","u":"/blog/qiangzhi","h":"#解析-json-为列表字典","p":235},{"i":258,"t":"查询当前课程","u":"/blog/qiangzhi","h":"#查询当前课程","p":235},{"i":260,"t":"脚本仓库","u":"/blog/qiangzhi","h":"#脚本仓库","p":235},{"i":262,"t":"运行结果","u":"/blog/qiangzhi","h":"#运行结果","p":235},{"i":263,"t":"应用","u":"/blog/qiangzhi","h":"#应用","p":235},{"i":265,"t":"安全提示","u":"/blog/qiangzhi","h":"#安全提示","p":235},{"i":267,"t":"支持我","u":"/blog/qiangzhi","h":"#支持我","p":235},{"i":271,"t":":app:installDebug","u":"/blog/rnbug","h":"#appinstalldebug","p":269},{"i":272,"t":"问题描述","u":"/blog/rnbug","h":"#问题描述","p":269},{"i":274,"t":"解决方案","u":"/blog/rnbug","h":"#解决方案","p":269},{"i":276,"t":"访问错误","u":"/blog/rnbug","h":"#访问错误","p":269},{"i":277,"t":"问题描述","u":"/blog/rnbug","h":"#问题描述-1","p":269},{"i":279,"t":"解决方案","u":"/blog/rnbug","h":"#解决方案-1","p":269},{"i":283,"t":"食用指南","u":"/blog/rpeace","h":"#食用指南","p":281},{"i":284,"t":"Fork 仓库","u":"/blog/rpeace","h":"#fork-仓库","p":281},{"i":286,"t":"添加个人信息","u":"/blog/rpeace","h":"#添加个人信息","p":281},{"i":288,"t":"修改定时【可选】","u":"/blog/rpeace","h":"#修改定时可选","p":281},{"i":290,"t":"手动测试","u":"/blog/rpeace","h":"#手动测试","p":281},{"i":292,"t":"腾讯云加强定时【选做】","u":"/blog/rpeace","h":"#腾讯云加强定时选做","p":281},{"i":294,"t":"创建腾讯云函数","u":"/blog/rpeace","h":"#创建腾讯云函数","p":281},{"i":298,"t":"为什么要使用脚本","u":"/blog/UnityCsharp","h":"#为什么要使用脚本","p":296},{"i":300,"t":"创建脚本","u":"/blog/UnityCsharp","h":"#创建脚本","p":296},{"i":302,"t":"脚本模板概览","u":"/blog/UnityCsharp","h":"#脚本模板概览","p":296},{"i":304,"t":"脚本的生命周期","u":"/blog/UnityCsharp","h":"#脚本的生命周期","p":296},{"i":306,"t":"多个脚本运行顺序","u":"/blog/UnityCsharp","h":"#多个脚本运行顺序","p":296},{"i":308,"t":"常用脚本","u":"/blog/UnityCsharp","h":"#常用脚本","p":296},{"i":309,"t":"响应键盘","u":"/blog/UnityCsharp","h":"#响应键盘","p":296},{"i":311,"t":"游戏物体在有重力时不会掉下去","u":"/blog/UnityCsharp","h":"#游戏物体在有重力时不会掉下去","p":296},{"i":315,"t":"前言","u":"/blog/webfront","h":"#前言","p":313},{"i":316,"t":"什么是前端","u":"/blog/webfront","h":"#什么是前端","p":313},{"i":318,"t":"前端发展概况","u":"/blog/webfront","h":"#前端发展概况","p":313},{"i":320,"t":"Web1.0- 静态内容呈现","u":"/blog/webfront","h":"#web10--静态内容呈现","p":313},{"i":322,"t":"Web2.0- 交互时代","u":"/blog/webfront","h":"#web20--交互时代","p":313},{"i":324,"t":"Web3.0","u":"/blog/webfront","h":"#web30","p":313},{"i":326,"t":"当前的前端生态","u":"/blog/webfront","h":"#当前的前端生态","p":313},{"i":327,"t":"nodejs的兴起","u":"/blog/webfront","h":"#nodejs的兴起","p":313},{"i":329,"t":"组件化开发和MVVM的兴起","u":"/blog/webfront","h":"#组件化开发和mvvm的兴起","p":313},{"i":333,"t":"前言","u":"/blog/wxpush","h":"#前言","p":331},{"i":335,"t":"涉及的工具和技术","u":"/blog/wxpush","h":"#涉及的工具和技术","p":331},{"i":337,"t":"GitHub Actions 介绍","u":"/blog/wxpush","h":"#github-actions-介绍","p":331},{"i":339,"t":"微信公众测试号","u":"/blog/wxpush","h":"#微信公众测试号","p":331},{"i":340,"t":"注册","u":"/blog/wxpush","h":"#注册","p":331},{"i":342,"t":"扫码关注","u":"/blog/wxpush","h":"#扫码关注","p":331},{"i":344,"t":"获取高德天气 API","u":"/blog/wxpush","h":"#获取高德天气-api","p":331},{"i":346,"t":"注册","u":"/blog/wxpush","h":"#注册-1","p":331},{"i":348,"t":"创建应用","u":"/blog/wxpush","h":"#创建应用","p":331},{"i":350,"t":"添加 Key","u":"/blog/wxpush","h":"#添加-key","p":331},{"i":352,"t":"在 GitHub 上 Fork 本项目","u":"/blog/wxpush","h":"#在-github-上-fork-本项目","p":331},{"i":354,"t":"在线编辑项目源代码","u":"/blog/wxpush","h":"#在线编辑项目源代码","p":331},{"i":356,"t":"修改配置","u":"/blog/wxpush","h":"#修改配置","p":331},{"i":358,"t":"修改早安推送代码","u":"/blog/wxpush","h":"#修改早安推送代码","p":331},{"i":360,"t":"修改晚安推送代码","u":"/blog/wxpush","h":"#修改晚安推送代码","p":331},{"i":362,"t":"修改课表信息代码","u":"/blog/wxpush","h":"#修改课表信息代码","p":331},{"i":364,"t":"添加 Secrets","u":"/blog/wxpush","h":"#添加-secrets","p":331},{"i":366,"t":"获取 APP_ID 和 APP_SECRET","u":"/blog/wxpush","h":"#获取-app_id-和-app_secret","p":331},{"i":368,"t":"获取高德应用的密匙 KEY","u":"/blog/wxpush","h":"#获取高德应用的密匙-key","p":331},{"i":370,"t":"获取模板 ID","u":"/blog/wxpush","h":"#获取模板-id","p":331},{"i":372,"t":"提交代码","u":"/blog/wxpush","h":"#提交代码","p":331},{"i":374,"t":"腾讯云定时服务","u":"/blog/wxpush","h":"#腾讯云定时服务","p":331},{"i":375,"t":"背景","u":"/blog/wxpush","h":"#背景","p":331},{"i":377,"t":"获取 GitHub Token","u":"/blog/wxpush","h":"#获取-github-token","p":331},{"i":379,"t":"创建腾讯云函数","u":"/blog/wxpush","h":"#创建腾讯云函数","p":331},{"i":381,"t":"支持","u":"/blog/wxpush","h":"#支持","p":331},{"i":384,"t":"存放服务端端学习资料的地方","u":"/docs/back","h":"#存放服务端端学习资料的地方","p":383},{"i":387,"t":"算数运算符","u":"/docs/BackEnd/Java/caculates","h":"#算数运算符","p":386},{"i":389,"t":"关系运算符","u":"/docs/BackEnd/Java/caculates","h":"#关系运算符","p":386},{"i":391,"t":"位运算符","u":"/docs/BackEnd/Java/caculates","h":"#位运算符","p":386},{"i":393,"t":"逻辑运算符","u":"/docs/BackEnd/Java/caculates","h":"#逻辑运算符","p":386},{"i":395,"t":"条件运算符","u":"/docs/BackEnd/Java/caculates","h":"#条件运算符","p":386},{"i":399,"t":"转义序列","u":"/docs/BackEnd/Java/Character","h":"#转义序列","p":397},{"i":401,"t":"Character 方法","u":"/docs/BackEnd/Java/Character","h":"#character-方法","p":397},{"i":405,"t":"while 循环","u":"/docs/BackEnd/Java/cycling","h":"#while-循环","p":403},{"i":407,"t":"do…while 循环","u":"/docs/BackEnd/Java/cycling","h":"#dowhile-循环","p":403},{"i":409,"t":"for 循环","u":"/docs/BackEnd/Java/cycling","h":"#for-循环","p":403},{"i":411,"t":"增强 for 循环","u":"/docs/BackEnd/Java/cycling","h":"#增强-for-循环","p":403},{"i":413,"t":"break 关键字","u":"/docs/BackEnd/Java/cycling","h":"#break-关键字","p":403},{"i":415,"t":"continue 关键字","u":"/docs/BackEnd/Java/cycling","h":"#continue-关键字","p":403},{"i":417,"t":"if 条件语句","u":"/docs/BackEnd/Java/cycling","h":"#if-条件语句","p":403},{"i":419,"t":"if...else","u":"/docs/BackEnd/Java/cycling","h":"#ifelse","p":403},{"i":421,"t":"多层判断","u":"/docs/BackEnd/Java/cycling","h":"#多层判断","p":403},{"i":423,"t":"嵌套 if","u":"/docs/BackEnd/Java/cycling","h":"#嵌套-if","p":403},{"i":425,"t":"switch 选择语句","u":"/docs/BackEnd/Java/cycling","h":"#switch-选择语句","p":403},{"i":428,"t":"面向过程和面向对象","u":"/docs/BackEnd/Java/duixiang","h":"#面向过程和面向对象","p":427},{"i":429,"t":"面向过程","u":"/docs/BackEnd/Java/duixiang","h":"#面向过程","p":427},{"i":431,"t":"面向对象","u":"/docs/BackEnd/Java/duixiang","h":"#面向对象","p":427},{"i":433,"t":"面向对象的基本特征","u":"/docs/BackEnd/Java/duixiang","h":"#面向对象的基本特征","p":427},{"i":435,"t":"类和对象","u":"/docs/BackEnd/Java/duixiang","h":"#类和对象","p":427},{"i":436,"t":"类的基本结构","u":"/docs/BackEnd/Java/duixiang","h":"#类的基本结构","p":427},{"i":438,"t":"构造方法","u":"/docs/BackEnd/Java/duixiang","h":"#构造方法","p":427},{"i":440,"t":"对象的创建和使用","u":"/docs/BackEnd/Java/duixiang","h":"#对象的创建和使用","p":427},{"i":442,"t":"成员变量","u":"/docs/BackEnd/Java/duixiang","h":"#成员变量","p":427},{"i":444,"t":"构造方法","u":"/docs/BackEnd/Java/duixiang","h":"#构造方法-1","p":427},{"i":446,"t":"this 关键字","u":"/docs/BackEnd/Java/duixiang","h":"#this-关键字","p":427},{"i":448,"t":"垃圾回收","u":"/docs/BackEnd/Java/duixiang","h":"#垃圾回收","p":427},{"i":450,"t":"static 关键字","u":"/docs/BackEnd/Java/duixiang","h":"#static-关键字","p":427},{"i":452,"t":"内部成员类","u":"/docs/BackEnd/Java/duixiang","h":"#内部成员类","p":427},{"i":455,"t":"继承","u":"/docs/BackEnd/Java/duixianghigh","h":"#继承","p":454},{"i":456,"t":"继承的概念","u":"/docs/BackEnd/Java/duixianghigh","h":"#继承的概念","p":454},{"i":459,"t":"Java的起源和发展","u":"/docs/BackEnd/Java/environment","h":"#java的起源和发展","p":458},{"i":461,"t":"Java的特点","u":"/docs/BackEnd/Java/environment","h":"#java的特点","p":458},{"i":463,"t":"Java的工作方式","u":"/docs/BackEnd/Java/environment","h":"#java的工作方式","p":458},{"i":466,"t":"安装","u":"/docs/BackEnd/Java/IDEA","h":"#安装","p":465},{"i":468,"t":"快捷键","u":"/docs/BackEnd/Java/IDEA","h":"#快捷键","p":465},{"i":470,"t":"扩展设置","u":"/docs/BackEnd/Java/IDEA","h":"#扩展设置","p":465},{"i":471,"t":"设置皮肤","u":"/docs/BackEnd/Java/IDEA","h":"#设置皮肤","p":465},{"i":473,"t":"设置字体","u":"/docs/BackEnd/Java/IDEA","h":"#设置字体","p":465},{"i":475,"t":"设置自动包导入","u":"/docs/BackEnd/Java/IDEA","h":"#设置自动包导入","p":465},{"i":477,"t":"设置代码提示忽略大小写","u":"/docs/BackEnd/Java/IDEA","h":"#设置代码提示忽略大小写","p":465},{"i":479,"t":"设置IDEA背景图片","u":"/docs/BackEnd/Java/IDEA","h":"#设置idea背景图片","p":465},{"i":482,"t":"Math 类","u":"/docs/BackEnd/Java/javanumber","h":"#math-类","p":481},{"i":484,"t":"方法","u":"/docs/BackEnd/Java/javanumber","h":"#方法","p":481},{"i":485,"t":"xxxValue","u":"/docs/BackEnd/Java/javanumber","h":"#xxxvalue","p":481},{"i":487,"t":"compareTo","u":"/docs/BackEnd/Java/javanumber","h":"#compareto","p":481},{"i":489,"t":"equals","u":"/docs/BackEnd/Java/javanumber","h":"#equals","p":481},{"i":491,"t":"toString","u":"/docs/BackEnd/Java/javanumber","h":"#tostring","p":481},{"i":493,"t":"valueOf","u":"/docs/BackEnd/Java/javanumber","h":"#valueof","p":481},{"i":495,"t":"parseInt","u":"/docs/BackEnd/Java/javanumber","h":"#parseint","p":481},{"i":497,"t":"abs","u":"/docs/BackEnd/Java/javanumber","h":"#abs","p":481},{"i":499,"t":"ceil 和 floor","u":"/docs/BackEnd/Java/javanumber","h":"#ceil-和-floor","p":481},{"i":501,"t":"rint","u":"/docs/BackEnd/Java/javanumber","h":"#rint","p":481},{"i":503,"t":"round","u":"/docs/BackEnd/Java/javanumber","h":"#round","p":481},{"i":505,"t":"min","u":"/docs/BackEnd/Java/javanumber","h":"#min","p":481},{"i":507,"t":"max","u":"/docs/BackEnd/Java/javanumber","h":"#max","p":481},{"i":509,"t":"exp","u":"/docs/BackEnd/Java/javanumber","h":"#exp","p":481},{"i":511,"t":"log","u":"/docs/BackEnd/Java/javanumber","h":"#log","p":481},{"i":513,"t":"pow","u":"/docs/BackEnd/Java/javanumber","h":"#pow","p":481},{"i":515,"t":"sqrt","u":"/docs/BackEnd/Java/javanumber","h":"#sqrt","p":481},{"i":517,"t":"sin","u":"/docs/BackEnd/Java/javanumber","h":"#sin","p":481},{"i":519,"t":"cos","u":"/docs/BackEnd/Java/javanumber","h":"#cos","p":481},{"i":521,"t":"tan","u":"/docs/BackEnd/Java/javanumber","h":"#tan","p":481},{"i":523,"t":"asin","u":"/docs/BackEnd/Java/javanumber","h":"#asin","p":481},{"i":525,"t":"acos","u":"/docs/BackEnd/Java/javanumber","h":"#acos","p":481},{"i":527,"t":"atan","u":"/docs/BackEnd/Java/javanumber","h":"#atan","p":481},{"i":529,"t":"toDegrees","u":"/docs/BackEnd/Java/javanumber","h":"#todegrees","p":481},{"i":531,"t":"toRadians","u":"/docs/BackEnd/Java/javanumber","h":"#toradians","p":481},{"i":533,"t":"random","u":"/docs/BackEnd/Java/javanumber","h":"#random","p":481},{"i":537,"t":"Idea项目结构","u":"/docs/BackEnd/Java/language","h":"#idea项目结构","p":535},{"i":539,"t":"使用Idea创建Java项目","u":"/docs/BackEnd/Java/language","h":"#使用idea创建java项目","p":535},{"i":541,"t":"第一个Java程序","u":"/docs/BackEnd/Java/language","h":"#第一个java程序","p":535},{"i":543,"t":"Java的三大使用平台","u":"/docs/BackEnd/Java/language","h":"#java的三大使用平台","p":535},{"i":544,"t":"Java SE","u":"/docs/BackEnd/Java/language","h":"#java-se","p":535},{"i":546,"t":"Java ME","u":"/docs/BackEnd/Java/language","h":"#java-me","p":535},{"i":548,"t":"Java EE","u":"/docs/BackEnd/Java/language","h":"#java-ee","p":535},{"i":550,"t":"Java跨平台原理","u":"/docs/BackEnd/Java/language","h":"#java跨平台原理","p":535},{"i":552,"t":"JRE和JDK","u":"/docs/BackEnd/Java/language","h":"#jre和jdk","p":535},{"i":553,"t":"JDK","u":"/docs/BackEnd/Java/language","h":"#jdk","p":535},{"i":555,"t":"JRE","u":"/docs/BackEnd/Java/language","h":"#jre","p":535},{"i":558,"t":"注释","u":"/docs/BackEnd/Java/languages11","h":"#注释","p":557},{"i":560,"t":"关键字","u":"/docs/BackEnd/Java/languages11","h":"#关键字","p":557},{"i":562,"t":"变量","u":"/docs/BackEnd/Java/languages11","h":"#变量","p":557},{"i":564,"t":"数据类型","u":"/docs/BackEnd/Java/languages11","h":"#数据类型","p":557},{"i":566,"t":"标识符和命名规范","u":"/docs/BackEnd/Java/languages11","h":"#标识符和命名规范","p":557},{"i":568,"t":"转义字符","u":"/docs/BackEnd/Java/languages11","h":"#转义字符","p":557},{"i":570,"t":"数据类型转换","u":"/docs/BackEnd/Java/languages11","h":"#数据类型转换","p":557},{"i":572,"t":"输入和输出","u":"/docs/BackEnd/Java/languages11","h":"#输入和输出","p":557},{"i":574,"t":"println","u":"/docs/BackEnd/Java/languages11","h":"#println","p":557},{"i":576,"t":"printf","u":"/docs/BackEnd/Java/languages11","h":"#printf","p":557},{"i":578,"t":"Scanner","u":"/docs/BackEnd/Java/languages11","h":"#scanner","p":557},{"i":580,"t":"继承","u":"/docs/BackEnd/Java/languages11","h":"#继承","p":557},{"i":582,"t":"重载","u":"/docs/BackEnd/Java/languages11","h":"#重载","p":557},{"i":584,"t":"重写","u":"/docs/BackEnd/Java/languages11","h":"#重写","p":557},{"i":587,"t":"复合数据类型","u":"/docs/BackEnd/Java/numberlist","h":"#复合数据类型","p":586},{"i":589,"t":"数组介绍","u":"/docs/BackEnd/Java/numberlist","h":"#数组介绍","p":586},{"i":591,"t":"声明数组","u":"/docs/BackEnd/Java/numberlist","h":"#声明数组","p":586},{"i":593,"t":"创建数组","u":"/docs/BackEnd/Java/numberlist","h":"#创建数组","p":586},{"i":595,"t":"初始化数组","u":"/docs/BackEnd/Java/numberlist","h":"#初始化数组","p":586},{"i":597,"t":"实例","u":"/docs/BackEnd/Java/numberlist","h":"#实例","p":586},{"i":599,"t":"数组的引用","u":"/docs/BackEnd/Java/numberlist","h":"#数组的引用","p":586},{"i":601,"t":"注意事项","u":"/docs/BackEnd/Java/numberlist","h":"#注意事项","p":586},{"i":603,"t":"处理数组","u":"/docs/BackEnd/Java/numberlist","h":"#处理数组","p":586},{"i":605,"t":"For-Each 循环","u":"/docs/BackEnd/Java/numberlist","h":"#for-each-循环","p":586},{"i":607,"t":"将数组作为函数的参数","u":"/docs/BackEnd/Java/numberlist","h":"#将数组作为函数的参数","p":586},{"i":609,"t":"将数组作为函数的返回值","u":"/docs/BackEnd/Java/numberlist","h":"#将数组作为函数的返回值","p":586},{"i":611,"t":"多维数组","u":"/docs/BackEnd/Java/numberlist","h":"#多维数组","p":586},{"i":613,"t":"初始化二维数组","u":"/docs/BackEnd/Java/numberlist","h":"#初始化二维数组","p":586},{"i":615,"t":"多维数组的引用","u":"/docs/BackEnd/Java/numberlist","h":"#多维数组的引用","p":586},{"i":617,"t":"Arrays API","u":"/docs/BackEnd/Java/numberlist","h":"#arrays-api","p":586},{"i":620,"t":"创建 String","u":"/docs/BackEnd/Java/stringclass","h":"#创建-string","p":619},{"i":622,"t":"字符串长度","u":"/docs/BackEnd/Java/stringclass","h":"#字符串长度","p":619},{"i":624,"t":"连接字符串","u":"/docs/BackEnd/Java/stringclass","h":"#连接字符串","p":619},{"i":626,"t":"创建格式化字符串","u":"/docs/BackEnd/Java/stringclass","h":"#创建格式化字符串","p":619},{"i":628,"t":"String API","u":"/docs/BackEnd/Java/stringclass","h":"#string-api","p":619},{"i":631,"t":"数据和信息","u":"/docs/BackEnd/MySql/mysqlstart","h":"#数据和信息","p":630},{"i":633,"t":"什么是数据库","u":"/docs/BackEnd/MySql/mysqlstart","h":"#什么是数据库","p":630},{"i":635,"t":"传统数据库的组织结构","u":"/docs/BackEnd/MySql/mysqlstart","h":"#传统数据库的组织结构","p":630},{"i":636,"t":"Excel 中的数据结构","u":"/docs/BackEnd/MySql/mysqlstart","h":"#excel-中的数据结构","p":630},{"i":638,"t":"传统型数据库","u":"/docs/BackEnd/MySql/mysqlstart","h":"#传统型数据库","p":630},{"i":640,"t":"库、表、行、字段的关系","u":"/docs/BackEnd/MySql/mysqlstart","h":"#库表行字段的关系","p":630},{"i":642,"t":"关系数据库","u":"/docs/BackEnd/MySql/mysqlstart","h":"#关系数据库","p":630},{"i":643,"t":"关系模型的数据结构及形式化定义","u":"/docs/BackEnd/MySql/mysqlstart","h":"#关系模型的数据结构及形式化定义","p":630},{"i":645,"t":"安装和配置 MySQL","u":"/docs/BackEnd/MySql/mysqlstart","h":"#安装和配置-mysql","p":630},{"i":647,"t":"在 Win10 上安装 MySQL","u":"/docs/BackEnd/MySql/mysqlstart","h":"#在-win10-上安装-mysql","p":630},{"i":650,"t":"关系的形式化定义","u":"/docs/BackEnd/MySql/relationdb","h":"#关系的形式化定义","p":649},{"i":651,"t":"域","u":"/docs/BackEnd/MySql/relationdb","h":"#域","p":649},{"i":653,"t":"笛卡尔积","u":"/docs/BackEnd/MySql/relationdb","h":"#笛卡尔积","p":649},{"i":655,"t":"关系","u":"/docs/BackEnd/MySql/relationdb","h":"#关系","p":649},{"i":657,"t":"关系模式","u":"/docs/BackEnd/MySql/relationdb","h":"#关系模式","p":649},{"i":659,"t":"关系数据库","u":"/docs/BackEnd/MySql/relationdb","h":"#关系数据库","p":649},{"i":661,"t":"候选码、主码和外码","u":"/docs/BackEnd/MySql/relationdb","h":"#候选码主码和外码","p":649},{"i":662,"t":"候选码","u":"/docs/BackEnd/MySql/relationdb","h":"#候选码","p":649},{"i":664,"t":"主码","u":"/docs/BackEnd/MySql/relationdb","h":"#主码","p":649},{"i":666,"t":"外码","u":"/docs/BackEnd/MySql/relationdb","h":"#外码","p":649},{"i":668,"t":"关系的完整性","u":"/docs/BackEnd/MySql/relationdb","h":"#关系的完整性","p":649},{"i":670,"t":"实体完整性","u":"/docs/BackEnd/MySql/relationdb","h":"#实体完整性","p":649},{"i":672,"t":"参照完整性","u":"/docs/BackEnd/MySql/relationdb","h":"#参照完整性","p":649},{"i":674,"t":"用户自定义完整性","u":"/docs/BackEnd/MySql/relationdb","h":"#用户自定义完整性","p":649},{"i":676,"t":"关系代数","u":"/docs/BackEnd/MySql/relationdb","h":"#关系代数","p":649},{"i":678,"t":"关系运算符","u":"/docs/BackEnd/MySql/relationdb","h":"#关系运算符","p":649},{"i":680,"t":"传统的集合运算","u":"/docs/BackEnd/MySql/relationdb","h":"#传统的集合运算","p":649},{"i":682,"t":"专门的关系运算","u":"/docs/BackEnd/MySql/relationdb","h":"#专门的关系运算","p":649},{"i":684,"t":"属性列","u":"/docs/BackEnd/MySql/relationdb","h":"#属性列","p":649},{"i":686,"t":"连接","u":"/docs/BackEnd/MySql/relationdb","h":"#连接","p":649},{"i":689,"t":"基本概念","u":"/docs/BackEnd/MySql/sql","h":"#基本概念","p":688},{"i":690,"t":"基本表","u":"/docs/BackEnd/MySql/sql","h":"#基本表","p":688},{"i":692,"t":"视图","u":"/docs/BackEnd/MySql/sql","h":"#视图","p":688},{"i":694,"t":"SQL数据库的结构","u":"/docs/BackEnd/MySql/sql","h":"#sql数据库的结构","p":688},{"i":696,"t":"基本操作","u":"/docs/BackEnd/MySql/sql","h":"#基本操作","p":688},{"i":697,"t":"创建数据库","u":"/docs/BackEnd/MySql/sql","h":"#创建数据库","p":688},{"i":699,"t":"修改数据库","u":"/docs/BackEnd/MySql/sql","h":"#修改数据库","p":688},{"i":702,"t":"数据库系统组成","u":"/docs/BackEnd/MySql/xulun","h":"#数据库系统组成","p":701},{"i":704,"t":"数据库","u":"/docs/BackEnd/MySql/xulun","h":"#数据库","p":701},{"i":706,"t":"数据库用户","u":"/docs/BackEnd/MySql/xulun","h":"#数据库用户","p":701},{"i":708,"t":"计算机硬件系统","u":"/docs/BackEnd/MySql/xulun","h":"#计算机硬件系统","p":701},{"i":710,"t":"计算机软件系统","u":"/docs/BackEnd/MySql/xulun","h":"#计算机软件系统","p":701},{"i":712,"t":"数据库系统的内部体系结构","u":"/docs/BackEnd/MySql/xulun","h":"#数据库系统的内部体系结构","p":701},{"i":713,"t":"三级结构","u":"/docs/BackEnd/MySql/xulun","h":"#三级结构","p":701},{"i":715,"t":"二级映像","u":"/docs/BackEnd/MySql/xulun","h":"#二级映像","p":701},{"i":717,"t":"数据库的外部体系结构","u":"/docs/BackEnd/MySql/xulun","h":"#数据库的外部体系结构","p":701},{"i":718,"t":"单用户的数据库","u":"/docs/BackEnd/MySql/xulun","h":"#单用户的数据库","p":701},{"i":720,"t":"主从数据库","u":"/docs/BackEnd/MySql/xulun","h":"#主从数据库","p":701},{"i":722,"t":"分布式数据库","u":"/docs/BackEnd/MySql/xulun","h":"#分布式数据库","p":701},{"i":724,"t":"客户机/服务器数据库","u":"/docs/BackEnd/MySql/xulun","h":"#客户机服务器数据库","p":701},{"i":726,"t":"浏览器/服务器数据库","u":"/docs/BackEnd/MySql/xulun","h":"#浏览器服务器数据库","p":701},{"i":728,"t":"数据库管理系统","u":"/docs/BackEnd/MySql/xulun","h":"#数据库管理系统","p":701},{"i":730,"t":"数据定义功能","u":"/docs/BackEnd/MySql/xulun","h":"#数据定义功能","p":701},{"i":732,"t":"数据操纵功能","u":"/docs/BackEnd/MySql/xulun","h":"#数据操纵功能","p":701},{"i":734,"t":"数据库的运行管理功能","u":"/docs/BackEnd/MySql/xulun","h":"#数据库的运行管理功能","p":701},{"i":736,"t":"数据库的建立和维护功能","u":"/docs/BackEnd/MySql/xulun","h":"#数据库的建立和维护功能","p":701},{"i":738,"t":"数据通信接口","u":"/docs/BackEnd/MySql/xulun","h":"#数据通信接口","p":701},{"i":740,"t":"组织、存储和管理功能","u":"/docs/BackEnd/MySql/xulun","h":"#组织存储和管理功能","p":701},{"i":742,"t":"DBMS的组成","u":"/docs/BackEnd/MySql/xulun","h":"#dbms的组成","p":701},{"i":743,"t":"语言编译处理程序","u":"/docs/BackEnd/MySql/xulun","h":"#语言编译处理程序","p":701},{"i":745,"t":"系统运行控制程序","u":"/docs/BackEnd/MySql/xulun","h":"#系统运行控制程序","p":701},{"i":747,"t":"系统建立和维护程序","u":"/docs/BackEnd/MySql/xulun","h":"#系统建立和维护程序","p":701},{"i":749,"t":"数据字典","u":"/docs/BackEnd/MySql/xulun","h":"#数据字典","p":701},{"i":751,"t":"四种数据模型","u":"/docs/BackEnd/MySql/xulun","h":"#四种数据模型","p":701},{"i":752,"t":"层次模型","u":"/docs/BackEnd/MySql/xulun","h":"#层次模型","p":701},{"i":754,"t":"网状模型","u":"/docs/BackEnd/MySql/xulun","h":"#网状模型","p":701},{"i":756,"t":"关系模型","u":"/docs/BackEnd/MySql/xulun","h":"#关系模型","p":701},{"i":758,"t":"面向对象模型","u":"/docs/BackEnd/MySql/xulun","h":"#面向对象模型","p":701},{"i":761,"t":"学习目标","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#学习目标","p":760},{"i":763,"t":"什么是 Express","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#什么是-express","p":760},{"i":765,"t":"为什么 Express","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#为什么-express","p":760},{"i":767,"t":"Express 能够做什么","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#express-能够做什么","p":760},{"i":769,"t":"安装 Express","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#安装-express","p":760},{"i":772,"t":"创建基本服务器","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#创建基本服务器","p":771},{"i":774,"t":"监听客户端请求","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#监听客户端请求","p":771},{"i":775,"t":"GET 请求","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#get-请求","p":771},{"i":777,"t":"POST 请求","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#post-请求","p":771},{"i":779,"t":"响应内容","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#响应内容","p":771},{"i":781,"t":"例子","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#例子","p":771},{"i":783,"t":"获取 URL 携带的查询参数","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#获取-url-携带的查询参数","p":771},{"i":785,"t":"获取 URL 中的动态参数","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#获取-url-中的动态参数","p":771},{"i":787,"t":"静态资源托管","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#静态资源托管","p":771},{"i":788,"t":"单个目录","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#单个目录","p":771},{"i":790,"t":"多个资源目录","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#多个资源目录","p":771},{"i":792,"t":"挂载路径前缀","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#挂载路径前缀","p":771},{"i":794,"t":"nodemon","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#nodemon","p":771},{"i":797,"t":"什么是路由","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#什么是路由","p":796},{"i":799,"t":"Express 中的路由","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#express-中的路由","p":796},{"i":800,"t":"组成","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#组成","p":796},{"i":802,"t":"例子","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#例子","p":796},{"i":804,"t":"匹配过程","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#匹配过程","p":796},{"i":806,"t":"基本使用","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#基本使用","p":796},{"i":807,"t":"挂载到 app","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#挂载到-app","p":796},{"i":809,"t":"模块化路由","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#模块化路由","p":796},{"i":811,"t":"路由前缀","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#路由前缀","p":796},{"i":814,"t":"什么是中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#什么是中间件","p":813},{"i":816,"t":"调用流程","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#调用流程","p":813},{"i":818,"t":"格式","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#格式","p":813},{"i":820,"t":"next 函数","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#next-函数","p":813},{"i":822,"t":"定义中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#定义中间件","p":813},{"i":824,"t":"全局中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#全局中间件","p":813},{"i":826,"t":"简化全局中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#简化全局中间件","p":813},{"i":828,"t":"多个全局中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#多个全局中间件","p":813},{"i":830,"t":"中间件的作用","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#中间件的作用","p":813},{"i":832,"t":"局部生效中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#局部生效中间件","p":813},{"i":834,"t":"多个局部中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#多个局部中间件","p":813},{"i":836,"t":"中间件注意事项","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#中间件注意事项","p":813},{"i":838,"t":"中间件分类","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#中间件分类","p":813},{"i":840,"t":"应用级中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#应用级中间件","p":813},{"i":842,"t":"路由级中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#路由级中间件","p":813},{"i":844,"t":"错误级中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#错误级中间件","p":813},{"i":846,"t":"内置中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#内置中间件","p":813},{"i":848,"t":"自定义中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#自定义中间件","p":813},{"i":850,"t":"目标效果","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#目标效果","p":849},{"i":852,"t":"原始代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#原始代码","p":849},{"i":854,"t":"分析","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#分析","p":849},{"i":856,"t":"正则表达式","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#正则表达式","p":849},{"i":858,"t":"读取原始 HTML 文件","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#读取原始-html-文件","p":849},{"i":860,"t":"拆分CSS代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#拆分css代码","p":849},{"i":862,"t":"拆分JS代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#拆分js代码","p":849},{"i":864,"t":"拆分HTML代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#拆分html代码","p":849},{"i":866,"t":"完整代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#完整代码","p":849},{"i":868,"t":"控制台输出","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#控制台输出","p":849},{"i":870,"t":"结果","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#结果","p":849},{"i":872,"t":"注意点","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#注意点","p":849},{"i":876,"t":"核心思路","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#核心思路","p":874},{"i":878,"t":"导入模块和服务器创建","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#导入模块和服务器创建","p":874},{"i":880,"t":"将资源请求url地址映射为文件的存放路径","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#将资源请求url地址映射为文件的存放路径","p":874},{"i":882,"t":"读取文件内容并响应到客户端","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#读取文件内容并响应到客户端","p":874},{"i":884,"t":"启动服务器","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#启动服务器","p":874},{"i":886,"t":"优化资源请求路径","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#优化资源请求路径","p":874},{"i":889,"t":"模块介绍","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#模块介绍","p":888},{"i":891,"t":"模块的作用","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#模块的作用","p":888},{"i":893,"t":"计网相关","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#计网相关","p":888},{"i":894,"t":"IP地址","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#ip地址","p":888},{"i":896,"t":"域名和服务器","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#域名和服务器","p":888},{"i":898,"t":"创建服务器","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#创建服务器","p":888},{"i":899,"t":"模块导入","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#模块导入","p":888},{"i":901,"t":"创建实例","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#创建实例","p":888},{"i":903,"t":"绑定 request 事件","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#绑定-request-事件","p":888},{"i":905,"t":"启动服务器","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#启动服务器","p":888},{"i":907,"t":"req 请求对象","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#req-请求对象","p":888},{"i":909,"t":"res 响应对象","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#res-响应对象","p":888},{"i":911,"t":"中文乱码问题","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#中文乱码问题","p":888},{"i":913,"t":"不同 URL 响应不同的 html 内容","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#不同-url-响应不同的-html-内容","p":888},{"i":916,"t":"浏览器中的 JS","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#浏览器中的-js","p":915},{"i":918,"t":"JS 是否可以做后端开发","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#js-是否可以做后端开发","p":915},{"i":920,"t":"Node.js 运行环境","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#nodejs-运行环境","p":915},{"i":922,"t":"它能做什么？","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#它能做什么","p":915},{"i":924,"t":"学习路径","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#学习路径","p":915},{"i":926,"t":"安装 Nodejs","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#安装-nodejs","p":915},{"i":929,"t":"在Node环境中执行 JS 代码","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs2","h":"#在node环境中执行-js-代码","p":928},{"i":933,"t":"导入","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#导入","p":931},{"i":935,"t":"读取指定文件的内容","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#读取指定文件的内容","p":931},{"i":936,"t":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#语法格式","p":931},{"i":938,"t":"示例代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#示例代码","p":931},{"i":940,"t":"判断文件是否读取成功","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#判断文件是否读取成功","p":931},{"i":942,"t":"向指定文件写入内容","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#向指定文件写入内容","p":931},{"i":943,"t":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#语法格式-1","p":931},{"i":945,"t":"示例代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#示例代码-1","p":931},{"i":947,"t":"判断文件是否写入成功","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#判断文件是否写入成功","p":931},{"i":949,"t":"练习-1","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#练习-1","p":931},{"i":951,"t":"路径动态拼接","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#路径动态拼接","p":931},{"i":952,"t":"问题产生","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#问题产生","p":931},{"i":954,"t":"问题解决","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#问题解决","p":931},{"i":957,"t":"模块化规范","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#模块化规范","p":956},{"i":959,"t":"模块分类","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#模块分类","p":956},{"i":961,"t":"加载模块","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#加载模块","p":956},{"i":963,"t":"调用举例","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#调用举例","p":956},{"i":965,"t":"作用域","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#作用域","p":956},{"i":967,"t":"module 对象","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#module-对象","p":956},{"i":968,"t":"介绍","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#介绍","p":956},{"i":970,"t":"共享成员","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#共享成员","p":956},{"i":972,"t":"注意","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#注意","p":956},{"i":974,"t":"exports 对象","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#exports-对象","p":956},{"i":977,"t":"什么是 path 路径模块","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#什么是-path-路径模块","p":976},{"i":979,"t":"模块导入","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#模块导入","p":976},{"i":981,"t":"路径拼接","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#路径拼接","p":976},{"i":983,"t":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#语法格式","p":976},{"i":985,"t":"代码示例","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#代码示例","p":976},{"i":987,"t":"获取路径中的文件名","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#获取路径中的文件名","p":976},{"i":988,"t":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#语法格式-1","p":976},{"i":990,"t":"代码示例","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#代码示例-1","p":976},{"i":992,"t":"获取路径中的文件扩展名","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#获取路径中的文件扩展名","p":976},{"i":993,"t":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#语法格式-2","p":976},{"i":995,"t":"代码示例","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#代码示例-2","p":976},{"i":998,"t":"存放前端学习资料的地方","u":"/docs/front","h":"#存放前端学习资料的地方","p":997},{"i":1000,"t":"前端学习路线","u":"/docs/front","h":"#前端学习路线","p":997},{"i":1003,"t":"删除自带的文件","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#删除自带的文件","p":1002},{"i":1005,"t":"创建第一篇文档","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#创建第一篇文档","p":1002},{"i":1007,"t":"创建你的第一篇博客","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#创建你的第一篇博客","p":1002},{"i":1009,"t":"创建你的作者信息","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#创建你的作者信息","p":1002},{"i":1011,"t":"新建博客","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#新建博客","p":1002},{"i":1014,"t":"为什么存在配置文件","u":"/docs/FrontEnd/Docus/docs-config","h":"#为什么存在配置文件","p":1013},{"i":1016,"t":"观察默认的配置代码","u":"/docs/FrontEnd/Docus/docs-config","h":"#观察默认的配置代码","p":1013},{"i":1018,"t":"必填 API","u":"/docs/FrontEnd/Docus/docs-config","h":"#必填-api","p":1013},{"i":1019,"t":"title","u":"/docs/FrontEnd/Docus/docs-config","h":"#title","p":1013},{"i":1021,"t":"url","u":"/docs/FrontEnd/Docus/docs-config","h":"#url","p":1013},{"i":1023,"t":"baseUrl","u":"/docs/FrontEnd/Docus/docs-config","h":"#baseurl","p":1013},{"i":1025,"t":"选填 API","u":"/docs/FrontEnd/Docus/docs-config","h":"#选填-api","p":1013},{"i":1026,"t":"favicon","u":"/docs/FrontEnd/Docus/docs-config","h":"#favicon","p":1013},{"i":1028,"t":"i18n","u":"/docs/FrontEnd/Docus/docs-config","h":"#i18n","p":1013},{"i":1030,"t":"tagline","u":"/docs/FrontEnd/Docus/docs-config","h":"#tagline","p":1013},{"i":1032,"t":"organizationName","u":"/docs/FrontEnd/Docus/docs-config","h":"#organizationname","p":1013},{"i":1034,"t":"projectName","u":"/docs/FrontEnd/Docus/docs-config","h":"#projectname","p":1013},{"i":1036,"t":"themeConfig","u":"/docs/FrontEnd/Docus/docs-config","h":"#themeconfig","p":1013},{"i":1038,"t":"presets","u":"/docs/FrontEnd/Docus/docs-config","h":"#presets","p":1013},{"i":1041,"t":"简介","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#简介","p":1040},{"i":1043,"t":"安装 Docusaurus","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#安装-docusaurus","p":1040},{"i":1044,"t":"安装或检查Node.js","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#安装或检查nodejs","p":1040},{"i":1046,"t":"安装Docusaurus","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#安装docusaurus","p":1040},{"i":1048,"t":"查看目录结构","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#查看目录结构","p":1040},{"i":1050,"t":"运行项目","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#运行项目","p":1040},{"i":1053,"t":"配置搜索","u":"/docs/FrontEnd/Docus/improveit","h":"#配置搜索","p":1052},{"i":1055,"t":"安装 docusaurus-search-local 插件","u":"/docs/FrontEnd/Docus/improveit","h":"#安装-docusaurus-search-local-插件","p":1052},{"i":1057,"t":"声明这个插件","u":"/docs/FrontEnd/Docus/improveit","h":"#声明这个插件","p":1052},{"i":1059,"t":"Swizzle","u":"/docs/FrontEnd/Docus/improveit","h":"#swizzle","p":1052},{"i":1061,"t":"案例社区","u":"/docs/FrontEnd/Docus/improveit","h":"#案例社区","p":1052},{"i":1065,"t":"插入项目图片","u":"/docs/FrontEnd/Docus/imgeswhere","h":"#插入项目图片","p":1063},{"i":1067,"t":"微博图床","u":"/docs/FrontEnd/Docus/imgeswhere","h":"#微博图床","p":1063},{"i":1069,"t":"阿里云图床","u":"/docs/FrontEnd/Docus/imgeswhere","h":"#阿里云图床","p":1063},{"i":1073,"t":"Github Pages","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#github-pages","p":1071},{"i":1075,"t":"Github Action","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#github-action","p":1071},{"i":1077,"t":"创建仓库和分支","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#创建仓库和分支","p":1071},{"i":1079,"t":"注册 token","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#注册-token","p":1071},{"i":1081,"t":"登记到你的博客仓库","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#登记到你的博客仓库","p":1071},{"i":1083,"t":"添加自动部署脚本","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#添加自动部署脚本","p":1071},{"i":1085,"t":"推送代码","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#推送代码","p":1071},{"i":1087,"t":"Vercel 部署","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#vercel-部署","p":1071},{"i":1091,"t":"首页修改","u":"/docs/FrontEnd/Docus/style-modification","h":"#首页修改","p":1089},{"i":1093,"t":"主题颜色修改","u":"/docs/FrontEnd/Docus/style-modification","h":"#主题颜色修改","p":1089},{"i":1095,"t":"修改你不满意的样式","u":"/docs/FrontEnd/Docus/style-modification","h":"#修改你不满意的样式","p":1089},{"i":1098,"t":"效果","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#效果","p":1097},{"i":1100,"t":"安装","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#安装","p":1097},{"i":1102,"t":"使用","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#使用","p":1097},{"i":1103,"t":"Vanilla JS","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#vanilla-js","p":1097},{"i":1105,"t":"React.js","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#reactjs","p":1097},{"i":1107,"t":"配置","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#配置","p":1097},{"i":1110,"t":"前言","u":"/docs/FrontEnd/FETricks/freeweibo","h":"#前言","p":1109},{"i":1112,"t":"安装微博图床插件","u":"/docs/FrontEnd/FETricks/freeweibo","h":"#安装微博图床插件","p":1109},{"i":1114,"t":"打开微博图床插件","u":"/docs/FrontEnd/FETricks/freeweibo","h":"#打开微博图床插件","p":1109},{"i":1117,"t":"前言","u":"/docs/FrontEnd/FETricks/github-pages","h":"#前言","p":1116},{"i":1119,"t":"一、注册Github账号，安装Github Desktop","u":"/docs/FrontEnd/FETricks/github-pages","h":"#一注册github账号安装github-desktop","p":1116},{"i":1121,"t":"二、新建仓库","u":"/docs/FrontEnd/FETricks/github-pages","h":"#二新建仓库","p":1116},{"i":1123,"t":"三、使用Github Desktop将仓库克隆到本地","u":"/docs/FrontEnd/FETricks/github-pages","h":"#三使用github-desktop将仓库克隆到本地","p":1116},{"i":1125,"t":"四、将你的代码放入仓库并Push到github","u":"/docs/FrontEnd/FETricks/github-pages","h":"#四将你的代码放入仓库并push到github","p":1116},{"i":1127,"t":"五、设置GithubPages","u":"/docs/FrontEnd/FETricks/github-pages","h":"#五设置githubpages","p":1116},{"i":1129,"t":"六、怎么维护和更新代码？","u":"/docs/FrontEnd/FETricks/github-pages","h":"#六怎么维护和更新代码","p":1116},{"i":1131,"t":"附录：如果文件很少怎么办？","u":"/docs/FrontEnd/FETricks/github-pages","h":"#附录如果文件很少怎么办","p":1116},{"i":1134,"t":"什么是NodeJs和NPM","u":"/docs/FrontEnd/FETricks/install-nodejs-and-npm","h":"#什么是nodejs和npm","p":1133},{"i":1136,"t":"下载并安装NodeJs","u":"/docs/FrontEnd/FETricks/install-nodejs-and-npm","h":"#下载并安装nodejs","p":1133},{"i":1138,"t":"检查配置","u":"/docs/FrontEnd/FETricks/install-nodejs-and-npm","h":"#检查配置","p":1133},{"i":1141,"t":"准备","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#准备","p":1140},{"i":1143,"t":"特点","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#特点","p":1140},{"i":1145,"t":"注册小程序并下载微信开发者工具","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#注册小程序并下载微信开发者工具","p":1140},{"i":1147,"t":"克隆源代码","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#克隆源代码","p":1140},{"i":1149,"t":"打开项目开通云开发","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#打开项目开通云开发","p":1140},{"i":1151,"t":"数据库部署","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#数据库部署","p":1140},{"i":1153,"t":"你需要替换的地方","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#你需要替换的地方","p":1140},{"i":1155,"t":"图片替换","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#图片替换","p":1140},{"i":1157,"t":"创建体验版小程序","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#创建体验版小程序","p":1140},{"i":1159,"t":"后记","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#后记","p":1140},{"i":1162,"t":"前言","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#前言","p":1161},{"i":1164,"t":"爬取已经使用的图片","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#爬取已经使用的图片","p":1161},{"i":1166,"t":"阿里云oss注册","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#阿里云oss注册","p":1161},{"i":1167,"t":"注册","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#注册","p":1161},{"i":1169,"t":"创建bucket","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#创建bucket","p":1161},{"i":1171,"t":"获取地域结点信息","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#获取地域结点信息","p":1161},{"i":1173,"t":"创建AccessKey","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#创建accesskey","p":1161},{"i":1175,"t":"PicGo配置","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#picgo配置","p":1161},{"i":1177,"t":"替换原来博客中的微博图床","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#替换原来博客中的微博图床","p":1161},{"i":1180,"t":"前言","u":"/docs/FrontEnd/FETricks/project-coll","h":"#前言","p":1179},{"i":1181,"t":"协作原理","u":"/docs/FrontEnd/FETricks/project-coll","h":"#协作原理","p":1179},{"i":1183,"t":"常见的协作平台","u":"/docs/FrontEnd/FETricks/project-coll","h":"#常见的协作平台","p":1179},{"i":1185,"t":"注册Github","u":"/docs/FrontEnd/FETricks/project-coll","h":"#注册github","p":1179},{"i":1187,"t":"下载Github Desktop","u":"/docs/FrontEnd/FETricks/project-coll","h":"#下载github-desktop","p":1179},{"i":1189,"t":"创建仓库","u":"/docs/FrontEnd/FETricks/project-coll","h":"#创建仓库","p":1179},{"i":1191,"t":"添加协作成员","u":"/docs/FrontEnd/FETricks/project-coll","h":"#添加协作成员","p":1179},{"i":1193,"t":"接受协作请求","u":"/docs/FrontEnd/FETricks/project-coll","h":"#接受协作请求","p":1179},{"i":1195,"t":"克隆仓库","u":"/docs/FrontEnd/FETricks/project-coll","h":"#克隆仓库","p":1179},{"i":1197,"t":"添加分支","u":"/docs/FrontEnd/FETricks/project-coll","h":"#添加分支","p":1179},{"i":1199,"t":"安装依赖","u":"/docs/FrontEnd/FETricks/project-coll","h":"#安装依赖","p":1179},{"i":1201,"t":"测试","u":"/docs/FrontEnd/FETricks/project-coll","h":"#测试","p":1179},{"i":1203,"t":"Push代码","u":"/docs/FrontEnd/FETricks/project-coll","h":"#push代码","p":1179},{"i":1205,"t":"请求合并","u":"/docs/FrontEnd/FETricks/project-coll","h":"#请求合并","p":1179},{"i":1207,"t":"审核并合并","u":"/docs/FrontEnd/FETricks/project-coll","h":"#审核并合并","p":1179},{"i":1210,"t":"前言","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#前言","p":1209},{"i":1212,"t":"Github Pages和Netlify速度对比","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#github-pages和netlify速度对比","p":1209},{"i":1213,"t":"注册Netlify","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#注册netlify","p":1209},{"i":1215,"t":"绑定仓库和构建","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#绑定仓库和构建","p":1209},{"i":1217,"t":"自定义域名","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#自定义域名","p":1209},{"i":1219,"t":"费用信息","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#费用信息","p":1209},{"i":1222,"t":"状态提升","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#状态提升","p":1221},{"i":1224,"t":"为什么不可变性在 React 中非常重要","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#为什么不可变性在-react-中非常重要","p":1221},{"i":1226,"t":"直接修改数据","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#直接修改数据","p":1221},{"i":1228,"t":"新数据替换旧数据","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#新数据替换旧数据","p":1221},{"i":1230,"t":"简化复杂的功能","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#简化复杂的功能","p":1221},{"i":1232,"t":"跟踪数据的改变","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#跟踪数据的改变","p":1221},{"i":1234,"t":"确定在 React 中何时重新渲染","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#确定在-react-中何时重新渲染","p":1221},{"i":1236,"t":"函数组件","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#函数组件","p":1221},{"i":1238,"t":"轮流落子","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#轮流落子","p":1221},{"i":1240,"t":"判断出胜者","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#判断出胜者","p":1221},{"i":1243,"t":"React介绍","u":"/docs/FrontEnd/React/React-in/react-introduction","h":"#react介绍","p":1242},{"i":1245,"t":"环境准备","u":"/docs/FrontEnd/React/React-in/react-introduction","h":"#环境准备","p":1242},{"i":1247,"t":"Create React App","u":"/docs/FrontEnd/React/React-in/react-introduction","h":"#create-react-app","p":1242},{"i":1250,"t":"React是什么","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#react是什么","p":1249},{"i":1252,"t":"阅读初始代码","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#阅读初始代码","p":1249},{"i":1254,"t":"Square-棋盘格","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#square-棋盘格","p":1249},{"i":1256,"t":"Board-棋盘","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#board-棋盘","p":1249},{"i":1258,"t":"Game-游戏主体","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#game-游戏主体","p":1249},{"i":1260,"t":"通过 Props 传递数据","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#通过-props-传递数据","p":1249},{"i":1262,"t":"给组件添加交互功能","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#给组件添加交互功能","p":1249},{"i":1266,"t":"React 的组件化模式","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#react-的组件化模式","p":1264},{"i":1268,"t":"关于 JSX","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#关于-jsx","p":1264},{"i":1270,"t":"例 2：不使用 JSX 编写 React 组件","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-2不使用-jsx-编写-react-组件","p":1264},{"i":1272,"t":"例 3：React 创建元素的 API","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-3react-创建元素的-api","p":1264},{"i":1274,"t":"例 4：为什么在 React 中 JSX 受欢迎","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-4为什么在-react-中-jsx-受欢迎","p":1264},{"i":1276,"t":"在 JSX 的任何地方使用 JavaScript","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#在-jsx-的任何地方使用-javascript","p":1264},{"i":1278,"t":"例 5：在 JSX 中使用 JavaScript 表达式","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-5在-jsx-中使用-javascript-表达式","p":1264},{"i":1280,"t":"例 6：一个对象传递特殊的 React 样式参数","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-6一个对象传递特殊的-react-样式参数","p":1264},{"i":1282,"t":"例 7：一个 React 元素是一个可以通过 {} 使用的表达式","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-7一个-react-元素是一个可以通过--使用的表达式","p":1264},{"i":1284,"t":"例 8：在 {} 中使用数组","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-8在--中使用数组","p":1264},{"i":1286,"t":"使用 JavaScript 类写 React 组件","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#使用-javascript-类写-react-组件","p":1264},{"i":1288,"t":"例 9：使用 JavaScript 类创建组件","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-9使用-javascript-类创建组件","p":1264},{"i":1290,"t":"例 10：自定义组件实例","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-10自定义组件实例","p":1264},{"i":1292,"t":"例 11：使用类的属性（通过单击保存按钮进行测试）","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-11使用类的属性通过单击保存按钮进行测试","p":1264},{"i":1294,"t":"React 中的事件：两个重要的区别","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#react-中的事件两个重要的区别","p":1264},{"i":1296,"t":"每一个 React 组件都有一个故事：第 1 部分","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#每一个-react-组件都有一个故事第-1-部分","p":1264},{"i":1298,"t":"React 组件可以具有私有状态","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#react-组件可以具有私有状态","p":1264},{"i":1300,"t":"例 13：setState 的 API","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-13setstate-的-api","p":1264},{"i":1303,"t":"定义","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#定义","p":1302},{"i":1305,"t":"声明式设计","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#声明式设计","p":1302},{"i":1307,"t":"组件化","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#组件化","p":1302},{"i":1309,"t":"一次学习，随处编写","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#一次学习随处编写","p":1302},{"i":1311,"t":"简单组件","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#简单组件","p":1302},{"i":1314,"t":"前言","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#前言","p":1313},{"i":1316,"t":"图片的上载和编码","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#图片的上载和编码","p":1313},{"i":1318,"t":"创建data存放","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#创建data存放","p":1313},{"i":1320,"t":"编写图片获取函数","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#编写图片获取函数","p":1313},{"i":1322,"t":"转码为base64编码","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#转码为base64编码","p":1313},{"i":1324,"t":"three.js使用base64编码制作texture纹理","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#threejs使用base64编码制作texture纹理","p":1313},{"i":1326,"t":"异步渲染","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#异步渲染","p":1313},{"i":1328,"t":"实现效果","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#实现效果","p":1313},{"i":1331,"t":"前言","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#前言","p":1330},{"i":1333,"t":"渲染器（renderer）","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#渲染器renderer","p":1330},{"i":1335,"t":"场景（scene）","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#场景scene","p":1330},{"i":1337,"t":"创建球体网格模型","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#创建球体网格模型","p":1330},{"i":1339,"t":"创建场景切换提示文字","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#创建场景切换提示文字","p":1330},{"i":1341,"t":"场景切换","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#场景切换","p":1330},{"i":1343,"t":"相机位置","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#相机位置","p":1330},{"i":1345,"t":"初始化控制器","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#初始化控制器","p":1330},{"i":1348,"t":"在vue工程中安装threejs","u":"/docs/FrontEnd/threejsPano/install-threejs-in-vue","h":"#在vue工程中安装threejs","p":1347},{"i":1350,"t":"在engine.vue中声明threejs","u":"/docs/FrontEnd/threejsPano/install-threejs-in-vue","h":"#在enginevue中声明threejs","p":1347},{"i":1352,"t":"安装操作控制插件OrbitControls.js","u":"/docs/FrontEnd/threejsPano/install-threejs-in-vue","h":"#安装操作控制插件orbitcontrolsjs","p":1347},{"i":1355,"t":"前言","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#前言","p":1354},{"i":1357,"t":"使用vue-cli初始化项目","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#使用vue-cli初始化项目","p":1354},{"i":1359,"t":"初始化项目","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#初始化项目","p":1354},{"i":1361,"t":"启动项目","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#启动项目","p":1354},{"i":1363,"t":"工程结构","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#工程结构","p":1354},{"i":1365,"t":"编写入口组件","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#编写入口组件","p":1354},{"i":1367,"t":"编写路由函数","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#编写路由函数","p":1354},{"i":1371,"t":"绑定 HTML Class","u":"/docs/FrontEnd/vue.js/classbind","h":"#绑定-html-class","p":1369},{"i":1372,"t":"对象语法","u":"/docs/FrontEnd/vue.js/classbind","h":"#对象语法","p":1369},{"i":1374,"t":"数组语法","u":"/docs/FrontEnd/vue.js/classbind","h":"#数组语法","p":1369},{"i":1376,"t":"用在组件上","u":"/docs/FrontEnd/vue.js/classbind","h":"#用在组件上","p":1369},{"i":1378,"t":"绑定内联样式","u":"/docs/FrontEnd/vue.js/classbind","h":"#绑定内联样式","p":1369},{"i":1379,"t":"对象语法","u":"/docs/FrontEnd/vue.js/classbind","h":"#对象语法-1","p":1369},{"i":1381,"t":"数组语法","u":"/docs/FrontEnd/vue.js/classbind","h":"#数组语法-1","p":1369},{"i":1383,"t":"自动添加前缀","u":"/docs/FrontEnd/vue.js/classbind","h":"#自动添加前缀","p":1369},{"i":1385,"t":"多重值","u":"/docs/FrontEnd/vue.js/classbind","h":"#多重值","p":1369},{"i":1388,"t":"介绍","u":"/docs/FrontEnd/vue.js/guide","h":"#介绍","p":1387},{"i":1390,"t":"起步","u":"/docs/FrontEnd/vue.js/guide","h":"#起步","p":1387},{"i":1392,"t":"声明式渲染","u":"/docs/FrontEnd/vue.js/guide","h":"#声明式渲染","p":1387},{"i":1394,"t":"条件与循环","u":"/docs/FrontEnd/vue.js/guide","h":"#条件与循环","p":1387},{"i":1396,"t":"处理用户输入","u":"/docs/FrontEnd/vue.js/guide","h":"#处理用户输入","p":1387},{"i":1398,"t":"创建组件化应用","u":"/docs/FrontEnd/vue.js/guide","h":"#创建组件化应用","p":1387},{"i":1401,"t":"创建一个 Vue 实例","u":"/docs/FrontEnd/vue.js/instance","h":"#创建一个-vue-实例","p":1400},{"i":1403,"t":"数据和方法","u":"/docs/FrontEnd/vue.js/instance","h":"#数据和方法","p":1400},{"i":1405,"t":"生命周期钩子","u":"/docs/FrontEnd/vue.js/instance","h":"#生命周期钩子","p":1400},{"i":1409,"t":"计算属性","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#计算属性","p":1407},{"i":1411,"t":"基础例子","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#基础例子","p":1407},{"i":1413,"t":"计算属性缓存 vs 方法","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#计算属性缓存-vs-方法","p":1407},{"i":1415,"t":"计算属性 vs 侦听属性","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#计算属性-vs-侦听属性","p":1407},{"i":1417,"t":"计算属性的 setter","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#计算属性的-setter","p":1407},{"i":1419,"t":"侦听器","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#侦听器","p":1407},{"i":1423,"t":"用 v-for 把一个数组对应为一组元素","u":"/docs/FrontEnd/vue.js/lvueist","h":"#用-v-for-把一个数组对应为一组元素","p":1421},{"i":1425,"t":"在 v-for 里使用对象","u":"/docs/FrontEnd/vue.js/lvueist","h":"#在-v-for-里使用对象","p":1421},{"i":1427,"t":"维护状态","u":"/docs/FrontEnd/vue.js/lvueist","h":"#维护状态","p":1421},{"i":1429,"t":"数组更新检测","u":"/docs/FrontEnd/vue.js/lvueist","h":"#数组更新检测","p":1421},{"i":1430,"t":"变更方法","u":"/docs/FrontEnd/vue.js/lvueist","h":"#变更方法","p":1421},{"i":1432,"t":"替换数组","u":"/docs/FrontEnd/vue.js/lvueist","h":"#替换数组","p":1421},{"i":1434,"t":"注意事项","u":"/docs/FrontEnd/vue.js/lvueist","h":"#注意事项","p":1421},{"i":1436,"t":"显示过滤/排序后的结果","u":"/docs/FrontEnd/vue.js/lvueist","h":"#显示过滤排序后的结果","p":1421},{"i":1438,"t":"在 v-for 里使用值范围","u":"/docs/FrontEnd/vue.js/lvueist","h":"#在-v-for-里使用值范围","p":1421},{"i":1440,"t":"在 <template> 上使用 v-for","u":"/docs/FrontEnd/vue.js/lvueist","h":"#在-template-上使用-v-for","p":1421},{"i":1442,"t":"v-for 与 v-if 一同使用","u":"/docs/FrontEnd/vue.js/lvueist","h":"#v-for-与-v-if-一同使用","p":1421},{"i":1444,"t":"在组件上使用 v-for","u":"/docs/FrontEnd/vue.js/lvueist","h":"#在组件上使用-v-for","p":1421},{"i":1447,"t":"安装 Vue CLI","u":"/docs/FrontEnd/vue.js/VueCli","h":"#安装-vue-cli","p":1446},{"i":1448,"t":"控制台安装","u":"/docs/FrontEnd/vue.js/VueCli","h":"#控制台安装","p":1446},{"i":1450,"t":"检查版本","u":"/docs/FrontEnd/vue.js/VueCli","h":"#检查版本","p":1446},{"i":1452,"t":"新建项目","u":"/docs/FrontEnd/vue.js/VueCli","h":"#新建项目","p":1446},{"i":1454,"t":"运行项目","u":"/docs/FrontEnd/vue.js/VueCli","h":"#运行项目","p":1446},{"i":1455,"t":"依赖安装","u":"/docs/FrontEnd/vue.js/VueCli","h":"#依赖安装","p":1446},{"i":1457,"t":"在浏览器运行","u":"/docs/FrontEnd/vue.js/VueCli","h":"#在浏览器运行","p":1446},{"i":1459,"t":"打包","u":"/docs/FrontEnd/vue.js/VueCli","h":"#打包","p":1446},{"i":1463,"t":"v-if","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-if","p":1461},{"i":1465,"t":"在 <template> 元素上使用 v-if 条件渲染分组","u":"/docs/FrontEnd/vue.js/vueif","h":"#在-template-元素上使用-v-if-条件渲染分组","p":1461},{"i":1467,"t":"v-else","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-else","p":1461},{"i":1469,"t":"v-else-if","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-else-if","p":1461},{"i":1471,"t":"用 key 管理可复用的元素","u":"/docs/FrontEnd/vue.js/vueif","h":"#用-key-管理可复用的元素","p":1461},{"i":1473,"t":"v-show","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-show","p":1461},{"i":1475,"t":"v-if vs v-show","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-if-vs-v-show","p":1461},{"i":1477,"t":"v-if 与 v-for 一起使用","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-if-与-v-for-一起使用","p":1461},{"i":1480,"t":"文本插值","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#文本插值","p":1479},{"i":1482,"t":"HTML 作为插值","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#html-作为插值","p":1479},{"i":1484,"t":"属性绑定","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#属性绑定","p":1479},{"i":1486,"t":"使用 JavaScript 表达式","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#使用-javascript-表达式","p":1479},{"i":1488,"t":"指令","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#指令","p":1479},{"i":1490,"t":"参数","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#参数","p":1479},{"i":1492,"t":"动态参数","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#动态参数","p":1479},{"i":1494,"t":"对动态参数的值的约束","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#对动态参数的值的约束","p":1479},{"i":1496,"t":"对动态参数表达式的约束","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#对动态参数表达式的约束","p":1479},{"i":1498,"t":"修饰符","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#修饰符","p":1479},{"i":1500,"t":"缩写","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#缩写","p":1479},{"i":1502,"t":"v-bind 缩写","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#v-bind-缩写","p":1479},{"i":1504,"t":"v-on 缩写","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#v-on-缩写","p":1479},{"i":1509,"t":"效果","u":"/docs/FrontEnd/webBasis/css/css-grid-mask","h":"#效果","p":1508},{"i":1510,"t":"实现","u":"/docs/FrontEnd/webBasis/css/css-grid-mask","h":"#实现","p":1508},{"i":1513,"t":"实现效果","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#实现效果","p":1512},{"i":1514,"t":"源代码","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#源代码","p":1512},{"i":1516,"t":"要点","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#要点","p":1512},{"i":1517,"t":"伪类 before","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#伪类-before","p":1512},{"i":1519,"t":"transform-origin","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#transform-origin","p":1512},{"i":1521,"t":"calc 属性","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#calc-属性","p":1512},{"i":1525,"t":"通用选择器","u":"/docs/FrontEnd/webBasis/css/cssSelector","h":"#通用选择器","p":1523},{"i":1527,"t":"属性选择器","u":"/docs/FrontEnd/webBasis/css/cssSelector","h":"#属性选择器","p":1523},{"i":1529,"t":"子组合选择器","u":"/docs/FrontEnd/webBasis/css/cssSelector","h":"#子组合选择器","p":1523},{"i":1531,"t":"伪类","u":"/docs/FrontEnd/webBasis/css/cssSelector","h":"#伪类","p":1523},{"i":1534,"t":"什么是 HTML","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#什么是-html","p":1533},{"i":1536,"t":"HTML 标签结构","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#html-标签结构","p":1533},{"i":1538,"t":"块级元素和内联元素","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#块级元素和内联元素","p":1533},{"i":1540,"t":"空元素","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#空元素","p":1533},{"i":1542,"t":"元素的属性","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#元素的属性","p":1533},{"i":1544,"t":"布尔属性","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#布尔属性","p":1533},{"i":1546,"t":"HTML文档结构","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#html文档结构","p":1533},{"i":1550,"t":"网站标题","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#网站标题","p":1548},{"i":1552,"t":"网站元数据","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#网站元数据","p":1548},{"i":1554,"t":"指定你的文档中字符的编码","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#指定你的文档中字符的编码","p":1548},{"i":1556,"t":"添加作者和描述","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#添加作者和描述","p":1548},{"i":1558,"t":"其他类型的元数据","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#其他类型的元数据","p":1548},{"i":1560,"t":"在你的站点增加自定义图标","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#在你的站点增加自定义图标","p":1548},{"i":1562,"t":"使用外链 css 和 js","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#使用外链-css-和-js","p":1548},{"i":1564,"t":"为文档设置主语言","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#为文档设置主语言","p":1548},{"i":1567,"t":"超链接结构","u":"/docs/FrontEnd/webBasis/HTML/hyperlink","h":"#超链接结构","p":1566},{"i":1569,"t":"title","u":"/docs/FrontEnd/webBasis/HTML/hyperlink","h":"#title","p":1566},{"i":1571,"t":"块级链接","u":"/docs/FrontEnd/webBasis/HTML/hyperlink","h":"#块级链接","p":1566},{"i":1574,"t":"图片嵌入","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#图片嵌入","p":1573},{"i":1575,"t":"图片引入","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#图片引入","p":1573},{"i":1577,"t":"备选文本","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#备选文本","p":1573},{"i":1579,"t":"图片的宽高","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#图片的宽高","p":1573},{"i":1581,"t":"图片标题","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#图片标题","p":1573},{"i":1583,"t":"视频嵌入","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#视频嵌入","p":1573},{"i":1584,"t":"video 元素","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#video-元素","p":1573},{"i":1586,"t":"video 属性","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#video-属性","p":1573},{"i":1588,"t":"音频嵌入","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#音频嵌入","p":1573},{"i":1589,"t":"audio 标签","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#audio-标签","p":1573},{"i":1591,"t":"iframe 嵌入","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#iframe-嵌入","p":1573},{"i":1594,"t":"标题和段落","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#标题和段落","p":1593},{"i":1595,"t":"<p>","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#p","p":1593},{"i":1597,"t":"<h1>","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#h1","p":1593},{"i":1599,"t":"标题和段落层次结构","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#标题和段落层次结构","p":1593},{"i":1601,"t":"列表","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#列表","p":1593},{"i":1602,"t":"无序列表","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#无序列表","p":1593},{"i":1604,"t":"有序列表","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#有序列表","p":1593},{"i":1606,"t":"嵌套列表","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#嵌套列表","p":1593},{"i":1608,"t":"突出显示","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#突出显示","p":1593},{"i":1610,"t":"强调","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#强调","p":1593},{"i":1612,"t":"非常强调","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#非常强调","p":1593},{"i":1614,"t":"其他特殊形态","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#其他特殊形态","p":1593},{"i":1615,"t":"斜体","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#斜体","p":1593},{"i":1617,"t":"下划线","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#下划线","p":1593},{"i":1620,"t":"变量","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#变量","p":1619},{"i":1621,"t":"var","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#var","p":1619},{"i":1623,"t":"let","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#let","p":1619},{"i":1625,"t":"for循环中的声明","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#for循环中的声明","p":1619},{"i":1627,"t":"const","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#const","p":1619},{"i":1629,"t":"最佳实践","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#最佳实践","p":1619},{"i":1631,"t":"数据类型","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#数据类型","p":1619},{"i":1633,"t":"undefined 和 null","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#undefined-和-null","p":1619},{"i":1635,"t":"Boolean","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#boolean","p":1619},{"i":1637,"t":"Number","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#number","p":1619},{"i":1639,"t":"数值转换","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#数值转换","p":1619},{"i":1641,"t":"String","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#string","p":1619},{"i":1643,"t":"Symbol","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#symbol","p":1619},{"i":1645,"t":"Object","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#object","p":1619},{"i":1648,"t":"生活中的对象","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#生活中的对象","p":1647},{"i":1650,"t":"JS 对象","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#js-对象","p":1647},{"i":1652,"t":"对象属性","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#对象属性","p":1647},{"i":1654,"t":"对象方法","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#对象方法","p":1647},{"i":1656,"t":"this 关键词","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#this-关键词","p":1647},{"i":1658,"t":"访问对象属性","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#访问对象属性","p":1647},{"i":1660,"t":"访问对象方法","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#访问对象方法","p":1647},{"i":1663,"t":"Fundamentals","u":"/docs/FrontEnd/webBasis/JavaScript/JSChallenger","h":"#fundamentals","p":1662},{"i":1664,"t":"比较字符","u":"/docs/FrontEnd/webBasis/JavaScript/JSChallenger","h":"#比较字符","p":1662},{"i":1666,"t":"删除字符串的前几个字符","u":"/docs/FrontEnd/webBasis/JavaScript/JSChallenger","h":"#删除字符串的前几个字符","p":1662},{"i":1670,"t":"显示方案","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#显示方案","p":1668},{"i":1672,"t":"innerHTML","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#innerhtml","p":1668},{"i":1674,"t":"document.write","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#documentwrite","p":1668},{"i":1676,"t":"window.alert","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#windowalert","p":1668},{"i":1678,"t":"console.log","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#consolelog","p":1668},{"i":1681,"t":"数据类型","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#数据类型","p":1680},{"i":1682,"t":"基本数据类型","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#基本数据类型","p":1680},{"i":1684,"t":"数据类型的概念","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#数据类型的概念","p":1680},{"i":1686,"t":"动态数据类型","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#动态数据类型","p":1680},{"i":1688,"t":"字符串","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#字符串","p":1680},{"i":1690,"t":"数值","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#数值","p":1680},{"i":1692,"t":"布尔值","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#布尔值","p":1680},{"i":1694,"t":"数组","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#数组","p":1680},{"i":1696,"t":"对象","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#对象","p":1680},{"i":1698,"t":"typeof 运算","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#typeof-运算","p":1680},{"i":1700,"t":"Undefined","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#undefined","p":1680},{"i":1702,"t":"空值","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#空值","p":1680},{"i":1704,"t":"NULL","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#null","p":1680},{"i":1706,"t":"Undefined 与 Null 的区别","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#undefined-与-null-的区别","p":1680},{"i":1708,"t":"函数","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#函数","p":1680},{"i":1710,"t":"函数语法","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#函数语法","p":1680},{"i":1712,"t":"函数返回","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#函数返回","p":1680},{"i":1714,"t":"() 运算符调用函数","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#-运算符调用函数","p":1680},{"i":1717,"t":"数据表示","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数据表示","p":1716},{"i":1719,"t":"不合法数 NaN","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#不合法数-nan","p":1716},{"i":1721,"t":"Infinity","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#infinity","p":1716},{"i":1723,"t":"数字属性","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数字属性","p":1716},{"i":1724,"t":"toString","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#tostring","p":1716},{"i":1726,"t":"toExponential","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#toexponential","p":1716},{"i":1728,"t":"toFixed","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#tofixed","p":1716},{"i":1730,"t":"toPrecision","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#toprecision","p":1716},{"i":1732,"t":"valueOf","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#valueof","p":1716},{"i":1734,"t":"parseInt","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#parseint","p":1716},{"i":1736,"t":"parseFloat","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#parsefloat","p":1716},{"i":1738,"t":"MIN_VALUE 和 MAX_VALUE","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#min_value-和-max_value","p":1716},{"i":1740,"t":"数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组","p":1716},{"i":1742,"t":"创建数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#创建数组","p":1716},{"i":1744,"t":"访问数组元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#访问数组元素","p":1716},{"i":1746,"t":"访问完整数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#访问完整数组","p":1716},{"i":1748,"t":"数组是对象","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组是对象","p":1716},{"i":1750,"t":"数组元素可以是对象","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组元素可以是对象","p":1716},{"i":1752,"t":"数组属性和方法","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组属性和方法","p":1716},{"i":1753,"t":"length","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#length","p":1716},{"i":1755,"t":"访问第一个元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#访问第一个元素","p":1716},{"i":1757,"t":"访问最后一个数组元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#访问最后一个数组元素","p":1716},{"i":1759,"t":"遍历数组元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#遍历数组元素","p":1716},{"i":1761,"t":"添加数组元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#添加数组元素","p":1716},{"i":1763,"t":"数组方法","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组方法","p":1716},{"i":1764,"t":"元素删除 Popping","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#元素删除-popping","p":1716},{"i":1766,"t":"元素添加 Pushing","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#元素添加-pushing","p":1716},{"i":1768,"t":"删除首个元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#删除首个元素","p":1716},{"i":1770,"t":"在首部添加元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#在首部添加元素","p":1716},{"i":1772,"t":"更改元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#更改元素","p":1716},{"i":1774,"t":"删除元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#删除元素","p":1716},{"i":1776,"t":"拼接数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#拼接数组","p":1716},{"i":1778,"t":"合并（连接）数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#合并连接数组","p":1716},{"i":1780,"t":"裁剪数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#裁剪数组","p":1716},{"i":1782,"t":"数组操作","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组操作","p":1716},{"i":1783,"t":"数组排序","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组排序","p":1716},{"i":1785,"t":"反转数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#反转数组","p":1716},{"i":1787,"t":"数字排序","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数字排序","p":1716},{"i":1789,"t":"比值函数","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#比值函数","p":1716},{"i":1791,"t":"以随机顺序排序数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#以随机顺序排序数组","p":1716},{"i":1793,"t":"排序对象数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#排序对象数组","p":1716},{"i":1795,"t":"数组迭代","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组迭代","p":1716},{"i":1796,"t":"Array.forEach()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayforeach","p":1716},{"i":1798,"t":"Array.map()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arraymap","p":1716},{"i":1800,"t":"Array.filter()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayfilter","p":1716},{"i":1802,"t":"Array.reduce()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayreduce","p":1716},{"i":1804,"t":"Array.reduceRight()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayreduceright","p":1716},{"i":1806,"t":"Array.every()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayevery","p":1716},{"i":1808,"t":"Array.some()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arraysome","p":1716},{"i":1810,"t":"Array.find()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayfind","p":1716},{"i":1812,"t":"Array.findIndex()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayfindindex","p":1716},{"i":1815,"t":"HTML事件","u":"/docs/FrontEnd/webBasis/JavaScript/shijian","h":"#html事件","p":1814},{"i":1817,"t":"常见的 HTML 事件","u":"/docs/FrontEnd/webBasis/JavaScript/shijian","h":"#常见的-html-事件","p":1814},{"i":1820,"t":"JavaScript 定义","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#javascript-定义","p":1819},{"i":1822,"t":"JavaScript 可以做些什么","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#javascript-可以做些什么","p":1819},{"i":1824,"t":"浏览器 API","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#浏览器-api","p":1819},{"i":1826,"t":"第三方 API","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#第三方-api","p":1819},{"i":1828,"t":"JavaScript 在页面上做了什么","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#javascript-在页面上做了什么","p":1819},{"i":1832,"t":"特殊字符转义","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#特殊字符转义","p":1830},{"i":1834,"t":"字符串方法","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#字符串方法","p":1830},{"i":1835,"t":"字符串长度","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#字符串长度","p":1830},{"i":1837,"t":"查找字符串里面的字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#查找字符串里面的字符串","p":1830},{"i":1839,"t":"检索字符串中的字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#检索字符串中的字符串","p":1830},{"i":1841,"t":"提取部分字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#提取部分字符串","p":1830},{"i":1843,"t":"字符串替换","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#字符串替换","p":1830},{"i":1845,"t":"转换为大写和小写","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#转换为大写和小写","p":1830},{"i":1847,"t":"链接多个字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#链接多个字符串","p":1830},{"i":1849,"t":"删除两端空白符","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#删除两端空白符","p":1830},{"i":1851,"t":"提取字符串的字符","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#提取字符串的字符","p":1830},{"i":1853,"t":"字符串转数组","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#字符串转数组","p":1830},{"i":1856,"t":"数据库基础","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库基础","p":1855},{"i":1857,"t":"数据库是干什么的","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库是干什么的","p":1855},{"i":1859,"t":"数据库的结构","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库的结构","p":1855},{"i":1861,"t":"邮箱小程序设计","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#邮箱小程序设计","p":1855},{"i":1862,"t":"页面设计","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#页面设计","p":1855},{"i":1864,"t":"数据库设计","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库设计","p":1855},{"i":1866,"t":"编程实现","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#编程实现","p":1855},{"i":1867,"t":"页面实现","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#页面实现","p":1855},{"i":1869,"t":"数据库创建","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库创建","p":1855},{"i":1871,"t":"注册功能","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#注册功能","p":1855},{"i":1873,"t":"数据库调用步骤","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库调用步骤","p":1855},{"i":1875,"t":"写信功能","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#写信功能","p":1855},{"i":1877,"t":"收信","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#收信","p":1855},{"i":1879,"t":"最终效果","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#最终效果","p":1855},{"i":1882,"t":"为什么要使用组件库？","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#为什么要使用组件库","p":1880},{"i":1884,"t":"选择一个组件库","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#选择一个组件库","p":1880},{"i":1886,"t":"下载安装vant","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#下载安装vant","p":1880},{"i":1887,"t":"步骤一","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#步骤一","p":1880},{"i":1889,"t":"步骤二","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#步骤二","p":1880},{"i":1891,"t":"步骤三","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#步骤三","p":1880},{"i":1893,"t":"步骤四","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#步骤四","p":1880},{"i":1895,"t":"开始开发","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#开始开发","p":1880},{"i":1897,"t":"调用一个日历选择组件","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#调用一个日历选择组件","p":1880},{"i":1899,"t":"调用一个开关组件","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#调用一个开关组件","p":1880},{"i":1902,"t":"插入本地图片","u":"/docs/FrontEnd/WxMini/wxmini-example","h":"#插入本地图片","p":1901},{"i":1904,"t":"插入云图片","u":"/docs/FrontEnd/WxMini/wxmini-example","h":"#插入云图片","p":1901},{"i":1906,"t":"页面跳转","u":"/docs/FrontEnd/WxMini/wxmini-example","h":"#页面跳转","p":1901},{"i":1908,"t":"前言","u":"/docs/FrontEnd/WxMini/wxmini-git","h":"#前言","p":1907},{"i":1910,"t":"微信开发者代码管理","u":"/docs/FrontEnd/WxMini/wxmini-git","h":"#微信开发者代码管理","p":1907},{"i":1912,"t":"不同成员创建不同分支","u":"/docs/FrontEnd/WxMini/wxmini-git","h":"#不同成员创建不同分支","p":1907},{"i":1914,"t":"提交合并请求","u":"/docs/FrontEnd/WxMini/wxmini-git","h":"#提交合并请求","p":1907},{"i":1917,"t":"什么是小程序框架","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#什么是小程序框架","p":1916},{"i":1919,"t":"逻辑层","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#逻辑层","p":1916},{"i":1921,"t":"“注册”小程序","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#注册小程序","p":1916},{"i":1923,"t":"注册页面","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#注册页面","p":1916},{"i":1925,"t":"页面生命周期","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#页面生命周期","p":1916},{"i":1927,"t":"页面路由","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#页面路由","p":1916},{"i":1930,"t":"前言","u":"/docs/FrontEnd/WxMini/wxmini-page-config","h":"#前言","p":1929},{"i":1932,"t":"Tabbar","u":"/docs/FrontEnd/WxMini/wxmini-page-config","h":"#tabbar","p":1929},{"i":1934,"t":"设置顶部文字","u":"/docs/FrontEnd/WxMini/wxmini-page-config","h":"#设置顶部文字","p":1929},{"i":1937,"t":"知识储备","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#知识储备","p":1936},{"i":1939,"t":"小程序是什么","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#小程序是什么","p":1936},{"i":1941,"t":"小程序和h5的区别","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#小程序和h5的区别","p":1936},{"i":1943,"t":"注册微信小程序","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#注册微信小程序","p":1936},{"i":1945,"t":"添加开发者","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#添加开发者","p":1936},{"i":1947,"t":"创建小程序","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#创建小程序","p":1936},{"i":1949,"t":"小程序的结构","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#小程序的结构","p":1936},{"i":1951,"t":"微信开发IDE界面","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#微信开发ide界面","p":1936},{"i":1952,"t":"Hello World","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#hello-world","p":1936},{"i":1953,"t":"新建页面","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#新建页面","p":1936},{"i":1955,"t":"将页面设置为主页","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#将页面设置为主页","p":1936},{"i":1957,"t":"编写wxml代码","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#编写wxml代码","p":1936},{"i":1959,"t":"编写wxss代码","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#编写wxss代码","p":1936},{"i":1963,"t":"向服务器推送数据","u":"/docs/FrontEnd/WxMini/wxmini-server","h":"#向服务器推送数据","p":1961},{"i":1965,"t":"向服务端请求数据","u":"/docs/FrontEnd/WxMini/wxmini-server","h":"#向服务端请求数据","p":1961},{"i":1968,"t":"全局配置","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#全局配置","p":1967},{"i":1969,"t":"app.json","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#appjson","p":1967},{"i":1971,"t":"sitemap.json","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#sitemapjson","p":1967},{"i":1973,"t":"app.js","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#appjs","p":1967},{"i":1975,"t":"app.wxss","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#appwxss","p":1967},{"i":1977,"t":"页面配置","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#页面配置","p":1967},{"i":1978,"t":"主页-QA","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#主页-qa","p":1967},{"i":1980,"t":"表单提交页面","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#表单提交页面","p":1967},{"i":1984,"t":"JSON","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#json","p":1982},{"i":1986,"t":"Json语法","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#json语法","p":1982},{"i":1988,"t":"全局配置 app.json","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#全局配置-appjson","p":1982},{"i":1990,"t":"单个页面xxx.json","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#单个页面xxxjson","p":1982},{"i":1992,"t":"工具配置 project.config.json","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#工具配置-projectconfigjson","p":1982},{"i":1994,"t":"wxml模板文件","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#wxml模板文件","p":1982},{"i":1996,"t":"数据绑定","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#数据绑定","p":1982},{"i":1998,"t":"列表渲染","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#列表渲染","p":1982},{"i":2000,"t":"条件渲染","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#条件渲染","p":1982},{"i":2002,"t":"模板","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#模板","p":1982},{"i":2004,"t":"wxss","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#wxss","p":1982},{"i":2006,"t":"Javascript","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#javascript","p":1982},{"i":2009,"t":"Hi，this is Jetzihan","u":"/docs/intro","h":"#hithis-is-jetzihan","p":2008},{"i":2011,"t":"目前已有的前端笔记内容","u":"/docs/intro","h":"#目前已有的前端笔记内容","p":2008},{"i":2013,"t":"目前已有的学习内容","u":"/docs/intro","h":"#目前已有的学习内容","p":2008},{"i":2015,"t":"目前已有的后端学习内容","u":"/docs/intro","h":"#目前已有的后端学习内容","p":2008},{"i":2017,"t":"TimeLine","u":"/docs/intro","h":"#timeline","p":2008},{"i":2019,"t":"Contact Me","u":"/docs/intro","h":"#contact-me","p":2008},{"i":2021,"t":"Support Me","u":"/docs/intro","h":"#support-me","p":2008},{"i":2025,"t":"应用层协议原理","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#应用层协议原理","p":2024},{"i":2027,"t":"应用层程序的体系结构","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#应用层程序的体系结构","p":2024},{"i":2028,"t":"客户-服务器结构 （C/S）","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#客户-服务器结构-cs","p":2024},{"i":2030,"t":"对等体系结构 （P2P）","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#对等体系结构-p2p","p":2024},{"i":2032,"t":"进程通信","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#进程通信","p":2024},{"i":2034,"t":"传输层为应用层提供的服务","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#传输层为应用层提供的服务","p":2024},{"i":2036,"t":"常见的应用","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#常见的应用","p":2024},{"i":2038,"t":"应用层协议","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#应用层协议","p":2024},{"i":2040,"t":"TCP服务","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#tcp服务","p":2024},{"i":2042,"t":"UDP服务","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#udp服务","p":2024},{"i":2044,"t":"HTTP:超文本传输协议","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#http超文本传输协议","p":2024},{"i":2046,"t":"HTTP报文格式","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#http报文格式","p":2024},{"i":2048,"t":"HTTP响应状态码","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#http响应状态码","p":2024},{"i":2050,"t":"cookie","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#cookie","p":2024},{"i":2052,"t":"WEB缓存 （代理服务器）","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#web缓存-代理服务器","p":2024},{"i":2054,"t":"条件GET（The Conditional GET）","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#条件getthe-conditional-get","p":2024},{"i":2056,"t":"电子邮件应用SMTP","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#电子邮件应用smtp","p":2024},{"i":2058,"t":"邮件访问协议","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#邮件访问协议","p":2024},{"i":2061,"t":"问题产生背景","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#问题产生背景","p":2060},{"i":2063,"t":"DNS提供的服务","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#dns提供的服务","p":2060},{"i":2065,"t":"域名服务器分类","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#域名服务器分类","p":2060},{"i":2067,"t":"DNS查询过程","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#dns查询过程","p":2060},{"i":2069,"t":"DNS缓存","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#dns缓存","p":2060},{"i":2071,"t":"DNS报文","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#dns报文","p":2060},{"i":2074,"t":"什么是网络","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#什么是网络","p":2073},{"i":2076,"t":"网络边缘","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#网络边缘","p":2073},{"i":2078,"t":"网络核心","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#网络核心","p":2073},{"i":2080,"t":"交换中的时延、丢包和吞吐量","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#交换中的时延丢包和吞吐量","p":2073},{"i":2081,"t":"什么是吞吐量","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#什么是吞吐量","p":2073},{"i":2083,"t":"各种时延的理解","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#各种时延的理解","p":2073},{"i":2085,"t":"什么是丢包","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#什么是丢包","p":2073},{"i":2087,"t":"往返时间 RTT","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#往返时间-rtt","p":2073},{"i":2089,"t":"协议分层","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#协议分层","p":2073},{"i":2091,"t":"网络攻击","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#网络攻击","p":2073},{"i":2094,"t":"个人区域网：PAN (Personal Area Network)","u":"/docs/Notes/ComputerNetwork/chinese-english-concept","h":"#个人区域网pan-personal-area-network","p":2093},{"i":2095,"t":"局域网：LAN (Local Area Network)","u":"/docs/Notes/ComputerNetwork/chinese-english-concept","h":"#局域网lan-local-area-network","p":2093},{"i":2096,"t":"广域网：WAN (Wide Area Network)","u":"/docs/Notes/ComputerNetwork/chinese-english-concept","h":"#广域网wan-wide-area-network","p":2093},{"i":2097,"t":"城域网：MAN (Metropolitan Area Network)","u":"/docs/Notes/ComputerNetwork/chinese-english-concept","h":"#城域网man-metropolitan-area-network","p":2093},{"i":2098,"t":"附录","u":"/docs/Notes/ComputerNetwork/chinese-english-concept","h":"","p":2093},{"i":2100,"t":"一、链路层概述","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#一链路层概述","p":2099},{"i":2101,"t":"1.1 链路层是如何与网络层关联的","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#11-链路层是如何与网络层关联的","p":2099},{"i":2103,"t":"1.2 链路层提供的服务","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#12-链路层提供的服务","p":2099},{"i":2105,"t":"1.3 链路层在何处实现","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#13-链路层在何处实现","p":2099},{"i":2107,"t":"二、差错检验和纠正技术","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#二差错检验和纠正技术","p":2099},{"i":2108,"t":"2.1 奇偶校验","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#21-奇偶校验","p":2099},{"i":2110,"t":"2.2 二维奇偶校验","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#22-二维奇偶校验","p":2099},{"i":2112,"t":"2.3 循环冗余校验","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#23-循环冗余校验","p":2099},{"i":2114,"t":"三、多路访问和链路协议","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#三多路访问和链路协议","p":2099},{"i":2116,"t":"3.1 信道划分协议","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#31-信道划分协议","p":2099},{"i":2118,"t":"3.2 随机接入协议","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#32-随机接入协议","p":2099},{"i":2120,"t":"3.3 轮流协议","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#33-轮流协议","p":2099},{"i":2122,"t":"四、交换局域网","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#四交换局域网","p":2099},{"i":2124,"t":"4.1 链路层寻址和ARP（地址解析协议）","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#41-链路层寻址和arp地址解析协议","p":2099},{"i":2126,"t":"4.2 以太网","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#42-以太网","p":2099},{"i":2128,"t":"4.3 链路层交换机","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#43-链路层交换机","p":2099},{"i":2130,"t":"五、WIFI","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#五wifi","p":2099},{"i":2132,"t":"5.1 频段、信道、带宽","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#51-频段信道带宽","p":2099},{"i":2134,"t":"5.2 IEEE 802.11常见的技术标准","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#52-ieee-80211常见的技术标准","p":2099},{"i":2135,"t":"5.3 CSMA/CA碰撞避免","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#53-csmaca碰撞避免","p":2099},{"i":2140,"t":"一、网络分类","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#一网络分类","p":2139},{"i":2142,"t":"二、网络分层架构","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#二网络分层架构","p":2139},{"i":2143,"t":"1.ISO/OSI RM模型","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#1isoosi-rm模型","p":2139},{"i":2145,"t":"2.TCP/IP协议栈","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#2tcpip协议栈","p":2139},{"i":2147,"t":"3.每层的通信标识（地址）是什么？传输的数据单元名称是什么？","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#3每层的通信标识地址是什么传输的数据单元名称是什么","p":2139},{"i":2149,"t":"4.封装、解封装","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#4封装解封装","p":2139},{"i":2151,"t":"5.复用的概念","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#5复用的概念","p":2139},{"i":2153,"t":"6.每层使用的网络物理设备","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#6每层使用的网络物理设备","p":2139},{"i":2155,"t":"7.分层的基本概念","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#7分层的基本概念","p":2139},{"i":2158,"t":"一、网络层简介","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#一网络层简介","p":2157},{"i":2160,"t":"1.1 数据链路层和网络层的区别","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#11-数据链路层和网络层的区别","p":2157},{"i":2161,"t":"1.2 网络互连使用的设备","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#12-网络互连使用的设备","p":2157},{"i":2163,"t":"1.3 网络层的作用","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#13-网络层的作用","p":2157},{"i":2165,"t":"二、IP协议","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#二ip协议","p":2157},{"i":2166,"t":"2.1 IP协议格式","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#21-ip协议格式","p":2157},{"i":2168,"t":"2.2 IP数据报的分片（Fragmented）","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#22-ip数据报的分片fragmented","p":2157},{"i":2170,"t":"2.3 IP编址","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#23-ip编址","p":2157},{"i":2172,"t":"2.4 IP地址分类","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#24-ip地址分类","p":2157},{"i":2174,"t":"2.5 特殊地址（广播地址、环回地址）","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#25-特殊地址广播地址环回地址","p":2157},{"i":2176,"t":"2.6 子网划分","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#26-子网划分","p":2157},{"i":2178,"t":"2.7 环回地址","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#27-环回地址","p":2157},{"i":2180,"t":"2.8 IPv6","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#28-ipv6","p":2157},{"i":2182,"t":"2.9 IPv4（32位）和IPv6（128位）对比","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#29-ipv432位和ipv6128位对比","p":2157},{"i":2184,"t":"三、网络地址转换 NAT","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#三网络地址转换-nat","p":2157},{"i":2185,"t":"3.1 网络地址转换的含义","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#31-网络地址转换的含义","p":2157},{"i":2187,"t":"3.2 NAT工作原理","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#32-nat工作原理","p":2157},{"i":2189,"t":"四、无类域间路由CIDR与路由聚合","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#四无类域间路由cidr与路由聚合","p":2157},{"i":2190,"t":"4.1 CIDR简介","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#41-cidr简介","p":2157},{"i":2192,"t":"4.2 CIDR计算","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#42-cidr计算","p":2157},{"i":2194,"t":"五、DHCP协议（动态主机配置）","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#五dhcp协议动态主机配置","p":2157},{"i":2196,"t":"DHCP详细流程","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#dhcp详细流程","p":2157},{"i":2198,"t":"六、ICMP协议","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#六icmp协议","p":2157},{"i":2199,"t":"6.1 ICMP协议的作用是什么","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#61-icmp协议的作用是什么","p":2157},{"i":2201,"t":"七、路由","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#七路由","p":2157},{"i":2203,"t":"7.1 路由算法是什么","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#71-路由算法是什么","p":2157},{"i":2205,"t":"7.2 链路状态路由算法","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#72-链路状态路由算法","p":2157},{"i":2207,"t":"7.3 距离向量路由算法","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#73-距离向量路由算法","p":2157},{"i":2209,"t":"7.4 链路状态路由算法和向量路由算法对比","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#74-链路状态路由算法和向量路由算法对比","p":2157},{"i":2211,"t":"八、路由器的转发","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#八路由器的转发","p":2157},{"i":2213,"t":"8.1 最长前缀匹配简述","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#81-最长前缀匹配简述","p":2157},{"i":2215,"t":"8.2 层次化路由","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#82-层次化路由","p":2157},{"i":2217,"t":"8.3 RIP路由信息协议","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#83-rip路由信息协议","p":2157},{"i":2219,"t":"8.4 OSPF开放最短路径优先","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#84-ospf开放最短路径优先","p":2157},{"i":2221,"t":"8.5 BGP外部网关协议","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#85-bgp外部网关协议","p":2157},{"i":2223,"t":"8.6 三种路由协议比较","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#86-三种路由协议比较","p":2157},{"i":2226,"t":"常见传输介质的比较","u":"/docs/Notes/ComputerNetwork/physical-layer","h":"#常见传输介质的比较","p":2225},{"i":2229,"t":"三次握手","u":"/docs/Notes/ComputerNetwork/tcp-connection-establishment-process","h":"#三次握手","p":2228},{"i":2231,"t":"三次握手的主要过程","u":"/docs/Notes/ComputerNetwork/tcp-connection-establishment-process","h":"#三次握手的主要过程","p":2228},{"i":2233,"t":"四次挥手过程","u":"/docs/Notes/ComputerNetwork/tcp-connection-establishment-process","h":"#四次挥手过程","p":2228},{"i":2235,"t":"TCP拥塞（Congestion）控制","u":"/docs/Notes/ComputerNetwork/tcp-connection-establishment-process","h":"#tcp拥塞congestion控制","p":2228},{"i":2239,"t":"前言 传输层和应用层的关系","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#前言-传输层和应用层的关系","p":2238},{"i":2241,"t":"一、传输层的功能","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#一传输层的功能","p":2238},{"i":2243,"t":"二、常见的应用使用的端口号总结","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#二常见的应用使用的端口号总结","p":2238},{"i":2245,"t":"三、传输层协议","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#三传输层协议","p":2238},{"i":2246,"t":"3.1 TCP协议","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#31-tcp协议","p":2238},{"i":2248,"t":"3.2 UDP协议","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#32-udp协议","p":2238},{"i":2249,"t":"3.2.1 UDP协议简介","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#321-udp协议简介","p":2238},{"i":2251,"t":"3.2.2 UDP报文格式","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#322-udp报文格式","p":2238},{"i":2253,"t":"四、拥塞控制","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#四拥塞控制","p":2238},{"i":2255,"t":"4.1 TCP拥塞控制","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#41-tcp拥塞控制","p":2238},{"i":2257,"t":"五、TCP和UDP的异同","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#五tcp和udp的异同","p":2238},{"i":2259,"t":"六、多路复用和分用","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#六多路复用和分用","p":2238},{"i":2262,"t":"rdt协议简介","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt协议简介","p":2261},{"i":2264,"t":"rdt1.0","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt10","p":2261},{"i":2266,"t":"rdt2.0","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt20","p":2261},{"i":2268,"t":"rdt2.1","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt21","p":2261},{"i":2270,"t":"rdt2.2","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt22","p":2261},{"i":2272,"t":"rdt3.0","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt30","p":2261},{"i":2274,"t":"流水线和滑动窗口机制","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#流水线和滑动窗口机制","p":2261},{"i":2276,"t":"滑动窗口协议（Sliding-Window Protocol）","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#滑动窗口协议sliding-window-protocol","p":2261},{"i":2278,"t":"GBN协议（回退重传协议，Go-Back-N Protocol）","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#gbn协议回退重传协议go-back-n-protocol","p":2261},{"i":2280,"t":"SR协议(选择重传协议，Selective Repeat)","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#sr协议选择重传协议selective-repeat","p":2261},{"i":2282,"t":"比较GBN和SR","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#比较gbn和sr","p":2261},{"i":2285,"t":"HTTP/HTTPS","u":"/docs/Notes/ComputerNetwork/WireShark","h":"#httphttps","p":2283},{"i":2286,"t":"学校官网捕获","u":"/docs/Notes/ComputerNetwork/WireShark","h":"#学校官网捕获","p":2283},{"i":2288,"t":"Bing 捕获","u":"/docs/Notes/ComputerNetwork/WireShark","h":"#bing-捕获","p":2283},{"i":2290,"t":"FTP协议","u":"/docs/Notes/ComputerNetwork/WireShark","h":"#ftp协议","p":2283},{"i":2292,"t":"下载PDF","u":"/docs/Notes/ComputerNetwork/WireShark","h":"#下载pdf","p":2283},{"i":2295,"t":"数据结构的基本概念","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据结构的基本概念","p":2294},{"i":2296,"t":"数据","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据","p":2294},{"i":2298,"t":"数据元素","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据元素","p":2294},{"i":2300,"t":"数据对象","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据对象","p":2294},{"i":2302,"t":"数据类型","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据类型","p":2294},{"i":2304,"t":"数据结构","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据结构","p":2294},{"i":2306,"t":"数据结构的三要素","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据结构的三要素","p":2294},{"i":2307,"t":"逻辑结构","u":"/docs/Notes/DataStruct/DSBasic","h":"#逻辑结构","p":2294},{"i":2309,"t":"物理结构","u":"/docs/Notes/DataStruct/DSBasic","h":"#物理结构","p":2294},{"i":2311,"t":"算法的概念","u":"/docs/Notes/DataStruct/DSBasic","h":"#算法的概念","p":2294},{"i":2312,"t":"算法定义","u":"/docs/Notes/DataStruct/DSBasic","h":"#算法定义","p":2294},{"i":2314,"t":"算法的特点","u":"/docs/Notes/DataStruct/DSBasic","h":"#算法的特点","p":2294},{"i":2316,"t":"时间复杂度","u":"/docs/Notes/DataStruct/DSBasic","h":"#时间复杂度","p":2294},{"i":2318,"t":"空间复杂度","u":"/docs/Notes/DataStruct/DSBasic","h":"#空间复杂度","p":2294},{"i":2321,"t":"传播范畴中的媒体","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#传播范畴中的媒体","p":2320},{"i":2323,"t":"技术范畴的媒体","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#技术范畴的媒体","p":2320},{"i":2325,"t":"多媒体","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#多媒体","p":2320},{"i":2327,"t":"数字媒体的定义","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体的定义","p":2320},{"i":2329,"t":"数字媒体的分类","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体的分类","p":2320},{"i":2331,"t":"人处理信息的过程","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#人处理信息的过程","p":2320},{"i":2333,"t":"电子计算机处理信息的过程","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#电子计算机处理信息的过程","p":2320},{"i":2335,"t":"数字媒体的传播方式","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体的传播方式","p":2320},{"i":2336,"t":"数字媒体的流通过程","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体的流通过程","p":2320},{"i":2337,"t":"数字媒体技术的分类","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体技术的分类","p":2320},{"i":2338,"t":"数字信息的存储技术","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字信息的存储技术","p":2320},{"i":2340,"t":"数字信息的来源","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字信息的来源","p":2320},{"i":2342,"t":"音频处理","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#音频处理","p":2320},{"i":2343,"t":"数字音频的处理和生成","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字音频的处理和生成","p":2320},{"i":2345,"t":"声音的数字化过程","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#声音的数字化过程","p":2320},{"i":2346,"t":"音频编码的压缩方法","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#音频编码的压缩方法","p":2320},{"i":2347,"t":"图像处理","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"","p":2320},{"i":2348,"t":"数字图像的处理：原始-取样-量化","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字图像的处理原始-取样-量化","p":2320},{"i":2349,"t":"图像编码压缩方法","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#图像编码压缩方法","p":2320},{"i":2350,"t":"图像识别的过程","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#图像识别的过程","p":2320},{"i":2352,"t":"视频处理","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"","p":2320},{"i":2353,"t":"视频：二维信号的图像加上时间轴形成的三维信号的图像","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#视频二维信号的图像加上时间轴形成的三维信号的图像","p":2320},{"i":2354,"t":"视频获取","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#视频获取","p":2320},{"i":2356,"t":"视频数字化","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#视频数字化","p":2320},{"i":2358,"t":"计算机合成音乐","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#计算机合成音乐","p":2320},{"i":2360,"t":"计算机图形学","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#计算机图形学","p":2320},{"i":2362,"t":"动画处理","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#动画处理","p":2320},{"i":2364,"t":"数字传播技术","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字传播技术","p":2320},{"i":2366,"t":"数字信息管理：多媒体数据库技术","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字信息管理多媒体数据库技术","p":2320},{"i":2368,"t":"数字媒体信息检索","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体信息检索","p":2320},{"i":2370,"t":"数字信息安全","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字信息安全","p":2320},{"i":2372,"t":"数字媒体技术的内涵","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体技术的内涵","p":2320},{"i":2375,"t":"可见光的类型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#可见光的类型","p":2374},{"i":2377,"t":"模拟图像和数字图像","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#模拟图像和数字图像","p":2374},{"i":2379,"t":"图像处理的概念","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像处理的概念","p":2374},{"i":2381,"t":"图像处理的基本流程","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像处理的基本流程","p":2374},{"i":2383,"t":"图像分析","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像分析","p":2374},{"i":2385,"t":"图像处理涉及的领域","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像处理涉及的领域","p":2374},{"i":2386,"t":"图像处理技术的研究内容","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像处理技术的研究内容","p":2374},{"i":2388,"t":"图像处理的应用领域","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像处理的应用领域","p":2374},{"i":2390,"t":"简单图象成像模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#简单图象成像模型","p":2374},{"i":2392,"t":"图像数字化——采样","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像数字化采样","p":2374},{"i":2394,"t":"图像数字化——量化","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像数字化量化","p":2374},{"i":2396,"t":"分辨率","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#分辨率","p":2374},{"i":2398,"t":"空间分辨率和灰度分辨率","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#空间分辨率和灰度分辨率","p":2374},{"i":2400,"t":"采样数变化对图像视觉效果的影响","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#采样数变化对图像视觉效果的影响","p":2374},{"i":2402,"t":"空间分辨率对图像视觉效果的影响","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#空间分辨率对图像视觉效果的影响","p":2374},{"i":2404,"t":"灰度级分辨率对图像视觉效果的影响","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#灰度级分辨率对图像视觉效果的影响","p":2374},{"i":2406,"t":"图像深度与显示深度","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像深度与显示深度","p":2374},{"i":2408,"t":"图像的文件大小","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像的文件大小","p":2374},{"i":2410,"t":"图像数字化——数字图像的表示","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像数字化数字图像的表示","p":2374},{"i":2411,"t":"数字图像二维矩阵表示","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#数字图像二维矩阵表示","p":2374},{"i":2413,"t":"数字图像的坐标表示","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#数字图像的坐标表示","p":2374},{"i":2414,"t":"表示实例","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#表示实例","p":2374},{"i":2415,"t":"图像数字化——颜色模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像数字化颜色模型","p":2374},{"i":2417,"t":"色调(Hue)","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#色调hue","p":2374},{"i":2419,"t":"饱和度(Saturation)","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#饱和度saturation","p":2374},{"i":2421,"t":"亮度(Intensity)","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#亮度intensity","p":2374},{"i":2423,"t":"RGB颜色模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#rgb颜色模型","p":2374},{"i":2425,"t":"CMY颜色模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#cmy颜色模型","p":2374},{"i":2427,"t":"CMYK颜色模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#cmyk颜色模型","p":2374},{"i":2428,"t":"YUV颜色模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#yuv颜色模型","p":2374},{"i":2430,"t":"图像数字化——调色板","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像数字化调色板","p":2374},{"i":2431,"t":"真彩和伪彩","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#真彩和伪彩","p":2374},{"i":2433,"t":"调色板","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#调色板","p":2374},{"i":2435,"t":"常用颜色的RGB组合","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#常用颜色的rgb组合","p":2374},{"i":2436,"t":"数字图像的性质——数字图像的度量和拓扑性质","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#数字图像的性质数字图像的度量和拓扑性质","p":2374},{"i":2438,"t":"一 距离度量函数","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#一-距离度量函数","p":2374},{"i":2440,"t":"各种距离的对比","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#各种距离的对比","p":2374},{"i":2442,"t":"灰度直方图","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#灰度直方图","p":2374},{"i":2444,"t":"直方图均衡化","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#直方图均衡化","p":2374},{"i":2446,"t":"位图与矢量图","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#位图与矢量图","p":2374},{"i":2447,"t":"位图","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#位图","p":2374},{"i":2449,"t":"矢量图","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#矢量图","p":2374},{"i":2451,"t":"图像文件的格式","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像文件的格式","p":2374},{"i":2453,"t":"bmp格式","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#bmp格式","p":2374},{"i":2456,"t":"一、音频的概念和特性","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#一音频的概念和特性","p":2455},{"i":2457,"t":"1.1 声音的产生","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#11-声音的产生","p":2455},{"i":2459,"t":"1.2 声音的特性","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#12-声音的特性","p":2455},{"i":2461,"t":"二、音频处理设备","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#二音频处理设备","p":2455},{"i":2463,"t":"三、音频数字化","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#三音频数字化","p":2455},{"i":2464,"t":"3.1 模拟音频","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#31-模拟音频","p":2455},{"i":2466,"t":"3.2 数字音频","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#32-数字音频","p":2455},{"i":2468,"t":"3.3 音频数字化","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#33-音频数字化","p":2455},{"i":2470,"t":"3.4 数字音频的存储量","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#34-数字音频的存储量","p":2455},{"i":2472,"t":"四、音频文件的格式","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#四音频文件的格式","p":2455},{"i":2474,"t":"五、语音的发声原理","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#五语音的发声原理","p":2455},{"i":2475,"t":"5.1 人的发声器官","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#51-人的发声器官","p":2455},{"i":2477,"t":"5.3 激励和调制","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#53-激励和调制","p":2455},{"i":2479,"t":"六、语音的听觉机理","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#六语音的听觉机理","p":2455},{"i":2481,"t":"6.1 激励模型","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#61-激励模型","p":2455},{"i":2483,"t":"6.2 调制模型","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#62-调制模型","p":2455},{"i":2485,"t":"6.3 辐射模型","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#63-辐射模型","p":2455},{"i":2487,"t":"6.4 语音信号的数字模型","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#64-语音信号的数字模型","p":2455},{"i":2489,"t":"6.5 语音信号分析","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#65-语音信号分析","p":2455},{"i":2491,"t":"6.6 语谱图","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#66-语谱图","p":2455},{"i":2493,"t":"七、语音处理","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#七语音处理","p":2455},{"i":2494,"t":"7.1 波形编码合成","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#71-波形编码合成","p":2455},{"i":2496,"t":"7.2 参数式分析语音合成","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#72-参数式分析语音合成","p":2455},{"i":2498,"t":"7.3 语音增强","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#73-语音增强","p":2455},{"i":2500,"t":"7.4 语音识别","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#74-语音识别","p":2455},{"i":2502,"t":"问题","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#问题","p":2455},{"i":2505,"t":"一、视频的概念","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#一视频的概念","p":2504},{"i":2506,"t":"1.1 什么是视频","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#11-什么是视频","p":2504},{"i":2508,"t":"1.2 模拟视频","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#12-模拟视频","p":2504},{"i":2510,"t":"1.3 数字视频","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#13-数字视频","p":2504},{"i":2512,"t":"二、数字视频的获取与编辑","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#二数字视频的获取与编辑","p":2504},{"i":2513,"t":"2.1 数字视频采集工具","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#21-数字视频采集工具","p":2504},{"i":2515,"t":"2.2 数字视频质量评估","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#22-数字视频质量评估","p":2504},{"i":2517,"t":"三、运动估计","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#三运动估计","p":2504},{"i":2518,"t":"3.1 光流","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#31-光流","p":2504},{"i":2520,"t":"3.2 帧差法","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#32-帧差法","p":2504},{"i":2522,"t":"3.3 光流场","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#33-光流场","p":2504},{"i":2524,"t":"3.4 块匹配","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#34-块匹配","p":2504},{"i":2526,"t":"四、视频编码标准","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#四视频编码标准","p":2504},{"i":2529,"t":"基于内容的多媒体数据检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#基于内容的多媒体数据检索","p":2528},{"i":2531,"t":"1.1 基于内容的图像检索（CBIR）","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#11-基于内容的图像检索cbir","p":2528},{"i":2533,"t":"1.2 基于内容的视频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#12-基于内容的视频检索","p":2528},{"i":2535,"t":"1.3 基于内容的音频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#13-基于内容的音频检索","p":2528},{"i":2538,"t":"基于内容的多媒体数据检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#基于内容的多媒体数据检索","p":2537},{"i":2540,"t":"1.1 基于内容的图像检索（CBIR）","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#11-基于内容的图像检索cbir","p":2537},{"i":2542,"t":"1.2 基于内容的视频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#12-基于内容的视频检索","p":2537},{"i":2544,"t":"1.3 基于内容的音频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#13-基于内容的音频检索","p":2537},{"i":2547,"t":"基于内容的多媒体数据检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#基于内容的多媒体数据检索","p":2546},{"i":2549,"t":"1.1 基于内容的图像检索（CBIR）","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#11-基于内容的图像检索cbir","p":2546},{"i":2551,"t":"1.2 基于内容的视频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#12-基于内容的视频检索","p":2546},{"i":2553,"t":"1.3 基于内容的音频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#13-基于内容的音频检索","p":2546},{"i":2556,"t":"数媒专业学习","u":"/docs/study","h":"#数媒专业学习","p":2555}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/3",[0,5.101,1,0.201]],["t/5",[0,5.101,1,0.201]],["t/7",[1,0.271]],["t/9",[1,0.271]],["t/11",[1,0.201,2,5.519]],["t/13",[1,0.201,3,5.519]],["t/15",[1,0.201,4,5.519]],["t/17",[1,0.201,5,5.519]],["t/19",[1,0.201,6,5.101]],["t/21",[1,0.271]],["t/22",[1,0.271]],["t/24",[1,0.271]],["t/28",[1,0.271]],["t/30",[1,0.271]],["t/32",[7,5.101,8,3.782]],["t/34",[1,0.271]],["t/36",[1,0.271]],["t/38",[1,0.201,9,5.101]],["t/40",[1,0.247,9,4.055]],["t/42",[1,0.271]],["t/44",[1,0.271]],["t/46",[1,0.271]],["t/48",[1,0.271]],["t/50",[1,0.201,7,5.101]],["t/52",[1,0.271]],["t/54",[1,0.271]],["t/56",[1,0.271]],["t/61",[1,0.271]],["t/63",[1,0.271]],["t/65",[1,0.271]],["t/67",[1,0.271]],["t/72",[1,0.201,10,4.619]],["t/73",[10,6.225]],["t/75",[11,5.101,12,4.619]],["t/77",[1,0.271]],["t/79",[1,0.201,10,4.619]],["t/81",[1,0.201,11,5.101]],["t/83",[1,0.201,10,4.619]],["t/85",[1,0.247,12,3.672]],["t/87",[1,0.247,13,4.387]],["t/88",[1,0.247,14,2.867]],["t/89",[1,0.271]],["t/91",[1,0.271]],["t/93",[1,0.271]],["t/94",[1,0.271]],["t/98",[15,6.502]],["t/100",[16,6.225]],["t/102",[17,6.502]],["t/104",[1,0.271]],["t/108",[18,6.225]],["t/109",[1,0.271]],["t/111",[1,0.271]],["t/113",[18,6.225]],["t/115",[19,5.523]],["t/117",[19,4.098,20,4.619]],["t/121",[1,0.271]],["t/123",[1,0.271]],["t/125",[1,0.271]],["t/129",[1,0.271]],["t/131",[1,0.271]],["t/132",[1,0.271]],["t/134",[1,0.271]],["t/136",[1,0.271]],["t/138",[1,0.201,21,5.519]],["t/139",[1,0.271]],["t/141",[1,0.271]],["t/144",[1,0.271]],["t/146",[1,0.271]],["t/147",[1,0.271]],["t/149",[1,0.271]],["t/151",[1,0.201,22,5.101]],["t/153",[1,0.201,23,5.101]],["t/155",[24,6.874]],["t/157",[1,0.271]],["t/158",[25,6.225]],["t/160",[26,6.874]],["t/162",[1,0.271]],["t/164",[8,5.097]],["t/166",[1,0.271]],["t/168",[1,0.271]],["t/170",[1,0.271]],["t/172",[1,0.271]],["t/174",[1,0.271]],["t/176",[1,0.271]],["t/178",[1,0.271]],["t/180",[27,6.502]],["t/181",[1,0.271]],["t/183",[28,6.502]],["t/185",[1,0.271]],["t/187",[29,6.502]],["t/189",[30,6.502]],["t/191",[1,0.271]],["t/193",[15,6.502]],["t/195",[15,6.502]],["t/197",[16,6.225]],["t/199",[17,6.502]],["t/201",[1,0.271]],["t/203",[19,5.523]],["t/205",[18,6.225]],["t/206",[1,0.271]],["t/208",[1,0.271]],["t/210",[18,6.225]],["t/212",[19,5.523]],["t/214",[19,4.098,20,4.619]],["t/218",[1,0.271]],["t/220",[1,0.271]],["t/222",[27,6.502]],["t/223",[1,0.271]],["t/225",[28,6.502]],["t/227",[1,0.271]],["t/229",[29,6.502]],["t/231",[30,6.502]],["t/233",[1,0.271]],["t/237",[1,0.271]],["t/239",[1,0.271]],["t/240",[1,0.271]],["t/242",[1,0.271]],["t/244",[1,0.271]],["t/246",[1,0.271]],["t/248",[1,0.247,8,3.007]],["t/250",[1,0.271]],["t/252",[1,0.271]],["t/254",[1,0.271]],["t/256",[1,0.247,31,3.836]],["t/258",[1,0.271]],["t/260",[1,0.271]],["t/262",[1,0.271]],["t/263",[1,0.271]],["t/265",[1,0.271]],["t/267",[1,0.271]],["t/271",[32,7.438]],["t/272",[1,0.271]],["t/274",[1,0.271]],["t/276",[1,0.271]],["t/277",[1,0.271]],["t/279",[1,0.271]],["t/283",[1,0.271]],["t/284",[1,0.201,33,5.101]],["t/286",[1,0.271]],["t/288",[1,0.271]],["t/290",[1,0.271]],["t/292",[1,0.271]],["t/294",[1,0.271]],["t/298",[1,0.271]],["t/300",[1,0.271]],["t/302",[1,0.271]],["t/304",[1,0.271]],["t/306",[1,0.271]],["t/308",[1,0.271]],["t/309",[1,0.271]],["t/311",[1,0.271]],["t/315",[1,0.271]],["t/316",[1,0.271]],["t/318",[1,0.271]],["t/320",[1,0.201,22,5.101]],["t/322",[1,0.201,23,5.101]],["t/324",[24,6.874]],["t/326",[1,0.271]],["t/327",[25,6.225]],["t/329",[26,6.874]],["t/333",[1,0.271]],["t/335",[1,0.271]],["t/337",[1,0.16,34,3.185,35,4.055]],["t/339",[1,0.271]],["t/340",[1,0.271]],["t/342",[1,0.271]],["t/344",[1,0.201,8,3.782]],["t/346",[1,0.271]],["t/348",[1,0.271]],["t/350",[1,0.201,36,4.825]],["t/352",[1,0.24,33,2.875,34,2.259]],["t/354",[1,0.271]],["t/356",[1,0.271]],["t/358",[1,0.271]],["t/360",[1,0.271]],["t/362",[1,0.271]],["t/364",[1,0.201,37,5.519]],["t/366",[1,0.213,38,3.641,39,3.641]],["t/368",[1,0.201,36,4.825]],["t/370",[1,0.201,40,5.101]],["t/372",[1,0.271]],["t/374",[1,0.271]],["t/375",[1,0.271]],["t/377",[1,0.16,34,3.185,41,4.055]],["t/379",[1,0.271]],["t/381",[1,0.271]],["t/384",[1,0.271]],["t/387",[1,0.271]],["t/389",[1,0.271]],["t/391",[1,0.271]],["t/393",[1,0.271]],["t/395",[1,0.271]],["t/399",[1,0.271]],["t/401",[1,0.201,42,5.519]],["t/405",[1,0.271]],["t/407",[1,0.201,43,5.519]],["t/409",[1,0.271]],["t/411",[1,0.293]],["t/413",[1,0.201,44,5.519]],["t/415",[1,0.201,45,5.519]],["t/417",[1,0.271]],["t/419",[46,7.438]],["t/421",[1,0.271]],["t/423",[1,0.271]],["t/425",[1,0.201,47,5.519]],["t/428",[1,0.271]],["t/429",[1,0.271]],["t/431",[1,0.271]],["t/433",[1,0.271]],["t/435",[1,0.271]],["t/436",[1,0.271]],["t/438",[1,0.271]],["t/440",[1,0.271]],["t/442",[1,0.271]],["t/444",[1,0.271]],["t/446",[1,0.271]],["t/448",[1,0.271]],["t/450",[1,0.201,48,5.519]],["t/452",[1,0.271]],["t/455",[1,0.271]],["t/456",[1,0.271]],["t/459",[49,5.4]],["t/461",[49,5.4]],["t/463",[49,5.4]],["t/466",[1,0.271]],["t/468",[1,0.271]],["t/470",[1,0.271]],["t/471",[1,0.271]],["t/473",[1,0.271]],["t/475",[1,0.271]],["t/477",[1,0.271]],["t/479",[50,6.874]],["t/482",[1,0.201,51,5.519]],["t/484",[1,0.271]],["t/485",[52,7.438]],["t/487",[53,7.438]],["t/489",[54,7.438]],["t/491",[55,6.874]],["t/493",[56,6.874]],["t/495",[57,6.874]],["t/497",[58,7.438]],["t/499",[1,0.16,59,4.387,60,4.387]],["t/501",[61,7.438]],["t/503",[62,7.438]],["t/505",[63,7.438]],["t/507",[64,7.438]],["t/509",[65,7.438]],["t/511",[66,7.438]],["t/513",[67,7.438]],["t/515",[68,7.438]],["t/517",[69,7.438]],["t/519",[70,7.438]],["t/521",[71,7.438]],["t/523",[72,7.438]],["t/525",[73,7.438]],["t/527",[74,7.438]],["t/529",[75,7.438]],["t/531",[76,7.438]],["t/533",[77,7.438]],["t/537",[50,6.874]],["t/539",[78,7.438]],["t/541",[49,5.4]],["t/543",[49,5.4]],["t/544",[49,4.007,79,5.519]],["t/546",[49,5.4]],["t/548",[49,4.007,80,5.519]],["t/550",[49,5.4]],["t/552",[81,7.438]],["t/553",[82,7.438]],["t/555",[83,7.438]],["t/558",[1,0.271]],["t/560",[1,0.271]],["t/562",[1,0.271]],["t/564",[1,0.271]],["t/566",[1,0.271]],["t/568",[1,0.271]],["t/570",[1,0.271]],["t/572",[1,0.271]],["t/574",[84,7.438]],["t/576",[85,7.438]],["t/578",[86,7.438]],["t/580",[1,0.271]],["t/582",[1,0.271]],["t/584",[1,0.271]],["t/587",[1,0.271]],["t/589",[1,0.271]],["t/591",[1,0.271]],["t/593",[1,0.271]],["t/595",[1,0.271]],["t/597",[1,0.271]],["t/599",[1,0.271]],["t/601",[1,0.271]],["t/603",[1,0.271]],["t/605",[1,0.201,87,5.519]],["t/607",[1,0.271]],["t/609",[1,0.271]],["t/611",[1,0.271]],["t/613",[1,0.271]],["t/615",[1,0.271]],["t/617",[8,3.782,88,5.519]],["t/620",[1,0.201,89,4.825]],["t/622",[1,0.271]],["t/624",[1,0.271]],["t/626",[1,0.271]],["t/628",[8,3.782,89,4.825]],["t/631",[1,0.271]],["t/633",[1,0.271]],["t/635",[1,0.271]],["t/636",[1,0.201,90,5.519]],["t/638",[1,0.271]],["t/640",[1,0.271]],["t/642",[1,0.271]],["t/643",[1,0.271]],["t/645",[1,0.201,91,5.101]],["t/647",[1,0.213,91,3.365,92,3.641]],["t/650",[1,0.271]],["t/651",[1,0.271]],["t/653",[1,0.271]],["t/655",[1,0.271]],["t/657",[1,0.271]],["t/659",[1,0.271]],["t/661",[1,0.271]],["t/662",[1,0.271]],["t/664",[1,0.271]],["t/666",[1,0.271]],["t/668",[1,0.271]],["t/670",[1,0.271]],["t/672",[1,0.271]],["t/674",[1,0.271]],["t/676",[1,0.271]],["t/678",[1,0.271]],["t/680",[1,0.271]],["t/682",[1,0.271]],["t/684",[1,0.271]],["t/686",[1,0.271]],["t/689",[1,0.271]],["t/690",[1,0.271]],["t/692",[1,0.271]],["t/694",[93,7.438]],["t/696",[1,0.271]],["t/697",[1,0.271]],["t/699",[1,0.271]],["t/702",[1,0.271]],["t/704",[1,0.271]],["t/706",[1,0.271]],["t/708",[1,0.271]],["t/710",[1,0.271]],["t/712",[1,0.271]],["t/713",[1,0.271]],["t/715",[1,0.271]],["t/717",[1,0.271]],["t/718",[1,0.271]],["t/720",[1,0.271]],["t/722",[1,0.271]],["t/724",[1,0.271]],["t/726",[1,0.271]],["t/728",[1,0.271]],["t/730",[1,0.271]],["t/732",[1,0.271]],["t/734",[1,0.271]],["t/736",[1,0.271]],["t/738",[1,0.271]],["t/740",[1,0.271]],["t/742",[94,7.438]],["t/743",[1,0.271]],["t/745",[1,0.271]],["t/747",[1,0.271]],["t/749",[1,0.271]],["t/751",[1,0.271]],["t/752",[1,0.271]],["t/754",[1,0.271]],["t/756",[1,0.271]],["t/758",[1,0.271]],["t/761",[1,0.271]],["t/763",[1,0.201,95,4.455]],["t/765",[1,0.201,95,4.455]],["t/767",[1,0.201,95,4.455]],["t/769",[1,0.201,95,4.455]],["t/772",[1,0.271]],["t/774",[1,0.271]],["t/775",[1,0.271]],["t/777",[1,0.201,96,5.519]],["t/779",[1,0.271]],["t/781",[1,0.271]],["t/783",[1,0.247,97,3.541]],["t/785",[1,0.247,97,3.541]],["t/787",[1,0.271]],["t/788",[1,0.271]],["t/790",[1,0.271]],["t/792",[1,0.271]],["t/794",[98,7.438]],["t/797",[1,0.271]],["t/799",[1,0.201,95,4.455]],["t/800",[1,0.271]],["t/802",[1,0.271]],["t/804",[1,0.271]],["t/806",[1,0.271]],["t/807",[1,0.201,99,5.101]],["t/809",[1,0.271]],["t/811",[1,0.271]],["t/814",[1,0.271]],["t/816",[1,0.271]],["t/818",[1,0.271]],["t/820",[1,0.201,100,5.519]],["t/822",[1,0.271]],["t/824",[1,0.271]],["t/826",[1,0.271]],["t/828",[1,0.271]],["t/830",[1,0.271]],["t/832",[1,0.271]],["t/834",[1,0.271]],["t/836",[1,0.271]],["t/838",[1,0.271]],["t/840",[1,0.271]],["t/842",[1,0.271]],["t/844",[1,0.271]],["t/846",[1,0.271]],["t/848",[1,0.271]],["t/850",[1,0.271]],["t/852",[1,0.271]],["t/854",[1,0.271]],["t/856",[1,0.271]],["t/858",[1,0.247,101,3.12]],["t/860",[12,6.225]],["t/862",[102,5.661]],["t/864",[101,5.29]],["t/866",[1,0.271]],["t/868",[1,0.271]],["t/870",[1,0.271]],["t/872",[1,0.271]],["t/876",[1,0.271]],["t/878",[1,0.271]],["t/880",[97,6.003]],["t/882",[1,0.271]],["t/884",[1,0.271]],["t/886",[1,0.271]],["t/889",[1,0.271]],["t/891",[1,0.271]],["t/893",[1,0.271]],["t/894",[103,6.003]],["t/896",[1,0.271]],["t/898",[1,0.271]],["t/899",[1,0.271]],["t/901",[1,0.271]],["t/903",[1,0.247,104,4.387]],["t/905",[1,0.271]],["t/907",[1,0.201,105,5.519]],["t/909",[1,0.201,106,5.519]],["t/911",[1,0.271]],["t/913",[1,0.24,97,2.511,101,2.213]],["t/916",[1,0.201,102,4.201]],["t/918",[1,0.201,102,4.201]],["t/920",[1,0.201,107,5.101]],["t/922",[1,0.271]],["t/924",[1,0.271]],["t/926",[1,0.201,25,4.619]],["t/929",[1,0.16,102,3.339,108,4.387]],["t/933",[1,0.271]],["t/935",[1,0.271]],["t/936",[1,0.271]],["t/938",[1,0.271]],["t/940",[1,0.271]],["t/942",[1,0.271]],["t/943",[1,0.271]],["t/945",[1,0.271]],["t/947",[1,0.271]],["t/949",[1,0.201,16,4.619]],["t/951",[1,0.271]],["t/952",[1,0.271]],["t/954",[1,0.271]],["t/957",[1,0.271]],["t/959",[1,0.271]],["t/961",[1,0.271]],["t/963",[1,0.271]],["t/965",[1,0.271]],["t/967",[1,0.201,109,5.519]],["t/968",[1,0.271]],["t/970",[1,0.271]],["t/972",[1,0.271]],["t/974",[1,0.201,110,5.519]],["t/977",[1,0.247,111,4.387]],["t/979",[1,0.271]],["t/981",[1,0.271]],["t/983",[1,0.271]],["t/985",[1,0.271]],["t/987",[1,0.271]],["t/988",[1,0.271]],["t/990",[1,0.271]],["t/992",[1,0.271]],["t/993",[1,0.271]],["t/995",[1,0.271]],["t/998",[1,0.271]],["t/1000",[1,0.271]],["t/1003",[1,0.271]],["t/1005",[1,0.271]],["t/1007",[1,0.271]],["t/1009",[1,0.271]],["t/1011",[1,0.271]],["t/1014",[1,0.271]],["t/1016",[1,0.271]],["t/1018",[1,0.201,8,3.782]],["t/1019",[112,6.874]],["t/1021",[97,6.003]],["t/1023",[113,7.438]],["t/1025",[1,0.201,8,3.782]],["t/1026",[114,7.438]],["t/1028",[115,7.438]],["t/1030",[116,7.438]],["t/1032",[117,7.438]],["t/1034",[118,7.438]],["t/1036",[119,7.438]],["t/1038",[120,7.438]],["t/1041",[1,0.271]],["t/1043",[1,0.201,121,4.825]],["t/1044",[107,6.874]],["t/1046",[121,6.502]],["t/1048",[1,0.271]],["t/1050",[1,0.271]],["t/1053",[1,0.271]],["t/1055",[1,0.187,121,2.72,122,3.111,123,2.875]],["t/1057",[1,0.271]],["t/1059",[124,7.438]],["t/1061",[1,0.271]],["t/1065",[1,0.271]],["t/1067",[1,0.271]],["t/1069",[1,0.271]],["t/1073",[34,4.007,125,5.519]],["t/1075",[34,4.007,35,5.101]],["t/1077",[1,0.271]],["t/1079",[1,0.201,41,5.101]],["t/1081",[1,0.271]],["t/1083",[1,0.271]],["t/1085",[1,0.271]],["t/1087",[1,0.201,126,5.519]],["t/1091",[1,0.271]],["t/1093",[1,0.271]],["t/1095",[1,0.271]],["t/1098",[1,0.271]],["t/1100",[1,0.271]],["t/1102",[1,0.271]],["t/1103",[102,4.201,127,5.519]],["t/1105",[128,7.438]],["t/1107",[1,0.271]],["t/1110",[1,0.271]],["t/1112",[1,0.271]],["t/1114",[1,0.271]],["t/1117",[1,0.271]],["t/1119",[129,5.519,130,4.825]],["t/1121",[1,0.271]],["t/1123",[34,4.007,130,4.825]],["t/1125",[131,7.438]],["t/1127",[132,7.438]],["t/1129",[1,0.271]],["t/1131",[1,0.271]],["t/1134",[133,7.438]],["t/1136",[25,6.225]],["t/1138",[1,0.271]],["t/1141",[1,0.271]],["t/1143",[1,0.271]],["t/1145",[1,0.271]],["t/1147",[1,0.271]],["t/1149",[1,0.271]],["t/1151",[1,0.271]],["t/1153",[1,0.271]],["t/1155",[1,0.271]],["t/1157",[1,0.271]],["t/1159",[1,0.271]],["t/1162",[1,0.271]],["t/1164",[1,0.271]],["t/1166",[27,6.502]],["t/1167",[1,0.271]],["t/1169",[28,6.502]],["t/1171",[1,0.271]],["t/1173",[29,6.502]],["t/1175",[30,6.502]],["t/1177",[1,0.271]],["t/1180",[1,0.271]],["t/1181",[1,0.271]],["t/1183",[1,0.271]],["t/1185",[34,5.4]],["t/1187",[34,4.007,130,4.825]],["t/1189",[1,0.271]],["t/1191",[1,0.271]],["t/1193",[1,0.271]],["t/1195",[1,0.271]],["t/1197",[1,0.271]],["t/1199",[1,0.271]],["t/1201",[1,0.271]],["t/1203",[134,6.874]],["t/1205",[1,0.271]],["t/1207",[1,0.271]],["t/1210",[1,0.271]],["t/1212",[34,4.007,135,5.519]],["t/1213",[136,7.438]],["t/1215",[1,0.271]],["t/1217",[1,0.271]],["t/1219",[1,0.271]],["t/1222",[1,0.271]],["t/1224",[1,0.247,14,2.867]],["t/1226",[1,0.271]],["t/1228",[1,0.271]],["t/1230",[1,0.271]],["t/1232",[1,0.271]],["t/1234",[1,0.247,14,2.867]],["t/1236",[1,0.271]],["t/1238",[1,0.271]],["t/1240",[1,0.271]],["t/1243",[14,4.86]],["t/1245",[1,0.271]],["t/1247",[14,2.867,99,4.055,137,4.387]],["t/1250",[14,4.86]],["t/1252",[1,0.271]],["t/1254",[1,0.201,138,5.519]],["t/1256",[1,0.201,139,5.519]],["t/1258",[1,0.201,140,5.519]],["t/1260",[1,0.247,141,4.387]],["t/1262",[1,0.271]],["t/1266",[1,0.201,14,3.606]],["t/1268",[1,0.201,142,4.455]],["t/1270",[1,0.217,14,1.775,17,2.375,142,2.192]],["t/1272",[1,0.213,8,2.495,143,3.641]],["t/1274",[1,0.217,14,1.775,142,2.192,144,2.51]],["t/1276",[1,0.213,142,2.939,145,2.643]],["t/1278",[1,0.217,142,2.192,145,1.972,146,2.51]],["t/1280",[1,0.213,14,2.379,147,3.365]],["t/1282",[1,0.256,14,1.775,148,2.51]],["t/1284",[1,0.267,149,3.641]],["t/1286",[1,0.24,14,2.033,145,2.259]],["t/1288",[1,0.213,145,2.643,150,3.641]],["t/1290",[1,0.201,151,5.519]],["t/1292",[1,0.201,152,5.519]],["t/1294",[1,0.201,14,3.606]],["t/1296",[1,0.24,14,2.033,16,2.604]],["t/1298",[1,0.201,14,3.606]],["t/1300",[1,0.213,8,2.495,153,3.641]],["t/1303",[1,0.271]],["t/1305",[1,0.271]],["t/1307",[1,0.271]],["t/1309",[1,0.271]],["t/1311",[1,0.271]],["t/1314",[1,0.271]],["t/1316",[1,0.271]],["t/1318",[154,7.438]],["t/1320",[1,0.271]],["t/1322",[155,7.438]],["t/1324",[156,7.438]],["t/1326",[1,0.271]],["t/1328",[1,0.271]],["t/1331",[1,0.271]],["t/1333",[6,6.874]],["t/1335",[157,7.438]],["t/1337",[1,0.271]],["t/1339",[1,0.271]],["t/1341",[1,0.271]],["t/1343",[1,0.271]],["t/1345",[1,0.271]],["t/1348",[158,7.438]],["t/1350",[159,7.438]],["t/1352",[160,7.438]],["t/1355",[1,0.271]],["t/1357",[19,4.098,20,4.619]],["t/1359",[1,0.271]],["t/1361",[1,0.271]],["t/1363",[1,0.271]],["t/1365",[1,0.271]],["t/1367",[1,0.271]],["t/1371",[1,0.16,101,3.12,161,4.387]],["t/1372",[1,0.271]],["t/1374",[1,0.271]],["t/1376",[1,0.271]],["t/1378",[1,0.271]],["t/1379",[1,0.271]],["t/1381",[1,0.271]],["t/1383",[1,0.271]],["t/1385",[1,0.271]],["t/1388",[1,0.271]],["t/1390",[1,0.271]],["t/1392",[1,0.271]],["t/1394",[1,0.271]],["t/1396",[1,0.271]],["t/1398",[1,0.271]],["t/1401",[1,0.247,19,3.258]],["t/1403",[1,0.271]],["t/1405",[1,0.271]],["t/1409",[1,0.271]],["t/1411",[1,0.271]],["t/1413",[1,0.247,162,3.836]],["t/1415",[1,0.247,162,3.836]],["t/1417",[1,0.201,163,5.519]],["t/1419",[1,0.271]],["t/1423",[1,0.247,164,2.867]],["t/1425",[1,0.247,164,2.867]],["t/1427",[1,0.271]],["t/1429",[1,0.271]],["t/1430",[1,0.271]],["t/1432",[1,0.271]],["t/1434",[1,0.271]],["t/1436",[1,0.271]],["t/1438",[1,0.247,164,2.867]],["t/1440",[1,0.213,164,2.379,165,3.365]],["t/1442",[1,0.213,164,3.819]],["t/1444",[1,0.201,164,3.606]],["t/1447",[1,0.16,19,3.258,20,3.672]],["t/1448",[1,0.271]],["t/1450",[1,0.271]],["t/1452",[1,0.271]],["t/1454",[1,0.271]],["t/1455",[1,0.271]],["t/1457",[1,0.271]],["t/1459",[1,0.271]],["t/1463",[164,4.86]],["t/1465",[1,0.24,164,2.033,165,2.875]],["t/1467",[164,4.86]],["t/1469",[164,4.86]],["t/1471",[1,0.247,36,3.836]],["t/1473",[164,3.606,166,5.101]],["t/1475",[162,3.183,164,3.819,166,3.365]],["t/1477",[1,0.213,164,3.819]],["t/1480",[1,0.271]],["t/1482",[1,0.201,101,3.925]],["t/1484",[1,0.271]],["t/1486",[1,0.247,145,3.185]],["t/1488",[1,0.271]],["t/1490",[1,0.271]],["t/1492",[1,0.271]],["t/1494",[1,0.271]],["t/1496",[1,0.271]],["t/1498",[1,0.271]],["t/1500",[1,0.271]],["t/1502",[1,0.16,164,2.867,167,4.387]],["t/1504",[1,0.201,164,3.606]],["t/1509",[1,0.271]],["t/1510",[1,0.271]],["t/1513",[1,0.271]],["t/1514",[1,0.271]],["t/1516",[1,0.271]],["t/1517",[1,0.201,168,5.519]],["t/1519",[169,5.519,170,5.519]],["t/1521",[1,0.201,171,5.519]],["t/1525",[1,0.271]],["t/1527",[1,0.271]],["t/1529",[1,0.271]],["t/1531",[1,0.271]],["t/1534",[1,0.201,101,3.925]],["t/1536",[1,0.201,101,3.925]],["t/1538",[1,0.271]],["t/1540",[1,0.271]],["t/1542",[1,0.271]],["t/1544",[1,0.271]],["t/1546",[101,5.29]],["t/1550",[1,0.271]],["t/1552",[1,0.271]],["t/1554",[1,0.271]],["t/1556",[1,0.271]],["t/1558",[1,0.271]],["t/1560",[1,0.271]],["t/1562",[1,0.213,12,3.047,102,2.771]],["t/1564",[1,0.271]],["t/1567",[1,0.271]],["t/1569",[112,6.874]],["t/1571",[1,0.271]],["t/1574",[1,0.271]],["t/1575",[1,0.271]],["t/1577",[1,0.271]],["t/1579",[1,0.271]],["t/1581",[1,0.271]],["t/1583",[1,0.271]],["t/1584",[1,0.201,172,5.101]],["t/1586",[1,0.201,172,5.101]],["t/1588",[1,0.271]],["t/1589",[1,0.201,173,5.519]],["t/1591",[1,0.201,174,5.519]],["t/1594",[1,0.271]],["t/1595",[175,7.438]],["t/1597",[176,7.438]],["t/1599",[1,0.271]],["t/1601",[1,0.271]],["t/1602",[1,0.271]],["t/1604",[1,0.271]],["t/1606",[1,0.271]],["t/1608",[1,0.271]],["t/1610",[1,0.271]],["t/1612",[1,0.271]],["t/1614",[1,0.271]],["t/1615",[1,0.271]],["t/1617",[1,0.271]],["t/1620",[1,0.271]],["t/1621",[177,7.438]],["t/1623",[]],["t/1625",[]],["t/1627",[178,7.438]],["t/1629",[1,0.271]],["t/1631",[1,0.271]],["t/1633",[1,0.16,179,3.836,180,3.836]],["t/1635",[181,7.438]],["t/1637",[182,7.438]],["t/1639",[1,0.271]],["t/1641",[89,6.502]],["t/1643",[183,7.438]],["t/1645",[184,7.438]],["t/1648",[1,0.271]],["t/1650",[1,0.201,102,4.201]],["t/1652",[1,0.271]],["t/1654",[1,0.271]],["t/1656",[1,0.271]],["t/1658",[1,0.271]],["t/1660",[1,0.271]],["t/1663",[185,7.438]],["t/1664",[1,0.271]],["t/1666",[1,0.271]],["t/1670",[1,0.271]],["t/1672",[186,7.438]],["t/1674",[187,7.438]],["t/1676",[188,7.438]],["t/1678",[189,7.438]],["t/1681",[1,0.271]],["t/1682",[1,0.271]],["t/1684",[1,0.271]],["t/1686",[1,0.271]],["t/1688",[1,0.271]],["t/1690",[1,0.271]],["t/1692",[1,0.271]],["t/1694",[1,0.271]],["t/1696",[1,0.271]],["t/1698",[1,0.201,190,5.519]],["t/1700",[179,6.502]],["t/1702",[1,0.271]],["t/1704",[180,6.502]],["t/1706",[1,0.213,179,3.183,180,3.183]],["t/1708",[1,0.271]],["t/1710",[1,0.271]],["t/1712",[1,0.271]],["t/1714",[1,0.293]],["t/1717",[1,0.271]],["t/1719",[1,0.201,191,5.519]],["t/1721",[192,7.438]],["t/1723",[1,0.271]],["t/1724",[55,6.874]],["t/1726",[193,7.438]],["t/1728",[194,7.438]],["t/1730",[195,7.438]],["t/1732",[56,6.874]],["t/1734",[57,6.874]],["t/1736",[196,7.438]],["t/1738",[1,0.16,197,4.387,198,4.387]],["t/1740",[1,0.271]],["t/1742",[1,0.271]],["t/1744",[1,0.271]],["t/1746",[1,0.271]],["t/1748",[1,0.271]],["t/1750",[1,0.271]],["t/1752",[1,0.271]],["t/1753",[199,7.438]],["t/1755",[1,0.271]],["t/1757",[1,0.271]],["t/1759",[1,0.271]],["t/1761",[1,0.271]],["t/1763",[1,0.271]],["t/1764",[1,0.201,200,5.519]],["t/1766",[1,0.201,134,5.101]],["t/1768",[1,0.271]],["t/1770",[1,0.271]],["t/1772",[1,0.271]],["t/1774",[1,0.271]],["t/1776",[1,0.271]],["t/1778",[1,0.271]],["t/1780",[1,0.271]],["t/1782",[1,0.271]],["t/1783",[1,0.271]],["t/1785",[1,0.271]],["t/1787",[1,0.271]],["t/1789",[1,0.271]],["t/1791",[1,0.271]],["t/1793",[1,0.271]],["t/1795",[1,0.271]],["t/1796",[201,7.438]],["t/1798",[202,7.438]],["t/1800",[203,7.438]],["t/1802",[204,7.438]],["t/1804",[205,7.438]],["t/1806",[206,7.438]],["t/1808",[207,7.438]],["t/1810",[208,7.438]],["t/1812",[209,7.438]],["t/1815",[101,5.29]],["t/1817",[1,0.247,101,3.12]],["t/1820",[1,0.201,145,4.007]],["t/1822",[1,0.201,145,4.007]],["t/1824",[1,0.201,8,3.782]],["t/1826",[1,0.201,8,3.782]],["t/1828",[1,0.201,145,4.007]],["t/1832",[1,0.271]],["t/1834",[1,0.271]],["t/1835",[1,0.271]],["t/1837",[1,0.271]],["t/1839",[1,0.271]],["t/1841",[1,0.271]],["t/1843",[1,0.271]],["t/1845",[1,0.271]],["t/1847",[1,0.271]],["t/1849",[1,0.271]],["t/1851",[1,0.271]],["t/1853",[1,0.271]],["t/1856",[1,0.271]],["t/1857",[1,0.271]],["t/1859",[1,0.271]],["t/1861",[1,0.271]],["t/1862",[1,0.271]],["t/1864",[1,0.271]],["t/1866",[1,0.271]],["t/1867",[1,0.271]],["t/1869",[1,0.271]],["t/1871",[1,0.271]],["t/1873",[1,0.271]],["t/1875",[1,0.271]],["t/1877",[1,0.271]],["t/1879",[1,0.271]],["t/1882",[1,0.271]],["t/1884",[1,0.271]],["t/1886",[210,7.438]],["t/1887",[1,0.271]],["t/1889",[1,0.271]],["t/1891",[1,0.271]],["t/1893",[1,0.271]],["t/1895",[1,0.271]],["t/1897",[1,0.271]],["t/1899",[1,0.271]],["t/1902",[1,0.271]],["t/1904",[1,0.271]],["t/1906",[1,0.271]],["t/1908",[1,0.271]],["t/1910",[1,0.271]],["t/1912",[1,0.271]],["t/1914",[1,0.271]],["t/1917",[1,0.271]],["t/1919",[1,0.271]],["t/1921",[1,0.271]],["t/1923",[1,0.271]],["t/1925",[1,0.271]],["t/1927",[1,0.271]],["t/1930",[1,0.271]],["t/1932",[211,7.438]],["t/1934",[1,0.271]],["t/1937",[1,0.271]],["t/1939",[1,0.271]],["t/1941",[212,7.438]],["t/1943",[1,0.271]],["t/1945",[1,0.271]],["t/1947",[1,0.271]],["t/1949",[1,0.271]],["t/1951",[40,6.874]],["t/1952",[213,5.519,214,5.519]],["t/1953",[1,0.271]],["t/1955",[1,0.271]],["t/1957",[215,6.874]],["t/1959",[216,6.874]],["t/1963",[1,0.271]],["t/1965",[1,0.271]],["t/1968",[1,0.271]],["t/1969",[217,6.874]],["t/1971",[218,7.438]],["t/1973",[219,7.438]],["t/1975",[220,7.438]],["t/1977",[1,0.271]],["t/1978",[1,0.201,221,5.519]],["t/1980",[1,0.271]],["t/1984",[31,6.502]],["t/1986",[31,6.502]],["t/1988",[1,0.201,217,5.101]],["t/1990",[222,7.438]],["t/1992",[1,0.201,223,5.519]],["t/1994",[215,6.874]],["t/1996",[1,0.271]],["t/1998",[1,0.271]],["t/2000",[1,0.271]],["t/2002",[1,0.271]],["t/2004",[216,6.874]],["t/2006",[145,5.4]],["t/2009",[224,5.519,225,5.519]],["t/2011",[1,0.271]],["t/2013",[1,0.271]],["t/2015",[1,0.271]],["t/2017",[226,7.438]],["t/2019",[227,7.438]],["t/2021",[228,7.438]],["t/2025",[1,0.271]],["t/2027",[1,0.271]],["t/2028",[1,0.247,229,4.387]],["t/2030",[1,0.201,230,5.519]],["t/2032",[1,0.271]],["t/2034",[1,0.271]],["t/2036",[1,0.271]],["t/2038",[1,0.271]],["t/2040",[231,6.502]],["t/2042",[232,6.225]],["t/2044",[233,6.502]],["t/2046",[233,6.502]],["t/2048",[233,6.502]],["t/2050",[234,7.438]],["t/2052",[1,0.201,235,5.519]],["t/2054",[236,5.519,237,5.519]],["t/2056",[238,7.438]],["t/2058",[1,0.271]],["t/2061",[1,0.271]],["t/2063",[239,6.225]],["t/2065",[1,0.271]],["t/2067",[239,6.225]],["t/2069",[239,6.225]],["t/2071",[239,6.225]],["t/2074",[1,0.271]],["t/2076",[1,0.271]],["t/2078",[1,0.271]],["t/2080",[1,0.271]],["t/2081",[1,0.271]],["t/2083",[1,0.271]],["t/2085",[1,0.271]],["t/2087",[1,0.201,240,5.519]],["t/2089",[1,0.271]],["t/2091",[1,0.271]],["t/2094",[241,3.641,242,3.641,243,3.047,244,3.047]],["t/2095",[123,3.365,243,3.047,244,3.047,245,3.641]],["t/2096",[243,3.047,244,3.047,246,3.641,247,3.641]],["t/2097",[243,3.047,244,3.047,248,3.641,249,3.641]],["t/2098",[1,0.271]],["t/2100",[1,0.271]],["t/2101",[1,0.201,250,4.201]],["t/2103",[1,0.201,251,4.201]],["t/2105",[1,0.201,252,4.318]],["t/2107",[1,0.271]],["t/2108",[1,0.201,253,4.825]],["t/2110",[1,0.201,254,4.825]],["t/2112",[1,0.201,255,5.101]],["t/2114",[1,0.271]],["t/2116",[1,0.201,256,4.455]],["t/2118",[1,0.201,257,4.455]],["t/2120",[1,0.201,258,4.825]],["t/2122",[1,0.271]],["t/2124",[259,4.825,260,5.519]],["t/2126",[1,0.201,261,5.101]],["t/2128",[1,0.201,262,5.519]],["t/2130",[263,7.438]],["t/2132",[1,0.201,264,5.101]],["t/2134",[265,4.387,266,4.387,267,4.387]],["t/2135",[268,5.101,269,5.519]],["t/2140",[1,0.271]],["t/2142",[1,0.271]],["t/2143",[270,5.519,271,5.519]],["t/2145",[272,7.438]],["t/2147",[273,7.438]],["t/2149",[144,6.874]],["t/2151",[146,6.874]],["t/2153",[147,6.874]],["t/2155",[148,6.874]],["t/2158",[1,0.271]],["t/2160",[1,0.201,250,4.201]],["t/2161",[1,0.201,251,4.201]],["t/2163",[1,0.201,252,4.318]],["t/2165",[103,6.003]],["t/2166",[103,4.455,253,4.825]],["t/2168",[254,4.825,274,5.519]],["t/2170",[103,4.455,255,5.101]],["t/2172",[103,4.455,275,5.519]],["t/2174",[1,0.201,276,5.519]],["t/2176",[1,0.201,277,5.519]],["t/2178",[1,0.201,278,5.519]],["t/2180",[279,5.519,280,5.519]],["t/2182",[281,5.519,282,5.519]],["t/2184",[1,0.201,283,5.101]],["t/2185",[1,0.201,256,4.455]],["t/2187",[257,4.455,283,5.101]],["t/2189",[284,6.502]],["t/2190",[259,4.825,284,4.825]],["t/2192",[261,5.101,284,4.825]],["t/2194",[285,6.874]],["t/2196",[285,6.874]],["t/2198",[286,6.874]],["t/2199",[286,5.101,287,5.101]],["t/2201",[1,0.271]],["t/2203",[1,0.201,288,5.101]],["t/2205",[1,0.201,289,5.101]],["t/2207",[1,0.201,290,5.101]],["t/2209",[1,0.201,291,5.101]],["t/2211",[1,0.271]],["t/2213",[1,0.201,292,5.519]],["t/2215",[1,0.201,293,5.519]],["t/2217",[294,5.519,295,5.519]],["t/2219",[296,5.519,297,5.519]],["t/2221",[298,5.519,299,5.519]],["t/2223",[1,0.201,300,5.519]],["t/2226",[1,0.271]],["t/2229",[1,0.271]],["t/2231",[1,0.271]],["t/2233",[1,0.271]],["t/2235",[301,7.438]],["t/2239",[1,0.293]],["t/2241",[1,0.271]],["t/2243",[1,0.271]],["t/2245",[1,0.271]],["t/2246",[231,4.825,256,4.455]],["t/2248",[232,4.619,257,4.455]],["t/2249",[232,4.619,302,5.519]],["t/2251",[232,4.619,303,5.519]],["t/2253",[1,0.271]],["t/2255",[231,4.825,259,4.825]],["t/2257",[304,7.438]],["t/2259",[1,0.271]],["t/2262",[305,7.438]],["t/2264",[306,7.438]],["t/2266",[307,7.438]],["t/2268",[308,7.438]],["t/2270",[309,7.438]],["t/2272",[310,7.438]],["t/2274",[1,0.271]],["t/2276",[311,4.387,312,4.387,313,4.055]],["t/2278",[313,3.365,314,3.641,315,3.641,316,3.641]],["t/2280",[317,5.519,318,5.519]],["t/2282",[319,7.438]],["t/2285",[320,7.438]],["t/2286",[1,0.271]],["t/2288",[1,0.201,321,5.519]],["t/2290",[322,7.438]],["t/2292",[323,7.438]],["t/2295",[1,0.271]],["t/2296",[1,0.271]],["t/2298",[1,0.271]],["t/2300",[1,0.271]],["t/2302",[1,0.271]],["t/2304",[1,0.271]],["t/2306",[1,0.271]],["t/2307",[1,0.271]],["t/2309",[1,0.271]],["t/2311",[1,0.271]],["t/2312",[1,0.271]],["t/2314",[1,0.271]],["t/2316",[1,0.271]],["t/2318",[1,0.271]],["t/2321",[1,0.271]],["t/2323",[1,0.271]],["t/2325",[1,0.271]],["t/2327",[1,0.271]],["t/2329",[1,0.271]],["t/2331",[1,0.271]],["t/2333",[1,0.271]],["t/2335",[1,0.271]],["t/2336",[1,0.271]],["t/2337",[1,0.271]],["t/2338",[1,0.271]],["t/2340",[1,0.271]],["t/2342",[1,0.271]],["t/2343",[1,0.271]],["t/2345",[1,0.271]],["t/2346",[1,0.271]],["t/2347",[1,0.271]],["t/2348",[1,0.301]],["t/2349",[1,0.271]],["t/2350",[1,0.271]],["t/2352",[1,0.271]],["t/2353",[1,0.271]],["t/2354",[1,0.271]],["t/2356",[1,0.271]],["t/2358",[1,0.271]],["t/2360",[1,0.271]],["t/2362",[1,0.271]],["t/2364",[1,0.271]],["t/2366",[1,0.271]],["t/2368",[1,0.271]],["t/2370",[1,0.271]],["t/2372",[1,0.271]],["t/2375",[1,0.271]],["t/2377",[1,0.271]],["t/2379",[1,0.271]],["t/2381",[1,0.271]],["t/2383",[1,0.271]],["t/2385",[1,0.271]],["t/2386",[1,0.271]],["t/2388",[1,0.271]],["t/2390",[1,0.271]],["t/2392",[1,0.271]],["t/2394",[1,0.271]],["t/2396",[1,0.271]],["t/2398",[1,0.271]],["t/2400",[1,0.271]],["t/2402",[1,0.271]],["t/2404",[1,0.271]],["t/2406",[1,0.271]],["t/2408",[1,0.271]],["t/2410",[1,0.271]],["t/2411",[1,0.271]],["t/2413",[1,0.271]],["t/2414",[1,0.271]],["t/2415",[1,0.271]],["t/2417",[324,7.438]],["t/2419",[325,7.438]],["t/2421",[326,7.438]],["t/2423",[327,6.874]],["t/2425",[328,7.438]],["t/2427",[329,7.438]],["t/2428",[330,7.438]],["t/2430",[1,0.271]],["t/2431",[1,0.271]],["t/2433",[1,0.271]],["t/2435",[327,6.874]],["t/2436",[1,0.271]],["t/2438",[1,0.293]],["t/2440",[1,0.271]],["t/2442",[1,0.271]],["t/2444",[1,0.271]],["t/2446",[1,0.271]],["t/2447",[1,0.271]],["t/2449",[1,0.271]],["t/2451",[1,0.271]],["t/2453",[331,7.438]],["t/2456",[1,0.271]],["t/2457",[1,0.201,250,4.201]],["t/2459",[1,0.201,251,4.201]],["t/2461",[1,0.271]],["t/2463",[1,0.271]],["t/2464",[1,0.201,256,4.455]],["t/2466",[1,0.201,257,4.455]],["t/2468",[1,0.201,258,4.825]],["t/2470",[1,0.201,332,5.101]],["t/2472",[1,0.271]],["t/2474",[1,0.271]],["t/2475",[1,0.201,264,5.101]],["t/2477",[1,0.201,268,5.101]],["t/2479",[1,0.271]],["t/2481",[1,0.201,287,5.101]],["t/2483",[1,0.201,333,5.519]],["t/2485",[1,0.201,334,5.519]],["t/2487",[1,0.201,335,5.519]],["t/2489",[1,0.201,336,5.519]],["t/2491",[1,0.201,337,5.519]],["t/2493",[1,0.271]],["t/2494",[1,0.201,288,5.101]],["t/2496",[1,0.201,289,5.101]],["t/2498",[1,0.201,290,5.101]],["t/2500",[1,0.201,291,5.101]],["t/2502",[1,0.271]],["t/2505",[1,0.271]],["t/2506",[1,0.201,250,4.201]],["t/2508",[1,0.201,251,4.201]],["t/2510",[1,0.201,252,4.318]],["t/2512",[1,0.271]],["t/2513",[1,0.201,253,4.825]],["t/2515",[1,0.201,254,4.825]],["t/2517",[1,0.271]],["t/2518",[1,0.201,256,4.455]],["t/2520",[1,0.201,257,4.455]],["t/2522",[1,0.201,258,4.825]],["t/2524",[1,0.201,332,5.101]],["t/2526",[1,0.271]],["t/2529",[1,0.271]],["t/2531",[250,4.201,338,4.825]],["t/2533",[1,0.201,251,4.201]],["t/2535",[1,0.201,252,4.318]],["t/2538",[1,0.271]],["t/2540",[250,4.201,338,4.825]],["t/2542",[1,0.201,251,4.201]],["t/2544",[1,0.201,252,4.318]],["t/2547",[1,0.271]],["t/2549",[250,4.201,338,4.825]],["t/2551",[1,0.201,251,4.201]],["t/2553",[1,0.201,252,4.318]],["t/2556",[1,0.271]]],"invertedIndex":[["",{"_index":1,"t":{"3":{"position":[[9,2]]},"5":{"position":[[0,2]]},"7":{"position":[[0,4]]},"9":{"position":[[0,4]]},"11":{"position":[[0,3]]},"13":{"position":[[0,2]]},"15":{"position":[[0,2]]},"17":{"position":[[0,2]]},"19":{"position":[[0,3]]},"21":{"position":[[0,11]]},"22":{"position":[[0,4]]},"24":{"position":[[0,4]]},"28":{"position":[[0,2]]},"30":{"position":[[0,4]]},"34":{"position":[[0,4]]},"36":{"position":[[0,8]]},"38":{"position":[[8,3]]},"40":{"position":[[0,2],[11,2]]},"42":{"position":[[0,4]]},"44":{"position":[[0,5]]},"46":{"position":[[0,5]]},"48":{"position":[[0,5]]},"50":{"position":[[6,4]]},"52":{"position":[[0,4]]},"54":{"position":[[0,2]]},"56":{"position":[[0,5]]},"61":{"position":[[0,2]]},"63":{"position":[[0,11]]},"65":{"position":[[0,4]]},"67":{"position":[[0,2]]},"72":{"position":[[0,2]]},"77":{"position":[[0,4]]},"79":{"position":[[0,2]]},"81":{"position":[[0,2]]},"83":{"position":[[0,2]]},"85":{"position":[[0,2],[7,2]]},"87":{"position":[[0,1],[10,3]]},"88":{"position":[[0,1],[8,3]]},"89":{"position":[[0,4]]},"91":{"position":[[0,4]]},"93":{"position":[[0,4]]},"94":{"position":[[0,4]]},"104":{"position":[[0,4]]},"109":{"position":[[0,3]]},"111":{"position":[[0,6]]},"121":{"position":[[0,2]]},"123":{"position":[[0,2]]},"125":{"position":[[0,2]]},"129":{"position":[[0,2]]},"131":{"position":[[0,6]]},"132":{"position":[[0,2]]},"134":{"position":[[0,5]]},"136":{"position":[[0,4]]},"138":{"position":[[8,2]]},"139":{"position":[[0,2]]},"141":{"position":[[0,5]]},"144":{"position":[[0,8]]},"146":{"position":[[0,2]]},"147":{"position":[[0,5]]},"149":{"position":[[0,6]]},"151":{"position":[[8,6]]},"153":{"position":[[8,4]]},"157":{"position":[[0,7]]},"162":{"position":[[0,5]]},"166":{"position":[[0,2]]},"168":{"position":[[0,11]]},"170":{"position":[[0,4]]},"172":{"position":[[0,2]]},"174":{"position":[[0,7]]},"176":{"position":[[0,2]]},"178":{"position":[[0,9]]},"181":{"position":[[0,2]]},"185":{"position":[[0,8]]},"191":{"position":[[0,12]]},"201":{"position":[[0,4]]},"206":{"position":[[0,3]]},"208":{"position":[[0,6]]},"218":{"position":[[0,2]]},"220":{"position":[[0,9]]},"223":{"position":[[0,2]]},"227":{"position":[[0,8]]},"233":{"position":[[0,12]]},"237":{"position":[[0,2]]},"239":{"position":[[0,6]]},"240":{"position":[[0,4]]},"242":{"position":[[0,4]]},"244":{"position":[[0,4]]},"246":{"position":[[0,4]]},"248":{"position":[[0,2],[7,2]]},"250":{"position":[[0,6]]},"252":{"position":[[0,7]]},"254":{"position":[[0,14]]},"256":{"position":[[0,2],[8,5]]},"258":{"position":[[0,6]]},"260":{"position":[[0,4]]},"262":{"position":[[0,4]]},"263":{"position":[[0,2]]},"265":{"position":[[0,4]]},"267":{"position":[[0,3]]},"272":{"position":[[0,4]]},"274":{"position":[[0,4]]},"276":{"position":[[0,4]]},"277":{"position":[[0,4]]},"279":{"position":[[0,4]]},"283":{"position":[[0,4]]},"284":{"position":[[5,2]]},"286":{"position":[[0,6]]},"288":{"position":[[0,8]]},"290":{"position":[[0,4]]},"292":{"position":[[0,11]]},"294":{"position":[[0,7]]},"298":{"position":[[0,8]]},"300":{"position":[[0,4]]},"302":{"position":[[0,6]]},"304":{"position":[[0,7]]},"306":{"position":[[0,8]]},"308":{"position":[[0,4]]},"309":{"position":[[0,4]]},"311":{"position":[[0,14]]},"315":{"position":[[0,2]]},"316":{"position":[[0,5]]},"318":{"position":[[0,6]]},"320":{"position":[[8,6]]},"322":{"position":[[8,4]]},"326":{"position":[[0,7]]},"333":{"position":[[0,2]]},"335":{"position":[[0,8]]},"337":{"position":[[15,2]]},"339":{"position":[[0,7]]},"340":{"position":[[0,2]]},"342":{"position":[[0,4]]},"344":{"position":[[0,6]]},"346":{"position":[[0,2]]},"348":{"position":[[0,4]]},"350":{"position":[[0,2]]},"352":{"position":[[0,1],[9,1],[16,3]]},"354":{"position":[[0,9]]},"356":{"position":[[0,4]]},"358":{"position":[[0,8]]},"360":{"position":[[0,8]]},"362":{"position":[[0,8]]},"364":{"position":[[0,2]]},"366":{"position":[[0,2],[10,1]]},"368":{"position":[[0,9]]},"370":{"position":[[0,4]]},"372":{"position":[[0,4]]},"374":{"position":[[0,7]]},"375":{"position":[[0,2]]},"377":{"position":[[0,2]]},"379":{"position":[[0,7]]},"381":{"position":[[0,2]]},"384":{"position":[[0,13]]},"387":{"position":[[0,5]]},"389":{"position":[[0,5]]},"391":{"position":[[0,4]]},"393":{"position":[[0,5]]},"395":{"position":[[0,5]]},"399":{"position":[[0,4]]},"401":{"position":[[10,2]]},"405":{"position":[[6,2]]},"407":{"position":[[9,2]]},"409":{"position":[[4,2]]},"411":{"position":[[0,2],[7,2]]},"413":{"position":[[6,3]]},"415":{"position":[[9,3]]},"417":{"position":[[3,4]]},"421":{"position":[[0,4]]},"423":{"position":[[0,2]]},"425":{"position":[[7,4]]},"428":{"position":[[0,9]]},"429":{"position":[[0,4]]},"431":{"position":[[0,4]]},"433":{"position":[[0,9]]},"435":{"position":[[0,4]]},"436":{"position":[[0,6]]},"438":{"position":[[0,4]]},"440":{"position":[[0,8]]},"442":{"position":[[0,4]]},"444":{"position":[[0,4]]},"446":{"position":[[5,3]]},"448":{"position":[[0,4]]},"450":{"position":[[7,3]]},"452":{"position":[[0,5]]},"455":{"position":[[0,2]]},"456":{"position":[[0,5]]},"466":{"position":[[0,2]]},"468":{"position":[[0,3]]},"470":{"position":[[0,4]]},"471":{"position":[[0,4]]},"473":{"position":[[0,4]]},"475":{"position":[[0,7]]},"477":{"position":[[0,11]]},"482":{"position":[[5,1]]},"484":{"position":[[0,2]]},"499":{"position":[[5,1]]},"558":{"position":[[0,2]]},"560":{"position":[[0,3]]},"562":{"position":[[0,2]]},"564":{"position":[[0,4]]},"566":{"position":[[0,8]]},"568":{"position":[[0,4]]},"570":{"position":[[0,6]]},"572":{"position":[[0,5]]},"580":{"position":[[0,2]]},"582":{"position":[[0,2]]},"584":{"position":[[0,2]]},"587":{"position":[[0,6]]},"589":{"position":[[0,4]]},"591":{"position":[[0,4]]},"593":{"position":[[0,4]]},"595":{"position":[[0,5]]},"597":{"position":[[0,2]]},"599":{"position":[[0,5]]},"601":{"position":[[0,4]]},"603":{"position":[[0,4]]},"605":{"position":[[9,2]]},"607":{"position":[[0,10]]},"609":{"position":[[0,11]]},"611":{"position":[[0,4]]},"613":{"position":[[0,7]]},"615":{"position":[[0,7]]},"620":{"position":[[0,2]]},"622":{"position":[[0,5]]},"624":{"position":[[0,5]]},"626":{"position":[[0,8]]},"631":{"position":[[0,5]]},"633":{"position":[[0,6]]},"635":{"position":[[0,10]]},"636":{"position":[[6,6]]},"638":{"position":[[0,6]]},"640":{"position":[[0,11]]},"642":{"position":[[0,5]]},"643":{"position":[[0,15]]},"645":{"position":[[0,5]]},"647":{"position":[[0,1],[8,3]]},"650":{"position":[[0,8]]},"651":{"position":[[0,1]]},"653":{"position":[[0,4]]},"655":{"position":[[0,2]]},"657":{"position":[[0,4]]},"659":{"position":[[0,5]]},"661":{"position":[[0,9]]},"662":{"position":[[0,3]]},"664":{"position":[[0,2]]},"666":{"position":[[0,2]]},"668":{"position":[[0,6]]},"670":{"position":[[0,5]]},"672":{"position":[[0,5]]},"674":{"position":[[0,8]]},"676":{"position":[[0,4]]},"678":{"position":[[0,5]]},"680":{"position":[[0,7]]},"682":{"position":[[0,7]]},"684":{"position":[[0,3]]},"686":{"position":[[0,2]]},"689":{"position":[[0,4]]},"690":{"position":[[0,3]]},"692":{"position":[[0,2]]},"696":{"position":[[0,4]]},"697":{"position":[[0,5]]},"699":{"position":[[0,5]]},"702":{"position":[[0,7]]},"704":{"position":[[0,3]]},"706":{"position":[[0,5]]},"708":{"position":[[0,7]]},"710":{"position":[[0,7]]},"712":{"position":[[0,12]]},"713":{"position":[[0,4]]},"715":{"position":[[0,4]]},"717":{"position":[[0,10]]},"718":{"position":[[0,7]]},"720":{"position":[[0,5]]},"722":{"position":[[0,6]]},"724":{"position":[[0,10]]},"726":{"position":[[0,10]]},"728":{"position":[[0,7]]},"730":{"position":[[0,6]]},"732":{"position":[[0,6]]},"734":{"position":[[0,10]]},"736":{"position":[[0,11]]},"738":{"position":[[0,6]]},"740":{"position":[[0,10]]},"743":{"position":[[0,8]]},"745":{"position":[[0,8]]},"747":{"position":[[0,9]]},"749":{"position":[[0,4]]},"751":{"position":[[0,6]]},"752":{"position":[[0,4]]},"754":{"position":[[0,4]]},"756":{"position":[[0,4]]},"758":{"position":[[0,6]]},"761":{"position":[[0,4]]},"763":{"position":[[0,3]]},"765":{"position":[[0,3]]},"767":{"position":[[8,5]]},"769":{"position":[[0,2]]},"772":{"position":[[0,7]]},"774":{"position":[[0,7]]},"775":{"position":[[4,2]]},"777":{"position":[[5,2]]},"779":{"position":[[0,4]]},"781":{"position":[[0,2]]},"783":{"position":[[0,2],[7,7]]},"785":{"position":[[0,2],[7,6]]},"787":{"position":[[0,6]]},"788":{"position":[[0,4]]},"790":{"position":[[0,6]]},"792":{"position":[[0,6]]},"797":{"position":[[0,5]]},"799":{"position":[[8,4]]},"800":{"position":[[0,2]]},"802":{"position":[[0,2]]},"804":{"position":[[0,4]]},"806":{"position":[[0,4]]},"807":{"position":[[0,3]]},"809":{"position":[[0,5]]},"811":{"position":[[0,4]]},"814":{"position":[[0,6]]},"816":{"position":[[0,4]]},"818":{"position":[[0,2]]},"820":{"position":[[5,2]]},"822":{"position":[[0,5]]},"824":{"position":[[0,5]]},"826":{"position":[[0,7]]},"828":{"position":[[0,7]]},"830":{"position":[[0,6]]},"832":{"position":[[0,7]]},"834":{"position":[[0,7]]},"836":{"position":[[0,7]]},"838":{"position":[[0,5]]},"840":{"position":[[0,6]]},"842":{"position":[[0,6]]},"844":{"position":[[0,6]]},"846":{"position":[[0,5]]},"848":{"position":[[0,6]]},"850":{"position":[[0,4]]},"852":{"position":[[0,4]]},"854":{"position":[[0,2]]},"856":{"position":[[0,5]]},"858":{"position":[[0,4],[10,2]]},"866":{"position":[[0,4]]},"868":{"position":[[0,5]]},"870":{"position":[[0,2]]},"872":{"position":[[0,3]]},"876":{"position":[[0,4]]},"878":{"position":[[0,10]]},"882":{"position":[[0,13]]},"884":{"position":[[0,5]]},"886":{"position":[[0,8]]},"889":{"position":[[0,4]]},"891":{"position":[[0,5]]},"893":{"position":[[0,4]]},"896":{"position":[[0,6]]},"898":{"position":[[0,5]]},"899":{"position":[[0,4]]},"901":{"position":[[0,4]]},"903":{"position":[[0,2],[11,2]]},"905":{"position":[[0,5]]},"907":{"position":[[4,4]]},"909":{"position":[[4,4]]},"911":{"position":[[0,6]]},"913":{"position":[[0,2],[7,5],[18,2]]},"916":{"position":[[0,5]]},"918":{"position":[[3,9]]},"920":{"position":[[8,4]]},"922":{"position":[[0,6]]},"924":{"position":[[0,4]]},"926":{"position":[[0,2]]},"929":{"position":[[14,2]]},"933":{"position":[[0,2]]},"935":{"position":[[0,9]]},"936":{"position":[[0,4]]},"938":{"position":[[0,4]]},"940":{"position":[[0,10]]},"942":{"position":[[0,9]]},"943":{"position":[[0,4]]},"945":{"position":[[0,4]]},"947":{"position":[[0,10]]},"949":{"position":[[0,2]]},"951":{"position":[[0,6]]},"952":{"position":[[0,4]]},"954":{"position":[[0,4]]},"957":{"position":[[0,5]]},"959":{"position":[[0,4]]},"961":{"position":[[0,4]]},"963":{"position":[[0,4]]},"965":{"position":[[0,3]]},"967":{"position":[[7,2]]},"968":{"position":[[0,2]]},"970":{"position":[[0,4]]},"972":{"position":[[0,2]]},"974":{"position":[[8,2]]},"977":{"position":[[0,3],[9,4]]},"979":{"position":[[0,4]]},"981":{"position":[[0,4]]},"983":{"position":[[0,4]]},"985":{"position":[[0,4]]},"987":{"position":[[0,9]]},"988":{"position":[[0,4]]},"990":{"position":[[0,4]]},"992":{"position":[[0,11]]},"993":{"position":[[0,4]]},"995":{"position":[[0,4]]},"998":{"position":[[0,11]]},"1000":{"position":[[0,6]]},"1003":{"position":[[0,7]]},"1005":{"position":[[0,7]]},"1007":{"position":[[0,9]]},"1009":{"position":[[0,8]]},"1011":{"position":[[0,4]]},"1014":{"position":[[0,9]]},"1016":{"position":[[0,9]]},"1018":{"position":[[0,2]]},"1025":{"position":[[0,2]]},"1041":{"position":[[0,2]]},"1043":{"position":[[0,2]]},"1048":{"position":[[0,6]]},"1050":{"position":[[0,4]]},"1053":{"position":[[0,4]]},"1055":{"position":[[0,2],[27,2]]},"1057":{"position":[[0,6]]},"1061":{"position":[[0,4]]},"1065":{"position":[[0,6]]},"1067":{"position":[[0,4]]},"1069":{"position":[[0,5]]},"1077":{"position":[[0,7]]},"1079":{"position":[[0,2]]},"1081":{"position":[[0,9]]},"1083":{"position":[[0,8]]},"1085":{"position":[[0,4]]},"1087":{"position":[[7,2]]},"1091":{"position":[[0,4]]},"1093":{"position":[[0,6]]},"1095":{"position":[[0,9]]},"1098":{"position":[[0,2]]},"1100":{"position":[[0,2]]},"1102":{"position":[[0,2]]},"1107":{"position":[[0,2]]},"1110":{"position":[[0,2]]},"1112":{"position":[[0,8]]},"1114":{"position":[[0,8]]},"1117":{"position":[[0,2]]},"1121":{"position":[[0,6]]},"1129":{"position":[[0,12]]},"1131":{"position":[[0,13]]},"1138":{"position":[[0,4]]},"1141":{"position":[[0,2]]},"1143":{"position":[[0,2]]},"1145":{"position":[[0,15]]},"1147":{"position":[[0,5]]},"1149":{"position":[[0,9]]},"1151":{"position":[[0,5]]},"1153":{"position":[[0,8]]},"1155":{"position":[[0,4]]},"1157":{"position":[[0,8]]},"1159":{"position":[[0,2]]},"1162":{"position":[[0,2]]},"1164":{"position":[[0,9]]},"1167":{"position":[[0,2]]},"1171":{"position":[[0,8]]},"1177":{"position":[[0,12]]},"1180":{"position":[[0,2]]},"1181":{"position":[[0,4]]},"1183":{"position":[[0,7]]},"1189":{"position":[[0,4]]},"1191":{"position":[[0,6]]},"1193":{"position":[[0,6]]},"1195":{"position":[[0,4]]},"1197":{"position":[[0,4]]},"1199":{"position":[[0,4]]},"1201":{"position":[[0,2]]},"1205":{"position":[[0,4]]},"1207":{"position":[[0,5]]},"1210":{"position":[[0,2]]},"1215":{"position":[[0,7]]},"1217":{"position":[[0,5]]},"1219":{"position":[[0,4]]},"1222":{"position":[[0,4]]},"1224":{"position":[[0,8],[15,5]]},"1226":{"position":[[0,6]]},"1228":{"position":[[0,8]]},"1230":{"position":[[0,7]]},"1232":{"position":[[0,7]]},"1234":{"position":[[0,3],[10,7]]},"1236":{"position":[[0,4]]},"1238":{"position":[[0,4]]},"1240":{"position":[[0,5]]},"1245":{"position":[[0,4]]},"1252":{"position":[[0,6]]},"1254":{"position":[[7,3]]},"1256":{"position":[[6,2]]},"1258":{"position":[[5,4]]},"1260":{"position":[[0,2],[9,4]]},"1262":{"position":[[0,9]]},"1266":{"position":[[6,6]]},"1268":{"position":[[0,2]]},"1270":{"position":[[0,1],[12,2],[21,2]]},"1272":{"position":[[0,1],[10,5]]},"1274":{"position":[[0,1],[15,1],[21,3]]},"1276":{"position":[[0,1],[6,7]]},"1278":{"position":[[0,1],[10,3],[25,3]]},"1280":{"position":[[0,1],[20,4]]},"1282":{"position":[[0,1],[13,9],[23,2],[26,6]]},"1284":{"position":[[0,1],[6,2],[9,5]]},"1286":{"position":[[0,2],[14,2],[23,2]]},"1288":{"position":[[0,1],[18,5]]},"1290":{"position":[[0,1]]},"1292":{"position":[[0,1]]},"1294":{"position":[[6,12]]},"1296":{"position":[[0,3],[10,10],[23,2]]},"1298":{"position":[[6,10]]},"1300":{"position":[[0,1],[14,1]]},"1303":{"position":[[0,2]]},"1305":{"position":[[0,5]]},"1307":{"position":[[0,3]]},"1309":{"position":[[0,9]]},"1311":{"position":[[0,4]]},"1314":{"position":[[0,2]]},"1316":{"position":[[0,8]]},"1320":{"position":[[0,8]]},"1326":{"position":[[0,4]]},"1328":{"position":[[0,4]]},"1331":{"position":[[0,2]]},"1337":{"position":[[0,8]]},"1339":{"position":[[0,10]]},"1341":{"position":[[0,4]]},"1343":{"position":[[0,4]]},"1345":{"position":[[0,6]]},"1355":{"position":[[0,2]]},"1359":{"position":[[0,5]]},"1361":{"position":[[0,4]]},"1363":{"position":[[0,4]]},"1365":{"position":[[0,6]]},"1367":{"position":[[0,6]]},"1371":{"position":[[0,2]]},"1372":{"position":[[0,4]]},"1374":{"position":[[0,4]]},"1376":{"position":[[0,5]]},"1378":{"position":[[0,6]]},"1379":{"position":[[0,4]]},"1381":{"position":[[0,4]]},"1383":{"position":[[0,6]]},"1385":{"position":[[0,3]]},"1388":{"position":[[0,2]]},"1390":{"position":[[0,2]]},"1392":{"position":[[0,5]]},"1394":{"position":[[0,5]]},"1396":{"position":[[0,6]]},"1398":{"position":[[0,7]]},"1401":{"position":[[0,4],[9,2]]},"1403":{"position":[[0,5]]},"1405":{"position":[[0,6]]},"1409":{"position":[[0,4]]},"1411":{"position":[[0,4]]},"1413":{"position":[[0,6],[10,2]]},"1415":{"position":[[0,4],[8,4]]},"1417":{"position":[[0,5]]},"1419":{"position":[[0,3]]},"1423":{"position":[[0,1],[8,12]]},"1425":{"position":[[0,1],[8,5]]},"1427":{"position":[[0,4]]},"1429":{"position":[[0,6]]},"1430":{"position":[[0,4]]},"1432":{"position":[[0,4]]},"1434":{"position":[[0,4]]},"1436":{"position":[[0,11]]},"1438":{"position":[[0,1],[8,6]]},"1440":{"position":[[0,1],[13,3]]},"1442":{"position":[[6,1],[13,4]]},"1444":{"position":[[0,6]]},"1447":{"position":[[0,2]]},"1448":{"position":[[0,5]]},"1450":{"position":[[0,4]]},"1452":{"position":[[0,4]]},"1454":{"position":[[0,4]]},"1455":{"position":[[0,4]]},"1457":{"position":[[0,6]]},"1459":{"position":[[0,2]]},"1465":{"position":[[0,1],[13,5],[24,6]]},"1471":{"position":[[0,1],[6,8]]},"1477":{"position":[[5,1],[13,4]]},"1480":{"position":[[0,4]]},"1482":{"position":[[5,4]]},"1484":{"position":[[0,4]]},"1486":{"position":[[0,2],[14,3]]},"1488":{"position":[[0,2]]},"1490":{"position":[[0,2]]},"1492":{"position":[[0,4]]},"1494":{"position":[[0,10]]},"1496":{"position":[[0,11]]},"1498":{"position":[[0,3]]},"1500":{"position":[[0,2]]},"1502":{"position":[[7,2]]},"1504":{"position":[[5,2]]},"1509":{"position":[[0,2]]},"1510":{"position":[[0,2]]},"1513":{"position":[[0,4]]},"1514":{"position":[[0,3]]},"1516":{"position":[[0,2]]},"1517":{"position":[[0,2]]},"1521":{"position":[[5,2]]},"1525":{"position":[[0,5]]},"1527":{"position":[[0,5]]},"1529":{"position":[[0,6]]},"1531":{"position":[[0,2]]},"1534":{"position":[[0,3]]},"1536":{"position":[[5,4]]},"1538":{"position":[[0,9]]},"1540":{"position":[[0,3]]},"1542":{"position":[[0,5]]},"1544":{"position":[[0,4]]},"1550":{"position":[[0,4]]},"1552":{"position":[[0,5]]},"1554":{"position":[[0,12]]},"1556":{"position":[[0,7]]},"1558":{"position":[[0,8]]},"1560":{"position":[[0,12]]},"1562":{"position":[[0,4],[9,1]]},"1564":{"position":[[0,8]]},"1567":{"position":[[0,5]]},"1571":{"position":[[0,4]]},"1574":{"position":[[0,4]]},"1575":{"position":[[0,4]]},"1577":{"position":[[0,4]]},"1579":{"position":[[0,5]]},"1581":{"position":[[0,4]]},"1583":{"position":[[0,4]]},"1584":{"position":[[6,2]]},"1586":{"position":[[6,2]]},"1588":{"position":[[0,4]]},"1589":{"position":[[6,2]]},"1591":{"position":[[7,2]]},"1594":{"position":[[0,5]]},"1599":{"position":[[0,9]]},"1601":{"position":[[0,2]]},"1602":{"position":[[0,4]]},"1604":{"position":[[0,4]]},"1606":{"position":[[0,4]]},"1608":{"position":[[0,4]]},"1610":{"position":[[0,2]]},"1612":{"position":[[0,4]]},"1614":{"position":[[0,6]]},"1615":{"position":[[0,2]]},"1617":{"position":[[0,3]]},"1620":{"position":[[0,2]]},"1629":{"position":[[0,4]]},"1631":{"position":[[0,4]]},"1633":{"position":[[10,1]]},"1639":{"position":[[0,4]]},"1648":{"position":[[0,6]]},"1650":{"position":[[3,2]]},"1652":{"position":[[0,4]]},"1654":{"position":[[0,4]]},"1656":{"position":[[5,3]]},"1658":{"position":[[0,6]]},"1660":{"position":[[0,6]]},"1664":{"position":[[0,4]]},"1666":{"position":[[0,11]]},"1670":{"position":[[0,4]]},"1681":{"position":[[0,4]]},"1682":{"position":[[0,6]]},"1684":{"position":[[0,7]]},"1686":{"position":[[0,6]]},"1688":{"position":[[0,3]]},"1690":{"position":[[0,2]]},"1692":{"position":[[0,3]]},"1694":{"position":[[0,2]]},"1696":{"position":[[0,2]]},"1698":{"position":[[7,2]]},"1702":{"position":[[0,2]]},"1706":{"position":[[10,1],[17,3]]},"1708":{"position":[[0,2]]},"1710":{"position":[[0,4]]},"1712":{"position":[[0,4]]},"1714":{"position":[[0,2],[3,7]]},"1717":{"position":[[0,4]]},"1719":{"position":[[0,4]]},"1723":{"position":[[0,4]]},"1738":{"position":[[10,1]]},"1740":{"position":[[0,2]]},"1742":{"position":[[0,4]]},"1744":{"position":[[0,6]]},"1746":{"position":[[0,6]]},"1748":{"position":[[0,5]]},"1750":{"position":[[0,9]]},"1752":{"position":[[0,7]]},"1755":{"position":[[0,7]]},"1757":{"position":[[0,10]]},"1759":{"position":[[0,6]]},"1761":{"position":[[0,6]]},"1763":{"position":[[0,4]]},"1764":{"position":[[0,4]]},"1766":{"position":[[0,4]]},"1768":{"position":[[0,6]]},"1770":{"position":[[0,7]]},"1772":{"position":[[0,4]]},"1774":{"position":[[0,4]]},"1776":{"position":[[0,4]]},"1778":{"position":[[0,8]]},"1780":{"position":[[0,4]]},"1782":{"position":[[0,4]]},"1783":{"position":[[0,4]]},"1785":{"position":[[0,4]]},"1787":{"position":[[0,4]]},"1789":{"position":[[0,4]]},"1791":{"position":[[0,9]]},"1793":{"position":[[0,6]]},"1795":{"position":[[0,4]]},"1817":{"position":[[0,3],[9,2]]},"1820":{"position":[[11,2]]},"1822":{"position":[[11,6]]},"1824":{"position":[[0,3]]},"1826":{"position":[[0,3]]},"1828":{"position":[[11,8]]},"1832":{"position":[[0,6]]},"1834":{"position":[[0,5]]},"1835":{"position":[[0,5]]},"1837":{"position":[[0,11]]},"1839":{"position":[[0,10]]},"1841":{"position":[[0,7]]},"1843":{"position":[[0,5]]},"1845":{"position":[[0,8]]},"1847":{"position":[[0,7]]},"1849":{"position":[[0,7]]},"1851":{"position":[[0,8]]},"1853":{"position":[[0,6]]},"1856":{"position":[[0,5]]},"1857":{"position":[[0,8]]},"1859":{"position":[[0,6]]},"1861":{"position":[[0,7]]},"1862":{"position":[[0,4]]},"1864":{"position":[[0,5]]},"1866":{"position":[[0,4]]},"1867":{"position":[[0,4]]},"1869":{"position":[[0,5]]},"1871":{"position":[[0,4]]},"1873":{"position":[[0,7]]},"1875":{"position":[[0,4]]},"1877":{"position":[[0,2]]},"1879":{"position":[[0,4]]},"1882":{"position":[[0,10]]},"1884":{"position":[[0,7]]},"1887":{"position":[[0,3]]},"1889":{"position":[[0,3]]},"1891":{"position":[[0,3]]},"1893":{"position":[[0,3]]},"1895":{"position":[[0,4]]},"1897":{"position":[[0,10]]},"1899":{"position":[[0,8]]},"1902":{"position":[[0,6]]},"1904":{"position":[[0,5]]},"1906":{"position":[[0,4]]},"1908":{"position":[[0,2]]},"1910":{"position":[[0,9]]},"1912":{"position":[[0,10]]},"1914":{"position":[[0,6]]},"1917":{"position":[[0,8]]},"1919":{"position":[[0,3]]},"1921":{"position":[[0,7]]},"1923":{"position":[[0,4]]},"1925":{"position":[[0,6]]},"1927":{"position":[[0,4]]},"1930":{"position":[[0,2]]},"1934":{"position":[[0,6]]},"1937":{"position":[[0,4]]},"1939":{"position":[[0,6]]},"1943":{"position":[[0,7]]},"1945":{"position":[[0,5]]},"1947":{"position":[[0,5]]},"1949":{"position":[[0,6]]},"1953":{"position":[[0,4]]},"1955":{"position":[[0,8]]},"1963":{"position":[[0,8]]},"1965":{"position":[[0,8]]},"1968":{"position":[[0,4]]},"1977":{"position":[[0,4]]},"1978":{"position":[[0,2]]},"1980":{"position":[[0,6]]},"1988":{"position":[[0,4]]},"1992":{"position":[[0,4]]},"1996":{"position":[[0,4]]},"1998":{"position":[[0,4]]},"2000":{"position":[[0,4]]},"2002":{"position":[[0,2]]},"2011":{"position":[[0,11]]},"2013":{"position":[[0,9]]},"2015":{"position":[[0,11]]},"2025":{"position":[[0,7]]},"2027":{"position":[[0,10]]},"2028":{"position":[[0,2],[3,5]]},"2030":{"position":[[0,6]]},"2032":{"position":[[0,4]]},"2034":{"position":[[0,12]]},"2036":{"position":[[0,5]]},"2038":{"position":[[0,5]]},"2052":{"position":[[6,7]]},"2058":{"position":[[0,6]]},"2061":{"position":[[0,6]]},"2065":{"position":[[0,7]]},"2074":{"position":[[0,5]]},"2076":{"position":[[0,4]]},"2078":{"position":[[0,4]]},"2080":{"position":[[0,13]]},"2081":{"position":[[0,6]]},"2083":{"position":[[0,7]]},"2085":{"position":[[0,5]]},"2087":{"position":[[0,4]]},"2089":{"position":[[0,4]]},"2091":{"position":[[0,4]]},"2098":{"position":[[0,2]]},"2100":{"position":[[0,7]]},"2101":{"position":[[4,13]]},"2103":{"position":[[4,8]]},"2105":{"position":[[4,8]]},"2107":{"position":[[0,11]]},"2108":{"position":[[4,4]]},"2110":{"position":[[4,6]]},"2112":{"position":[[4,6]]},"2114":{"position":[[0,11]]},"2116":{"position":[[4,6]]},"2118":{"position":[[4,6]]},"2120":{"position":[[4,4]]},"2122":{"position":[[0,7]]},"2126":{"position":[[4,3]]},"2128":{"position":[[4,6]]},"2132":{"position":[[4,8]]},"2140":{"position":[[0,6]]},"2142":{"position":[[0,8]]},"2158":{"position":[[0,7]]},"2160":{"position":[[4,12]]},"2161":{"position":[[4,9]]},"2163":{"position":[[4,6]]},"2174":{"position":[[4,15]]},"2176":{"position":[[4,4]]},"2178":{"position":[[4,4]]},"2184":{"position":[[0,8]]},"2185":{"position":[[4,9]]},"2201":{"position":[[0,4]]},"2203":{"position":[[4,7]]},"2205":{"position":[[4,8]]},"2207":{"position":[[4,8]]},"2209":{"position":[[4,17]]},"2211":{"position":[[0,8]]},"2213":{"position":[[4,8]]},"2215":{"position":[[4,5]]},"2223":{"position":[[4,8]]},"2226":{"position":[[0,9]]},"2229":{"position":[[0,4]]},"2231":{"position":[[0,9]]},"2233":{"position":[[0,6]]},"2239":{"position":[[0,2],[3,10]]},"2241":{"position":[[0,8]]},"2243":{"position":[[0,15]]},"2245":{"position":[[0,7]]},"2253":{"position":[[0,6]]},"2259":{"position":[[0,9]]},"2274":{"position":[[0,10]]},"2286":{"position":[[0,6]]},"2288":{"position":[[5,2]]},"2295":{"position":[[0,9]]},"2296":{"position":[[0,2]]},"2298":{"position":[[0,4]]},"2300":{"position":[[0,4]]},"2302":{"position":[[0,4]]},"2304":{"position":[[0,4]]},"2306":{"position":[[0,8]]},"2307":{"position":[[0,4]]},"2309":{"position":[[0,4]]},"2311":{"position":[[0,5]]},"2312":{"position":[[0,4]]},"2314":{"position":[[0,5]]},"2316":{"position":[[0,5]]},"2318":{"position":[[0,5]]},"2321":{"position":[[0,8]]},"2323":{"position":[[0,7]]},"2325":{"position":[[0,3]]},"2327":{"position":[[0,7]]},"2329":{"position":[[0,7]]},"2331":{"position":[[0,8]]},"2333":{"position":[[0,12]]},"2335":{"position":[[0,9]]},"2336":{"position":[[0,9]]},"2337":{"position":[[0,9]]},"2338":{"position":[[0,9]]},"2340":{"position":[[0,7]]},"2342":{"position":[[0,4]]},"2343":{"position":[[0,10]]},"2345":{"position":[[0,8]]},"2346":{"position":[[0,9]]},"2347":{"position":[[0,4]]},"2348":{"position":[[0,10],[11,2],[14,2]]},"2349":{"position":[[0,8]]},"2350":{"position":[[0,7]]},"2352":{"position":[[0,4]]},"2353":{"position":[[0,25]]},"2354":{"position":[[0,4]]},"2356":{"position":[[0,5]]},"2358":{"position":[[0,7]]},"2360":{"position":[[0,6]]},"2362":{"position":[[0,4]]},"2364":{"position":[[0,6]]},"2366":{"position":[[0,15]]},"2368":{"position":[[0,8]]},"2370":{"position":[[0,6]]},"2372":{"position":[[0,9]]},"2375":{"position":[[0,6]]},"2377":{"position":[[0,9]]},"2379":{"position":[[0,7]]},"2381":{"position":[[0,9]]},"2383":{"position":[[0,4]]},"2385":{"position":[[0,9]]},"2386":{"position":[[0,11]]},"2388":{"position":[[0,9]]},"2390":{"position":[[0,8]]},"2392":{"position":[[0,9]]},"2394":{"position":[[0,9]]},"2396":{"position":[[0,3]]},"2398":{"position":[[0,11]]},"2400":{"position":[[0,15]]},"2402":{"position":[[0,15]]},"2404":{"position":[[0,16]]},"2406":{"position":[[0,9]]},"2408":{"position":[[0,7]]},"2410":{"position":[[0,14]]},"2411":{"position":[[0,10]]},"2413":{"position":[[0,9]]},"2414":{"position":[[0,4]]},"2415":{"position":[[0,11]]},"2430":{"position":[[0,10]]},"2431":{"position":[[0,5]]},"2433":{"position":[[0,3]]},"2436":{"position":[[0,21]]},"2438":{"position":[[0,1],[2,6]]},"2440":{"position":[[0,7]]},"2442":{"position":[[0,5]]},"2444":{"position":[[0,6]]},"2446":{"position":[[0,6]]},"2447":{"position":[[0,2]]},"2449":{"position":[[0,3]]},"2451":{"position":[[0,7]]},"2456":{"position":[[0,10]]},"2457":{"position":[[4,5]]},"2459":{"position":[[4,5]]},"2461":{"position":[[0,8]]},"2463":{"position":[[0,7]]},"2464":{"position":[[4,4]]},"2466":{"position":[[4,4]]},"2468":{"position":[[4,5]]},"2470":{"position":[[4,8]]},"2472":{"position":[[0,9]]},"2474":{"position":[[0,9]]},"2475":{"position":[[4,6]]},"2477":{"position":[[4,5]]},"2479":{"position":[[0,9]]},"2481":{"position":[[4,4]]},"2483":{"position":[[4,4]]},"2485":{"position":[[4,4]]},"2487":{"position":[[4,9]]},"2489":{"position":[[4,6]]},"2491":{"position":[[4,3]]},"2493":{"position":[[0,6]]},"2494":{"position":[[4,6]]},"2496":{"position":[[4,9]]},"2498":{"position":[[4,4]]},"2500":{"position":[[4,4]]},"2502":{"position":[[0,2]]},"2505":{"position":[[0,7]]},"2506":{"position":[[4,5]]},"2508":{"position":[[4,4]]},"2510":{"position":[[4,4]]},"2512":{"position":[[0,12]]},"2513":{"position":[[4,8]]},"2515":{"position":[[4,8]]},"2517":{"position":[[0,6]]},"2518":{"position":[[4,2]]},"2520":{"position":[[4,3]]},"2522":{"position":[[4,3]]},"2524":{"position":[[4,3]]},"2526":{"position":[[0,8]]},"2529":{"position":[[0,12]]},"2533":{"position":[[4,9]]},"2535":{"position":[[4,9]]},"2538":{"position":[[0,12]]},"2542":{"position":[[4,9]]},"2544":{"position":[[4,9]]},"2547":{"position":[[0,12]]},"2551":{"position":[[4,9]]},"2553":{"position":[[4,9]]},"2556":{"position":[[0,6]]}}}],["1",{"_index":16,"t":{"100":{"position":[[0,6]]},"197":{"position":[[0,6]]},"949":{"position":[[3,1]]},"1296":{"position":[[21,1]]}}}],["1.1",{"_index":250,"t":{"2101":{"position":[[0,3]]},"2160":{"position":[[0,3]]},"2457":{"position":[[0,3]]},"2506":{"position":[[0,3]]},"2531":{"position":[[0,3]]},"2540":{"position":[[0,3]]},"2549":{"position":[[0,3]]}}}],["1.2",{"_index":251,"t":{"2103":{"position":[[0,3]]},"2161":{"position":[[0,3]]},"2459":{"position":[[0,3]]},"2508":{"position":[[0,3]]},"2533":{"position":[[0,3]]},"2542":{"position":[[0,3]]},"2551":{"position":[[0,3]]}}}],["1.3",{"_index":252,"t":{"2105":{"position":[[0,3]]},"2163":{"position":[[0,3]]},"2510":{"position":[[0,3]]},"2535":{"position":[[0,3]]},"2544":{"position":[[0,3]]},"2553":{"position":[[0,3]]}}}],["1.iso/osi",{"_index":270,"t":{"2143":{"position":[[0,9]]}}}],["10",{"_index":151,"t":{"1290":{"position":[[2,10]]}}}],["11",{"_index":152,"t":{"1292":{"position":[[2,23]]}}}],["13：setstat",{"_index":153,"t":{"1300":{"position":[[2,11]]}}}],["2",{"_index":17,"t":{"102":{"position":[[0,10]]},"199":{"position":[[0,10]]},"1270":{"position":[[2,5]]}}}],["2.1",{"_index":253,"t":{"2108":{"position":[[0,3]]},"2166":{"position":[[0,3]]},"2513":{"position":[[0,3]]}}}],["2.2",{"_index":254,"t":{"2110":{"position":[[0,3]]},"2168":{"position":[[0,3]]},"2515":{"position":[[0,3]]}}}],["2.3",{"_index":255,"t":{"2112":{"position":[[0,3]]},"2170":{"position":[[0,3]]}}}],["2.4",{"_index":275,"t":{"2172":{"position":[[0,3]]}}}],["2.5",{"_index":276,"t":{"2174":{"position":[[0,3]]}}}],["2.6",{"_index":277,"t":{"2176":{"position":[[0,3]]}}}],["2.7",{"_index":278,"t":{"2178":{"position":[[0,3]]}}}],["2.8",{"_index":279,"t":{"2180":{"position":[[0,3]]}}}],["2.9",{"_index":281,"t":{"2182":{"position":[[0,3]]}}}],["2.tcp/ip",{"_index":272,"t":{"2145":{"position":[[0,11]]}}}],["3",{"_index":273,"t":{"2147":{"position":[[0,30]]}}}],["3.1",{"_index":256,"t":{"2116":{"position":[[0,3]]},"2185":{"position":[[0,3]]},"2246":{"position":[[0,3]]},"2464":{"position":[[0,3]]},"2518":{"position":[[0,3]]}}}],["3.2",{"_index":257,"t":{"2118":{"position":[[0,3]]},"2187":{"position":[[0,3]]},"2248":{"position":[[0,3]]},"2466":{"position":[[0,3]]},"2520":{"position":[[0,3]]}}}],["3.2.1",{"_index":302,"t":{"2249":{"position":[[0,5]]}}}],["3.2.2",{"_index":303,"t":{"2251":{"position":[[0,5]]}}}],["3.3",{"_index":258,"t":{"2120":{"position":[[0,3]]},"2468":{"position":[[0,3]]},"2522":{"position":[[0,3]]}}}],["3.4",{"_index":332,"t":{"2470":{"position":[[0,3]]},"2524":{"position":[[0,3]]}}}],["3：react",{"_index":143,"t":{"1272":{"position":[[2,7]]}}}],["4",{"_index":144,"t":{"1274":{"position":[[2,6]]},"2149":{"position":[[0,8]]}}}],["4.1",{"_index":259,"t":{"2124":{"position":[[0,3]]},"2190":{"position":[[0,3]]},"2255":{"position":[[0,3]]}}}],["4.2",{"_index":261,"t":{"2126":{"position":[[0,3]]},"2192":{"position":[[0,3]]}}}],["4.3",{"_index":262,"t":{"2128":{"position":[[0,3]]}}}],["5",{"_index":146,"t":{"1278":{"position":[[2,3]]},"2151":{"position":[[0,7]]}}}],["5.1",{"_index":264,"t":{"2132":{"position":[[0,3]]},"2475":{"position":[[0,3]]}}}],["5.2",{"_index":265,"t":{"2134":{"position":[[0,3]]}}}],["5.3",{"_index":268,"t":{"2135":{"position":[[0,3]]},"2477":{"position":[[0,3]]}}}],["6",{"_index":147,"t":{"1280":{"position":[[2,11]]},"2153":{"position":[[0,13]]}}}],["6.1",{"_index":287,"t":{"2199":{"position":[[0,3]]},"2481":{"position":[[0,3]]}}}],["6.2",{"_index":333,"t":{"2483":{"position":[[0,3]]}}}],["6.3",{"_index":334,"t":{"2485":{"position":[[0,3]]}}}],["6.4",{"_index":335,"t":{"2487":{"position":[[0,3]]}}}],["6.5",{"_index":336,"t":{"2489":{"position":[[0,3]]}}}],["6.6",{"_index":337,"t":{"2491":{"position":[[0,3]]}}}],["7",{"_index":148,"t":{"1282":{"position":[[2,4]]},"2155":{"position":[[0,9]]}}}],["7.1",{"_index":288,"t":{"2203":{"position":[[0,3]]},"2494":{"position":[[0,3]]}}}],["7.2",{"_index":289,"t":{"2205":{"position":[[0,3]]},"2496":{"position":[[0,3]]}}}],["7.3",{"_index":290,"t":{"2207":{"position":[[0,3]]},"2498":{"position":[[0,3]]}}}],["7.4",{"_index":291,"t":{"2209":{"position":[[0,3]]},"2500":{"position":[[0,3]]}}}],["8",{"_index":149,"t":{"1284":{"position":[[2,3]]}}}],["8.1",{"_index":292,"t":{"2213":{"position":[[0,3]]}}}],["8.2",{"_index":293,"t":{"2215":{"position":[[0,3]]}}}],["8.3",{"_index":294,"t":{"2217":{"position":[[0,3]]}}}],["8.4",{"_index":296,"t":{"2219":{"position":[[0,3]]}}}],["8.5",{"_index":298,"t":{"2221":{"position":[[0,3]]}}}],["8.6",{"_index":300,"t":{"2223":{"position":[[0,3]]}}}],["802.11",{"_index":267,"t":{"2134":{"position":[[9,13]]}}}],["9",{"_index":150,"t":{"1288":{"position":[[2,4]]}}}],["ab",{"_index":58,"t":{"497":{"position":[[0,3]]}}}],["accesskey",{"_index":29,"t":{"187":{"position":[[0,11]]},"229":{"position":[[0,11]]},"1173":{"position":[[0,11]]}}}],["aco",{"_index":73,"t":{"525":{"position":[[0,4]]}}}],["action",{"_index":35,"t":{"337":{"position":[[7,7]]},"1075":{"position":[[7,6]]}}}],["api",{"_index":8,"t":{"32":{"position":[[6,5]]},"164":{"position":[[0,14]]},"248":{"position":[[3,3]]},"344":{"position":[[7,3]]},"617":{"position":[[7,3]]},"628":{"position":[[7,3]]},"1018":{"position":[[3,3]]},"1025":{"position":[[3,3]]},"1272":{"position":[[16,3]]},"1300":{"position":[[16,3]]},"1824":{"position":[[4,3]]},"1826":{"position":[[4,3]]}}}],["app",{"_index":99,"t":{"807":{"position":[[4,3]]},"1247":{"position":[[13,3]]}}}],["app.j",{"_index":219,"t":{"1973":{"position":[[0,6]]}}}],["app.json",{"_index":217,"t":{"1969":{"position":[[0,8]]},"1988":{"position":[[5,8]]}}}],["app.wxss",{"_index":220,"t":{"1975":{"position":[[0,8]]}}}],["app:installdebug",{"_index":32,"t":{"271":{"position":[[0,17]]}}}],["app_id",{"_index":38,"t":{"366":{"position":[[3,6]]}}}],["app_secret",{"_index":39,"t":{"366":{"position":[[12,10]]}}}],["area",{"_index":243,"t":{"2094":{"position":[[20,4]]},"2095":{"position":[[15,4]]},"2096":{"position":[[14,4]]},"2097":{"position":[[22,4]]}}}],["arp",{"_index":260,"t":{"2124":{"position":[[4,17]]}}}],["array",{"_index":88,"t":{"617":{"position":[[0,6]]}}}],["array.everi",{"_index":206,"t":{"1806":{"position":[[0,13]]}}}],["array.filt",{"_index":203,"t":{"1800":{"position":[[0,14]]}}}],["array.find",{"_index":208,"t":{"1810":{"position":[[0,12]]}}}],["array.findindex",{"_index":209,"t":{"1812":{"position":[[0,17]]}}}],["array.foreach",{"_index":201,"t":{"1796":{"position":[[0,15]]}}}],["array.map",{"_index":202,"t":{"1798":{"position":[[0,11]]}}}],["array.reduc",{"_index":204,"t":{"1802":{"position":[[0,14]]}}}],["array.reduceright",{"_index":205,"t":{"1804":{"position":[[0,19]]}}}],["array.som",{"_index":207,"t":{"1808":{"position":[[0,12]]}}}],["asin",{"_index":72,"t":{"523":{"position":[[0,4]]}}}],["atan",{"_index":74,"t":{"527":{"position":[[0,4]]}}}],["audio",{"_index":173,"t":{"1589":{"position":[[0,5]]}}}],["back",{"_index":315,"t":{"2278":{"position":[[16,4]]}}}],["base64",{"_index":155,"t":{"1322":{"position":[[0,11]]}}}],["baseurl",{"_index":113,"t":{"1023":{"position":[[0,7]]}}}],["befor",{"_index":168,"t":{"1517":{"position":[[3,6]]}}}],["bgp",{"_index":299,"t":{"2221":{"position":[[4,9]]}}}],["bind",{"_index":167,"t":{"1502":{"position":[[2,4]]}}}],["bing",{"_index":321,"t":{"2288":{"position":[[0,4]]}}}],["bmp",{"_index":331,"t":{"2453":{"position":[[0,5]]}}}],["board",{"_index":139,"t":{"1256":{"position":[[0,5]]}}}],["boolean",{"_index":181,"t":{"1635":{"position":[[0,7]]}}}],["break",{"_index":44,"t":{"413":{"position":[[0,5]]}}}],["bucket",{"_index":28,"t":{"183":{"position":[[0,8]]},"225":{"position":[[0,8]]},"1169":{"position":[[0,8]]}}}],["c/",{"_index":229,"t":{"2028":{"position":[[9,5]]}}}],["calc",{"_index":171,"t":{"1521":{"position":[[0,4]]}}}],["camera",{"_index":5,"t":{"17":{"position":[[3,6]]}}}],["cbir",{"_index":338,"t":{"2531":{"position":[[4,15]]},"2540":{"position":[[4,15]]},"2549":{"position":[[4,15]]}}}],["ceil",{"_index":59,"t":{"499":{"position":[[0,4]]}}}],["charact",{"_index":42,"t":{"401":{"position":[[0,9]]}}}],["cidr",{"_index":284,"t":{"2189":{"position":[[0,17]]},"2190":{"position":[[4,6]]},"2192":{"position":[[4,6]]}}}],["class",{"_index":161,"t":{"1371":{"position":[[8,5]]}}}],["cli",{"_index":20,"t":{"117":{"position":[[4,3]]},"214":{"position":[[4,3]]},"1357":{"position":[[6,8]]},"1447":{"position":[[7,3]]}}}],["cmi",{"_index":328,"t":{"2425":{"position":[[0,7]]}}}],["cmyk",{"_index":329,"t":{"2427":{"position":[[0,8]]}}}],["co",{"_index":70,"t":{"519":{"position":[[0,3]]}}}],["codefun",{"_index":21,"t":{"138":{"position":[[0,7]]}}}],["compareto",{"_index":53,"t":{"487":{"position":[[0,9]]}}}],["condit",{"_index":237,"t":{"2054":{"position":[[10,11]]}}}],["console.log",{"_index":189,"t":{"1678":{"position":[[0,11]]}}}],["const",{"_index":178,"t":{"1627":{"position":[[0,5]]}}}],["contact",{"_index":227,"t":{"2019":{"position":[[0,7]]}}}],["continu",{"_index":45,"t":{"415":{"position":[[0,8]]}}}],["cooki",{"_index":234,"t":{"2050":{"position":[[0,6]]}}}],["creat",{"_index":137,"t":{"1247":{"position":[[0,6]]}}}],["csma/ca",{"_index":269,"t":{"2135":{"position":[[4,11]]}}}],["css",{"_index":12,"t":{"75":{"position":[[9,3]]},"85":{"position":[[3,3]]},"860":{"position":[[0,7]]},"1562":{"position":[[5,3]]}}}],["daisyui",{"_index":10,"t":{"72":{"position":[[3,7]]},"73":{"position":[[0,7]]},"79":{"position":[[3,7]]},"83":{"position":[[3,7]]}}}],["data",{"_index":154,"t":{"1318":{"position":[[0,8]]}}}],["dbm",{"_index":94,"t":{"742":{"position":[[0,7]]}}}],["desktop",{"_index":130,"t":{"1119":{"position":[[22,7]]},"1123":{"position":[[11,15]]},"1187":{"position":[[9,7]]}}}],["dhcp",{"_index":285,"t":{"2194":{"position":[[0,16]]},"2196":{"position":[[0,8]]}}}],["dn",{"_index":239,"t":{"2063":{"position":[[0,8]]},"2067":{"position":[[0,7]]},"2069":{"position":[[0,5]]},"2071":{"position":[[0,5]]}}}],["document.writ",{"_index":187,"t":{"1674":{"position":[[0,14]]}}}],["docusauru",{"_index":121,"t":{"1043":{"position":[[3,10]]},"1046":{"position":[[0,12]]},"1055":{"position":[[3,10]]}}}],["do…whil",{"_index":43,"t":{"407":{"position":[[0,8]]}}}],["each",{"_index":87,"t":{"605":{"position":[[4,4]]}}}],["easyx",{"_index":15,"t":{"98":{"position":[[0,14]]},"193":{"position":[[0,11]]},"195":{"position":[[0,14]]}}}],["ee",{"_index":80,"t":{"548":{"position":[[5,2]]}}}],["engine.vue中声明threej",{"_index":159,"t":{"1350":{"position":[[0,21]]}}}],["equal",{"_index":54,"t":{"489":{"position":[[0,6]]}}}],["excel",{"_index":90,"t":{"636":{"position":[[0,5]]}}}],["exp",{"_index":65,"t":{"509":{"position":[[0,3]]}}}],["export",{"_index":110,"t":{"974":{"position":[[0,7]]}}}],["express",{"_index":95,"t":{"763":{"position":[[4,7]]},"765":{"position":[[4,7]]},"767":{"position":[[0,7]]},"769":{"position":[[3,7]]},"799":{"position":[[0,7]]}}}],["favicon",{"_index":114,"t":{"1026":{"position":[[0,7]]}}}],["flask",{"_index":7,"t":{"32":{"position":[[0,5]]},"50":{"position":[[0,5]]}}}],["floor",{"_index":60,"t":{"499":{"position":[[7,5]]}}}],["fork",{"_index":33,"t":{"284":{"position":[[0,4]]},"352":{"position":[[11,4]]}}}],["ftp",{"_index":322,"t":{"2290":{"position":[[0,5]]}}}],["fundament",{"_index":185,"t":{"1663":{"position":[[0,12]]}}}],["game",{"_index":140,"t":{"1258":{"position":[[0,4]]}}}],["gbn协议（回退重传协议，go",{"_index":314,"t":{"2278":{"position":[[0,15]]}}}],["gbn和sr",{"_index":319,"t":{"2282":{"position":[[0,8]]}}}],["geometri",{"_index":2,"t":{"11":{"position":[[4,8]]}}}],["get（th",{"_index":236,"t":{"2054":{"position":[[0,9]]}}}],["github",{"_index":34,"t":{"337":{"position":[[0,6]]},"352":{"position":[[2,6]]},"377":{"position":[[3,6]]},"1073":{"position":[[0,6]]},"1075":{"position":[[0,6]]},"1123":{"position":[[0,10]]},"1185":{"position":[[0,8]]},"1187":{"position":[[0,8]]},"1212":{"position":[[0,6]]}}}],["githubpag",{"_index":132,"t":{"1127":{"position":[[0,15]]}}}],["github账号，安装github",{"_index":129,"t":{"1119":{"position":[[0,21]]}}}],["h1",{"_index":176,"t":{"1597":{"position":[[0,4]]}}}],["h5",{"_index":212,"t":{"1941":{"position":[[0,9]]}}}],["hello",{"_index":213,"t":{"1952":{"position":[[0,5]]}}}],["hi，thi",{"_index":224,"t":{"2009":{"position":[[0,7]]}}}],["html",{"_index":101,"t":{"858":{"position":[[5,4]]},"864":{"position":[[0,8]]},"913":{"position":[[13,4]]},"1371":{"position":[[3,4]]},"1482":{"position":[[0,4]]},"1534":{"position":[[4,4]]},"1536":{"position":[[0,4]]},"1546":{"position":[[0,8]]},"1815":{"position":[[0,6]]},"1817":{"position":[[4,4]]}}}],["http",{"_index":233,"t":{"2044":{"position":[[0,12]]},"2046":{"position":[[0,8]]},"2048":{"position":[[0,9]]}}}],["http/http",{"_index":320,"t":{"2285":{"position":[[0,10]]}}}],["hue",{"_index":324,"t":{"2417":{"position":[[0,7]]}}}],["i18n",{"_index":115,"t":{"1028":{"position":[[0,4]]}}}],["icmp",{"_index":286,"t":{"2198":{"position":[[0,8]]},"2199":{"position":[[4,12]]}}}],["id",{"_index":40,"t":{"370":{"position":[[5,2]]},"1951":{"position":[[0,9]]}}}],["idea",{"_index":50,"t":{"479":{"position":[[0,10]]},"537":{"position":[[0,8]]}}}],["idea创建java",{"_index":78,"t":{"539":{"position":[[0,14]]}}}],["ieee",{"_index":266,"t":{"2134":{"position":[[4,4]]}}}],["if...els",{"_index":46,"t":{"419":{"position":[[0,9]]}}}],["ifram",{"_index":174,"t":{"1591":{"position":[[0,6]]}}}],["infin",{"_index":192,"t":{"1721":{"position":[[0,8]]}}}],["innerhtml",{"_index":186,"t":{"1672":{"position":[[0,9]]}}}],["intens",{"_index":326,"t":{"2421":{"position":[[0,13]]}}}],["ip",{"_index":103,"t":{"894":{"position":[[0,4]]},"2165":{"position":[[0,6]]},"2166":{"position":[[4,6]]},"2170":{"position":[[4,4]]},"2172":{"position":[[4,6]]}}}],["ipv4（32位）和ipv6（128",{"_index":282,"t":{"2182":{"position":[[4,22]]}}}],["ipv6",{"_index":280,"t":{"2180":{"position":[[4,4]]}}}],["ip数据报的分片（frag",{"_index":274,"t":{"2168":{"position":[[4,20]]}}}],["java",{"_index":49,"t":{"459":{"position":[[0,10]]},"461":{"position":[[0,7]]},"463":{"position":[[0,9]]},"541":{"position":[[0,9]]},"543":{"position":[[0,11]]},"544":{"position":[[0,4]]},"546":{"position":[[0,4]]},"548":{"position":[[0,4]]},"550":{"position":[[0,9]]}}}],["javascript",{"_index":145,"t":{"1276":{"position":[[14,10]]},"1278":{"position":[[14,10]]},"1286":{"position":[[3,10]]},"1288":{"position":[[7,10]]},"1486":{"position":[[3,10]]},"1820":{"position":[[0,10]]},"1822":{"position":[[0,10]]},"1828":{"position":[[0,10]]},"2006":{"position":[[0,10]]}}}],["jdk",{"_index":82,"t":{"553":{"position":[[0,3]]}}}],["jetzihan",{"_index":225,"t":{"2009":{"position":[[11,8]]}}}],["jre",{"_index":83,"t":{"555":{"position":[[0,3]]}}}],["jre和jdk",{"_index":81,"t":{"552":{"position":[[0,7]]}}}],["js",{"_index":102,"t":{"862":{"position":[[0,6]]},"916":{"position":[[6,2]]},"918":{"position":[[0,2]]},"929":{"position":[[11,2]]},"1103":{"position":[[8,2]]},"1562":{"position":[[11,2]]},"1650":{"position":[[0,2]]}}}],["json",{"_index":31,"t":{"256":{"position":[[3,4]]},"1984":{"position":[[0,4]]},"1986":{"position":[[0,6]]}}}],["jsx",{"_index":142,"t":{"1268":{"position":[[3,3]]},"1270":{"position":[[8,3]]},"1274":{"position":[[17,3]]},"1276":{"position":[[2,3]]},"1278":{"position":[[6,3]]}}}],["key",{"_index":36,"t":{"350":{"position":[[3,3]]},"368":{"position":[[10,3]]},"1471":{"position":[[2,3]]}}}],["lan",{"_index":245,"t":{"2095":{"position":[[0,7]]}}}],["length",{"_index":199,"t":{"1753":{"position":[[0,6]]}}}],["light",{"_index":4,"t":{"15":{"position":[[3,5]]}}}],["local",{"_index":123,"t":{"1055":{"position":[[21,5]]},"2095":{"position":[[8,6]]}}}],["log",{"_index":66,"t":{"511":{"position":[[0,3]]}}}],["man",{"_index":248,"t":{"2097":{"position":[[0,7]]}}}],["materi",{"_index":3,"t":{"13":{"position":[[3,8]]}}}],["math",{"_index":51,"t":{"482":{"position":[[0,4]]}}}],["max",{"_index":64,"t":{"507":{"position":[[0,3]]}}}],["max_valu",{"_index":198,"t":{"1738":{"position":[[12,9]]}}}],["metropolitan",{"_index":249,"t":{"2097":{"position":[[8,13]]}}}],["min",{"_index":63,"t":{"505":{"position":[[0,3]]}}}],["min_valu",{"_index":197,"t":{"1738":{"position":[[0,9]]}}}],["modul",{"_index":109,"t":{"967":{"position":[[0,6]]}}}],["mongodb",{"_index":9,"t":{"38":{"position":[[0,7]]},"40":{"position":[[3,7]]}}}],["mvvm",{"_index":26,"t":{"160":{"position":[[0,13]]},"329":{"position":[[0,13]]}}}],["mysql",{"_index":91,"t":{"645":{"position":[[6,5]]},"647":{"position":[[12,5]]}}}],["n",{"_index":316,"t":{"2278":{"position":[[21,1]]}}}],["nan",{"_index":191,"t":{"1719":{"position":[[5,3]]}}}],["nat",{"_index":283,"t":{"2184":{"position":[[9,3]]},"2187":{"position":[[4,7]]}}}],["netlifi",{"_index":136,"t":{"1213":{"position":[[0,9]]}}}],["network",{"_index":244,"t":{"2094":{"position":[[25,8]]},"2095":{"position":[[20,8]]},"2096":{"position":[[19,8]]},"2097":{"position":[[27,8]]}}}],["next",{"_index":100,"t":{"820":{"position":[[0,4]]}}}],["node",{"_index":108,"t":{"929":{"position":[[0,10]]}}}],["node.j",{"_index":107,"t":{"920":{"position":[[0,7]]},"1044":{"position":[[0,12]]}}}],["nodej",{"_index":25,"t":{"158":{"position":[[0,9]]},"327":{"position":[[0,9]]},"926":{"position":[[3,6]]},"1136":{"position":[[0,11]]}}}],["nodejs和npm",{"_index":133,"t":{"1134":{"position":[[0,13]]}}}],["nodemon",{"_index":98,"t":{"794":{"position":[[0,7]]}}}],["null",{"_index":180,"t":{"1633":{"position":[[12,4]]},"1704":{"position":[[0,4]]},"1706":{"position":[[12,4]]}}}],["number",{"_index":182,"t":{"1637":{"position":[[0,6]]}}}],["nuxt.j",{"_index":13,"t":{"87":{"position":[[2,7]]}}}],["object",{"_index":184,"t":{"1645":{"position":[[0,6]]}}}],["orbitcontrols.j",{"_index":160,"t":{"1352":{"position":[[0,24]]}}}],["organizationnam",{"_index":117,"t":{"1032":{"position":[[0,16]]}}}],["origin",{"_index":170,"t":{"1519":{"position":[[10,6]]}}}],["ospf",{"_index":297,"t":{"2219":{"position":[[4,12]]}}}],["oss",{"_index":27,"t":{"180":{"position":[[0,8]]},"222":{"position":[[0,8]]},"1166":{"position":[[0,8]]}}}],["p",{"_index":175,"t":{"1595":{"position":[[0,3]]}}}],["p2p",{"_index":230,"t":{"2030":{"position":[[7,5]]}}}],["page",{"_index":125,"t":{"1073":{"position":[[7,5]]}}}],["pages和netlifi",{"_index":135,"t":{"1212":{"position":[[7,17]]}}}],["pan",{"_index":241,"t":{"2094":{"position":[[0,9]]}}}],["parsefloat",{"_index":196,"t":{"1736":{"position":[[0,10]]}}}],["parseint",{"_index":57,"t":{"495":{"position":[[0,8]]},"1734":{"position":[[0,8]]}}}],["path",{"_index":111,"t":{"977":{"position":[[4,4]]}}}],["pdf",{"_index":323,"t":{"2292":{"position":[[0,5]]}}}],["person",{"_index":242,"t":{"2094":{"position":[[10,9]]}}}],["picgo",{"_index":30,"t":{"189":{"position":[[0,7]]},"231":{"position":[[0,7]]},"1175":{"position":[[0,7]]}}}],["pop",{"_index":200,"t":{"1764":{"position":[[5,7]]}}}],["post",{"_index":96,"t":{"777":{"position":[[0,4]]}}}],["pow",{"_index":67,"t":{"513":{"position":[[0,3]]}}}],["preset",{"_index":120,"t":{"1038":{"position":[[0,7]]}}}],["printf",{"_index":85,"t":{"576":{"position":[[0,6]]}}}],["println",{"_index":84,"t":{"574":{"position":[[0,7]]}}}],["project.config.json",{"_index":223,"t":{"1992":{"position":[[5,19]]}}}],["projectnam",{"_index":118,"t":{"1034":{"position":[[0,11]]}}}],["prop",{"_index":141,"t":{"1260":{"position":[[3,5]]}}}],["protocol",{"_index":313,"t":{"2276":{"position":[[22,9]]},"2278":{"position":[[23,9]]}}}],["push",{"_index":134,"t":{"1203":{"position":[[0,6]]},"1766":{"position":[[5,7]]}}}],["push到github",{"_index":131,"t":{"1125":{"position":[[0,23]]}}}],["qa",{"_index":221,"t":{"1978":{"position":[[3,2]]}}}],["random",{"_index":77,"t":{"533":{"position":[[0,6]]}}}],["rdt",{"_index":305,"t":{"2262":{"position":[[0,7]]}}}],["rdt1.0",{"_index":306,"t":{"2264":{"position":[[0,6]]}}}],["rdt2.0",{"_index":307,"t":{"2266":{"position":[[0,6]]}}}],["rdt2.1",{"_index":308,"t":{"2268":{"position":[[0,6]]}}}],["rdt2.2",{"_index":309,"t":{"2270":{"position":[[0,6]]}}}],["rdt3.0",{"_index":310,"t":{"2272":{"position":[[0,6]]}}}],["re",{"_index":106,"t":{"909":{"position":[[0,3]]}}}],["react",{"_index":14,"t":{"88":{"position":[[2,5]]},"1224":{"position":[[9,5]]},"1234":{"position":[[4,5]]},"1243":{"position":[[0,7]]},"1247":{"position":[[7,5]]},"1250":{"position":[[0,8]]},"1266":{"position":[[0,5]]},"1270":{"position":[[15,5]]},"1274":{"position":[[9,5]]},"1280":{"position":[[14,5]]},"1282":{"position":[[7,5]]},"1286":{"position":[[17,5]]},"1294":{"position":[[0,5]]},"1296":{"position":[[4,5]]},"1298":{"position":[[0,5]]}}}],["react.j",{"_index":128,"t":{"1105":{"position":[[0,8]]}}}],["render",{"_index":6,"t":{"19":{"position":[[4,8]]},"1333":{"position":[[0,13]]}}}],["repeat",{"_index":318,"t":{"2280":{"position":[[22,7]]}}}],["req",{"_index":105,"t":{"907":{"position":[[0,3]]}}}],["request",{"_index":104,"t":{"903":{"position":[[3,7]]}}}],["rgb",{"_index":327,"t":{"2423":{"position":[[0,7]]},"2435":{"position":[[0,10]]}}}],["rint",{"_index":61,"t":{"501":{"position":[[0,4]]}}}],["rip",{"_index":295,"t":{"2217":{"position":[[4,9]]}}}],["rm",{"_index":271,"t":{"2143":{"position":[[10,4]]}}}],["round",{"_index":62,"t":{"503":{"position":[[0,5]]}}}],["rtt",{"_index":240,"t":{"2087":{"position":[[5,3]]}}}],["satur",{"_index":325,"t":{"2419":{"position":[[0,15]]}}}],["scanner",{"_index":86,"t":{"578":{"position":[[0,7]]}}}],["scene",{"_index":157,"t":{"1335":{"position":[[0,9]]}}}],["se",{"_index":79,"t":{"544":{"position":[[5,2]]}}}],["search",{"_index":122,"t":{"1055":{"position":[[14,6]]}}}],["secret",{"_index":37,"t":{"364":{"position":[[3,7]]}}}],["setter",{"_index":163,"t":{"1417":{"position":[[6,6]]}}}],["show",{"_index":166,"t":{"1473":{"position":[[2,4]]},"1475":{"position":[[10,4]]}}}],["sin",{"_index":69,"t":{"517":{"position":[[0,3]]}}}],["sitemap.json",{"_index":218,"t":{"1971":{"position":[[0,12]]}}}],["slide",{"_index":311,"t":{"2276":{"position":[[0,14]]}}}],["smtp",{"_index":238,"t":{"2056":{"position":[[0,10]]}}}],["sql",{"_index":93,"t":{"694":{"position":[[0,9]]}}}],["sqrt",{"_index":68,"t":{"515":{"position":[[0,4]]}}}],["squar",{"_index":138,"t":{"1254":{"position":[[0,6]]}}}],["sr协议(选择重传协议，select",{"_index":317,"t":{"2280":{"position":[[0,21]]}}}],["static",{"_index":48,"t":{"450":{"position":[[0,6]]}}}],["string",{"_index":89,"t":{"620":{"position":[[3,6]]},"628":{"position":[[0,6]]},"1641":{"position":[[0,6]]}}}],["support",{"_index":228,"t":{"2021":{"position":[[0,7]]}}}],["switch",{"_index":47,"t":{"425":{"position":[[0,6]]}}}],["swizzl",{"_index":124,"t":{"1059":{"position":[[0,7]]}}}],["symbol",{"_index":183,"t":{"1643":{"position":[[0,6]]}}}],["tabbar",{"_index":211,"t":{"1932":{"position":[[0,6]]}}}],["taglin",{"_index":116,"t":{"1030":{"position":[[0,7]]}}}],["tailwind",{"_index":11,"t":{"75":{"position":[[0,8]]},"81":{"position":[[3,8]]}}}],["tan",{"_index":71,"t":{"521":{"position":[[0,3]]}}}],["tcp",{"_index":231,"t":{"2040":{"position":[[0,5]]},"2246":{"position":[[4,5]]},"2255":{"position":[[4,7]]}}}],["tcp和udp",{"_index":304,"t":{"2257":{"position":[[0,12]]}}}],["tcp拥塞（congest",{"_index":301,"t":{"2235":{"position":[[0,19]]}}}],["templat",{"_index":165,"t":{"1440":{"position":[[2,10]]},"1465":{"position":[[2,10]]}}}],["themeconfig",{"_index":119,"t":{"1036":{"position":[[0,11]]}}}],["three.j",{"_index":0,"t":{"3":{"position":[[0,8]]},"5":{"position":[[3,8]]}}}],["three.js使用base64编码制作textur",{"_index":156,"t":{"1324":{"position":[[0,29]]}}}],["timelin",{"_index":226,"t":{"2017":{"position":[[0,8]]}}}],["titl",{"_index":112,"t":{"1019":{"position":[[0,5]]},"1569":{"position":[[0,5]]}}}],["todegre",{"_index":75,"t":{"529":{"position":[[0,9]]}}}],["toexponenti",{"_index":193,"t":{"1726":{"position":[[0,13]]}}}],["tofix",{"_index":194,"t":{"1728":{"position":[[0,7]]}}}],["token",{"_index":41,"t":{"377":{"position":[[10,5]]},"1079":{"position":[[3,5]]}}}],["toprecis",{"_index":195,"t":{"1730":{"position":[[0,11]]}}}],["toradian",{"_index":76,"t":{"531":{"position":[[0,9]]}}}],["tostr",{"_index":55,"t":{"491":{"position":[[0,8]]},"1724":{"position":[[0,8]]}}}],["transform",{"_index":169,"t":{"1519":{"position":[[0,9]]}}}],["typeof",{"_index":190,"t":{"1698":{"position":[[0,6]]}}}],["udp",{"_index":232,"t":{"2042":{"position":[[0,5]]},"2248":{"position":[[4,5]]},"2249":{"position":[[6,7]]},"2251":{"position":[[6,7]]}}}],["undefin",{"_index":179,"t":{"1633":{"position":[[0,9]]},"1700":{"position":[[0,9]]},"1706":{"position":[[0,9]]}}}],["url",{"_index":97,"t":{"783":{"position":[[3,3]]},"785":{"position":[[3,3]]},"880":{"position":[[0,20]]},"913":{"position":[[3,3]]},"1021":{"position":[[0,3]]}}}],["v",{"_index":164,"t":{"1423":{"position":[[2,1]]},"1425":{"position":[[2,1]]},"1438":{"position":[[2,1]]},"1440":{"position":[[17,1]]},"1442":{"position":[[0,1],[8,1]]},"1444":{"position":[[7,1]]},"1463":{"position":[[0,1]]},"1465":{"position":[[19,1]]},"1467":{"position":[[0,1]]},"1469":{"position":[[0,1]]},"1473":{"position":[[0,1]]},"1475":{"position":[[0,1],[8,1]]},"1477":{"position":[[0,1],[7,1]]},"1502":{"position":[[0,1]]},"1504":{"position":[[0,1]]}}}],["valueof",{"_index":56,"t":{"493":{"position":[[0,7]]},"1732":{"position":[[0,7]]}}}],["vanilla",{"_index":127,"t":{"1103":{"position":[[0,7]]}}}],["vant",{"_index":210,"t":{"1886":{"position":[[0,8]]}}}],["var",{"_index":177,"t":{"1621":{"position":[[0,3]]}}}],["vercel",{"_index":126,"t":{"1087":{"position":[[0,6]]}}}],["video",{"_index":172,"t":{"1584":{"position":[[0,5]]},"1586":{"position":[[0,5]]}}}],["vs",{"_index":162,"t":{"1413":{"position":[[7,2]]},"1415":{"position":[[5,2]]},"1475":{"position":[[5,2]]}}}],["vue",{"_index":19,"t":{"115":{"position":[[0,8]]},"117":{"position":[[0,3]]},"203":{"position":[[0,7]]},"212":{"position":[[0,8]]},"214":{"position":[[0,3]]},"1357":{"position":[[0,5]]},"1401":{"position":[[5,3]]},"1447":{"position":[[3,3]]}}}],["vue.j",{"_index":18,"t":{"108":{"position":[[0,8]]},"113":{"position":[[0,9]]},"205":{"position":[[0,8]]},"210":{"position":[[0,9]]}}}],["vue工程中安装threej",{"_index":158,"t":{"1348":{"position":[[0,16]]}}}],["wan",{"_index":246,"t":{"2096":{"position":[[0,7]]}}}],["web",{"_index":235,"t":{"2052":{"position":[[0,5]]}}}],["web1.0",{"_index":22,"t":{"151":{"position":[[0,6]]},"320":{"position":[[0,6]]}}}],["web2.0",{"_index":23,"t":{"153":{"position":[[0,6]]},"322":{"position":[[0,6]]}}}],["web3.0",{"_index":24,"t":{"155":{"position":[[0,6]]},"324":{"position":[[0,6]]}}}],["wide",{"_index":247,"t":{"2096":{"position":[[8,5]]}}}],["wifi",{"_index":263,"t":{"2130":{"position":[[0,6]]}}}],["win10",{"_index":92,"t":{"647":{"position":[[2,5]]}}}],["window",{"_index":312,"t":{"2276":{"position":[[15,6]]}}}],["window.alert",{"_index":188,"t":{"1676":{"position":[[0,12]]}}}],["world",{"_index":214,"t":{"1952":{"position":[[6,5]]}}}],["wxml",{"_index":215,"t":{"1957":{"position":[[0,8]]},"1994":{"position":[[0,8]]}}}],["wxss",{"_index":216,"t":{"1959":{"position":[[0,8]]},"2004":{"position":[[0,4]]}}}],["xxx.json",{"_index":222,"t":{"1990":{"position":[[0,12]]}}}],["xxxvalu",{"_index":52,"t":{"485":{"position":[[0,8]]}}}],["yuv",{"_index":330,"t":{"2428":{"position":[[0,7]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":2,"t":"three.js 简介​ three.js 是一个基于 WebGL 的 JavaScript 3D 库，它可以让你在浏览器中使用 JavaScript 创建 3D 图形。three.js 的目标是让 3D 在 Web 上变得简单。","s":"three.js 基础","u":"/blog/2022/10/18/threejs","h":"","p":1},{"i":4,"t":"three.js 是一个基于 WebGL 的 JavaScript 3D 库，它可以让你在浏览器中使用 JavaScript 创建 3D 图形。three.js 的目标是让 3D 在 Web 上变得简单。","s":"three.js 简介","u":"/blog/2022/10/18/threejs","h":"#threejs-简介","p":1},{"i":6,"t":"three.js 可以直接在原生 html 语法中引用。 <!-- 开发环境版本，包含了有帮助的命令行警告 --><script src=\"https://cdn.jsdelivr.net/npm/three/build/three.js\"></script><!-- 生产环境版本，优化了尺寸和速度 --><script src=\"https://cdn.jsdelivr.net/npm/three/build/three.min.js\"></script> 或者可以使用 npm 安装。 npm install three","s":"引入 three.js","u":"/blog/2022/10/18/threejs","h":"#引入-threejs","p":1},{"i":8,"t":"three.js 的程序结构如下图所示。","s":"程序结构","u":"/blog/2022/10/18/threejs","h":"#程序结构","p":1},{"i":10,"t":"下面是一个简单的 three.js 程序。 <!DOCTYPE html><html lang=\"en\"><head> <meta charset=\"UTF-8\"> <title>第一个three.js文件_WebGL三维场景</title> <style> body { margin: 0; overflow: hidden; /* 隐藏body窗口区域滚动条 */ } </style> <!--引入three.js三维引擎--> <script src=\"http://www.yanhuangxueyuan.com/versions/threejsR92/build/three.js\"></script> <!-- <script src=\"./three.js\"></script> --> <!-- <script src=\"http://www.yanhuangxueyuan.com/threejs/build/three.js\"></script> --></head><body><script> /** * 创建场景对象Scene */ var scene = new THREE.Scene(); /** * 创建网格模型 */ // var geometry = new THREE.SphereGeometry(60, 40, 40); //创建一个球体几何对象 var geometry = new THREE.BoxGeometry(100, 100, 100); //创建一个立方体几何对象Geometry var material = new THREE.MeshLambertMaterial({ color: 0x0000ff }); //材质对象Material var mesh = new THREE.Mesh(geometry, material); //网格模型对象Mesh scene.add(mesh); //网格模型添加到场景中 /** * 光源设置 */ //点光源 var point = new THREE.PointLight(0xffffff); point.position.set(400, 200, 300); //点光源位置 scene.add(point); //点光源添加到场景中 //环境光 var ambient = new THREE.AmbientLight(0x444444); scene.add(ambient); // console.log(scene) // console.log(scene.children) /** * 相机设置 */ var width = window.innerWidth; //窗口宽度 var height = window.innerHeight; //窗口高度 var k = width / height; //窗口宽高比 var s = 200; //三维场景显示范围控制系数，系数越大，显示的范围越大 //创建相机对象 var camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000); camera.position.set(200, 300, 200); //设置相机位置 camera.lookAt(scene.position); //设置相机方向(指向的场景对象) /** * 创建渲染器对象 */ var renderer = new THREE.WebGLRenderer(); renderer.setSize(width, height);//设置渲染区域尺寸 renderer.setClearColor(0xb9d3ff, 1); //设置背景颜色 document.body.appendChild(renderer.domElement); //body元素中插入canvas对象 //执行渲染操作 指定场景、相机作为参数 renderer.render(scene, camera);</script></body></html>","s":"基本使用","u":"/blog/2022/10/18/threejs","h":"#基本使用","p":1},{"i":12,"t":"//创建一个立方体几何对象Geometryvar geometry = new THREE.BoxGeometry(100, 100, 100);// 创建一个球体几何对象var geometry = new THREE.SphereGeometry(60, 40, 40);","s":"几何体 Geometry","u":"/blog/2022/10/18/threejs","h":"#几何体-geometry","p":1},{"i":14,"t":"//材质对象Materialvar material = new THREE.MeshLambertMaterial({ color: 0x0000ff});","s":"材质 Material","u":"/blog/2022/10/18/threejs","h":"#材质-material","p":1},{"i":16,"t":"//点光源var point = new THREE.PointLight(0xffffff);point.position.set(400, 200, 300); //点光源位置scene.add(point); //点光源添加到场景中//环境光var ambient = new THREE.AmbientLight(0x444444);scene.add(ambient); 参数0xffffff定义的是光照强度。如果设置为0x000000，那么就是没有光照，如果设置为0xffffff，那么就是最大光照。three.js引擎对WebGL光照模型算法都进行了封装，不需要你了解计算机图形学， 可以直接使用调用three.js光源相关API直接创建一个光源对象。","s":"光源 Light","u":"/blog/2022/10/18/threejs","h":"#光源-light","p":1},{"i":18,"t":"//创建相机对象var camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000);camera.position.set(200, 300, 200); //设置相机位置camera.lookAt(scene.position); //设置相机方向(指向的场景对象) 把该构造函数参数中用到的参数s，也就是代码var s = 200;中定义的一个系数，可以把 200 更改为 300 ,你会发现立方体显示效果变小，这很好理解，相机构造函数的的前四个参数定义的是拍照窗口大小， 就像平时拍照一样，取景范围为大，被拍的人相对背景自然变小了。camera.position.set(200, 300, 200);和camera.lookAt( scene.position);定义的是相机的位置和拍照方向，可以更改camera.position.set(200,300,200) ;参数重新定义的相机位置，把第一个参数也就是x坐标从200更改为250， 你会发现立方的在屏幕上呈现的角度变了，这就像你生活中拍照人是同一个人，但是你拍照的位置角度不同，显示的效果肯定不同。","s":"相机 Camera","u":"/blog/2022/10/18/threejs","h":"#相机-camera","p":1},{"i":20,"t":"//创建渲染器对象var renderer = new THREE.WebGLRenderer();renderer.setSize(width, height);//设置渲染区域尺寸renderer.setClearColor(0xb9d3ff, 1); //设置背景颜色document.body.appendChild(renderer.domElement); //body元素中插入canvas对象//执行渲染操作 指定场景、相机作为参数renderer.render(scene, camera);","s":"渲染器 Renderer","u":"/blog/2022/10/18/threejs","h":"#渲染器-renderer","p":1},{"i":23,"t":"// 渲染函数function render() { renderer.render(scene, camera);//执行渲染操作 mesh.rotateY(0.01);//每次绕y轴旋转0.01弧度}//间隔20ms周期性调用函数fun,20ms也就是刷新频率是50FPS(1s/20ms)，每秒渲染50次setInterval(\"render()\", 20); 上面代码定义了一个渲染函数render()，函数中定义了三个语句，通过setInterval(\"render()\",20); 可以实现m每间隔20毫秒调用一次函数render()，每次调用渲染函数的时候，执行renderer.render(scene,camera); 渲染出一帧图像，执行mesh.rotateY(0.01);语句使立方体网格模型绕y轴旋转0.01弧度。 实际开发中，为了更好的利用浏览器渲染，可以使用函数requestAnimationFrame()代替setInterval() 函数，requestAnimationFrame()和setInterval()一样都是浏览器window对象的方法。 // 渲染函数function render() { renderer.render(scene, camera);//执行渲染操作 mesh.rotateY(0.01);//每次绕y轴旋转0.01弧度 requestAnimationFrame(render);//请求再次执行渲染函数render}render();//执行渲染函数render","s":"周期渲染","u":"/blog/2022/10/18/threejs","h":"#周期渲染","p":1},{"i":25,"t":"为了使用鼠标操作三维场景，可以借助three.js众多控件之一OrbitControls.js。 可以通过npm install three-orbitcontrols安装OrbitControls.js，也可以直接下载OrbitControls.js 文件，然后在html文件中引入OrbitControls.js文件。 // 引入OrbitControls.js<script src=\"js/OrbitControls.js\"></script> 或 npm install three-orbitcontrols 首先可以使用它响应鼠标的上下左右： function render() { renderer.render(scene, camera);//执行渲染操作}render();var controls = new THREE.OrbitControls(camera, renderer.domElement);//创建控件对象controls.addEventListener('change', render);//监听鼠标、键盘事件 OrbitControls.js控件提供了一个构造函数THREE.OrbitControls() ，把一个相机对象作为参数的时候，执行代码new THREE.OrbitControls(camera,renderer.domElement)，浏览器会自动检测鼠标键盘的变化， 并根据鼠标和键盘的变化更新相机对象的参数，比如你拖动鼠标左键，浏览器会检测到鼠标事件，把鼠标平移的距离按照一定算法转化为相机的的旋转角度，你可以联系生活中相机拍照,即使景物没有变化，你的相机拍摄角度发生了变化，自然渲染器渲染出的结果就变化了，通过定义监听事件controls.addEventListener('change', render) ，如果你连续操作鼠标，相机的参数不停的变化，同时会不停的调用渲染函数render()进行渲染，这样threejs就会使用相机新的位置或角度数据进行渲染。 执行构造函数THREE.OrbitControls()浏览器会同时干两件事，一是给浏览器定义了一个鼠标、键盘事件，自动检测鼠标键盘的变化，如果变化了就会自动更新相机的数据， 执行该构造函数同时会返回一个对象，可以给该对象添加一个监听事件，只要鼠标或键盘发生了变化，就会触发渲染函数。","s":"鼠标动作","u":"/blog/2022/10/18/threejs","h":"#鼠标动作","p":1},{"i":27,"t":"介绍​ Flask 是一个基于 Python 的 Web 后端框架。通过 Flask 可以快速写出一个 API 接口。MongoDB 是一个基于分布式文件存储的数据库。本文将介绍如何使用 Flask 和 MongoDB 实现简单的 Web 后端。","s":"Flask（PythonWeb）+MongoDB 实现简单Web后端","u":"/blog/2022/10/27/flask-back","h":"","p":26},{"i":29,"t":"Flask 是一个基于 Python 的 Web 后端框架。通过 Flask 可以快速写出一个 API 接口。MongoDB 是一个基于分布式文件存储的数据库。本文将介绍如何使用 Flask 和 MongoDB 实现简单的 Web 后端。","s":"介绍","u":"/blog/2022/10/27/flask-back","h":"#介绍","p":26},{"i":31,"t":"由于涉及插值以及条件渲染，这里简单地使用到了 Vue.js 框架。首先进行框架引入： <script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script> 接着，创建基本的输入框和按钮： <body> <div id=\"app\" class=\"main\"> <h1>输入姓名查询学号</h1> <!-- 值绑定，监听输入框的内容变化，如果 Input 内内容改变，data.id就改变为这个值 --> <input v-model=\"id\" type=\"text\" placeholder=\"学号\" /> <!-- @onclick 触发事件名，后面的函数在 method 中 --> <button class=\"button\" id=\"signIn\" @click=\"Query\">查询</button> </div></body> 在这里，我们将数据用 v-model 方法绑定到 input 之上，当 input 的值发生变化时，数据值也会发生变化。当我们点击 button 时，我们将调用 Query 函数。 下面，创造 Vue 实例： 注意，上面的 div 被绑定了实例名 app。 <div id=\"app\" class=\"main\"> <!-- ... --></div> 那么，现在我们就可以在 script 中创建 Vue 实例了： <script> // 创建vue实例 const app = new Vue({ // 交代宿主是谁，id用 # 查询 el: \"#app\", // 数据容器 data: { id:\"\", result:\"\", }, // 函数方法 methods: { Query() { // ... 查询方法 } }, })</script> 在这里可以看到，我们在 data 中初始化了两个变量，分别是 id 和 result。id 用于存储输入框的值，result 用于存储查询结果。当 input 的值发生变化时，id 的值也会跟踪发生变化。 用 VScode 插件 Live Server 启动一个本地服务器，打开 index.html（或直接打开），可以看到如下界面：","s":"前端部分","u":"/blog/2022/10/27/flask-back","h":"#前端部分","p":26},{"i":33,"t":"接下来，我们需要实现一个 API 接口，用于接收前端传来的数据，查询数据库，返回查询结果。 在 Python 中，import 用于导入模块，from 用于导入模块中的某个函数。这里需要 Flask 的 Flask 和 request 函数，用于实现http服务器。 from flask import Flask, request 为了服务器能被直接访问，我们需要设置跨域访问。 from flask_cors import CORSCORS(app, resources=r'/*') # 注册 CORS, \"/*\" 允许访问所有api 接着，可以创建一个 Flask 实例： app = Flask(__name__) 然后，我们需要创建一个路由，用于接收前端传来的数据，接受使用 GET 进行访问，访问路径为 /getname： @app.route('/getname', methods=['GET']) 接着，我们需要获取前端传来的数据，这里我们需要用到 request 函数，它可以获取前端传来的数据： def check(): # 默认返回内容，result是根据查询结果要返回的 return_dict = {'return_code': '200', 'return_info': '处理成功', 'result': False} # 判断入参是否为空 if request.args is None: return_dict['return_code'] = '5004' return_dict['return_info'] = '请求参数为空' # 告知前端，查询失败 return json.dumps(return_dict, ensure_ascii=False) # 获取传入的参数 get_data = request.args.to_dict() # 获取参数中名为 ID 的参数值 ID = get_data.get('ID') # 对参数进行操作，用 ID 去查询数据库 return_dict['result'] = getMongo(ID) # 返回查询结果 return json.dumps(return_dict, ensure_ascii=False) 在这里，还没有写查询数据库的方法，我们先把这个方法写出来一个简单的应答，然后一会再去实现查询数据库的方法。 def getMongo(ID): # 这里是查询数据库的方法 # 这里先返回一个简单的应答 return True 最后，在主函数中，启动 Flask 服务器： if __name__ == \"__main__\": app.run(debug=True) 这里的 debug=True 是为了方便调试，可以在控制台看到错误信息。并在本地进行运行。","s":"Flask API接口","u":"/blog/2022/10/27/flask-back","h":"#flask-api接口","p":26},{"i":35,"t":"这里，我们先不管数据库，对接口进行简单的测试。在这里，我使用 Apifox，进行接口测试。下载后打开。 点击新建团队： 然后，新建项目： 打开项目后，选择快捷请求： 在 Pycharm 中，运行 getname.py。 可以看到下方控制台提示，服务器已经启动。访问地址为 http://127.0.0.0:5000。我们复制这个地址，然后在 Apifox 中，粘贴到地址栏中，在地址后添加访问的接口名：/getname，填写 Params 参数 ID 的值，随便填一个，因为上面写了无论什么时候都返回 True，所以预期结果是 True，点击发送： 可以看到，下面的控制台提示，接口调用成功（200，OK），返回结果为 True。 现在，可以关闭 Apifox 了。","s":"接口测试","u":"/blog/2022/10/27/flask-back","h":"#接口测试","p":26},{"i":37,"t":"上面 Vue 代码中，我们空了一个方法 Query()，这个方法就是用来请求接口的。现在我们使用 XMLHttpRequest 对象来请求接口。 首先初始化一个 XMLHttpRequest 对象： const request = new XMLHttpRequest(); 接着，去发起请求： request.open(\"GET\", \"http://127.0.0.1:5000/getname\" +\"?ID=\"+ this.id); 这里的 GET 是请求方式，http://127.0.0.1:5000 是服务器地址，/getname 是接口名，?ID= 是参数名，this.id 是参数值。this.id 是在 Vue 中调用一个变量的方法。接着，监听请求状态： request.onreadystatechange = () => { // readyState 为 4 时，请求已完成，request.status 为 200 时，请求成功 if (request.readyState === 4 && request.status === 200) { // 格式化返回值为json const obj = JSON.parse(request.responseText); // 打印来看看 console.log(obj); // 让 data 里面的 result 变成这个值 this.result = obj.result; // 打印来看看 console.log(this.result); }}; 最后，发送请求： request.send(); 完整的 Query() 方法如下： Query() { console.log(this.id); // 开始 http 请求 const request = new XMLHttpRequest(); // Ajax 初始化异步请求 // 发起 http 请求 request.open(\"GET\", \"http://127.0.0.1:5000/getname\" +\"?ID=\"+ this.id); request.onreadystatechange = () => { if (request.readyState === 4 && request.status === 200) { // 格式化返回值为json const obj = JSON.parse(request.responseText); // 让 data 里面的 result 变成这个值 this.result = obj.result; console.log(this.result); } }; request.send(); // end} 在保持 Pycharm 运行的情况下，我们在浏览器中打开 index.html，输入 ID，点击查询，按F12查看控制台打印，可以看到服务器向前端返回了 一条应答，状态码为 200，OK，返回结果为 True。","s":"在前端中请求接口","u":"/blog/2022/10/27/flask-back","h":"#在前端中请求接口","p":26},{"i":39,"t":"倘若你不需要配置数据库，或者用 csv 本地文件代替数据库，可以跳过这一节。上面就够用了，你只需要将 MongoDB 函数改写成查询自己的 csv 文件即可。","s":"MongoDB 数据库","u":"/blog/2022/10/27/flask-back","h":"#mongodb-数据库","p":26},{"i":41,"t":"MongoDB 数据库为每个用户提供了 512MB 的免费存储空间，你可以在 MongoDB Atlas 上注册一个免费的数据库。（用来存储你的任务数据完全足够了） Mongo Atlas 提供云数据库服务，这意味着你可以在远程访问你的数据库，而不需要在本地搭建数据库。","s":"注册 MongoDB 账号","u":"/blog/2022/10/27/flask-back","h":"#注册-mongodb-账号","p":26},{"i":43,"t":"你首先需要注册一个 MongoDB 账号，点击 这里 注册。这可能需要你提供邮箱等个人信息。","s":"账号注册","u":"/blog/2022/10/27/flask-back","h":"#账号注册","p":26},{"i":45,"t":"登陆后，你将看到下面的界面： 点击右上角 Create 。 选择 shared 类型的集群，接着选择一家服务提供商，这里是亚马逊，当然，可以试一下微软的 Azure ，说不定国内访问更快。然后选择一个离你最近的地区，比如中国香港，点击 Create Cluster 。 点击右下角的 Create Cluster 。 在出现的窗口中，添加连接 IP 地址。我们需要允许从任何地方访问。因此，单击“允许从任何地方访问”按钮，然后单击“添加 IP 地址”进行设置。选择云环境，即Cloud Environment，IP 地址填写为 0.0.0.0。 接下来，我们需要创建一个用户来连接到此数据库。在“创建数据库用户”窗体上，输入自定义用户名、密码，然后单击“创建数据库用户”。请记住这个密码。","s":"创建数据库","u":"/blog/2022/10/27/flask-back","h":"#创建数据库","p":26},{"i":47,"t":"点击 Connect按钮，连接数据库。 选择 Connect your application ，然后选择 Python ，接着选择 3.12 or later 。 接着，出现了一个连接地址，不勾选 \"Include full example\" 这个地址就是你的数据库连接地址，你需要将它复制下来，稍后会用到。（请一定妥善保存） 链接格式如下： mongodb+srv://YourName:<password>@cluster0.xxxxxx.mongodb.net/?retryWrites=true&w=majority 将其中的 <password> 替换为刚刚你输入的自定义密码。这个才是需要用到的代码，请妥善保存。 举例： mongodb+srv://inannan:12345678@cluster0.xxxxxx.mongodb.net/?retryWrites=true&w=majority","s":"连接数据库","u":"/blog/2022/10/27/flask-back","h":"#连接数据库","p":26},{"i":49,"t":"点击集群名 Cluster0 进入集群。点击添加数据库： 图中有其他数据库，不用管。 创建成功： 插入几条示例数据： 重复几次，示例如下： OK了。 现在我们来看看如何在 Python 中使用 MongoDB。 首先引入需要的依赖： import jsonfrom flask_cors import CORSimport pymongofrom bson import json_util 查询过程： def getMongo(ID): # 链接 MongoDB atlas myclient = pymongo.MongoClient('mongodb+srv://inannan:12345678@cluster0.xxxxxx.mongodb.net/?retryWrites=true&w=majority') # 数据库的连接地址，改成你自己的 mydb = myclient['mydb'] # 数据库名称 mycol = mydb['db1'] # 集合名称 myquery = {\"id\": ID} # 查询条件 mydoc = mycol.find(myquery) # 查询结果 # 取出其中的数据格式为json for x in mydoc: # 将x转换为对象 x = json.loads(json_util.dumps(x)) print(x) return x 这里，返回的是一个对象。 重新打开 Apifox，创建一个新的接口，接口地址为：/getname，请求方式为 GET。携带参数 ID，值为 201000000，因为上面在 Mongodb 中插入的数据中，有一个 id 为 201000000 的数据。所以这里就用这个值来测试。 由此可见，我们已经成功的从 MongoDB 中查询到了数据。 返回的结果是一个 json 数据，例如： { \"return_code\": \"200\", \"return_info\": \"处理成功\", \"result\": { \"_id\": {\"$oid\": \"635a918c1be53239a161f777\"}, \"id\": \"201000000\", \"name\": \"JZ\", \"class\": \"数媒20\" }} 可以这样访问 name 的值： result.name 让我们修改前端页面，将数据展示出来。首先创建结果显示框，使用条件渲染，当 result 有值时，才显示结果。 <div v-if=\"result\"> 姓名：{{result.name}} <br/> 班级：{{result.class}}</div>","s":"创建数据集","u":"/blog/2022/10/27/flask-back","h":"#创建数据集","p":26},{"i":51,"t":"我们可以创建多个接口，例如： @app.route('/getname', methods=['GET'])def getname(): ID = request.args.get('ID') result = getMongo(ID) return jsonify(result)@app.route('/getclass', methods=['GET'])def getclass(): ID = request.args.get('ID') result = getMongo(ID) return jsonify(result) 在访问时，只需要在接口地址后面加上 /getname 或者 /getclass 即可。","s":"Flask 多个接口","u":"/blog/2022/10/27/flask-back","h":"#flask-多个接口","p":26},{"i":53,"t":"这只是最简单的一个例子，实际上，我们可以在这个基础上做很多事情。例如： 实现 MongoDB 的增删改查操作，实现注册、登录等功能。 将多个数据存储到一个集合中，实现多个数据的查询。如爬取结果。","s":"扩展应用","u":"/blog/2022/10/27/flask-back","h":"#扩展应用","p":26},{"i":55,"t":"腾讯云服务器部署 Flask 接口 腾讯云 Serverless 部署Flask接口 Ubuntu Nginx 部署 Flask 接口 Windows Nginx 部署 Flask 接口 Vercel 部署 Flask 接口","s":"部署","u":"/blog/2022/10/27/flask-back","h":"#部署","p":26},{"i":57,"t":"GitHub","s":"开源源代码","u":"/blog/2022/10/27/flask-back","h":"#开源源代码","p":26},{"i":60,"t":"前言​ 生活中，我们常常会拿起以前的老照片。但是随着时间的推移，照片被严重氧化失去了原本的颜色。本文将介绍使用百度的API实现老照片上色。","s":"使用百度API实现老照片上色","u":"/blog/baiduoldpic","h":"","p":59},{"i":62,"t":"生活中，我们常常会拿起以前的老照片。但是随着时间的推移，照片被严重氧化失去了原本的颜色。本文将介绍使用百度的API实现老照片上色。","s":"前言","u":"/blog/baiduoldpic","h":"#前言","p":59},{"i":64,"t":"打开百度AI开放平台,点击“注册”，填写账号信息，注册成功.注册成功后选择开放能力-黑白图像上色，开通此项能力。 打开应用列表，创建应用。 记录你的API key和Secret Key。","s":"一、注册百度开发者账号","u":"/blog/baiduoldpic","h":"#一注册百度开发者账号","p":59},{"i":66,"t":"创建Python工程，输入以下的代码： import base64import requests # client_id 为官网获取的API key， client_secret 为官网获取的secret keyhost = 'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=你的AK&client_secret=你的SK'response = requests.get(host)if response: print(response.json()) # 黑白图像上色request_url = \"https://aip.baidubce.com/rest/2.0/image-process/v1/colourize\"# 二进制方式打开图片文件f = open('test.png', 'rb')img = base64.b64encode(f.read()) params = {\"image\":img}access_token = response.json()['access_token']request_url = request_url + \"?access_token=\" + access_tokenheaders = {'content-type': 'application/x-www-form-urlencoded'}response = requests.post(request_url, data=params, headers=headers)if response: print(response.json()) # base64编码转图片img = base64.b64decode(response.json()['image'])file = open('result.jpg', 'wb')file.write(img)file.close() 运行代码，输出图片，对比如下： 处理前： 处理后： （图片来源于网络，侵删）","s":"二、编码","u":"/blog/baiduoldpic","h":"#二编码","p":59},{"i":68,"t":"好像免费的只能调用一次，你可以再去领取，否则免费余额用光后会报错。 参考文章地址","s":"备注","u":"/blog/baiduoldpic","h":"#备注","p":59},{"i":70,"t":"JavaScript Python Java html Live Editor function helloWorld() { console.log('Hello, world!'); } function helloWorld() { console.log('Hello, world!'); } Result Loading... Live Editor def hello_world(): print(\"Hello, world!\") def hello_world(): print(\"Hello, world!\") Result Loading... Live Editor class HelloWorld { public static void main(String args[]) { System.out.println(\"Hello, World\"); } } class HelloWorld { public static void main(String args[]) { System.out.println(\"Hello, World\"); } } Result Loading... Live Editor <div>Hello World!</div> <div>Hello World!</div> Result Loading...","s":"在线编码器","u":"/blog/codingbox","h":"","p":69},{"i":74,"t":"快速链接 根据其官网介绍，得知 DaisyUI 是最流行, 免费以及开源的 Tailwind CSS 组件库。它有下面的优点： Tailwind CSS 的插件 快速开发 更纯净的 HTML 深度自定义、可定制主题 纯净 CSS、支持任意框架（Vue、React、Angular等）","s":"DaisyUI","u":"/blog/daily","h":"#daisyui","p":71},{"i":76,"t":"快速链接 Tailwind CSS是一个CSS样式库，它为我们提供了构建定制设计而无需使用自定义样式所需的所有构建块，在国外开发中十分流行。Tailwind 的组件十分有设计感，并且它在最新的2.0版本中加入了深色模式，开箱即用，无需配置。DaisyUI 就基于 Tailwind 进行开发。","s":"Tailwind CSS","u":"/blog/daily","h":"#tailwind-css","p":71},{"i":78,"t":"可以在 Vue.js 中进行尝试，现在我们开始安装一个 Vue2 工程。 vue init webpack DaisyuiUse","s":"前提工作","u":"/blog/daily","h":"#前提工作","p":71},{"i":80,"t":"前提条件： Node.js Tailwind 脚手架。由于 DaisyUI 是一个 Tailwind 插件，所以我们必须先下载引入 Tailwind。","s":"安装 DaisyUI","u":"/blog/daily","h":"#安装-daisyui","p":71},{"i":82,"t":"首先通过控制台进行安装。 npm install -D tailwindcss@latest postcss@latest autoprefixer@latest 然后初始化： npx tailwindcss init 这将会在您的工程根目录创建一个最小的 tailwind.config.js 文件。","s":"安装 Tailwind","u":"/blog/daily","h":"#安装-tailwind","p":71},{"i":84,"t":"npm i daisyui 然后，在 tailwind.config.js 文件里追加 daisyUI 的设置: module.exports = { //... plugins: [require(\"daisyui\")],}","s":"安装 DaisyUI","u":"/blog/daily","h":"#安装-daisyui-1","p":71},{"i":86,"t":"打开vue项目，在src目录下新建一个css文件：index.css，在文件中写入： @tailwind base;@tailwind components;@tailwind utilities; 在 main.js 中引入 index.css。 打开vue项目中刚刚配置新建的 tailwind.config.js ，更改配置 Purge:[ ]，写入如下代码： './index.html', './src/**/*.{vue,js,ts,jsx,tsx}' //包含了src文件夹下所有的vue,js等等文件 安装完成了，我们就可以开始使用 DaisyUI 了。","s":"创建 css 文件","u":"/blog/daily","h":"#创建-css-文件","p":71},{"i":90,"t":"可以通过 tailwind.config.js 来配置 daisyUI 的配置。 默认配置: module.exports = { //... // add daisyUI plugin plugins: [require(\"daisyui\")], // daisyUI config (optional) daisyui: { styled: true, themes: true, base: true, utils: true, logs: true, rtl: false, prefix: \"\", darkTheme: \"dark\", },}","s":"全局配置","u":"/blog/daily","h":"#全局配置","p":71},{"i":92,"t":"styled​ Boolean (default: true) 如果设置为 true，组件会有默认的颜色和样式，所以你不需要去进行设计。 如果设为 false，组件是没有颜色和视觉样式的，所以你可以在一个基本的骨架上设计你自己的颜色和视觉样式。 themes​ Boolean or array (default: true) 如果设为 true，则会包含所有的主题。 如果设为 false，只有 light（默认主题）会被加载。 如果是一个数组，则只有数组包含的主题会被加载，数组的第一个主题会成为默认主题。 在阅读更多关于主题的内容 base​ Boolean (default: true) 如果设为 true，一些基础样式 会被添加。 utils​ Boolean (default: true) 如果设为 true，响应式和工具类会被添加 logs​ Boolean (default: true) 如果设为 true，daisyUI 会在 CSS 构建时在命令行窗口输出日志。 rtl​ Boolean (default: false) 如果设为 true，你的主题会是从右向左展示。你需要在你的 body 标签添加dir='rtl'。 如果你在 daisyUI 中使用 RTL 选项，我建议使用tailwindcss-flip 插件，因为这个插件可以自动帮助你翻转所有 Tailwind 工具类。 darkTheme​ String (default: \"dark\") 选择另一个主题作为系统自动黑暗模式的主题。dark 是默认黑暗模式主题（或者自定义的主题名字是 dark）。通过这个配置，你可以给默认黑暗模式主题设定另一个主题。 prefix​ String (default: \"\") 给 daisyUI 的类名称增加一个前缀（包含所有的组件类，修饰类和响应类）。 例如：btn 会变为 prefix-btn。 如果你还使用其他的 CSS 库，并且有冲突，可以用这个方法来避免冲突问题。 颜色名字（例如： bg-primary）或者 border-radius（例如：rounded-box）不会受到这个参数的影响，因为这些参数是作为 Tailwind CSS 类的扩展来设计的。 daisyUI 的prefix 的功能（例如daisy-）与 TailwindCSS 的prefix 的功能（例如 tw-）一起使用时，最后的类名是 tw-daisy-btn。","s":"参数说明","u":"/blog/daily","h":"#参数说明","p":71},{"i":95,"t":"在 DaisyUI 中，我们可以使用 class 类直接声明组件。 <button class=\"btn\">Button</button> 可以通过增加 daisyUI 组件类来修改这个组件: <button class=\"btn btn-primary\">Button</button> 也可以通过 TailwindCSS 的工具类来改变这个组件的样式: <button class=\"btn w-64 rounded-full\">Button</button>","s":"创建按钮","u":"/blog/daily","h":"#创建按钮","p":71},{"i":97,"t":"EasyX用户图形界面的构建​ 详情访问https://docs.easyx.cn/zh-cn/drawing-func","s":"EasyX图形界面构建","u":"/blog/easyx","h":"","p":96},{"i":99,"t":"详情访问https://docs.easyx.cn/zh-cn/drawing-func","s":"EasyX用户图形界面的构建","u":"/blog/easyx","h":"#easyx用户图形界面的构建","p":96},{"i":101,"t":"以首页为例 //绘制首页void display_head(Btree &T,linklist& L) { // 初始化绘图窗口 大小：宽和高 initgraph(1000, 700); //设置背景图片 IMAGE background;//定义一个图片名. loadimage(&background, \"图片1.png\", 1000, 700, 1);//从图片文件获取图像 putimage(0, 0, &background);//绘制图像到屏幕，图片左上角坐标为(0,0) MOUSEMSG m; //要用到鼠标时，需要定义鼠标操作 //功能1 查找 setfillcolor(RED);//设置几何图形颜色 solidroundrect(0, 200, 200, 150, 0, 0); //无边框的圆角矩形 参数：左 下 右 上（坐标） 圆角宽度 圆角宽度 //不过建议看官方文档换一个几何图形 比如无圆角的矩形 //设置以下字体的样式 30：大小 第二个数字不用管 settextstyle(30, 0, \"华文中宋\"); //字体背景透明,字体颜色默认白色 setbkmode(TRANSPARENT); //在界面上绘制字体 20：距离左边界距离 160：距离右边界距离 outtextxy(20, 160, \"股票查询\"); //功能2 分析 setfillcolor(RED); solidroundrect(0, 280, 200, 230, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); outtextxy(20, 240, \"股票分析\"); AddStyle(200, 280, 210, 230); //功能3 退出 setfillcolor(RED); solidroundrect(0, 360, 200, 310, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); outtextxy(20, 320, \"退出程序\"); AddStyle(200, 360, 210, 310); while (1) { //判断鼠标操作 m = GetMouseMsg(); if (m.x >= 0 && m.x <= 300 && m.y >= 130 && m.y <= 210) { //这个是响应区域，例如查找功能的实现区域在solidroundrect(0, 280, 200, 230, 0, 0);也就是x为0——200，y为230-280范围 //鼠标在这一范围内单击时，则执行下面的操作 //查找 if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. closegraph();//关闭此图形界面，注意：有打开就要有关闭 display_find(T,L); break; } } else if (m.x >= 0 && m.x <= 300 && m.y >= 210 && m.y <= 290) { //分析 if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. closegraph(); display_analyse(T,L); break; } } else if (m.x >= 0 && m.x <= 300 && m.y >= 210 && m.y <= 370) { //退出 if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. closegraph(); Exit_0(); break; } } else { //可以不写 //setlinecolor(WHITE); //rectangle(90, 95, 310, 160); } }}","s":"1.菜单构建","u":"/blog/easyx","h":"#1菜单构建","p":96},{"i":103,"t":"以查找的3.4算法为例 void readtolist(Btree &T,linklist L) { MOUSEMSG m; initgraph(1000, 700); IMAGE background;//定义一个图片名. loadimage(&background, \"图片3.png\", 1000, 700, 1);//从图片文件获取图像 putimage(0, 0, &background);//绘制图像到屏幕，图片左上角坐标为(0,0) /*一些算法，与界面无关，省略...*/ //输入框的调用，注意，输入框只能输入char类型的，必须先获取char类型再转为需要的类型 char C[100] = {}; InputBox(C, 100, \"请输入您想查询的日期：\"); day = C; //定义一个滚动值，初始为0 int scrolly = 0; up: //翻页时从这里重新执行，先看下面 int isfind = 0;//判断是否找到 for (int b = 0; b < sumday; b++) { if (p[b]->date == day) { isfind = 1; plist op = new PNode; op = p[b]->next; //常规操作，设置背景图片，可以有也可以没有，没有的话默认上面的 initgraph(1000, 700); IMAGE background;//定义一个图片名. loadimage(&background, \"图片3.png\", 1000, 700, 1);//从图片文件获取图像 putimage(0, 0, &background);//绘制图像到屏幕，图片左上角坐标为(0,0) //设置模块颜色为紫色 setfillcolor(MAGENTA); solidroundrect(0, 0, 800, 160, 0, 0); //无边框的圆角矩形 settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(WHITE); //注：输出也必须是char【】类型，需要转化 char* C = new char[1024]; strcpy(C, day.c_str());//string转化为char【】 outtextxy(20, 90, C); setfillcolor(WHITE); solidroundrect(0, 20, 200, 80, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(20, 34, \"返回\"); setcolor(WHITE); setfillcolor(WHITE); solidroundrect(1200, 300, 900, 350, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(930, 310, \"上翻\"); setcolor(WHITE); //这些地方可以简写，我都是复制的，所以懒得删了 setfillcolor(WHITE); solidroundrect(1200, 370, 900, 420, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(930, 380, \"下翻\"); setcolor(WHITE); settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(25, 140, \"股票代码\"); setbkmode(TRANSPARENT); outtextxy(179, 140, \"股票名称\"); setbkmode(TRANSPARENT); outtextxy(287, 140, \"开盘价\"); setbkmode(TRANSPARENT); outtextxy(387, 140, \"收盘价\"); setbkmode(TRANSPARENT); outtextxy(491, 140, \"涨跌幅\"); //设置初始高度值，数据列初始高度，随上翻、下翻而变化 int het = 160+ scrolly; while (op) { //股票代码 strcpy(C, op->code.c_str()); outtextxy(25, het, C); //这里的上边距是het，是可变的值，便于翻页 //股票名称 strcpy(C, op->nick.c_str()); outtextxy(179,het,C); //开盘价 strcpy(C, op->str_openprice.c_str()); outtextxy(287, het, C); //收盘价 strcpy(C, op->str_closeprice.c_str()); outtextxy(387, het, C); //涨跌幅 strcpy(C, op->str_updrate.c_str()); outtextxy(491, het, C); het += 20; //每条股票之间间距为20 op = op->next; } //上面的固定UI必须重复一遍，因为翻页之后会遮住原来的UI，所以必须重绘 setfillcolor(MAGENTA); solidroundrect(0, 0, 800, 160, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(WHITE); strcpy(C, day.c_str()); outtextxy(20, 90, C); setfillcolor(WHITE); solidroundrect(0, 20, 200, 80, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(20, 34, \"返回\"); setcolor(WHITE); settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(25, 140, \"股票代码\"); //settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(179, 140, \"股票名称\"); //settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(287, 140, \"开盘价\"); //settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(387, 140, \"收盘价\"); //settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(491, 140, \"涨跌幅\"); //判断鼠标操作 while (1) { m = GetMouseMsg(); if (m.x >= 0 && m.x <= 200 && m.y >= 20 && m.y <= 90) { //返回 solidroundrect(0, 20, 200, 80, 0, 0); if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. display_find(T, L); break; } } else if (m.x >= 890 && m.x <= 1300 && m.y >= 290 && m.y <= 350) { //上翻指令捕获 solidroundrect(1200, 300, 900, 350, 0, 0); //左上右下 if (m.uMsg == WM_LBUTTONDOWN && scrolly < 0) { //如果按下鼠标左键实现相应功能. scrolly = scrolly + 500; //上翻，每条股票的位置均下移500,注意scrolly有个封顶值，不然会一直翻页空白页面 goto up;//修改scrolly相当于修改了上面的het，回到原处继续执行 break; } } else if (m.x >= 890 && m.x <= 1300 && m.y >= 360 && m.y <= 430) { //下翻捕获指令 solidroundrect(1200, 370, 900, 420, 0, 0);; //左上右下 if (m.uMsg == WM_LBUTTONDOWN && scrolly > -4300) { //如果按下鼠标左键实现相应功能. scrolly = scrolly - 500; goto up; break; } } } break; } } if (isfind == 0) { //未找到显示UI setfillcolor(MAGENTA); solidroundrect(0, 280, 800, 150, 0, 0); //无边框的圆角矩形 参数：左 上 右 下（坐标） 圆角宽度 圆角宽度 settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(WHITE); outtextxy(20, 160, \"未找到结果\"); AddStyle(800, 200, 210, 150); setfillcolor(WHITE); solidroundrect(0, 20, 200, 80, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(20, 34, \"返回\"); setcolor(WHITE); while (1) { m = GetMouseMsg(); if (m.x >= 0 && m.x <= 200 && m.y >= 20 && m.y <= 80) { //返回 if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. display_find(T, L); break; } } } } getchar(); closegraph();//关闭图形界面}","s":"2.数据的输入和显示","u":"/blog/easyx","h":"#2数据的输入和显示","p":96},{"i":105,"t":"tip 2021,12,24,Data Struct 仓库地址https://github.com/inannan423/Data_struct_EasyX","s":"实现效果","u":"/blog/easyx","h":"#实现效果","p":96},{"i":107,"t":"Vue.js简介​","s":"认识Vue框架","u":"/blog/first-blog-post","h":"","p":106},{"i":110,"t":"Vue.js是一个用于创建用户界面的开源渐进式JavaScript框架，也是一个创建单页应用的Web应用框架。Vue.js是目前前端界三大框架之一（其他两个分别是React和Angular），旨在更好地组织与简化Web开发。Vue所关注的核心是MVC模式中的视图层，同时，它也能方便地获取数据更新，并通过组件内部特定的方法实现视图与模型的交互。","s":"定义它","u":"/blog/first-blog-post","h":"#定义它","p":106},{"i":112,"t":"提到Vue就必须提到他的创造者尤雨溪，它是中国程序员的骄傲。尤雨溪出生于中国无锡，上海念了三年高中，高中毕业后去美国念大学，尤雨溪的大学专业是室内艺术和艺术史，在Parsons读了一个美术设计和技术的硕士。尤雨溪被JavaScript吸引，JS能够快速构建一些东西并分享给别人，这是吸引尤雨溪开始Web开发和JavaScript编程的原因。尤雨溪在Google创意实验室工作的时候，工作需要在浏览器上进行大量原型设计，尤雨溪最初使用Angular，尤雨溪将喜欢的部分从Angular中提出来建立一个非常轻巧的库，Vue大概就这么开始了。","s":"谁创造了他？","u":"/blog/first-blog-post","h":"#谁创造了他","p":106},{"i":114,"t":"组件 把构建web界面比喻为装修房子，当你的家里需要三张床的时候，如果你使用原生js，那么你就必须将这床的代码重复三次。而如果你使用vue，你只需要在某处定义它，在需要的地方调用即可，这就大大增强了开发效率和代码的可维护性，当所有床，比如上千张、上万张需要修改的时候，你就不再需要一张一张地去修改它，你只需要将模板修改掉就行，全局就会一起修改。 下面是vue编写一个按钮组件的范例： // 定义一个名为 button-counter 的新组件Vue.component('button-counter', { data: function () { return { count: 0 } }, template: '<button v-on:click=\"count++\">You clicked me {{ count }} times.</button>'}) 控件跟数据自动绑定 在使用vue之前，想在页面上显示 Hello World ，(注意，此时的Hello World是作为一个使用js从后端读取来的数据，因此不能直接使用<div>Hello World</div>这样的代码）。 原生的js ： <div id = 'app'></div><script>// 先定义字符串var string = 'Hello World';// 获取 html domvar app = document.getElementById('#app');// 最后显示数据（挂载更新到页面上）app.innerHtml = string</script> 而使用vue之后： <div id='#app'>{{message}}</div>/*{{}} 是插值表达式， message 作为变量名*/<script>var. vm = new Vue({ el:'#app', // 挂载（绑定），相当于app 这个div 跟vue 实例绑定了， 在这个容器（div）里，就可以用vue来操作了 data:{ message:'Hello World' }})</script> 最后，在页面上展示的效果肯定是Hello World 而不是{{message}},此时的message已经被vue 解析成了 Hello World,这里并没有出现document.getElementById等操作dom的语法， 它只是对我们的数据进行了操作，这就是vue 其中的奥秘之处，它内部创建虚拟dom 来说实时跟踪，数据的变化，最后一次性的更新到页面上。 此时你会觉得，这不就是换一种方法嘛？但实际上不是的，原生js操作html dom去更新页面很耗资源，他要重新加载新dom树（刷新页面），随着现代前端的发展，一个页面的功能和交互越来越多，当要重新加载新的dom树，就显得尤为浪费，加载的时间就会很长，vue就是解决这一问题的方法之一。 参考文献 https://zhuanlan.zhihu.com/p/78855665","s":"Vue.js的特点","u":"/blog/first-blog-post","h":"#vuejs的特点","p":106},{"i":116,"t":"Vue生命周期是指vue实例对象从创建之初到销毁的过程，vue所有功能的实现都是围绕其生命周期进行的，在生命周期的不同阶段调用对应的钩子函数可以实现组件数据管理和DOM渲染两大重要功能。","s":"Vue的生命周期","u":"/blog/first-blog-post","h":"#vue的生命周期","p":106},{"i":118,"t":"Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统，提供： 通过 @vue/cli 实现的交互式的项目脚手架。 通过 @vue/cli + @vue/cli-service-global 实现的零配置原型开发。 一个运行时依赖 (@vue/cli-service)，该依赖： 可升级； 基于 webpack 构建，并带有合理的默认配置； 可以通过项目内的配置文件进行配置； 可以通过插件进行扩展。 一个丰富的官方插件集合，集成了前端生态中最好的工具。 一套完全图形化的创建和管理 Vue.js 项目的用户界面。","s":"Vue-cli","u":"/blog/first-blog-post","h":"#vue-cli","p":106},{"i":120,"t":"意义​ 受大佬 愧怍 的建议，我要规范一下自己的 Git Commit 规范，首先因为规范的提交命名一目了然，其次看起来也更高级，参考愧怍的文档，我也将相关规范记录如下。 Git 每次提交代码，都要写 Commit message（提交说明），否则就不允许提交。但是，一般来说，commit message 应该清晰明了，说明本次提交的目的。这样，就可以让其他人了解到你的代码提交的目的，从而更好地协作开发。 目前，社区有多种 Commit message 的写法规范。本文介绍 Angular 规范 是目前使用最广的写法，比较合理和系统化。","s":"git commit 规范","u":"/blog/gitrules","h":"","p":119},{"i":122,"t":"受大佬 愧怍 的建议，我要规范一下自己的 Git Commit 规范，首先因为规范的提交命名一目了然，其次看起来也更高级，参考愧怍的文档，我也将相关规范记录如下。 Git 每次提交代码，都要写 Commit message（提交说明），否则就不允许提交。但是，一般来说，commit message 应该清晰明了，说明本次提交的目的。这样，就可以让其他人了解到你的代码提交的目的，从而更好地协作开发。 目前，社区有多种 Commit message 的写法规范。本文介绍 Angular 规范 是目前使用最广的写法，比较合理和系统化。","s":"意义","u":"/blog/gitrules","h":"#意义","p":119},{"i":124,"t":"核心语法如下： type(scope?): subject #scope is optional; multiple scopes are supported (current delimiter options: \"/\", \"\\\" and \",\") type commit 的类型 feat 新功能、新特性 fix 修改 bug perf 更改代码，以提高性能 refactor 代码重构（重构，在不影响代码内部行为、功能下的代码修改） docs 文档修改 style 代码格式修改, 注意不是 css 修改（例如分号修改） test 测试用例新增、修改 build 影响项目构建或依赖项修改 revert 恢复上一次提交 ci 持续集成相关文件修改 chore 其他修改（不在上述类型中的修改） release 发布新版本 workflow 工作流相关文件修改","s":"语法","u":"/blog/gitrules","h":"#语法","p":119},{"i":126,"t":"commit message 描述 chore: init 初始化项目 chore: update deps 更新依赖 chore: wording 调整文字（措词） chore: fix typos 修复拼写错误 chore: release v1.0.0 发布 1.0.0 版本 fix: icon size 修复图标大小 fix: value.length -> values.length value 变量调整为 values feat(blog): add comment section blog 新增评论部分 feat: support typescript 新增 typescript 支持 feat: improve xxx types 改善 xxx 类型 style(component): code 调整 component 代码样式 refactor: xxx 重构 xxx perf(utils): random function 优化 utils 的 random 函数 docs: xxx.md 添加 xxx.md 文章","s":"示例","u":"/blog/gitrules","h":"#示例","p":119},{"i":128,"t":"前言​ 对于一名合格的前端工程师来说，UI 图转代码的能力是不可或缺的能力，在人工智能大力发展的今天，UI 转代码的 AI 工具也在便捷着前端工程师的工作，这里就借助即时设计工具和 codefun 插件来介绍一下基本流程。","s":"即时设计和 codefun 使用","u":"/blog/jsdesigncodefun","h":"","p":127},{"i":130,"t":"对于一名合格的前端工程师来说，UI 图转代码的能力是不可或缺的能力，在人工智能大力发展的今天，UI 转代码的 AI 工具也在便捷着前端工程师的工作，这里就借助即时设计工具和 codefun 插件来介绍一下基本流程。","s":"前言","u":"/blog/jsdesigncodefun","h":"#前言","p":127},{"i":133,"t":"即时设计是可云端编辑的专业级 UI 设计工具，为中国设计师量身打造。它和Adobe XD、Figma、Sketch等设计工具有着一样的功能。","s":"介绍","u":"/blog/jsdesigncodefun","h":"#介绍","p":127},{"i":135,"t":"在即时设计官网下载即时设计，安装即可使用。","s":"下载和安装","u":"/blog/jsdesigncodefun","h":"#下载和安装","p":127},{"i":137,"t":"有时候我们需要导出设计师设计的图片，我们只需要在项目中选中图片，在右边的边栏中选择导出，即可导出图片。 注意 为了图片在设备上能够清晰地显示，请选择合适的尺寸，这里选择的是 4x。","s":"导出切图","u":"/blog/jsdesigncodefun","h":"#导出切图","p":127},{"i":140,"t":"CodeFun 是一款 UI 设计稿智能生成源代码的工具，可以将 Sketch、Photoshop 的设计稿智能转换为前端源代码。它最大的特色是： 精准还原设计稿，不再需要反复 UI 走查 可以生成如工程师手写一般的代码 在日常工作中，诸如像扣像素、调布局这些繁琐、枯燥的体力活都将得到极大的削减，原来 8 小时的工作量只需要 10 来分钟即可完成。","s":"介绍","u":"/blog/jsdesigncodefun","h":"#介绍-1","p":127},{"i":142,"t":"打开需要使用的 UI 稿件。 找到左侧的 UI 按钮，点击后会弹出一个弹窗，选择左上角的省略号，选择获取更多插件。在搜索中搜索 CODE.FUN，点击安装即可。 回到 UI 稿件，还是在左侧插件栏中，找到 CodeFun。 使用微信登录。点击 + 号，创建项目，点击页面的标题，选中页面，点击上传，当然，也可以选择上传全部。 待处理完成。完成后点击打开，在项目的页面中选择需要转换的页面。 点击查看代码，即可查看转换后的代码。 提示 建议不要完全使用 CodeFun 生成的代码，因为它生成的代码不是很规范，不利于维护。使用这个工具是用来参考数据比例以及布局的，然后自己手动写代码。","s":"下载和安装","u":"/blog/jsdesigncodefun","h":"#下载和安装-1","p":127},{"i":145,"t":"July 15, 2022 · 18 min read Chengzihan Orange Chengzihan","s":"前端发展概况介绍","u":"/blog/page/2","h":"","p":143},{"i":148,"t":"Web前端: 顾名思义是来做Web的前端的。我们这里所说的前端泛指Web前端，也就是在Web应用中用户可以看得见碰得着的东西。包括Web页面的结构、Web的外观视觉表现以及Web层面的交互实现。 Web前端： 1）掌握HTML，能够书写语义合理，结构清晰，易维护的HTML结构。 2）掌握CSS，能够还原设计人员的视觉设计，并兼容业界承认的主流浏览器。 3）熟悉JavaScript，了解ECMAScript基础内容，掌握1~2种js框架，如Vue、React 4）对常见的浏览器兼容问题有清晰的理解，并有可靠的解决方案。 5）对性能有一定的要求，了解yahoo的性能优化建议，并可以在项目中有效实施。 6）...... Web后端： 1）精通jsp，servlet，java bean，JMS，EJB，Jdbc，Flex开发，或者对相关的工具、类库以及框架非常熟悉，如Velocity，Spring，Hibernate，iBatis，OSGI等，对Web开发的模式有较深的理解 2）练使用oracle、sqlserver、mysql等常用的数据库系统，对数据库有较强的设计能力 3）熟悉maven项目配置管理工具，熟悉tomcat、jboss等应用服务器，同时对在高并发处理情况下的负载调优有相关经验者优先考虑 4）精通面向对象分析和设计技术，包括设计模式、UML建模等 5）熟悉网络编程，具有设计和开发对外API接口经验和能力，同时具备跨平台的API规范设计以及API高效调用设计能力 6）......","s":"什么是前端","u":"/blog/page/2","h":"#什么是前端","p":143},{"i":150,"t":"随着web2.0时代的到来，前端在web开发中所占的比重越来越大，专注于内容呈现和网站交互的前端开发人员也逐渐展现出其不可替代性。前端所涉及的领域甚至不限于一个浏览器（web）应用，如HTML5技术允许我们开发原生的移动应用；React Native、Flutter等跨平台框架可以用于开发跨平台的移动应用；还有近些年相当流行的微信、支付宝小程序等。此外，随着微软的新项目React Native for Windows的发布，使用前端技术开发Windows桌面应用也成为了可能。 可以说，大前端时代即将到来。什么是大前端时代？众所周知，前端是专注客户端逻辑的，客户端可以分为web前端、Windows（操作系统）桌面端、安卓前端、ios前端、小程序前端等，但是就目前而言，这些前端领域的技术栈仍不相通，Web前端主要使用的是H5技术栈，衍生了React、Angular、Vue三大框架，Windows端采用C#或者C++及其QT库来编写页面和逻辑，安卓使用Kotlin做逻辑描述，ios使用UIkit等语言绘制界面，总之就是十分不统一，但是作为相通的客户端，都是编写页面和逻辑，为什么不能一端开发，多端使用呢？因此，大前端时代到来了。 什么是大前端 简单来说，大前端就是所有前端的统称，比如Android、iOS、web、Watch等，最接近用户的那一层也就是UI层，然后将其统一起来，就是大前端。大前端最大的特点在于只需一次开发，就能适用于所有平台。开发者不用为一个APP需要做Android和iOS两种模式而担心。大前端不仅会成为移动开发与Web前端的发展趋势，也将会是所有智能设备显示终端的开发技术趋势。 例如，React推出了React Native，是Facebook于2015年4月开源的跨平台移动应用开发框架，是Facebook早先开源的JS框架 React 在原生移动应用平台的衍生产物，支持iOS和安卓两大平台。它的作用就是使用React技术栈（也就是js技术栈）进行开发后，可以同时运行在安卓和ios端。Learn once, write anywhere的理念也得到了记得的赞扬和发展。Flutter也在其后诞生，它也可以通过一个技术栈构建多端的代码。2018年，华为、小米、OPPO等厂商推出了快应用，运行在系统层面上的小程序。最近，React Native for Windows被微软发布，使用web技术栈构建Windows程序也成为可能了。 未来很有可能，前端技术栈都向Web技术栈靠拢，前端工程师只需要精修一种技术栈，可以将代码运行在各种操作系统的各个屏幕上，又或者，在微信云开发之类的云后端出现下，未来可能构建C/S架构只需要前端工程师和云后端工程师，这也许就是技术发展的意义。 下面，我们将回顾前端的发展进程。","s":"前端发展概况","u":"/blog/page/2","h":"#前端发展概况","p":143},{"i":152,"t":"随着1994年美国的Netscape公司推出第一款浏览器NCSAMosaic（后改名Navigator），web1.0时代正式到来（web的概念可追溯到更早）。安装了该浏览器的用户，可以浏览来自于其他网站的信息（主要是文字）。参考远古功能机浏览器界面，只有链接、文字、少量有图片。 这个时代前端的代表技术主要是HTML4，CSS2，JavaScript4(ES4)。三者的关系可以描述为：HTML告诉浏览器网页上有什么，CSS告诉浏览器他们长什么样，JavaScript描述他们有什么行为。直至今日，这三者仍是前端开发的三大核心（以JavaScript为重中之重）。这时候的前端专注于静态内容的呈现，但由于技术的限制，前端的呈现能力显得非常不足(页面长得丑，死板)。","s":"Web1.0- 静态内容呈现","u":"/blog/page/2","h":"#web10--静态内容呈现","p":143},{"i":154,"t":"简单来说，web2.0更强调网页的交互性，它不再将用户局限在对网页的浏览上，而是根据用户的操作，来展现不同的网页内容。用户可以在不刷新页面的情况下，通过简单的点击、按键输入等获取不同的内容。 在web2.0时代，网页具备了展示更多媒体应用的能力，如播放音频，视频，查看PDF文档等。同时技术的标准化使前端开发人员逐渐从浏览器之争的创伤之中走出来，也大大推动了互联网技术的进步。 web2.0时代最具代表性的前端技术莫过于HTML5 + CSS3和ES5 / ES6了，其中HTML5为网页提供了诸多能力，包括播放音视频，canvas，svg，多线程，本地存储，离线应用，websocket，web worker等等；CSS3则大大增强了网页的渲染能力，包括阴影，渐变，新的布局模型，2D/3D变形和动画等等。 除了在web中的应用，前端开发还触及到了其他相当多的领域，包括原生移动应用(主要借助HTML5相关技术)，跨平台移动开发（React Native和Flutter），微信小程序，以及后续的Windows桌面应用开发等，此外，在一些新兴领域，如智能设备，智能医疗，计算机视觉，大数据等，前端技术都占有一席之地。因为前端最重要的工作，就是负责内容的呈现和与用户的交互。 这时候的前端把更多注意力放在了用户交互上，并大大增强了内容呈现的能力，致力于带给用户更好的浏览体验。 为什么产生了前端框架 随着前端需要处理的数据越来越多，网站的页面越来越多，需要写的样式越来越多，为了简化开发流程，才出现了诸多的组件库和框架，框架如Vue、React等，组件库包括Element、Bootstrap等。框架的掌握是每个前端开发成员的必备技能。","s":"Web2.0- 交互时代","u":"/blog/page/2","h":"#web20--交互时代","p":143},{"i":156,"t":"实际上web3.0时代并未真正到来，它只是业内一种概念性的描述，并且本质上不是技术的革新，而是web理念的一种革新。我们先来看一下web2.0时代遇到的一些问题。 随着web2.0时代的蓬勃发展，大量的网站涌现出来，web中的数据量呈指数级增长。对于普通浏览器用户来说，web技术不止带来了大量的免费信息，也带来了筛选信息的烦恼。如今的互联网上充斥着大量的数据，如何找到准确、可靠、最新的信息，即使对专业的计算机开发人员来说，也是个不小的问题。此外，各个网站之间相对独立，信息只有通过同时浏览过这些网站的人才能发生交互。我们知道，数据的整合会创造更大的价值，而目前这种整合几乎完全依赖于每个web参与者，这显然无法完全发挥这些数据的价值。 web3.0则会通过第三方平台来整合数据，为用户筛选和提炼更有价值的信息，这可能需要借助其他领域的技术来实现，如人工智能、大数据等等。另外web3.0的实践者希望所有的应用都完全基于web，即使用web技术实现需要复杂的系统应用才能实现的功能，例如微软的基于web的在线office应用等。 web3.0背景下，前端需要具备呈现更加复杂的数据的能力，并提供不亚于复杂的系统应用的交互能力和业务逻辑处理能力。 web3总结 实际上，web3技术希望所有的应用通过web完成，在这种条件下，客户端算力更依赖于网络了，而不是本地的","s":"Web3.0","u":"/blog/page/2","h":"#web30","p":143},{"i":159,"t":"由于JavaScript单线程的语言特性以及不具备如java般严谨的面向对象特征，它一度被认为只能用于前端开发，不能适应后端复杂业务逻辑的开发，这主要基于三点： 单线程特性，无法充分利用多核CPU强大的计算能力，不利于开发分布式应用。 不够安全，一旦主线程出错，整个执行过程就会崩溃 没有严谨的面向对象特性，封装程度不够，无法处理复杂的业务逻辑 但同时作为面向前端浏览器环境所设计的一门语言，JavaScript也具有一些其他大部分语言没有的特性，最典型的包括其事件循环机制，同时单线程的特点也可以说是有利有弊。 利用JavaScript的这些语言特点，Ryan Dahl于2009年发布了JavaScript的服务器端运行环境nodejs。它基于谷歌浏览器广受好评的JavaScript引擎–V8引擎，是一个事件驱动的非阻塞I/O模型。它将所有的客户端请求都交给事件循环机制来处理，从而将I/O代价降到极低。由于单线程的语言机制，它不需要处理复杂的线程同步问题，更不会发生死锁等线程问题。随着ES6规范中web worker的出现，nodejs也具备了利用多核CPU的能力（当然仍然无法与java相提并论）。 总的来说，JavaScript和nodejs的发展仍有不足，使用nodejs开发完整后端应用的网站仍然微乎其微，但是有相当多的网站使用nodejs来开发中间件，利用其优秀的I/O性能，处理大量的I/O请求。 nodejs的发展仍然值得期待。","s":"nodejs的兴起","u":"/blog/page/2","h":"#nodejs的兴起","p":143},{"i":161,"t":"英雄终有落幕，尽管jQuery红极一时，但是终究无法应对越来越复杂的前端开发工作。一方面，jQuery大量的优秀特性已经被吸纳为JavaScript标准。另一方面，占有其60%代码量的DOM操作已经被公认为网页的性能杀手，因为DOM操作需要反复地操作文档，并触发网页的重绘和重排，这会严重影响网页的性能，最严重的可能导致页面卡死。此外，使用jQuery开发的网站，会因为大量的DOM操作，需要书写大量的代码，从而变得难以维护。 我们需要有一种更优雅的方式来操作页面，以获得更优秀的用户体验。 为了解决这些问题，前端兴起了组件化开发和MVVM开发模型。 目前对国内影响比较大的当属React和Vue了。2013年，Facebook的前端团队设计了一个崭新的前端框架，它将网页的各个部分拆分成一个个的组件，使用虚拟DOM将页面上的节点存储在内存中，将视图和数据进行绑定。视图的显示完全由数据和模板来驱动，这样当数据发生变化时，开发者不需要考虑如何去进行DOM操作，框架会自动以高效的方式去更新虚拟DOM，然后更新网页内容。开发者只需要专注于数据的操作即可。这样就实现了视图与业务逻辑的分离。 作为国内的一款优秀的前端框架，Vue在前端开发中的地位毋庸置疑。Vue的设计更加符合人们的思维方式，所以上手更快，学习成本更低。但Vue本身并不是严格基于MVVM模型的框架，只是借鉴了MVVM的设计原理。这里就不详述了。 参考文章 http://t.csdn.cn/iEG2D","s":"组件化开发和MVVM的兴起","u":"/blog/page/2","h":"#组件化开发和mvvm的兴起","p":143},{"i":163,"t":"July 13, 2022 · One min read Chengzihan Orange Chengzihan","s":"在线编码器","u":"/blog/page/2","h":"","p":143},{"i":165,"t":"July 12, 2022 · 2 min read Chengzihan Orange Chengzihan","s":"使用百度API实现老照片上色","u":"/blog/page/2","h":"","p":143},{"i":167,"t":"生活中，我们常常会拿起以前的老照片。但是随着时间的推移，照片被严重氧化失去了原本的颜色。本文将介绍使用百度的API实现老照片上色。","s":"前言","u":"/blog/page/2","h":"#前言","p":143},{"i":169,"t":"打开百度AI开放平台,点击“注册”，填写账号信息，注册成功.注册成功后选择开放能力-黑白图像上色，开通此项能力。 打开应用列表，创建应用。 记录你的API key和Secret Key。","s":"一、注册百度开发者账号","u":"/blog/page/2","h":"#一注册百度开发者账号","p":143},{"i":171,"t":"创建Python工程，输入以下的代码： import base64import requests # client_id 为官网获取的API key， client_secret 为官网获取的secret keyhost = 'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=你的AK&client_secret=你的SK'response = requests.get(host)if response: print(response.json()) # 黑白图像上色request_url = \"https://aip.baidubce.com/rest/2.0/image-process/v1/colourize\"# 二进制方式打开图片文件f = open('test.png', 'rb')img = base64.b64encode(f.read()) params = {\"image\":img}access_token = response.json()['access_token']request_url = request_url + \"?access_token=\" + access_tokenheaders = {'content-type': 'application/x-www-form-urlencoded'}response = requests.post(request_url, data=params, headers=headers)if response: print(response.json()) # base64编码转图片img = base64.b64decode(response.json()['image'])file = open('result.jpg', 'wb')file.write(img)file.close() 运行代码，输出图片，对比如下： 处理前： 处理后： （图片来源于网络，侵删）","s":"二、编码","u":"/blog/page/2","h":"#二编码","p":143},{"i":173,"t":"好像免费的只能调用一次，你可以再去领取，否则免费余额用光后会报错。 参考文章地址","s":"备注","u":"/blog/page/2","h":"#备注","p":143},{"i":175,"t":"July 12, 2022 · 6 min read Chengzihan Orange Chengzihan","s":"记一次图床迁移","u":"/blog/page/2","h":"","p":143},{"i":177,"t":"背景 在我的博客建立之初，由于懵懂无知，把图片放在工程本地，导致打包大小变得很大，并且托管到GithubPages后图片加载的速度惨不忍睹。因此我上网搜索一些前辈的经验，这个经验就是建立图床，使用外链引入到Markdown笔记中，这样工程包的大小缩小了，访问速度也有所提升。 ![image.png](https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3p10rb6uwj31400kl7e5.jpg) 最开始使用的图床就是微博图床，首先感谢新浪微博提供的免费图床(对外链无限制),以及速度快到惊人的cdn图片加速服务，还有丰富的浏览器插件，简直是薅羊毛！ 但是，由于这个图床服务并不是微博官方提供给用户的服务，所以，一旦微博停止这个服务，我们的图片将无法访问，有一种“命运攥在别人手里”的感觉。因此，我还决定趁现在博客还不多的时候，将微博图床迁移到别的地方，这里，我选择阿里云oss。","s":"前言","u":"/blog/page/2","h":"#前言","p":143},{"i":179,"t":"首先我要把之前上传到微博图床的图片全部下载下来，放到本地，再转移到阿里云。 解决方案 先用Python爬虫将我的博客上的所有用微博图床存储的图片爬下来放在本地，以图片后缀命名。脚本的核心思想是使通过遍历HTML中的img标签，用正则表达式比对并抓取标签内的src地址参数。 ex = '<img.*?src=\"(.*?)\".*?' # 比对 img_list = re.findall(ex, web_text) 然后再把链接地址对应的图片下载到本地。 使用下面的Pyhton脚本： import reimport requestsdef download_img(): error_img = 0 success_img = 0 url = input('请输入网站地址：') headers = { 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36 Edg/87.0.664.75' } web_text = requests.get(url, headers=headers).text ex = '<img.*?src=\"(.*?)\".*?' img_list = re.findall(ex, web_text) print('图片地址:', img_list) if len(img_list) == 0: print('该站有反爬虫机制，请换一个网站') for img in img_list: try: # 补充协议头 if not (img.startswith('http') or img.startswith('https')): img = 'http:' + img img_binary = requests.get(img, headers=headers).content # 切割出最后一个字符串 file_name = img.split('/')[-1] # 切割 query字符 file_name = file_name.split('?')[0] with open(f'./img/{file_name}', 'wb') as fp: fp.write(img_binary) print(file_name, '，下载成功') success_img += 1 except Exception as e: print(e) error_img += 1 continue print('下载图片完成！') return success_img, error_imgif __name__ == '__main__': success_img, error_img = download_img() print(f'总计下载：{success_img}，下载失败：{error_img}') 执行结果抓图： 保存结果如图： 脚本参考 来自CSDN夏2同学，http://t.csdn.cn/6pWJ5","s":"爬取已经使用的图片","u":"/blog/page/2","h":"#爬取已经使用的图片","p":143},{"i":182,"t":"首先，在阿里云首页选择对象存储OSS服务。","s":"注册","u":"/blog/page/2","h":"#注册","p":143},{"i":184,"t":"点击创建一个新的bucket。 填写bucket参数。","s":"创建bucket","u":"/blog/page/2","h":"#创建bucket","p":143},{"i":186,"t":"打开创建的bucket列表，如图，只需要复制oss-cn-beijing即可，不需要后面的.aliyuncs.com。","s":"获取地域结点信息","u":"/blog/page/2","h":"#获取地域结点信息","p":143},{"i":188,"t":"来到页面的右上角，鼠标放在你的头像上，在弹出的框里选择AccessKey管理。 进入后，创建一个AccessKey。 在弹出的界面里，记住你的accessKeyId和accessKeySecret.","s":"创建AccessKey","u":"/blog/page/2","h":"#创建accesskey","p":143},{"i":190,"t":"在Github中下载PicGo，并点击安装。在电脑桌面右下角的PicGo图标打开软件。在图床设置里面选择阿里云OSS，依照以下步骤填写信息： 设定Keyld：填写刚刚获得的AccessKeyID 设定KeySecret：填写AccessKeyIDSecret 设定储存空间名：填写bucket名称，这里填写的是bucket名称，不是浏览器里的域名。 确认存储区域：填写你的地域节点，注意复制的格式。 指定存储路径：其实就是自定义一个文件夹的名字，以/结尾，它会自动在你的bucket里面创建一个文件夹，并把图片上传进去。 参考文章链接 http://t.csdn.cn/oZkFg","s":"PicGo配置","u":"/blog/page/2","h":"#picgo配置","p":143},{"i":192,"t":"将前面爬取的图片上传到bucket文件夹中。 找到上传后文件的地址。 https://xxxxxx.oss-cn-beijing.aliyuncs.com/blog/1656914971349.png 我们可以观察到该地址是以https://xxxxxx.oss-cn-beijing.aliyuncs.com/blog/作为前缀的，而微博图床的连接是https://tva1.sinaimg.cn/large/1656914971349.png，由于两者后缀可以一一对应，我们只需要到工程文件中替换前缀即可。使用vscode的替换功能。 如图，替换后，全部连接就生效了。","s":"替换原来博客中的微博图床","u":"/blog/page/2","h":"#替换原来博客中的微博图床","p":143},{"i":194,"t":"July 12, 2022 · 9 min read Chengzihan Orange Chengzihan","s":"EasyX图形界面构建","u":"/blog/page/2","h":"","p":143},{"i":196,"t":"详情访问https://docs.easyx.cn/zh-cn/drawing-func","s":"EasyX用户图形界面的构建","u":"/blog/page/2","h":"#easyx用户图形界面的构建","p":143},{"i":198,"t":"以首页为例 //绘制首页void display_head(Btree &T,linklist& L) { // 初始化绘图窗口 大小：宽和高 initgraph(1000, 700); //设置背景图片 IMAGE background;//定义一个图片名. loadimage(&background, \"图片1.png\", 1000, 700, 1);//从图片文件获取图像 putimage(0, 0, &background);//绘制图像到屏幕，图片左上角坐标为(0,0) MOUSEMSG m; //要用到鼠标时，需要定义鼠标操作 //功能1 查找 setfillcolor(RED);//设置几何图形颜色 solidroundrect(0, 200, 200, 150, 0, 0); //无边框的圆角矩形 参数：左 下 右 上（坐标） 圆角宽度 圆角宽度 //不过建议看官方文档换一个几何图形 比如无圆角的矩形 //设置以下字体的样式 30：大小 第二个数字不用管 settextstyle(30, 0, \"华文中宋\"); //字体背景透明,字体颜色默认白色 setbkmode(TRANSPARENT); //在界面上绘制字体 20：距离左边界距离 160：距离右边界距离 outtextxy(20, 160, \"股票查询\"); //功能2 分析 setfillcolor(RED); solidroundrect(0, 280, 200, 230, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); outtextxy(20, 240, \"股票分析\"); AddStyle(200, 280, 210, 230); //功能3 退出 setfillcolor(RED); solidroundrect(0, 360, 200, 310, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); outtextxy(20, 320, \"退出程序\"); AddStyle(200, 360, 210, 310); while (1) { //判断鼠标操作 m = GetMouseMsg(); if (m.x >= 0 && m.x <= 300 && m.y >= 130 && m.y <= 210) { //这个是响应区域，例如查找功能的实现区域在solidroundrect(0, 280, 200, 230, 0, 0);也就是x为0——200，y为230-280范围 //鼠标在这一范围内单击时，则执行下面的操作 //查找 if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. closegraph();//关闭此图形界面，注意：有打开就要有关闭 display_find(T,L); break; } } else if (m.x >= 0 && m.x <= 300 && m.y >= 210 && m.y <= 290) { //分析 if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. closegraph(); display_analyse(T,L); break; } } else if (m.x >= 0 && m.x <= 300 && m.y >= 210 && m.y <= 370) { //退出 if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. closegraph(); Exit_0(); break; } } else { //可以不写 //setlinecolor(WHITE); //rectangle(90, 95, 310, 160); } }}","s":"1.菜单构建","u":"/blog/page/2","h":"#1菜单构建","p":143},{"i":200,"t":"以查找的3.4算法为例 void readtolist(Btree &T,linklist L) { MOUSEMSG m; initgraph(1000, 700); IMAGE background;//定义一个图片名. loadimage(&background, \"图片3.png\", 1000, 700, 1);//从图片文件获取图像 putimage(0, 0, &background);//绘制图像到屏幕，图片左上角坐标为(0,0) /*一些算法，与界面无关，省略...*/ //输入框的调用，注意，输入框只能输入char类型的，必须先获取char类型再转为需要的类型 char C[100] = {}; InputBox(C, 100, \"请输入您想查询的日期：\"); day = C; //定义一个滚动值，初始为0 int scrolly = 0; up: //翻页时从这里重新执行，先看下面 int isfind = 0;//判断是否找到 for (int b = 0; b < sumday; b++) { if (p[b]->date == day) { isfind = 1; plist op = new PNode; op = p[b]->next; //常规操作，设置背景图片，可以有也可以没有，没有的话默认上面的 initgraph(1000, 700); IMAGE background;//定义一个图片名. loadimage(&background, \"图片3.png\", 1000, 700, 1);//从图片文件获取图像 putimage(0, 0, &background);//绘制图像到屏幕，图片左上角坐标为(0,0) //设置模块颜色为紫色 setfillcolor(MAGENTA); solidroundrect(0, 0, 800, 160, 0, 0); //无边框的圆角矩形 settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(WHITE); //注：输出也必须是char【】类型，需要转化 char* C = new char[1024]; strcpy(C, day.c_str());//string转化为char【】 outtextxy(20, 90, C); setfillcolor(WHITE); solidroundrect(0, 20, 200, 80, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(20, 34, \"返回\"); setcolor(WHITE); setfillcolor(WHITE); solidroundrect(1200, 300, 900, 350, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(930, 310, \"上翻\"); setcolor(WHITE); //这些地方可以简写，我都是复制的，所以懒得删了 setfillcolor(WHITE); solidroundrect(1200, 370, 900, 420, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(930, 380, \"下翻\"); setcolor(WHITE); settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(25, 140, \"股票代码\"); setbkmode(TRANSPARENT); outtextxy(179, 140, \"股票名称\"); setbkmode(TRANSPARENT); outtextxy(287, 140, \"开盘价\"); setbkmode(TRANSPARENT); outtextxy(387, 140, \"收盘价\"); setbkmode(TRANSPARENT); outtextxy(491, 140, \"涨跌幅\"); //设置初始高度值，数据列初始高度，随上翻、下翻而变化 int het = 160+ scrolly; while (op) { //股票代码 strcpy(C, op->code.c_str()); outtextxy(25, het, C); //这里的上边距是het，是可变的值，便于翻页 //股票名称 strcpy(C, op->nick.c_str()); outtextxy(179,het,C); //开盘价 strcpy(C, op->str_openprice.c_str()); outtextxy(287, het, C); //收盘价 strcpy(C, op->str_closeprice.c_str()); outtextxy(387, het, C); //涨跌幅 strcpy(C, op->str_updrate.c_str()); outtextxy(491, het, C); het += 20; //每条股票之间间距为20 op = op->next; } //上面的固定UI必须重复一遍，因为翻页之后会遮住原来的UI，所以必须重绘 setfillcolor(MAGENTA); solidroundrect(0, 0, 800, 160, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(WHITE); strcpy(C, day.c_str()); outtextxy(20, 90, C); setfillcolor(WHITE); solidroundrect(0, 20, 200, 80, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(20, 34, \"返回\"); setcolor(WHITE); settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(25, 140, \"股票代码\"); //settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(179, 140, \"股票名称\"); //settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(287, 140, \"开盘价\"); //settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(387, 140, \"收盘价\"); //settextstyle(20, 0, \"楷体\"); setbkmode(TRANSPARENT); outtextxy(491, 140, \"涨跌幅\"); //判断鼠标操作 while (1) { m = GetMouseMsg(); if (m.x >= 0 && m.x <= 200 && m.y >= 20 && m.y <= 90) { //返回 solidroundrect(0, 20, 200, 80, 0, 0); if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. display_find(T, L); break; } } else if (m.x >= 890 && m.x <= 1300 && m.y >= 290 && m.y <= 350) { //上翻指令捕获 solidroundrect(1200, 300, 900, 350, 0, 0); //左上右下 if (m.uMsg == WM_LBUTTONDOWN && scrolly < 0) { //如果按下鼠标左键实现相应功能. scrolly = scrolly + 500; //上翻，每条股票的位置均下移500,注意scrolly有个封顶值，不然会一直翻页空白页面 goto up;//修改scrolly相当于修改了上面的het，回到原处继续执行 break; } } else if (m.x >= 890 && m.x <= 1300 && m.y >= 360 && m.y <= 430) { //下翻捕获指令 solidroundrect(1200, 370, 900, 420, 0, 0);; //左上右下 if (m.uMsg == WM_LBUTTONDOWN && scrolly > -4300) { //如果按下鼠标左键实现相应功能. scrolly = scrolly - 500; goto up; break; } } } break; } } if (isfind == 0) { //未找到显示UI setfillcolor(MAGENTA); solidroundrect(0, 280, 800, 150, 0, 0); //无边框的圆角矩形 参数：左 上 右 下（坐标） 圆角宽度 圆角宽度 settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(WHITE); outtextxy(20, 160, \"未找到结果\"); AddStyle(800, 200, 210, 150); setfillcolor(WHITE); solidroundrect(0, 20, 200, 80, 0, 0); settextstyle(30, 0, \"华文中宋\"); setbkmode(TRANSPARENT); setcolor(MAGENTA); outtextxy(20, 34, \"返回\"); setcolor(WHITE); while (1) { m = GetMouseMsg(); if (m.x >= 0 && m.x <= 200 && m.y >= 20 && m.y <= 80) { //返回 if (m.uMsg == WM_LBUTTONDOWN) { //如果按下鼠标左键实现相应功能. display_find(T, L); break; } } } } getchar(); closegraph();//关闭图形界面}","s":"2.数据的输入和显示","u":"/blog/page/2","h":"#2数据的输入和显示","p":143},{"i":202,"t":"tip 2021,12,24,Data Struct 仓库地址https://github.com/inannan423/Data_struct_EasyX","s":"实现效果","u":"/blog/page/2","h":"#实现效果","p":143},{"i":204,"t":"July 11, 2022 · 7 min read Chengzihan Orange Chengzihan","s":"认识Vue框架","u":"/blog/page/2","h":"","p":143},{"i":207,"t":"Vue.js是一个用于创建用户界面的开源渐进式JavaScript框架，也是一个创建单页应用的Web应用框架。Vue.js是目前前端界三大框架之一（其他两个分别是React和Angular），旨在更好地组织与简化Web开发。Vue所关注的核心是MVC模式中的视图层，同时，它也能方便地获取数据更新，并通过组件内部特定的方法实现视图与模型的交互。","s":"定义它","u":"/blog/page/2","h":"#定义它","p":143},{"i":209,"t":"提到Vue就必须提到他的创造者尤雨溪，它是中国程序员的骄傲。尤雨溪出生于中国无锡，上海念了三年高中，高中毕业后去美国念大学，尤雨溪的大学专业是室内艺术和艺术史，在Parsons读了一个美术设计和技术的硕士。尤雨溪被JavaScript吸引，JS能够快速构建一些东西并分享给别人，这是吸引尤雨溪开始Web开发和JavaScript编程的原因。尤雨溪在Google创意实验室工作的时候，工作需要在浏览器上进行大量原型设计，尤雨溪最初使用Angular，尤雨溪将喜欢的部分从Angular中提出来建立一个非常轻巧的库，Vue大概就这么开始了。","s":"谁创造了他？","u":"/blog/page/2","h":"#谁创造了他","p":143},{"i":211,"t":"组件 把构建web界面比喻为装修房子，当你的家里需要三张床的时候，如果你使用原生js，那么你就必须将这床的代码重复三次。而如果你使用vue，你只需要在某处定义它，在需要的地方调用即可，这就大大增强了开发效率和代码的可维护性，当所有床，比如上千张、上万张需要修改的时候，你就不再需要一张一张地去修改它，你只需要将模板修改掉就行，全局就会一起修改。 下面是vue编写一个按钮组件的范例： // 定义一个名为 button-counter 的新组件Vue.component('button-counter', { data: function () { return { count: 0 } }, template: '<button v-on:click=\"count++\">You clicked me {{ count }} times.</button>'}) 控件跟数据自动绑定 在使用vue之前，想在页面上显示 Hello World ，(注意，此时的Hello World是作为一个使用js从后端读取来的数据，因此不能直接使用<div>Hello World</div>这样的代码）。 原生的js ： <div id = 'app'></div><script>// 先定义字符串var string = 'Hello World';// 获取 html domvar app = document.getElementById('#app');// 最后显示数据（挂载更新到页面上）app.innerHtml = string</script> 而使用vue之后： <div id='#app'>{{message}}</div>/*{{}} 是插值表达式， message 作为变量名*/<script>var. vm = new Vue({ el:'#app', // 挂载（绑定），相当于app 这个div 跟vue 实例绑定了， 在这个容器（div）里，就可以用vue来操作了 data:{ message:'Hello World' }})</script> 最后，在页面上展示的效果肯定是Hello World 而不是{{message}},此时的message已经被vue 解析成了 Hello World,这里并没有出现document.getElementById等操作dom的语法， 它只是对我们的数据进行了操作，这就是vue 其中的奥秘之处，它内部创建虚拟dom 来说实时跟踪，数据的变化，最后一次性的更新到页面上。 此时你会觉得，这不就是换一种方法嘛？但实际上不是的，原生js操作html dom去更新页面很耗资源，他要重新加载新dom树（刷新页面），随着现代前端的发展，一个页面的功能和交互越来越多，当要重新加载新的dom树，就显得尤为浪费，加载的时间就会很长，vue就是解决这一问题的方法之一。 参考文献 https://zhuanlan.zhihu.com/p/78855665","s":"Vue.js的特点","u":"/blog/page/2","h":"#vuejs的特点","p":143},{"i":213,"t":"Vue生命周期是指vue实例对象从创建之初到销毁的过程，vue所有功能的实现都是围绕其生命周期进行的，在生命周期的不同阶段调用对应的钩子函数可以实现组件数据管理和DOM渲染两大重要功能。","s":"Vue的生命周期","u":"/blog/page/2","h":"#vue的生命周期","p":143},{"i":215,"t":"Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统，提供： 通过 @vue/cli 实现的交互式的项目脚手架。 通过 @vue/cli + @vue/cli-service-global 实现的零配置原型开发。 一个运行时依赖 (@vue/cli-service)，该依赖： 可升级； 基于 webpack 构建，并带有合理的默认配置； 可以通过项目内的配置文件进行配置； 可以通过插件进行扩展。 一个丰富的官方插件集合，集成了前端生态中最好的工具。 一套完全图形化的创建和管理 Vue.js 项目的用户界面。","s":"Vue-cli","u":"/blog/page/2","h":"#vue-cli","p":143},{"i":217,"t":"前言​ 背景 在我的博客建立之初，由于懵懂无知，把图片放在工程本地，导致打包大小变得很大，并且托管到GithubPages后图片加载的速度惨不忍睹。因此我上网搜索一些前辈的经验，这个经验就是建立图床，使用外链引入到Markdown笔记中，这样工程包的大小缩小了，访问速度也有所提升。 ![image.png](https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3p10rb6uwj31400kl7e5.jpg) 最开始使用的图床就是微博图床，首先感谢新浪微博提供的免费图床(对外链无限制),以及速度快到惊人的cdn图片加速服务，还有丰富的浏览器插件，简直是薅羊毛！ 但是，由于这个图床服务并不是微博官方提供给用户的服务，所以，一旦微博停止这个服务，我们的图片将无法访问，有一种“命运攥在别人手里”的感觉。因此，我还决定趁现在博客还不多的时候，将微博图床迁移到别的地方，这里，我选择阿里云oss。","s":"记一次图床迁移","u":"/blog/Picbed","h":"","p":216},{"i":219,"t":"背景 在我的博客建立之初，由于懵懂无知，把图片放在工程本地，导致打包大小变得很大，并且托管到GithubPages后图片加载的速度惨不忍睹。因此我上网搜索一些前辈的经验，这个经验就是建立图床，使用外链引入到Markdown笔记中，这样工程包的大小缩小了，访问速度也有所提升。 ![image.png](https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3p10rb6uwj31400kl7e5.jpg) 最开始使用的图床就是微博图床，首先感谢新浪微博提供的免费图床(对外链无限制),以及速度快到惊人的cdn图片加速服务，还有丰富的浏览器插件，简直是薅羊毛！ 但是，由于这个图床服务并不是微博官方提供给用户的服务，所以，一旦微博停止这个服务，我们的图片将无法访问，有一种“命运攥在别人手里”的感觉。因此，我还决定趁现在博客还不多的时候，将微博图床迁移到别的地方，这里，我选择阿里云oss。","s":"前言","u":"/blog/Picbed","h":"#前言","p":216},{"i":221,"t":"首先我要把之前上传到微博图床的图片全部下载下来，放到本地，再转移到阿里云。 解决方案 先用Python爬虫将我的博客上的所有用微博图床存储的图片爬下来放在本地，以图片后缀命名。脚本的核心思想是使通过遍历HTML中的img标签，用正则表达式比对并抓取标签内的src地址参数。 ex = '<img.*?src=\"(.*?)\".*?' # 比对 img_list = re.findall(ex, web_text) 然后再把链接地址对应的图片下载到本地。 使用下面的Pyhton脚本： import reimport requestsdef download_img(): error_img = 0 success_img = 0 url = input('请输入网站地址：') headers = { 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36 Edg/87.0.664.75' } web_text = requests.get(url, headers=headers).text ex = '<img.*?src=\"(.*?)\".*?' img_list = re.findall(ex, web_text) print('图片地址:', img_list) if len(img_list) == 0: print('该站有反爬虫机制，请换一个网站') for img in img_list: try: # 补充协议头 if not (img.startswith('http') or img.startswith('https')): img = 'http:' + img img_binary = requests.get(img, headers=headers).content # 切割出最后一个字符串 file_name = img.split('/')[-1] # 切割 query字符 file_name = file_name.split('?')[0] with open(f'./img/{file_name}', 'wb') as fp: fp.write(img_binary) print(file_name, '，下载成功') success_img += 1 except Exception as e: print(e) error_img += 1 continue print('下载图片完成！') return success_img, error_imgif __name__ == '__main__': success_img, error_img = download_img() print(f'总计下载：{success_img}，下载失败：{error_img}') 执行结果抓图： 保存结果如图： 脚本参考 来自CSDN夏2同学，http://t.csdn.cn/6pWJ5","s":"爬取已经使用的图片","u":"/blog/Picbed","h":"#爬取已经使用的图片","p":216},{"i":224,"t":"首先，在阿里云首页选择对象存储OSS服务。","s":"注册","u":"/blog/Picbed","h":"#注册","p":216},{"i":226,"t":"点击创建一个新的bucket。 填写bucket参数。","s":"创建bucket","u":"/blog/Picbed","h":"#创建bucket","p":216},{"i":228,"t":"打开创建的bucket列表，如图，只需要复制oss-cn-beijing即可，不需要后面的.aliyuncs.com。","s":"获取地域结点信息","u":"/blog/Picbed","h":"#获取地域结点信息","p":216},{"i":230,"t":"来到页面的右上角，鼠标放在你的头像上，在弹出的框里选择AccessKey管理。 进入后，创建一个AccessKey。 在弹出的界面里，记住你的accessKeyId和accessKeySecret.","s":"创建AccessKey","u":"/blog/Picbed","h":"#创建accesskey","p":216},{"i":232,"t":"在Github中下载PicGo，并点击安装。在电脑桌面右下角的PicGo图标打开软件。在图床设置里面选择阿里云OSS，依照以下步骤填写信息： 设定Keyld：填写刚刚获得的AccessKeyID 设定KeySecret：填写AccessKeyIDSecret 设定储存空间名：填写bucket名称，这里填写的是bucket名称，不是浏览器里的域名。 确认存储区域：填写你的地域节点，注意复制的格式。 指定存储路径：其实就是自定义一个文件夹的名字，以/结尾，它会自动在你的bucket里面创建一个文件夹，并把图片上传进去。 参考文章链接 http://t.csdn.cn/oZkFg","s":"PicGo配置","u":"/blog/Picbed","h":"#picgo配置","p":216},{"i":234,"t":"将前面爬取的图片上传到bucket文件夹中。 找到上传后文件的地址。 https://xxxxxx.oss-cn-beijing.aliyuncs.com/blog/1656914971349.png 我们可以观察到该地址是以https://xxxxxx.oss-cn-beijing.aliyuncs.com/blog/作为前缀的，而微博图床的连接是https://tva1.sinaimg.cn/large/1656914971349.png，由于两者后缀可以一一对应，我们只需要到工程文件中替换前缀即可。使用vscode的替换功能。 如图，替换后，全部连接就生效了。","s":"替换原来博客中的微博图床","u":"/blog/Picbed","h":"#替换原来博客中的微博图床","p":216},{"i":236,"t":"danger 本脚本仅用于交流学习，不得用于其他用途，如果因为恶意使用本脚本造成的一切后果，与本人无关。","s":"爬取强智教务系统获取课表信息","u":"/blog/qiangzhi","h":"","p":235},{"i":238,"t":"又到了开学季，作为一个合格的大学生。每天我们都要上不同的课，前往不同的教室，需要我们一遍遍去查看课表。那么我们能不能编写一个脚本来帮我们自动获取课表呢？这篇文章就来说明我是如何使用Python爬取强智教务系统获取课表信息的。","s":"前言","u":"/blog/qiangzhi","h":"#前言","p":235},{"i":241,"t":"强智系统是一个使用很广泛的系统，它的课表 API 也是统一的。经过抓包，找到了一个课表 API ，如下： <前缀>/jsxsd/xskb/xskb_list.do?Ves632DSdyV=NEW_XSD_PYGL 但是！这个 API 返回的竟然是 html 代码。那就需要我们使用正则表达式来提取我们需要的信息了。但这也太麻烦了，应该有 json 的 API 吧！果不其然，我这就发现了一个： <前缀>/app.do?method=getKbcxAzc&xh=<StudentID>&xnxqid=<Semester>&zc=<week> 注意，这是一个 POST 请求。<前缀> 代表你的学校的教务系统域名，请自行替换，如我的学校是： http://newjwxt.bjfu.edu.cn/app.do?method=getKbcxAzc&xh=<StudentID>&xnxqid=<Semester>&zc=<week>","s":"接口链接","u":"/blog/qiangzhi","h":"#接口链接","p":235},{"i":243,"t":"method：固定为 getKbcxAzc。 StudentID：学号 Semester：学期，格式为 2021-2022-1，其中 1 表示第一学期，2 表示第二学期 week：周次，从 1 开始","s":"参数说明","u":"/blog/qiangzhi","h":"#参数说明","p":235},{"i":245,"t":"现在，让我们使用 APIFOX 来分析一下这个 API 的返回值。填入学号、学期、周次，点击发送请求。 发送请求，返回值： { \"token\": \"-1\"} 这告诉我们，这个 API 是需要鉴权的。那么我们就需要先登录，拿到 API 的鉴权 token ，然后再发送请求。 使用相同的方法获取登录 API ，如下： <前缀>/app.do?method=authUser&xh=<StudentID>&pwd=<pwd> 参数说明 method：固定为 authUser。 StudentID：学号 pwd：密码 同样，这是一个 POST 接口。填入学号密码，发送请求获取返回的 TOKEN。 返回值： { \"success\": true, \"token\": \"eyJ0e...\", // 这就是我们需要的 token \"user\": { \"username\": \"你的姓名\", \"userdwmc\": \"你所在的学院\", \"usertype\": \"2\", \"userpasswd\": \"你的密码\", \"useraccount\": \"你的账号\" }, \"usertype\": \"2\", \"userrealname\": \"你的姓名\", \"userdwmc\": \"你的学院\"} 复制返回值中的 TOKEN 值，填入课表 API 的请求参数中，发送请求。添加在 Header 中的 token 参数，如下： 再次发送请求，返回值： 这就是我们需要的课表数据 json 了。具体格式如下： [ { \"jsxm\": \"教师姓名\", \"jsmc\": \"上课教室\", \"jssj\": \"课程开始时间\", \"kssj\": \"课程结束时间\", \"kkzc\": \"上课节数 第几到几节课\", \"kcsj\": \"10102\", // 课程时间 \"kcmc\": \"数据库应用\", // 课程名称 \"sjbz\": \"0\" // 未知 }, //...] 分析各字段含义如下： # \"jsxm\": \"老师\", // 教师姓名# \"jsmc\": \"一教101\", // 教室名称# \"jssj\": \"9:35\", // 结束时间# \"kssj\": \"08:00\", // 开始时间# \"kkzc\": \"1\", // 开课周次，有三种已知格式1)a - b、2)a, b, c、3)a - b, c - d# \"kcsj\": \"10102\", // 课程时间，格式x0a0b，意为星期x的第a, b节上课# \"kcmc\": \"大学英语\", // 课程名称# \"sjbz\": \"0\" // 具体意义未知，据观察值为1时本课单周上，2时双周上","s":"接口分析","u":"/blog/qiangzhi","h":"#接口分析","p":235},{"i":247,"t":"分析好 API 后，我们就可以开始编写脚本了。","s":"脚本编写","u":"/blog/qiangzhi","h":"#脚本编写","p":235},{"i":249,"t":"首先我们必须创建 http 请求，这里我们使用 requests 库。并且我们要解析返回的 json 数据，这里我们使用 json 库。 import requestsimport json 然后创建函数执行请求,实现上面我们登录获取 Token 和获取课表的 API 的步骤。为便于管理，将各个参数封装成变量放到脚本顶部，便于修改和调用。 id = '201002001' # 学号pwd = 'aaa111111' # 密码semester = '2022-2023-1' # 学期 函数如下： def Crawl(): # 登录 API loginLink = \"http://newjwxt.bjfu.edu.cn/app.do?method=authUser&xh=\" + id + \"&pwd=\" + pwd # 请求登录 API , 返回值为 json rep = requests.get(loginLink) # 解析 json res = json.loads(rep.text) # 获取返回值中的 token 字段值 token = res[\"token\"] # 课表 API tableUrl = \"http://newjwxt.bjfu.edu.cn/app.do?method=getKbcxAzc&xh=\" + id + \"&xnxqid=\" + semester + \"&zc=\" + week # 传入 token 参数 header = { \"token\": token # 鉴权 } # 请求课表 API ，res 就是我们需要的课表数据 res = requests.get(url=tableUrl, headers=header) schedule = json.loads(res.text) # 读取课表 json # 打印课表 print(schedule)","s":"创建 API 请求","u":"/blog/qiangzhi","h":"#创建-api-请求","p":235},{"i":251,"t":"我们想要的是完全自动化，每周手动改脚本算什么？！因此，我们来获取当前周次。要使用时间模块，我们需要先导入 datetime 模块。 import datetime 脚本： # 判断当前日期所在周数def getWeek(): # 获取现在时间 now = datetime.datetime.now() # 第一周 firstWeek = datetime.datetime.strptime(firstDay, '%Y-%m-%d') # 当前周数, 从第一周开始 week = (now - firstWeek).days // 7 + 1 print(\"第\" + str(week) + \"周\") return week","s":"获取当前周次","u":"/blog/qiangzhi","h":"#获取当前周次","p":235},{"i":253,"t":"课表是按照星期几排布的，所以我们需要获取今天是星期几。函数也很简单，如下： # 判断今天星期几def getWeekDay(): d = datetime.datetime.now() weekd = d.weekday() + 1 print(\"星期\" + str(weekd)) return int(weekd)","s":"获取今天星期几","u":"/blog/qiangzhi","h":"#获取今天星期几","p":235},{"i":255,"t":"这一步就稍微有点复杂了，不过也很好理解，我们需要判断当前时间在课表的哪个时间段，来判断现在应该要上哪一节课。 先获取现在的时间，由于我想要提前进行提醒，所以我把时间推迟20分钟，这样就可以提前20分钟提醒了。（就是说要去查询20分钟后的课程） # 获取现在时间now = datetime.datetime.now()# 获取现在时间的小时和分钟hour = now.hourminute = now.minute + 20 # 查询20分钟后的课程second = now.second# 分钟加20后，可能需要进行进位，如果分钟大于60，小时加1，分钟减60if minute >= 60: hour += 1 minute -= 60 接着，我们要把处理好的时间转换成字符串，方便后面的比较。 # 如果小时小于10，前面加0if hour<=10: nowTime = '0' + str(hour) + ':' + str(minute) + ':' + str(second)else : nowTime = str(hour) + ':' + str(minute) + ':' + str(second)# 如果进位后时间为 24：00：00 ，则改为 00：00：00if hour==24: nowTime = '00' + ':' + str(minute) + ':' + str(second) 然后，我们要判断现在时间在课表的哪个时间段，来判断现在应该要上哪一节课。我们把课表的几个关键点创建为变量。例如，我们学校的时间表如下： # 8:00-9:35 第1-2节# 9:50-12:15 第3-5节# 13:30-15:05 第6-7节# 15:20-16:55 第8-9节# 18:30-20:55 第10-12节 我们只需要记录开始时间。 dt1 = datetime.datetime.strptime('08:00:00', '%H:%M:%S')dt2 = datetime.datetime.strptime('09:50:00', '%H:%M:%S')dt3 = datetime.datetime.strptime('13:30:00', '%H:%M:%S')dt4 = datetime.datetime.strptime('15:20:00', '%H:%M:%S')dt5 = datetime.datetime.strptime('18:30:00', '%H:%M:%S') 将现在的时间（准确来说是二十分钟后的时间）存为变量。 dtNow = datetime.datetime.strptime(nowTime, '%H:%M:%S') 然后计算整个时间段的秒数。例如 8:00-9:35 的秒数为 95 * 60 = 5700，依此类推。用现在的时间减去课程开始的时间，如果结果大于 0 且小于这个时间段的秒数，那么就是在这个时间段。 if 0 <= (dtNow - dt1).seconds < 5700: return 1elif 0 <= (dtNow - dt2).seconds < 8700: return 3elif 0 <= (dtNow - dt3).seconds < 5700: return 6elif 0 <= (dtNow - dt4).seconds < 5700: return 8elif 0 <= (dtNow - dt5).seconds < 8700: return 10else: return -1 该函数的完整代码： Details # 判断当前所在第几节课def getNowClass(): # 获取现在时间 now = datetime.datetime.now() # 获取现在时间的小时和分钟 year = now.year hour = now.hour minute = now.minute + 20 second = now.second # 如果分钟大于60，小时加1，分钟减60 if minute >= 60: hour += 1 minute -= 60 # 拼接为时间格式 if hour <= 10: nowTime = '0' + str(hour) + ':' + str(minute) + ':' + str(second) else: nowTime = str(hour) + ':' + str(minute) + ':' + str(second) if hour == 24: nowTime = '00' + ':' + str(minute) + ':' + str(second) # 判断当前时间所在第几节课 # 如果当前时间位于 8:00 到 9:35 之间，返回 1 dt1 = datetime.datetime.strptime('08:30:00', '%H:%M:%S') dt2 = datetime.datetime.strptime('09:50:00', '%H:%M:%S') dt3 = datetime.datetime.strptime('13:30:00', '%H:%M:%S') dt4 = datetime.datetime.strptime('15:20:00', '%H:%M:%S') dt5 = datetime.datetime.strptime('18:30:00', '%H:%M:%S') dtNow = datetime.datetime.strptime(nowTime, '%H:%M:%S') # print((dtNow - dt1).seconds) if 0 <= (dtNow - dt1).seconds < 5700: return 1 elif 0 <= (dtNow - dt2).seconds < 8700: return 3 elif 0 <= (dtNow - dt3).seconds < 5700: return 6 elif 0 <= (dtNow - dt4).seconds < 5700: return 8 elif 0 <= (dtNow - dt5).seconds < 8700: return 10 else: return -1","s":"获取现在的时间应该在上哪节课","u":"/blog/qiangzhi","h":"#获取现在的时间应该在上哪节课","p":235},{"i":257,"t":"现在我们要将 json 数据按照星期几和第几节课进行解析，存为列表。由于我们的 json 每条数据的格式为： {'jsxm': '无', 'jsmc': '无', 'jssj': '00:00', 'kssj': '00:00', 'kkzc': '0', 'kcsj': '00000', 'kcmc': '本节无课','sjbz': '0'} 那我们就可以初始化一个二维列表，每个元素都是一个上面的模板值。 table = [[{'jsxm': '无', 'jsmc': '无', 'jssj': '00:00', 'kssj': '00:00', 'kkzc': '0', 'kcsj': '00000', 'kcmc': '无课', 'sjbz': '0'} for i in range(1, 100)] for j in range(1, 100)] 列表推导 这是 Python 语法中一个列表推导(List Comprehension)的例子，可以用来初始化一个列表。 arr = [0 for i in range(1000)] for 前面的 0 表示列表中的每个元素都是 0，for 后面的 i 表示循环变量，range(1000) 表示循环 1000 次。同理，也可以举一反三初始化一个字符串列表： arr = ['' for i in range(1000)] 它们的区别只是 for 前面的值不同。同理，也可以初始化一个字典列表： arr = [{'name': '无', 'age': 0} for i in range(1000)] 现在，我们可以把 schedule 变量中的数据按照星期几和第几节课进行解析，存为列表了。 等一下，怎么获取这节课是星期几上的呢？别急，我们来复习一下 课表json 的结构。 # \"jsxm\": \"老师\", // 教师姓名# \"jsmc\": \"一教101\", // 教室名称# \"jssj\": \"9:35\", // 结束时间# \"kssj\": \"08:00\", // 开始时间# \"kkzc\": \"1\", // 开课周次，有三种已知格式1)a - b、2)a, b, c、3)a - b, c - d# \"kcsj\": \"10102\", // 课程时间，格式x0a0b，意为星期x的第a, b节上课# \"kcmc\": \"大学英语\", // 课程名称# \"sjbz\": \"0\" // 具体意义未知，据观察值为1时本课单周上，2时双周上 仔细看看 kcsj 这个字段，它的格式是 x0a0b，意为星期 x 的第 a, b 节上课。那么我们提取出这个字段的第一个数，不就是星期几了吗，获取到第二、三个数，不就是第几节课了吗。 如 \"kcsj\": \"10102\" 标识周1第1、2节课上课，那么我们就可以把这个课程信息存到 table[1][1]中。 i['kcsj'][1] # 第二个数 下标从0开始,在10102中为0i['kcsj'][2] # 第三个数 下标从0开始,在10102中为1 然后将其拼接并转为整数： classNum = int(i['kcsj'][1] + i['kcsj'][2]) 这一部分的完整代码： # 将 schedule 中的课程信息赋值给 tablefor i in schedule: # 课程的节数 classNum = int(i['kcsj'][1] + i['kcsj'][2]) # 将课程信息写入列表 # 课程在星期几 wd = int(i['kcsj'][0]) table[wd][classNum] = i","s":"解析 json 为列表字典","u":"/blog/qiangzhi","h":"#解析-json-为列表字典","p":235},{"i":259,"t":"获取现在的星期和节数，就可以从 table 中查询到当前上的课了。 def QueryClass(): nowClass = getNowClass() # 获取当前节数 nowWd = getWeekDay() # 获取当前星期几 if nowClass == -1: print(\"当前无课\") else: print(\"当前第\" + str(nowClass) + \"节课\") print(table[nowWd][nowClass]) return table[nowWd][nowClass]","s":"查询当前课程","u":"/blog/qiangzhi","h":"#查询当前课程","p":235},{"i":261,"t":"已开源：代码地址","s":"脚本仓库","u":"/blog/qiangzhi","h":"#脚本仓库","p":235},{"i":264,"t":"使用此脚本，你可以将其部署到你的服务器，推送到微信，或者使用此接口编写课表小程序。","s":"应用","u":"/blog/qiangzhi","h":"#应用","p":235},{"i":266,"t":"danger 本脚本涉及隐私（包含学号和密码）使用时请自己部署自己使用，不要泄露给他人。如果要分享脚本，请删除上述信息。","s":"安全提示","u":"/blog/qiangzhi","h":"#安全提示","p":235},{"i":268,"t":"如果您觉得这篇文章有帮到您，请到 GitHub 为我留下一颗 ⭐ 。","s":"支持我","u":"/blog/qiangzhi","h":"#支持我","p":235},{"i":270,"t":":app:installDebug​","s":"React-Native 编译 Android 应用报错","u":"/blog/rnbug","h":"","p":269},{"i":273,"t":"* What went wrong:Execution failed for task ':app:installDebug'.> java.util.concurrent.ExecutionException: com.android.builder.testing.api.DeviceException: com.android.ddmlib.InstallException: Unknown failure: Exception occurred while executing 'install': android.os.ParcelableException: java.io.IOException: Requested internal only, but not enough space 最关键的一句： Requested internal only, but not enough space 即： 申请的内部空间不足","s":"问题描述","u":"/blog/rnbug","h":"#问题描述","p":269},{"i":275,"t":"扩充模拟器空间。 在模拟器的设置中，将内部存储空间扩充到 4096M 即可。","s":"解决方案","u":"/blog/rnbug","h":"#解决方案","p":269},{"i":278,"t":"error Failed to install the app. Make sure you have the Android development environment set up: https://reactnative.dev/docs/environment-setup.Error: Command failed: gradlew.bat app:installDebug -PreactNativeDevServerPort=8081 无法正确访问仓库安装依赖。","s":"问题描述","u":"/blog/rnbug","h":"#问题描述-1","p":269},{"i":280,"t":"在 android 目录下的 build.gradle 文件中，将 android/build.gradle 中的 jcenter() 和 google() 分别替换为 maven { url 'https://maven.aliyun.com/repository/jcenter' } 和 maven { url 'https://maven.aliyun.com/repository/google' }（注意有多处需要替换）。","s":"解决方案","u":"/blog/rnbug","h":"#解决方案-1","p":269},{"i":282,"t":"调用报平安接口并使用 GitHub Actions 自动完成北林每日报平安。本脚本 最大的特点是不需要你有一台一直开着的主机或者服务器，让 GitHub 完成这件事即可。 主逻辑来自 @Memory","s":"使用 GitHub Actions 自动报平安","u":"/blog/rpeace","h":"","p":281},{"i":285,"t":"仓库地址https://github.com/inannan423/reportPeace 进入本仓库，点击右上角的 Fork 按钮，将本仓库 Fork 到自己的账号下。 顺便点击 star按钮收藏（为我点个赞）。 注意，此时这个仓库就是你的了，你在你的仓库密匙中填写的任何内容我均无法获取，请放心使用。","s":"Fork 仓库","u":"/blog/rpeace","h":"#fork-仓库","p":281},{"i":287,"t":"在报平安代码中，有许多涉及隐私的东西。比如学号、密码、用户ID等。我们不希望这些东西在源代码被公开，所以我们需要把它们添加到 GitHub Secrets 中。 下面举一个例子： 在上面我们需要把学号存储为密匙，在代码中，它的变量名为 STUDENT_ID 。 打开你 Fork 后你的仓库。点击 Settings，然后点击 Secrets，点击 New repository secret，在 Name 中输入 STUDENT_ID，在 Value 中输入你的学号，点击 Add secret。 然后点击添加。 按照上述步骤，你还需要添加下面内容，这些内容打开你平时报平安的界面，获取相同的即可： STUDENT_ID # 学号，示例：201002401PASSWORD # 密码，示例：abc123123123，也就是你的校园网密码NAME # 姓名，示例：张三SCHOOL # 学院，示例：信息学院MAJOR # 专业，示例：计算机科学与技术TYPE # 类型，示例：本科生 | 研究生PHONE # 手机号，示例：12345678901MASTER # 审核人，示例：李四BUILDING # 宿舍楼栋，示例：11号楼ROOM # 宿舍号，示例：901 以上添加完成后如图所示：","s":"添加个人信息","u":"/blog/rpeace","h":"#添加个人信息","p":281},{"i":289,"t":"在 yml 脚本中，我已经设置了每天 0：11 执行，为保证准确性，还添加了二次执行时间为早上 8：10. 不选择整点执行而选择在11分执行是为了避开高峰期。 你可以对其修改。在 .github/workflows 文件夹中，打开 main.yml 文件，修改 cron 的值即可。 name: autoReportPeaceon: repository_dispatch: types: [morning] schedule: - cron: '11 16,0 * * *' # UTC 时间 16：11和 0：11对北京时间 0：11和 8：11 workflow_dispatch:jobs:#...... GitHub 采用世界标准时间，也就是 UTC 时间。北京时间是 UTC+8，因此北京时间比 UTC 时间早8小时。所以 UTC 0：00 对应的 北京 时间是 8：00。 也就是说，我们想要的时间减去8小时才是 UTC 时间。 corn的语法如下： ┌───────────── minute (0 - 59)│ ┌───────────── hour (0 - 23)│ │ ┌───────────── day of the month (1 - 31)│ │ │ ┌───────────── month (1 - 12 or JAN-DEC)│ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)│ │ │ │ │ │ │ │ │ ││ │ │ │ │* * * * * 例如，我们希望早上九点半执行，那么我们需要设置为 1：30： corn: '30 1 * * *' 或者我们希望每天8：00和20：00执行： corn: '0 0,12 * * *' 或者我们只希望每周三周五执行： corn: '30 1 * * 3,5'","s":"修改定时【可选】","u":"/blog/rpeace","h":"#修改定时可选","p":281},{"i":291,"t":"除了定时测试外，我们还支持手动进行测试。你只需要打开 GitHub Action 界面。选中左侧的 autoReportPeace，点击右侧的下拉栏中的 Run workflow，即可手动执行。 接着，会有黄色的运行进程开始，直到进程变成蓝色的勾，表示运行成功。 延迟一到两分钟，你的微信会收到学校企业微信的报平安通知。表示部署成功，如果 不如预期，请检查上述步骤。","s":"手动测试","u":"/blog/rpeace","h":"#手动测试","p":281},{"i":293,"t":"提高定时的准确性，可以不做。 但是有一个缺陷，就是 GitHub Action 的定时是不准确的，有时候会延迟十分钟甚至一两个小时。 不过我们通过两个时间点的定时，可以很大程度保证准确性。 Note: The event can be delayed during periods of high loads of GitHub Actions workflow runs. High load times include the start of every hour. To decrease the chance of delay, schedule your workflow to run at a different time of the hour.schedule 即 注意：在 GitHub Actions 工作流高负载运行期间，事件可能会延迟。高负载时间包括每小时的开始时等。为了减少延迟的可能性，请安排工作流在每小时的不同时间运行。 实测使用 GitHub Pages 的定时服务，延迟在 10 分钟到 1 小时不等，极端条件下定时不会执行。 而 GitHub Actions 支持 workflow_dispatch 触发器（请参阅 GitHub Docs 上的触发工作流的事件，因此如果您手动触发工作流，它将立刻执行。这意味着您可以使用第三方 cron 调度服务，如 腾讯云、IFTTT、Google Cloud Scheduler 等，向 GithubAPI 发出请求以触发工作流。 那么这里将讲授一种使用腾讯云云函数定时触发的方法，增强其可靠性。如果你认为 GitHub定时两个时间点已经足够可靠，可以不再进行此操作。 获取 GitHub Token​ 想要从远端操作 GitHub，我们需要一个 GitHub Token。 在你的 Github 主页，选择 setting 。 选择左下角的的 Developer settings 。 然后选择 Personal access tokens 。 填写相关信息，选择 无限期 ， 勾选 repo 和 workflow 。点击创建。 然后生成完成，之后它会生成一串密码： 在你的 Github 主页，选择 setting 。 选择左下角的的 Developer settings 。 然后选择 Personal access tokens 。 填写相关信息，选择 无限期 ， 勾选 repo 和 workflow 。点击创建。 然后生成完成，之后它会生成一串密码： 注意： 请记住这一串密码，你将不再能看到它。 创建云函数​","s":"腾讯云加强定时【选做】","u":"/blog/rpeace","h":"#腾讯云加强定时选做","p":281},{"i":295,"t":"进入 腾讯云 并点击注册。可以使用微信登录。点击右上角进入控制台，搜索 云函数。 点击新建云函数： 不选择模板，从头开始。 填写相关参数，选择环境 python ： 提高超时时间。 清空原有的代码，填入新的代码： 代码结构如下，你只需要修改 TOKEN （上面一步获取的） 这几参数以及 https://api.github.com/repos/你的用户名/reportPeace/dispatches 中的 GitHub 用户名即可。 # 腾讯云执行脚本，如不需要可忽略import requestsdef run(): headers = { 'Accept': 'application/vnd.github+json', 'Authorization': 'token 你的TOKEN', # 注：'token' 前缀必不可少 } data = '{\"event_type\": \"autoReportPeace\"}' response = requests.post(f'https://api.github.com/repos/你的用户名/reportPeace/dispatches', headers=headers, data=data)# 云函数入口def main_handler(event, context): return run() 点击启用日志。 然后点击完成。进入详细界面的代码界面，点击测试。 查看下面的日志： 如果出现 204，则表示成功。其他状态码均为失败。 然后到 GitHub 仓库查看 Actions，可以看到已经成功触发了工作流。 勾变为蓝色，表示成功。 设置云函数定时触发​ 在侧边中创建定时： 点击创建触发器。 其中填写 Cron 表达式。 0 0 8 * * * * # 每天 8 点0 0 18 * * * * # 每天 18 点0 0 7 * * 1-5 * # 周一到周五 7 点0 30 6 * * * * # 每天 6 点半 点击提交后，会在每天指定时间触发执行。注意，腾讯云与 GitHub 不同，腾讯云 使用的是北京时间，这意味着你并不需要考虑时区问题。 一个函数而已，并不会消耗多少资源，所以不用担心。","s":"创建腾讯云函数","u":"/blog/rpeace","h":"#创建腾讯云函数","p":281},{"i":297,"t":"为什么要使用脚本​ 游戏对象的行为由附加的组件控制。虽然 Unity 的内置组件可能用途很广泛，但是您很快就会发现，必须超越组件可提供的功能来实现自己的游戏功能。Unity 允许使用脚本来自行创建组件。使用脚本可以触发游戏事件，随时修改组件属性，并以所需的任何方式响应用户的输入。 Unity 本身支持 C# 编程语言。C#（发音为 C-sharp）是一种类似于 Java 或 C++ 的行业标准语言。","s":"Unity 中的脚本","u":"/blog/UnityCsharp","h":"","p":296},{"i":299,"t":"游戏对象的行为由附加的组件控制。虽然 Unity 的内置组件可能用途很广泛，但是您很快就会发现，必须超越组件可提供的功能来实现自己的游戏功能。Unity 允许使用脚本来自行创建组件。使用脚本可以触发游戏事件，随时修改组件属性，并以所需的任何方式响应用户的输入。 Unity 本身支持 C# 编程语言。C#（发音为 C-sharp）是一种类似于 Java 或 C++ 的行业标准语言。","s":"为什么要使用脚本","u":"/blog/UnityCsharp","h":"#为什么要使用脚本","p":296},{"i":301,"t":"在 Unity 的项目视图中，右键单击Assets文件夹，然后选择Create>C# Script。然后将脚本拖拽到模型上或者模型的检查器中，即可完成脚本的创建。这个脚本便绑定了这个模型。","s":"创建脚本","u":"/blog/UnityCsharp","h":"#创建脚本","p":296},{"i":303,"t":"使用 JetBrains Rider 或 Visual Studio Code 编辑器打开脚本。您将看到一个类似于下面的模板： using System.Collections;using System.Collections.Generic;using UnityEngine;// 类名和脚本名是一样的public class Move : MonoBehaviour{ // Start is called before the first frame update void Start() { } // Update is called once per frame void Update() { }}","s":"脚本模板概览","u":"/blog/UnityCsharp","h":"#脚本模板概览","p":296},{"i":305,"t":"Awake:只会被调用一次，在Start方法之前被调用。主要用于字段值的初始化工作，禁用脚本，创建游戏对象，或者 Resources.Load(Prefab) 对象。 Start:只执行一次，在Awake方法执行结束后执行，但在 Update 方法执行前执行，主要用于程序 UI 的初始化操作，比如获取游戏对象或者组件。 FixedUpdate:以固定频率调用的函数(默认0.02s)。 Update：以非固定的频率调用的函数，该频率与设备的性能和程序自身有关(每帧)。 LateUpdate：每当Update调用完之后立马调用。 OnDisable ：游戏对象消失(销毁/隐藏)的那一刻调用。 OnDestroy ：游戏对象销毁的那一刻调用。 Unity 输出 在 Unity 中我们使用 debug.log() 来输出信息，调试错误。 下面是一个完整生命周期的例子： using System;using System.Collections;using System.Collections.Generic;using UnityEngine;// 类名和脚本名是一样的public class Move : MonoBehaviour{ // 最先执行的 awake 函数 private void Awake() { // 控制台输出 Debug.Log(\"Awake\"); } private void OnEnable() { // 激活组件调用，可能调用多次 Debug.Log(\"激活组件\"); } // 在第一次 onEnable 之后，只调用一次 void Start() { Debug.Log(\"开始\"); } // 每一帧调用一次 void Update() { // 每帧调用 } // 在 Update 之后调用 private void LateUpdate() { // 在刷新后调用 } // 默认调用，与帧间隔无关 private void FixedUpdate() { // 固定调用 } // 对象消失时调用 private void OnDisable() { // 消失时调用 } // 销毁时调用 private void OnDestroy() { // 销毁时才会调用 }}","s":"脚本的生命周期","u":"/blog/UnityCsharp","h":"#脚本的生命周期","p":296},{"i":307,"t":"当某个对象有多个脚本时，与检查器中的脚本顺序无关。但是我们可以利用脚本的生命周期来控制脚本的执行顺序。 注意 在脚本执行时，先把所有脚本的 Awake 函数执行完，再执行所有脚本的 Start 函数，然后执行所有脚本的 Update 函数，以此类推。 Move1.cs using System.Collections;using System.Collections.Generic;using UnityEngine;public class Move1 : MonoBehaviour{ // 最先执行的 awake 函数 private void Awake() { // 控制台输出 Debug.Log(\"这是要先执行的\"); } void Start() { Debug.Log(\"开始\"); }} Move2.cs using System.Collections;using System.Collections.Generic;using UnityEngine;public class Move2 : MonoBehaviour{ // 最先执行的 awake 函数 private void Awake() { // 空 } void Start() { Debug.Log(\"这是后执行的\"); }} 当然，也可以在 Project 设置中直接修改脚本执行顺序。","s":"多个脚本运行顺序","u":"/blog/UnityCsharp","h":"#多个脚本运行顺序","p":296},{"i":310,"t":"// 键盘按下 W A S D 时，相机沿着对应的方向移动if (Input.GetKey(KeyCode.W)){ character.transform.Translate(Vector3.forward * Time.deltaTime * 10);}if (Input.GetKey(KeyCode.A)){ character.transform.Translate(Vector3.left * Time.deltaTime * 10);}if (Input.GetKey(KeyCode.S)){ character.transform.Translate(Vector3.back * Time.deltaTime * 10);}if (Input.GetKey(KeyCode.D)){ character.transform.Translate(Vector3.right * Time.deltaTime * 10);}","s":"响应键盘","u":"/blog/UnityCsharp","h":"#响应键盘","p":296},{"i":312,"t":"在物体组件中添加 Box Collider 组件，然后在 Box Collider 组件中勾选 Is Trigger。在下面修改包围盒参数，使其与物体大小一致。","s":"游戏物体在有重力时不会掉下去","u":"/blog/UnityCsharp","h":"#游戏物体在有重力时不会掉下去","p":296},{"i":314,"t":"前言​","s":"前端发展概况介绍","u":"/blog/webfront","h":"","p":313},{"i":317,"t":"Web前端: 顾名思义是来做Web的前端的。我们这里所说的前端泛指Web前端，也就是在Web应用中用户可以看得见碰得着的东西。包括Web页面的结构、Web的外观视觉表现以及Web层面的交互实现。 Web前端： 1）掌握HTML，能够书写语义合理，结构清晰，易维护的HTML结构。 2）掌握CSS，能够还原设计人员的视觉设计，并兼容业界承认的主流浏览器。 3）熟悉JavaScript，了解ECMAScript基础内容，掌握1~2种js框架，如Vue、React 4）对常见的浏览器兼容问题有清晰的理解，并有可靠的解决方案。 5）对性能有一定的要求，了解yahoo的性能优化建议，并可以在项目中有效实施。 6）...... Web后端： 1）精通jsp，servlet，java bean，JMS，EJB，Jdbc，Flex开发，或者对相关的工具、类库以及框架非常熟悉，如Velocity，Spring，Hibernate，iBatis，OSGI等，对Web开发的模式有较深的理解 2）练使用oracle、sqlserver、mysql等常用的数据库系统，对数据库有较强的设计能力 3）熟悉maven项目配置管理工具，熟悉tomcat、jboss等应用服务器，同时对在高并发处理情况下的负载调优有相关经验者优先考虑 4）精通面向对象分析和设计技术，包括设计模式、UML建模等 5）熟悉网络编程，具有设计和开发对外API接口经验和能力，同时具备跨平台的API规范设计以及API高效调用设计能力 6）......","s":"什么是前端","u":"/blog/webfront","h":"#什么是前端","p":313},{"i":319,"t":"随着web2.0时代的到来，前端在web开发中所占的比重越来越大，专注于内容呈现和网站交互的前端开发人员也逐渐展现出其不可替代性。前端所涉及的领域甚至不限于一个浏览器（web）应用，如HTML5技术允许我们开发原生的移动应用；React Native、Flutter等跨平台框架可以用于开发跨平台的移动应用；还有近些年相当流行的微信、支付宝小程序等。此外，随着微软的新项目React Native for Windows的发布，使用前端技术开发Windows桌面应用也成为了可能。 可以说，大前端时代即将到来。什么是大前端时代？众所周知，前端是专注客户端逻辑的，客户端可以分为web前端、Windows（操作系统）桌面端、安卓前端、ios前端、小程序前端等，但是就目前而言，这些前端领域的技术栈仍不相通，Web前端主要使用的是H5技术栈，衍生了React、Angular、Vue三大框架，Windows端采用C#或者C++及其QT库来编写页面和逻辑，安卓使用Kotlin做逻辑描述，ios使用UIkit等语言绘制界面，总之就是十分不统一，但是作为相通的客户端，都是编写页面和逻辑，为什么不能一端开发，多端使用呢？因此，大前端时代到来了。 什么是大前端 简单来说，大前端就是所有前端的统称，比如Android、iOS、web、Watch等，最接近用户的那一层也就是UI层，然后将其统一起来，就是大前端。大前端最大的特点在于只需一次开发，就能适用于所有平台。开发者不用为一个APP需要做Android和iOS两种模式而担心。大前端不仅会成为移动开发与Web前端的发展趋势，也将会是所有智能设备显示终端的开发技术趋势。 例如，React推出了React Native，是Facebook于2015年4月开源的跨平台移动应用开发框架，是Facebook早先开源的JS框架 React 在原生移动应用平台的衍生产物，支持iOS和安卓两大平台。它的作用就是使用React技术栈（也就是js技术栈）进行开发后，可以同时运行在安卓和ios端。Learn once, write anywhere的理念也得到了记得的赞扬和发展。Flutter也在其后诞生，它也可以通过一个技术栈构建多端的代码。2018年，华为、小米、OPPO等厂商推出了快应用，运行在系统层面上的小程序。最近，React Native for Windows被微软发布，使用web技术栈构建Windows程序也成为可能了。 未来很有可能，前端技术栈都向Web技术栈靠拢，前端工程师只需要精修一种技术栈，可以将代码运行在各种操作系统的各个屏幕上，又或者，在微信云开发之类的云后端出现下，未来可能构建C/S架构只需要前端工程师和云后端工程师，这也许就是技术发展的意义。 下面，我们将回顾前端的发展进程。","s":"前端发展概况","u":"/blog/webfront","h":"#前端发展概况","p":313},{"i":321,"t":"随着1994年美国的Netscape公司推出第一款浏览器NCSAMosaic（后改名Navigator），web1.0时代正式到来（web的概念可追溯到更早）。安装了该浏览器的用户，可以浏览来自于其他网站的信息（主要是文字）。参考远古功能机浏览器界面，只有链接、文字、少量有图片。 这个时代前端的代表技术主要是HTML4，CSS2，JavaScript4(ES4)。三者的关系可以描述为：HTML告诉浏览器网页上有什么，CSS告诉浏览器他们长什么样，JavaScript描述他们有什么行为。直至今日，这三者仍是前端开发的三大核心（以JavaScript为重中之重）。这时候的前端专注于静态内容的呈现，但由于技术的限制，前端的呈现能力显得非常不足(页面长得丑，死板)。","s":"Web1.0- 静态内容呈现","u":"/blog/webfront","h":"#web10--静态内容呈现","p":313},{"i":323,"t":"简单来说，web2.0更强调网页的交互性，它不再将用户局限在对网页的浏览上，而是根据用户的操作，来展现不同的网页内容。用户可以在不刷新页面的情况下，通过简单的点击、按键输入等获取不同的内容。 在web2.0时代，网页具备了展示更多媒体应用的能力，如播放音频，视频，查看PDF文档等。同时技术的标准化使前端开发人员逐渐从浏览器之争的创伤之中走出来，也大大推动了互联网技术的进步。 web2.0时代最具代表性的前端技术莫过于HTML5 + CSS3和ES5 / ES6了，其中HTML5为网页提供了诸多能力，包括播放音视频，canvas，svg，多线程，本地存储，离线应用，websocket，web worker等等；CSS3则大大增强了网页的渲染能力，包括阴影，渐变，新的布局模型，2D/3D变形和动画等等。 除了在web中的应用，前端开发还触及到了其他相当多的领域，包括原生移动应用(主要借助HTML5相关技术)，跨平台移动开发（React Native和Flutter），微信小程序，以及后续的Windows桌面应用开发等，此外，在一些新兴领域，如智能设备，智能医疗，计算机视觉，大数据等，前端技术都占有一席之地。因为前端最重要的工作，就是负责内容的呈现和与用户的交互。 这时候的前端把更多注意力放在了用户交互上，并大大增强了内容呈现的能力，致力于带给用户更好的浏览体验。 为什么产生了前端框架 随着前端需要处理的数据越来越多，网站的页面越来越多，需要写的样式越来越多，为了简化开发流程，才出现了诸多的组件库和框架，框架如Vue、React等，组件库包括Element、Bootstrap等。框架的掌握是每个前端开发成员的必备技能。","s":"Web2.0- 交互时代","u":"/blog/webfront","h":"#web20--交互时代","p":313},{"i":325,"t":"实际上web3.0时代并未真正到来，它只是业内一种概念性的描述，并且本质上不是技术的革新，而是web理念的一种革新。我们先来看一下web2.0时代遇到的一些问题。 随着web2.0时代的蓬勃发展，大量的网站涌现出来，web中的数据量呈指数级增长。对于普通浏览器用户来说，web技术不止带来了大量的免费信息，也带来了筛选信息的烦恼。如今的互联网上充斥着大量的数据，如何找到准确、可靠、最新的信息，即使对专业的计算机开发人员来说，也是个不小的问题。此外，各个网站之间相对独立，信息只有通过同时浏览过这些网站的人才能发生交互。我们知道，数据的整合会创造更大的价值，而目前这种整合几乎完全依赖于每个web参与者，这显然无法完全发挥这些数据的价值。 web3.0则会通过第三方平台来整合数据，为用户筛选和提炼更有价值的信息，这可能需要借助其他领域的技术来实现，如人工智能、大数据等等。另外web3.0的实践者希望所有的应用都完全基于web，即使用web技术实现需要复杂的系统应用才能实现的功能，例如微软的基于web的在线office应用等。 web3.0背景下，前端需要具备呈现更加复杂的数据的能力，并提供不亚于复杂的系统应用的交互能力和业务逻辑处理能力。 web3总结 实际上，web3技术希望所有的应用通过web完成，在这种条件下，客户端算力更依赖于网络了，而不是本地的","s":"Web3.0","u":"/blog/webfront","h":"#web30","p":313},{"i":328,"t":"由于JavaScript单线程的语言特性以及不具备如java般严谨的面向对象特征，它一度被认为只能用于前端开发，不能适应后端复杂业务逻辑的开发，这主要基于三点： 单线程特性，无法充分利用多核CPU强大的计算能力，不利于开发分布式应用。 不够安全，一旦主线程出错，整个执行过程就会崩溃 没有严谨的面向对象特性，封装程度不够，无法处理复杂的业务逻辑 但同时作为面向前端浏览器环境所设计的一门语言，JavaScript也具有一些其他大部分语言没有的特性，最典型的包括其事件循环机制，同时单线程的特点也可以说是有利有弊。 利用JavaScript的这些语言特点，Ryan Dahl于2009年发布了JavaScript的服务器端运行环境nodejs。它基于谷歌浏览器广受好评的JavaScript引擎–V8引擎，是一个事件驱动的非阻塞I/O模型。它将所有的客户端请求都交给事件循环机制来处理，从而将I/O代价降到极低。由于单线程的语言机制，它不需要处理复杂的线程同步问题，更不会发生死锁等线程问题。随着ES6规范中web worker的出现，nodejs也具备了利用多核CPU的能力（当然仍然无法与java相提并论）。 总的来说，JavaScript和nodejs的发展仍有不足，使用nodejs开发完整后端应用的网站仍然微乎其微，但是有相当多的网站使用nodejs来开发中间件，利用其优秀的I/O性能，处理大量的I/O请求。 nodejs的发展仍然值得期待。","s":"nodejs的兴起","u":"/blog/webfront","h":"#nodejs的兴起","p":313},{"i":330,"t":"英雄终有落幕，尽管jQuery红极一时，但是终究无法应对越来越复杂的前端开发工作。一方面，jQuery大量的优秀特性已经被吸纳为JavaScript标准。另一方面，占有其60%代码量的DOM操作已经被公认为网页的性能杀手，因为DOM操作需要反复地操作文档，并触发网页的重绘和重排，这会严重影响网页的性能，最严重的可能导致页面卡死。此外，使用jQuery开发的网站，会因为大量的DOM操作，需要书写大量的代码，从而变得难以维护。 我们需要有一种更优雅的方式来操作页面，以获得更优秀的用户体验。 为了解决这些问题，前端兴起了组件化开发和MVVM开发模型。 目前对国内影响比较大的当属React和Vue了。2013年，Facebook的前端团队设计了一个崭新的前端框架，它将网页的各个部分拆分成一个个的组件，使用虚拟DOM将页面上的节点存储在内存中，将视图和数据进行绑定。视图的显示完全由数据和模板来驱动，这样当数据发生变化时，开发者不需要考虑如何去进行DOM操作，框架会自动以高效的方式去更新虚拟DOM，然后更新网页内容。开发者只需要专注于数据的操作即可。这样就实现了视图与业务逻辑的分离。 作为国内的一款优秀的前端框架，Vue在前端开发中的地位毋庸置疑。Vue的设计更加符合人们的思维方式，所以上手更快，学习成本更低。但Vue本身并不是严格基于MVVM模型的框架，只是借鉴了MVVM的设计原理。这里就不详述了。 参考文章 http://t.csdn.cn/iEG2D","s":"组件化开发和MVVM的兴起","u":"/blog/webfront","h":"#组件化开发和mvvm的兴起","p":313},{"i":332,"t":"前言​ 在上一篇博客中，我介绍了写好的爬取课程表的代码，但是这个代码只能在本地运行，但是现在我希望可以使用微信来进行课程提醒。但是配置服务器无疑是比较麻烦的，经过分析我发现定时任务和代码执行都可以使用 GitHub Action 执行。所以我就想到了使用 GitHub Actions 及 GitHub API 来实现这个功能。本篇文章将介绍如何使用我的代码实现课程与每日天气自动推送。","s":"自动推送微信消息和课表","u":"/blog/wxpush","h":"","p":331},{"i":334,"t":"在上一篇博客中，我介绍了写好的爬取课程表的代码，但是这个代码只能在本地运行，但是现在我希望可以使用微信来进行课程提醒。但是配置服务器无疑是比较麻烦的，经过分析我发现定时任务和代码执行都可以使用 GitHub Action 执行。所以我就想到了使用 GitHub Actions 及 GitHub API 来实现这个功能。本篇文章将介绍如何使用我的代码实现课程与每日天气自动推送。","s":"前言","u":"/blog/wxpush","h":"#前言","p":331},{"i":336,"t":"Python GitHub Actions 微信公众平台开发 腾讯云函数 SCF","s":"涉及的工具和技术","u":"/blog/wxpush","h":"#涉及的工具和技术","p":331},{"i":338,"t":"GitHub Action 是 GitHub 提供的一项功能，可以在 GitHub 上运行自定义的脚本，可以用来自动化构建、测试、打包、发布或部署任何项目。GitHub Action 是 GitHub 为开发者提供的一项功能，可以在 GitHub 上运行自定义的脚本，可以用来自动化构建、测试、打包、发布或部署任何项目。","s":"GitHub Actions 介绍","u":"/blog/wxpush","h":"#github-actions-介绍","p":331},{"i":341,"t":"我们要使用微信公众号来帮助我们传递消息。但是一般个人能注册的订阅号是不能满足我们的要求的，每天只能推送一条图文消息。但是微信为我们提供了测试号，测试号可以满足我们的需求，毕竟课表推送我们仅仅个人使用，不需要太多的人数。所以一个测试号就够了。 首先打开微信公众平台测试号注册。扫码登录后，点击立即开通，然后填写信息，就可以注册完成了。","s":"注册","u":"/blog/wxpush","h":"#注册","p":331},{"i":343,"t":"在界面上找到二维码，让需要使用的用户扫码关注。","s":"扫码关注","u":"/blog/wxpush","h":"#扫码关注","p":331},{"i":345,"t":"不需要这个的可以跳过这一步。","s":"获取高德天气 API","u":"/blog/wxpush","h":"#获取高德天气-api","p":331},{"i":347,"t":"打开高德开放平台，点击右上角注册，然后填写信息，就可以注册完成了。","s":"注册","u":"/blog/wxpush","h":"#注册-1","p":331},{"i":349,"t":"注册成功后，打开控制台，在左侧选择应用管理，点击我的应用，然后在右上角选择创建新任务。应用名称和应用类型可以随意填写，然后点击创建。","s":"创建应用","u":"/blog/wxpush","h":"#创建应用","p":331},{"i":351,"t":"接着，填写信息，选择 Web 服务。然后点击提交。名称可以随便取。 记住这个生成的 Key ，之后会用到。","s":"添加 Key","u":"/blog/wxpush","h":"#添加-key","p":331},{"i":353,"t":"打开本项目 仓库地址，点击右上角 Fork 并顺便点击 Star 纳入你的收藏，就可以将本项目全部代码复制到你的仓库中了。 然后，克隆源代码到你的本地。","s":"在 GitHub 上 Fork 本项目","u":"/blog/wxpush","h":"#在-github-上-fork-本项目","p":331},{"i":355,"t":"但是，实际上我们并不需要做过多修改，只需要一点点的参数修改就可以完成项目的构建了。那么，克隆在本地也就不再必要了，这里将为希望省事的人或者不会使用 Git 的人提供一个方法，直接在 GitHub 上修改代码。 GitHub 提供了一种能力叫做 GitHub Codespaces，可以在浏览器中直接修改代码，不需要下载任何东西。我们只需要把你刚刚克隆的仓库 <你的昵称>/wx_weather_class_push 中浏览器上方导航栏的链接中 github.com 改为 github.dev ，就可以启动在线 VScode ，便于你在浏览器中修改代码了。 https://github.com/<你的GitHub昵称>/wx_weather_class_push 修改后： https://github.dev/<你的GitHub昵称>/wx_weather_class_push 启动过程，请稍等片刻： 启动成功，出现编辑器界面： tip 右下角可能提示让你安装 Python 依赖，安装即可。 字太小了，我们可以把字体放大一点。点击左下角的设置图标。将文字大小设置为 20.可以按照自己的喜好设置。","s":"在线编辑项目源代码","u":"/blog/wxpush","h":"#在线编辑项目源代码","p":331},{"i":357,"t":"本项目提供了两种功能，可以每天早上道早安每天晚上道晚安同时在每节课开始前可以推送课程信息。这两个内容互相独立，可以只执行一个，也可以两者都执行。","s":"修改配置","u":"/blog/wxpush","h":"#修改配置","p":331},{"i":359,"t":"早安推送代码对应文件 morning.py。在左侧文件栏中找到 morning.py，点击打开。 在这个功能中，你只需要修改 user_id_list 即用户列表。 user_id_list = [ { 'user_id': user_id_1, # 用户 ID，不需要在这里修改 \"name\": 'Orange', # 用户昵称，可以修改，随便写 \"date\": \"2021-04-02\", # 纪念日，可以修改 \"birthday\": \"05-28\", # 生日，可以修改 \"city\": \"110108\" # 城市代码，可以修改，在高德 API 中查询 }] 在 这里 可以查询你的城市的天气接口代码。 同时，你可以添加多个人，只需要在 user_id_list 中再添加一个字典即可。但是请注意，你需要添加一个新的 user_id 环境变量。 user_id_list = [ { 'user_id': user_id_1, # 用户 ID，不需要在这里修改 \"name\": 'Orange', # 用户昵称，可以修改，随便写 \"date\": \"2021-04-02\", # 纪念日，可以修改 \"birthday\": \"05-28\", # 生日，可以修改 \"city\": \"110108\" # 城市代码，可以修改，在高德 API 中查询 }, { 'user_id': user_id_2, # 用户 ID，不需要在这里修改 \"name\": 'Orange', # 用户昵称，可以修改，随便写 \"date\": \"2021-04-02\", # 纪念日，可以修改 \"birthday\": \"05-28\", # 生日，可以修改 \"city\": \"110108\" # 城市代码，可以修改，在高德 API 中查询 }]","s":"修改早安推送代码","u":"/blog/wxpush","h":"#修改早安推送代码","p":331},{"i":361,"t":"晚安代码对应 eve.py 在基础使用中，不需要修改。","s":"修改晚安推送代码","u":"/blog/wxpush","h":"#修改晚安推送代码","p":331},{"i":363,"t":"课表代码对应文件 classPush.py。在左侧文件栏中找到 classPush.py，点击打开。 修改用户列表​ 首先，同上，你可以修改 user_id_list 即用户列表。 修改学期信息​ 修改学年号和学期开始时间。除了下面高亮的两行( semester 和 firstDay )外，其他不要修改。 id = os.environ[\"STUDENT_ID\"] # 学号pwd = os.environ[\"PASSWORD\"] # 密码# 微信公众号 IDapp_id = os.environ[\"APP_ID\"]# 微信公众号 app_secretapp_secret = os.environ[\"APP_SECRET\"]semester = '2022-2023-1' # 学期firstDay = '2022-08-29' # 学期开始日期# ...省略 修改教务系统链接​ tip 本套代码适用于强智教务系统，如果你的教务系统不是强智，请自行寻找 API 进行适配。 然后，你可以修改两个链接，将前面的前缀地址改为你学校的教务系统地址。即把 <http://newjwxt.bjfu.edu.cn/> 改为你学校的教务系统地址。后面的链接不要改动。 # ...省略其他代码def Crawl(): loginLink = \"http://newjwxt.bjfu.edu.cn/app.do?method=authUser&xh=\" + id + \"&pwd=\" + pwd rep = requests.get(loginLink) res = json.loads(rep.text) # 使用账号密码换取网站 token token = res[\"token\"] tableUrl = \"http://newjwxt.bjfu.edu.cn/app.do?method=getKbcxAzc&xh=\" + id + \"&xnxqid=\" + semester + \"&zc=\" + week header = { \"token\": token # 传入 token ，鉴权 } res = requests.get(url=tableUrl, headers=header) schedule = json.loads(res.text) # 读取课表 json # ...省略其他代码 修改每节课开始时间​ 这一步就稍微有点复杂了，不过也很好理解，我们需要判断当前时间在课表的哪个时间段，来判断现在应该要上哪一节课。 先获取现在的时间，由于我想要提前进行提醒，所以我把时间推迟20分钟，这样就可以提前20分钟提醒了。（就是说要去查询20分钟后的课程） # 获取现在时间now = datetime.datetime.now()# 获取现在时间的小时和分钟hour = now.hourminute = now.minute + 20 # 查询20分钟后的课程second = now.second# 分钟加20后，可能需要进行进位，如果分钟大于60，小时加1，分钟减60if minute >= 60: hour += 1 minute -= 60 接着，我们要把处理好的时间转换成字符串，方便后面的比较。 # 如果小时小于10，前面加0if hour<10: nowTime = '0' + str(hour) + ':' + str(minute) + ':' + str(second)else : nowTime = str(hour) + ':' + str(minute) + ':' + str(second)# 如果进位后时间为 24：00：00 ，则改为 00：00：00if hour==24: nowTime = '00' + ':' + str(minute) + ':' + str(second) 然后，我们要判断现在时间在课表的哪个时间段，来判断现在应该要上哪一节课。我们把课表的几个关键点创建为变量。例如，我们学校的时间表如下： # 8:00-9:35 第1-2节# 9:50-12:15 第3-5节# 13:30-15:05 第6-7节# 15:20-16:55 第8-9节# 18:30-20:55 第10-12节 我们只需要记录开始时间。 dt1 = datetime.datetime.strptime('08:00:00', '%H:%M:%S')dt2 = datetime.datetime.strptime('09:50:00', '%H:%M:%S')dt3 = datetime.datetime.strptime('13:30:00', '%H:%M:%S')dt4 = datetime.datetime.strptime('15:20:00', '%H:%M:%S')dt5 = datetime.datetime.strptime('18:30:00', '%H:%M:%S') 但是，Github采用UTC时间，北京时间比UTC时间早8小时。所以我们必须把上述时间减去8小时。 dt1 = datetime.datetime.strptime('00:00:00', '%H:%M:%S')dt2 = datetime.datetime.strptime('01:50:00', '%H:%M:%S')dt3 = datetime.datetime.strptime('05:30:00', '%H:%M:%S')dt4 = datetime.datetime.strptime('07:20:00', '%H:%M:%S')dt5 = datetime.datetime.strptime('10:30:00', '%H:%M:%S') 将现在的时间（准确来说是二十分钟后的时间）存为变量。 dtNow = datetime.datetime.strptime(nowTime, '%H:%M:%S') 然后计算整个时间段的秒数。例如 8:00-9:35 的秒数为 95 * 60 = 5700，依此类推。用现在的时间减去课程开始的时间，如果结果大于 0 且小于这个时间段的秒数，那么就是在这个时间段。 if 0 <= (dtNow - dt1).seconds < 5700: return 1elif 0 <= (dtNow - dt2).seconds < 8700: return 3elif 0 <= (dtNow - dt3).seconds < 5700: return 6elif 0 <= (dtNow - dt4).seconds < 5700: return 8elif 0 <= (dtNow - dt5).seconds < 8700: return 10else: return -1","s":"修改课表信息代码","u":"/blog/wxpush","h":"#修改课表信息代码","p":331},{"i":365,"t":"在上面的代码中，有许多涉及隐私的东西。比如学号、密码、用户ID等。我们不希望这些东西在源代码被公开，所以我们需要把它们添加到 GitHub Secrets 中。 下面举一个例子： 在上面我们需要把学号存储为密匙，在代码中，它的变量名为 STUDENT_ID 。 打开你 Fork 后你的仓库。点击 Settings，然后点击 Secrets，点击 New repository secret，在 Name 中输入 STUDENT_ID，在 Value 中输入你的学号，点击 Add secret。 然后点击添加。 按照上述步骤，你还需要添加下面内容： APP_ID # 测试公众号的IDAPP_SECRET # 测试公众号的密匙KEY # 高德应用的密匙PASSWORD # 教务系统密码STUDENT_ID # 学号TEMPLATE_ID # 早安模板IDTEMPLATE_ID_CLASS # 课表模板IDTEMPLATE_ID_EVE # 晚安模板IDTEMPLATE_ID_NOCLASS # 无课模板IDUSER_ID_1 # 用户1 IDUSER_ID_2 # 用户2 ID ，还有多个用户可以继续添加","s":"添加 Secrets","u":"/blog/wxpush","h":"#添加-secrets","p":331},{"i":367,"t":"在微信公众平台测试账号页面，前面的就是 APP_ID，后面的就是 APP_SECRET。","s":"获取 APP_ID 和 APP_SECRET","u":"/blog/wxpush","h":"#获取-app_id-和-app_secret","p":331},{"i":369,"t":"就在上面的步骤中。","s":"获取高德应用的密匙 KEY","u":"/blog/wxpush","h":"#获取高德应用的密匙-key","p":331},{"i":371,"t":"在微信公众平台测试账号页面创建模板。 目前，你按需可以创建四个模板。如下添加： 在这里我把全部模板提供给你，你也可以修改。 # 上课模板20分钟后即将上课： 课程名称： {{kcmc.DATA}} 上课节数： {{sksj.DATA}} 上课地点： {{jsmc.DATA}} 课程教师： {{jsxm.DATA}} {{words.DATA}}# 无课模板一会没有课嗷，休息一会或者自习吧！# 早安模板早上好！ 今天 {{cityname.DATA}} ，天气 {{weather.DATA}} ，温度 {{temperature.DATA}}，风向 {{winddirection.DATA}}，今天是我们第 {{love_days.DATA}} 天，距离生日还有 {{birthday_left.DATA}} 天！ {{words.DATA}}# 晚安模板晚安！ 月亮坠入不见底的河，星星垂眸惊动了舸。晚安~~ {{words.DATA}} 创建好模板后，在侧边栏复制模板 ID。填入 TEMPLATE_ID，TEMPLATE_ID_CLASS，TEMPLATE_ID_EVE，TEMPLATE_ID_NOCLASS 中。","s":"获取模板 ID","u":"/blog/wxpush","h":"#获取模板-id","p":331},{"i":373,"t":"代码编写完后，点击左侧分支按钮。 然后在上面随意输入信息。然后点击上面的对勾提交。 当仓库首页出现提交信息说明提交成功了。","s":"提交代码","u":"/blog/wxpush","h":"#提交代码","p":331},{"i":376,"t":"实际上 GitHub Pages 本身就能实现定时服务。让我们看看官方文档是怎么说的： Note: The event can be delayed during periods of high loads of GitHub Actions workflow runs. High load times include the start of every hour. To decrease the chance of delay, schedule your workflow to run at a different time of the hour.schedule 即 注意：在 GitHub Actions 工作流高负载运行期间，事件可能会延迟。高负载时间包括每小时的开始时等。为了减少延迟的可能性，请安排工作流在每小时的不同时间运行。 实测使用 GitHub Pages 的定时服务，延迟在 10 分钟到 1 小时不等，极端条件下定时不会执行。我们果断抛弃这个方式。 而 GitHub Actions 支持 workflow_dispatch 触发器（请参阅 GitHub Docs 上的触发工作流的事件，因此如果您手动触发工作流，它将立刻执行。这意味着您可以使用第三方 cron 调度服务，如 腾讯云、IFTTT、Google Cloud Scheduler 等，向 GithubAPI 发出请求以触发工作流。","s":"背景","u":"/blog/wxpush","h":"#背景","p":331},{"i":378,"t":"在你的 Github 主页，选择 setting 。 选择左下角的的 Developer settings 。 然后选择 Personal access tokens 。 填写相关信息，选择 无限期 ， 勾选 repo 和 workflow 。点击创建。 然后生成完成，之后它会生成一串密码： 在你的 Github 主页，选择 setting 。 选择左下角的的 Developer settings 。 然后选择 Personal access tokens 。 填写相关信息，选择 无限期 ， 勾选 repo 和 workflow 。点击创建。 然后生成完成，之后它会生成一串密码： 注意 请记住这一串密码，你将不再能看到它。","s":"获取 GitHub Token","u":"/blog/wxpush","h":"#获取-github-token","p":331},{"i":380,"t":"进入 腾讯云 并点击注册。可以使用微信登录。点击右上角进入控制台，搜索 云函数。 你需要创建三个云函数，分别是：morning，evening，class。下面以 morning 为例。 点击新建云函数： 不选择模板，从头开始。 填写相关参数，选择环境 python ： 提高超时时间。 清空原有的代码，填入新的代码： 代码结构如下，你只需要修改 TOKEN （上面一步获取的） 这几参数以及 https://api.github.com/repos/<YOUR GITHUB NAME>/wx_weather_class_push/dispatches 中的 GitHub 用户名即可。 import requestsdef run(): headers = { 'Accept': 'application/vnd.github+json', 'Authorization': 'token <TOKEN>', # 请把 <TOKEN> 替换为你的 GitHub Token } data = '{\"event_type\": \"morning\"}' response = requests.post(f'https://api.github.com/repos/<YOUR GITHUB NAME>/wx_weather_class_push/dispatches', headers=headers, data=data)# 云函数入口def main_handler(event, context): return run() 点击启用日志。 然后点击完成。进入详细界面的代码界面，点击测试。 查看下面的日志： 如果出现 204，则表示成功。其他状态码均为失败。 然后到 GitHub 仓库查看 Actions，可以看到已经成功触发了工作流。 勾变为蓝色，表示成功。 这时手机收到了推送。 然后，在侧边中创建定时： 点击创建触发器。 其中填写 Cron 表达式。 0 0 8 * * * * # 每天 8 点0 0 18 * * * * # 每天 18 点0 0 7 * * 1-5 * # 周一到周五 7 点0 30 6 * * * * # 每天 6 点半 点击提交后，会在每天指定时间触发执行。 你还需要完成两个云函数，分别是 evening，class。可以参考上述步骤。其中课表推送需要多个触发器，参考如下： 这需要根据你的课程表自行修改。 在源代码仓库的 run.py 中，由上面三个函数的源码。","s":"创建腾讯云函数","u":"/blog/wxpush","h":"#创建腾讯云函数","p":331},{"i":382,"t":"如果你觉得这个项目对你有帮助，欢迎给我一个 Star。 仓库地址：wx_weather_class_push","s":"支持","u":"/blog/wxpush","h":"#支持","p":331},{"i":385,"t":"包括以下内容： Java MySql Node.js Express","s":"存放服务端端学习资料的地方","u":"/docs/back","h":"#存放服务端端学习资料的地方","p":383},{"i":388,"t":"符号 作用 + 加法 - 相加运算符两侧的值 - 减法 - 左操作数减去右操作数 * 乘法 - 相乘操作符两侧的值 / 除法 - 左操作数除以右操作数 % 取余 - 左操作数除以右操作数的余数 ++ 自增: 操作数的值增加1 -- 自减: 操作数的值减少1 package com.jetzihan.day1;public class Compute { public static void main(String[] args) { int a=0,b=1,c=2,d=3; // + System.out.println(a+b); // - System.out.println(c-b); // * System.out.println(a*b); // / System.out.println(4/2); }}/** 输出：* 1 * 1 * 0 * 2* */ 数值拆分 键盘输入一个三位数，将其个、十、百位打印。 package com.jetzihan.day1;import java.util.Scanner;public class PrintNum { public static void main(String[] args) { System.out.println(\"请输入一个三位数\"); int hund; Scanner in =new Scanner(System.in); hund=in.nextInt(); int Gewei; Gewei=hund%10; int Shiwei=hund /10 %10; int Baiwei=hund /100 %10; System.out.println(Gewei); System.out.println(Shiwei); System.out.println(Baiwei); }}/** 输入：123* 输出：* 3* 2* 1* */","s":"算数运算符","u":"/docs/BackEnd/Java/caculates","h":"#算数运算符","p":386},{"i":390,"t":"运算符 描述 例子 == 检查如果两个操作数的值是否相等，如果相等则条件为真。 （A == B）为假。 != 检查如果两个操作数的值是否相等，如果值不相等则条件为真。 (A != B) 为真。 > 检查左操作数的值是否大于右操作数的值，如果是那么条件为真。 （A> B）为假。 \\< 检查左操作数的值是否小于右操作数的值，如果是那么条件为真。 （A <\\B）为真。 >\\= 检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。 （A> = B）为假。 <= 检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。 （A <= B）为真。 public class Test { public static void main(String[] args) { int a = 10; int b = 20; System.out.println(\"a == b = \" + (a == b) ); System.out.println(\"a != b = \" + (a != b) ); System.out.println(\"a > b = \" + (a > b) ); System.out.println(\"a < b = \" + (a < b) ); System.out.println(\"b >= a = \" + (b >= a) ); System.out.println(\"b <= a = \" + (b <= a) ); }} 输出： a == b = false a != b = true a > b = false a < b = true b >= a = true b <= a = false","s":"关系运算符","u":"/docs/BackEnd/Java/caculates","h":"#关系运算符","p":386},{"i":392,"t":"Java定义了位运算符，应用于整数类型(int)，长整型(long)，短整型(short)，字符型(char)，和字节型(byte)等类型。 位运算符作用在所有的位上，并且按位运算。假设a = 60，b = 13;它们的二进制格式表示将如下： A = 0011 1100 B = 0000 1101 A&B = 0000 1100 A | B = 0011 1101 A ^ B = 0011 0001 ~A= 1100 0011 操作符 描述 ＆ 如果相对应位都是1，则结果为1，否则为0 | 如果相对应位都是 0，则结果为 0，否则为 1 ^ 如果相对应位值相同，则结果为0，否则为1 〜 按位取反运算符翻转操作数的每一位，即0变成1，1变成0。 << 按位左移运算符。左操作数按位左移右操作数指定的位数。 >> 按位右移运算符。左操作数按位右移右操作数指定的位数。 >>> 按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。 public class Test { public static void main(String[] args) { int a = 60; /* 60 = 0011 1100 */ int b = 13; /* 13 = 0000 1101 */ int c = 0; c = a & b; /* 12 = 0000 1100 */ System.out.println(\"a & b = \" + c ); c = a | b; /* 61 = 0011 1101 */ System.out.println(\"a | b = \" + c ); c = a ^ b; /* 49 = 0011 0001 */ System.out.println(\"a ^ b = \" + c ); c = ~a; /*-61 = 1100 0011 */ System.out.println(\"~a = \" + c ); c = a << 2; /* 240 = 1111 0000 */ System.out.println(\"a << 2 = \" + c ); c = a >> 2; /* 15 = 1111 */ System.out.println(\"a >> 2 = \" + c ); c = a >>> 2; /* 15 = 0000 1111 */ System.out.println(\"a >>> 2 = \" + c ); }} 结果： a & b = 12 a | b = 61 a ^ b = 49 ~a = -61 a << 2 = 240 a >> 2 = 15 a >>> 2 = 15","s":"位运算符","u":"/docs/BackEnd/Java/caculates","h":"#位运算符","p":386},{"i":394,"t":"下表列出了逻辑运算符的基本运算，假设布尔变量A为真，变量B为假 操作符 描述 例子 && 称为逻辑与运算符。当且仅当两个操作数都为真，条件才为真。 （A && B）为假。 | | 称为逻辑或操作符。如果任何两个操作数任何一个为真，条件为真。 （A | | B）为真。 ！ 称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到false。 ！（A && B）为真。 public class Test { public static void main(String[] args) { boolean a = true; boolean b = false; System.out.println(\"a && b = \" + (a&&b)); System.out.println(\"a || b = \" + (a||b) ); System.out.println(\"!(a && b) = \" + !(a && b)); }} 运算结果： a && b = false a || b = true !(a && b) = true","s":"逻辑运算符","u":"/docs/BackEnd/Java/caculates","h":"#逻辑运算符","p":386},{"i":396,"t":"条件运算符也被称为三元运算符。该运算符有3个操作数，并且需要判断布尔表达式的值。该运算符的主要是决定哪个值应该赋值给变量。 variable x = (expression) ? value if true : value if false public class Test { public static void main(String[] args){ int a , b; a = 10; // 如果 a 等于 1 成立，则设置 b 为 20，否则为 30 b = (a == 1) ? 20 : 30; System.out.println( \"Value of b is : \" + b ); // 如果 a 等于 10 成立，则设置 b 为 20，否则为 30 b = (a == 10) ? 20 : 30; System.out.println( \"Value of b is : \" + b ); }} Value of b is : 30 Value of b is : 20 Java字符优先级","s":"条件运算符","u":"/docs/BackEnd/Java/caculates","h":"#条件运算符","p":386},{"i":398,"t":"Character 类用于对单个字符进行操作。 Character 类在对象中包装一个基本类型 char 的值。","s":"Character 类","u":"/docs/BackEnd/Java/Character","h":"","p":397},{"i":400,"t":"前面有反斜杠（\\）的字符代表转义字符，它对编译器来说是有特殊含义的。 下面列表展示了Java的转义序列： 转义序列 描述 \\t 在文中该处插入一个tab键 \\b 在文中该处插入一个后退键 \\n 在文中该处换行 \\r 在文中该处插入回车 \\f 在文中该处插入换页符 \\' 在文中该处插入单引号 \\\" 在文中该处插入双引号 \\\\ 在文中该处插入反斜杠 public class Test { public static void main(String[] args) { System.out.println(\"访问\\\"Jetzihan\\\"\"); }} res 访问\"Jetzihan!\"","s":"转义序列","u":"/docs/BackEnd/Java/Character","h":"#转义序列","p":397},{"i":402,"t":"序号 方法与描述 1 isLetter() 是否是一个字母 2 isDigit() 是否是一个数字字符 3 isWhitespace() 是否是一个空白字符 4 isUpperCase() 是否是大写字母 5 isLowerCase() 是否是小写字母 6 toUpperCase() 指定字母的大写形式 7 toLowerCase() 指定字母的小写形式 8 toString() 返回字符的字符串形式，字符串的长度仅为1 characterAPI详解","s":"Character 方法","u":"/docs/BackEnd/Java/Character","h":"#character-方法","p":397},{"i":404,"t":"Java中有三种主要的循环结构： while循环 do…while循环 for循环","s":"循环结构和选择结构","u":"/docs/BackEnd/Java/cycling","h":"","p":403},{"i":406,"t":"while 是最基本的循环，它的结构为： while( 布尔表达式 ) { //循环内容} 示例代码 public class Test { public static void main(String[] args) { int x = 10; while( x < 20 ) { System.out.print(\"value of x : \" + x ); x++; System.out.print(\"\\n\"); } }}","s":"while 循环","u":"/docs/BackEnd/Java/cycling","h":"#while-循环","p":403},{"i":408,"t":"对于 while 语句而言，如果不满足条件，则不能进入循环。但有时候我们需要即使不满足条件，也至少执行一次。 do…while 循环和 while 循环相似，不同的是，do…while 循环至少会执行一次。 do { //代码语句}while(布尔表达式); tip 布尔表达式在循环体的后面，所以语句块在检测布尔表达式之前已经执行了。 如果布尔表达式的值为 true，则语句块一直执行，直到布尔表达式的值为 false。 public class Test { public static void main(String[] args){ int x = 10; do{ System.out.print(\"value of x : \" + x ); x++; System.out.print(\"\\n\"); }while( x < 20 ); }}","s":"do…while 循环","u":"/docs/BackEnd/Java/cycling","h":"#dowhile-循环","p":403},{"i":410,"t":"虽然所有循环结构都可以用 while 或者 do...while表示，但 Java 提供了另一种语句 —— for 循环，使一些循环结构变得更加简单。 for循环执行的次数是在执行前就确定的。语法格式如下： for(初始化; 布尔表达式; 更新) { //代码语句} 关于 for 循环有以下几点说明： 最先执行初始化步骤。可以声明一种类型，但可初始化一个或多个循环控制变量，也可以是空语句。 然后，检测布尔表达式的值。如果为 true，循环体被执行。如果为false，循环终止，开始执行循环体后面的语句。 执行一次循环后，更新循环控制变量。 再次检测布尔表达式。循环执行上面的过程。 public class Test { public static void main(String[] args) { for(int x = 10; x < 20; x = x+1) { System.out.print(\"value of x : \" + x ); System.out.print(\"\\n\"); } }}","s":"for 循环","u":"/docs/BackEnd/Java/cycling","h":"#for-循环","p":403},{"i":412,"t":"按照数组中的索引顺序输出整个数组。 for(声明语句 : 表达式){ //代码句子} 声明语句：声明新的局部变量，该变量的类型必须和数组元素的类型匹配。其作用域限定在循环语句块，其值与此时数组元素的值相等。 表达式：表达式是要访问的数组名，或者是返回值为数组的方法。 实例： public class Test { public static void main(String[] args){ int [] numbers = {10, 20, 30, 40, 50}; for(int x : numbers ){ System.out.print( x ); System.out.print(\",\"); } System.out.print(\"\\n\"); String [] names ={\"James\", \"Larry\", \"Tom\", \"Lacy\"}; for( String name : names ) { System.out.print( name ); System.out.print(\",\"); } }} 输出结果 10,20,30,40,50, James,Larry,Tom,Lacy,","s":"增强 for 循环","u":"/docs/BackEnd/Java/cycling","h":"#增强-for-循环","p":403},{"i":414,"t":"break 主要用在循环语句或者 switch 语句中，用来跳出整个语句块。 break 跳出最里层的循环，并且继续执行该循环下面的语句。 实例： public class Test { public static void main(String[] args) { int [] numbers = {10, 20, 30, 40, 50}; for(int x : numbers ) { // x 等于 30 时跳出循环 if( x == 30 ) { break; } System.out.print( x ); System.out.print(\"\\n\"); } }} Res 10 20","s":"break 关键字","u":"/docs/BackEnd/Java/cycling","h":"#break-关键字","p":403},{"i":416,"t":"continue 适用于任何循环控制结构中。作用是让程序立刻跳转到下一次循环的迭代。 在 for 循环中，continue 语句使程序立即跳转到更新语句。 在 while 或者 do…while 循环中，程序立即跳转到布尔表达式的判断语句。 实例： public class Test { public static void main(String[] args) { int [] numbers = {10, 20, 30, 40, 50}; for(int x : numbers ) { if( x == 30 ) { continue; } // 在遍历到30时，跳过下面的语句，执行下一次循环(跳过了30) System.out.print( x ); System.out.print(\"\\n\"); } }} RES 10 20 40 50","s":"continue 关键字","u":"/docs/BackEnd/Java/cycling","h":"#continue-关键字","p":403},{"i":418,"t":"语法结构： if(布尔表达式){ //如果布尔表达式为true将执行的语句}","s":"if 条件语句","u":"/docs/BackEnd/Java/cycling","h":"#if-条件语句","p":403},{"i":420,"t":"if(布尔表达式){ //如果布尔表达式的值为true}else{ //如果布尔表达式的值为false} 举例： public class Test { public static void main(String args[]){ int x = 30; if( x < 20 ){ System.out.print(\"这是 if 语句\"); }else{ System.out.print(\"这是 else 语句\"); } }} res 这是 else 语句","s":"if...else","u":"/docs/BackEnd/Java/cycling","h":"#ifelse","p":403},{"i":422,"t":"if(布尔表达式 1){ //如果布尔表达式 1的值为true执行代码}else if(布尔表达式 2){ //如果布尔表达式 2的值为true执行代码}else if(布尔表达式 3){ //如果布尔表达式 3的值为true执行代码}else { //如果以上布尔表达式都不为true执行代码}","s":"多层判断","u":"/docs/BackEnd/Java/cycling","h":"#多层判断","p":403},{"i":424,"t":"if(布尔表达式 1){ ////如果布尔表达式 1的值为true执行代码 if(布尔表达式 2){ ////如果布尔表达式 2的值为true执行代码 }}","s":"嵌套 if","u":"/docs/BackEnd/Java/cycling","h":"#嵌套-if","p":403},{"i":426,"t":"switch case 语句判断一个变量与一系列值中某个值是否相等，每个值称为一个分支。 switch(expression){ case value : //语句 break; //可选 case value : //语句 break; //可选 //你可以有任意数量的case语句 default : //可选 //语句} switch case 语句有如下规则： switch 语句中的变量类型可以是： byte、short、int 或者 char。从 Java SE 7 开始，switch 支持字符串 String 类型了，同时 case 标签必须为字符串常量或字面量。 switch 语句可以拥有多个 case 语句。每个 case 后面跟一个要比较的值和冒号。 case 语句中的值的数据类型必须与变量的数据类型相同，而且只能是常量或者字面常量。 当变量的值与 case 语句的值相等时，那么 case 语句之后的语句开始执行，直到 break 语句出现才会跳出 switch 语句。 当遇到 break 语句时，switch 语句终止。程序跳转到 switch 语句后面的语句执行。case 语句不必须要包含 break 语句。如果没有 break 语句出现，程序会继续执行下一条 case 语句，直到出现 break 语句。 switch 语句可以包含一个 default 分支，该分支一般是 switch 语句的最后一个分支（可以在任何位置，但建议在最后一个）。default 在没有 case 语句的值和变量值相等的时候执行。default 分支不需要 break 语句。 switch case 执行时，一定会先进行匹配，匹配成功返回当前 case 的值，再根据是否有 break，判断是否继续输出，或是跳出判断。 实例： public class Test { public static void main(String args[]){ //char grade = args[0].charAt(0); char grade = 'A'; switch(grade) { case 'A' : System.out.println(\"优秀\"); break; case 'B' : case 'C' : System.out.println(\"良好\"); break; case 'D' : System.out.println(\"及格\"); break; case 'F' : System.out.println(\"你需要再努力努力\"); break; default : System.out.println(\"未知等级\"); } System.out.println(\"你的等级是 \" + grade); }} res 优秀 你的等级是 A","s":"switch 选择语句","u":"/docs/BackEnd/Java/cycling","h":"#switch-选择语句","p":403},{"i":430,"t":"以具体的求解过程为研究和实现的主体，过程完备。如C语言。 缺点：无法将复杂的系统描述清楚，很难满足现在对软件规模和复杂度的需求。","s":"面向过程","u":"/docs/BackEnd/Java/duixiang","h":"#面向过程","p":427},{"i":432,"t":"以求解问题中所涉及的各种对象为主体，力图求解过程符合人们日常的思维习惯，降低了求解问题的难度和复杂性，提高了编程的效率，比如C++,Java语言。","s":"面向对象","u":"/docs/BackEnd/Java/duixiang","h":"#面向对象","p":427},{"i":434,"t":"封装 将数据（属性）和对数据的操作（功能）封装在一起。成员变量，成员方法，类. 继承 子类可以继承父类的属性和功能，同时又可以增加子类独有的属性和功能。 多态 多个操作具有相同的名字，但是接受的消息类型必须不同。 同一个操作被不同类型的对象调用时产生不同的行为。","s":"面向对象的基本特征","u":"/docs/BackEnd/Java/duixiang","h":"#面向对象的基本特征","p":427},{"i":437,"t":"class 机动车 // 类声明{ // 成员变量 int speed; float height; float weight; // 成员方法 void changSpeed(int newSpeed) { speed=newSpeed; } float getWeight() { return weight; } float getHeight() { return height; }}","s":"类的基本结构","u":"/docs/BackEnd/Java/duixiang","h":"#类的基本结构","p":427},{"i":439,"t":"类创建对象时，需要使用构造方法完成对象的初始化工作。 构造方法的名称必须与类名相同。 构造方法没有返回值。 一个类中可以有若干个构造方法（名称相同），但是构造方法的参数必须不同。 如果类中没有构造方法，系统为类定义一个默认的构造方法，该构造方法没有参数，类体为空。 class Rect{ double sideA,sideB; Rect( ){ } //无参构造方法 Rect(double a, double b){ //有参构造方法，初始化对象的两个属性 sideA=a; sideB=b; } double computeArea( ){ return sideA*sideB; } double computeGirth( ){ return (sideA+sideB)*2; }}","s":"构造方法","u":"/docs/BackEnd/Java/duixiang","h":"#构造方法","p":427},{"i":441,"t":"对象声明​ 类的名字 对象名字 Rect rectangleOne; rectangleOne 是一个空对象，它不能访问成员变量和成员方法 对象的创建​ 对象名=new 构造方法名（参数列表） rectangleOne=new Rect( );rectangleOne=new Rect(10, 20);rectangleTwo=new Rect(33, 66);//也可以把声明对象和创建对象合在一起进行Rect rectangleOne=new Rect(10,20); 对象的使用​ 对象名.成员变量名 对象名.成员方法名（参数列表） rectangleOne.sideA=10;rectangleOne.sideB=20;rectangleOne.computeArea( );rectangleOne.computeGirth( );","s":"对象的创建和使用","u":"/docs/BackEnd/Java/duixiang","h":"#对象的创建和使用","p":427},{"i":443,"t":"实例变量​ 不用关键字 static 修饰。 一个类中不同对象的实例变量将被分配不同的存储空间。 只能通过对象访问实例变量。 静态变量（类变量）​ 用关键字 static 修饰。 一个类中所有对象的某个静态变量被分配同一个内存，所有对象共享这个静态变量。 可以通过类名访问静态变量，也可以通过某个对象访问静态变量。 class Circle{ static double pi; //类变量 double radius; //实例变量}Circle.pi=3.14;Circle circle1=new Circle();circle1.radius=10;Circle circle2=new Circle();circle2.radius=100; 在上面的代码中， Pi 作为公共的区域，所有对象共享一个内存。 常量​ final 成员变量： 如果一个成员变量修饰为final，就是常量。常量的名字习惯用大写字母。 final int MAX=100; tip 如果final变量是简单类型，则其值不能发生变化 如果final变量是复合类型，则其指向对象的引用不能发生变化 类的封装​ 封装：将类的属性和方法封装在一个类中，对外提供一个统一的接口，隐藏类的内部实现细节。在定义一个类时，我们可以把它的属性私有化，使用 private 修饰。让这个属性只能在类中被访问，当外部需要访问或设置这个属性时，我们可以提供一个公共的方法来访问这个属性。 class Person{ private String name; //私有属性 public String getName( ){ //公共方法 return name; } public void setName(String name){ //公共方法 this.name=name; }} 利用这个方法，我们可以对外部传入的参数进行验证，保证数据的准确性和安全性。比如下面的例子中，我们对外部传入的年龄进行了验证，如果年龄小于0或者大于150，就抛出一个异常。 class Person{ private int age; public int getAge( ){ return age; } public void setAge(int age){ if(age<0 || age>150){ throw new RuntimeException(\"年龄不合法\"); } this.age=age; }}","s":"成员变量","u":"/docs/BackEnd/Java/duixiang","h":"#成员变量","p":427},{"i":445,"t":"构造方法是一个特殊的方法，它在对象创建时被调用。如果一个类中没有定义构造方法，那么编译器会自动为这个类添加一个无参的构造方法。如果需要在对象创建时对对象属性进行初始化，就需要定义构造方法。 class Person{ private String name; private int age; public Person(String name,int age){ //有参构造方法 this.name=name; this.age=age; }} 还有一种构造方法，就是无参构造方法。 class Person{ private String name; private int age; public Person( ){ //无参构造方法 this.name=\"张三\"; this.age=20; }} 构造方法是可以被重载的，也就是说，一个类中可以有多个构造方法。 class Person{ private String name; private int age; public Person( ){ //无参构造方法 this.name=\"张三\"; this.age=20; } public Person(String name,int age){ //有参构造方法 this.name=name; this.age=age; }} 在上面的代码中，当我们创建一个对象时，可以使用无参构造方法，也可以使用有参构造方法。使用无参构造方法时，对象的属性会被初始化为默认值。 Person p1=new Person( ); //使用无参构造方法Person p2=new Person(\"李四\",30); //使用有参构造方法","s":"构造方法","u":"/docs/BackEnd/Java/duixiang","h":"#构造方法-1","p":427},{"i":447,"t":"Java 中的 this 关键字是一个引用，它指向当前对象。 class Person{ private String name; private int age; public Person( ){ this.name=\"张三\"; this.age=20; } public Person(String name,int age){ this.name=name; this.age=age; } public void print( ){ // this.name 等价于 name System.out.println(\"姓名：\"+this.name+\"，年龄：\"+this.age); }} this 关键字也可以用来调用当前类中的其他方法。 class Person{ private String name; private int age; public Person( ){ this.name=\"张三\"; this.age=20; } public Person(String name,int age){ this.name=name; this.age=age; } public void print( ){ System.out.println(\"姓名：\"+this.name+\"，年龄：\"+this.age); } public void printInfo( ){ this.print( ); }} 构造方法之间可以通过 this 关键字来调用。 class Person{ private String name; private int age; public Person( ){ this.name=\"张三\"; this.age=20; } public Person(String name,int age){ this.name=name; this.age=age; } public Person(String name){ // 调用两个参数的构造方法 this(name,20); } public void print( ){ System.out.println(\"姓名：\"+this.name+\"，年龄：\"+this.age); }}","s":"this 关键字","u":"/docs/BackEnd/Java/duixiang","h":"#this-关键字","p":427},{"i":449,"t":"Java 中的垃圾回收是自动的，不需要程序员手动去释放内存。但是我们也可以通过 System.gc( ) 方法来强制垃圾回收。 class Person{ private String name; private int age; public Person( ){ this.name=\"张三\"; this.age=20; } public Person(String name,int age){ this.name=name; this.age=age; } public void print( ){ System.out.println(\"姓名：\"+this.name+\"，年龄：\"+this.age); } public void finalize( ){ System.out.println(\"对象被回收了\"); }} 在上面的代码中，我们重写了 finalize( ) 方法，当对象被回收时，会调用该方法。 Person p=new Person( );p=null;System.gc( );","s":"垃圾回收","u":"/docs/BackEnd/Java/duixiang","h":"#垃圾回收","p":427},{"i":451,"t":"静态变量​ 当多个对象共享同一个属性时，可以将该属性定义为静态变量。 class Person{ // 静态变量 private static String country=\"中国\"; private String name; private int age; public Person( ){ this.name=\"张三\"; this.age=20; } public Person(String name,int age){ this.name=name; this.age=age; } public void print( ){ System.out.println(\"姓名：\"+this.name+\"，年龄：\"+this.age+\"，国家：\"+country); }} 为静态变量赋值时，可以通过类名来访问。 Person.country=\"美国\"; static只能修饰成员变量，不能修饰局部变量。它是非法的。 class Person{ public void print( ){ // 非法的 static int a=10; }} 静态方法​ 当多个对象共享同一个方法时，可以将该方法定义为静态方法。 class Person{ private String name; private int age; public Person( ){ this.name=\"张三\"; this.age=20; } public Person(String name,int age){ this.name=name; this.age=age; } public void print( ){ System.out.println(\"姓名：\"+this.name+\"，年龄：\"+this.age); } // 静态方法 public static void printInfo( ){ System.out.println(\"这是一个静态方法\"); }} 静态代码块​ 静态代码块是在类加载时执行的，只执行一次。 class Person{ // 静态代码块 static{ System.out.println(\"这是一个静态代码块\"); } //...} 在主函数调用时，静态代码块会先执行。 public class Main{ public static void main(String[] args) { // 静态代码块会先执行 // 声明 Person 对象 Person p=new Person( ); }}","s":"static 关键字","u":"/docs/BackEnd/Java/duixiang","h":"#static-关键字","p":427},{"i":453,"t":"内部成员类是定义在类中的类，它可以访问外部类的所有成员，包括私有成员。 class Person{ private String name; private int age; public Person( ){ this.name=\"张三\"; this.age=20; } public Person(String name,int age){ this.name=name; this.age=age; } public void print( ){ System.out.println(\"姓名：\"+this.name+\"，年龄：\"+this.age); } // 内部成员类 class PersonInfo { public void print( ){ System.out.println(\"姓名：\"+Person.this.name+\"，年龄：\"+Person.this.age); } }} 如果希望调用内部成员类的方法，可以通过外部类的对象来调用。 Person p=new Person( );Person.PersonInfo pi=p.new PersonInfo( );pi.print( );","s":"内部成员类","u":"/docs/BackEnd/Java/duixiang","h":"#内部成员类","p":427},{"i":457,"t":"在 Java 中，类的继承指在一个现有类的基础上创建一个新类，新类称为子类，现有类称为父类。子类继承父类的属性和方法，子类可以拥有自己的属性和方法，子类还可以重写父类的方法。在继承时，需要使用关键字 extends。 下面是一个狗类继承动物类的例子： public class Animal { public String name; public int age; public void eat() { System.out.println(\"动物吃东西\"); }}public class Dog extends Animal { public void lookDoor() { System.out.println(\"狗看门\"); }}// 测试类public class Test { public static void main(String[] args) { Dog dog = new Dog(); // 调用了父类的属性和方法 dog.name = \"旺财\"; dog.age = 3; dog.eat(); dog.lookDoor(); }}","s":"继承的概念","u":"/docs/BackEnd/Java/duixianghigh","h":"#继承的概念","p":454},{"i":460,"t":"Java的产生 Java是Sun公司1991年开发的用于开发消费类电子产品的与平台无关的软件技术。 Java是什么 它首先是一种编程语言，然后又是一种开发环境。","s":"Java的起源和发展","u":"/docs/BackEnd/Java/environment","h":"#java的起源和发展","p":458},{"i":462,"t":"简单。采用类C的语法规则。不支持goto，删除了C++中的运算符重载和多重继承的内容。删除了对指针的直接引用，Java自动处理对对象的释放，负责垃圾回收。 平台独立性。得益于 Java 虚拟机。Java编译的字节码由 JVM 解释执行，它和操作系统无关。一次编写可以随处使用。 面向对象。能够最大限度重用代码。封装、继承、多态。 封装：将数据和操作数据的方法绑定在一起，形成一个类。 继承：子类继承父类的属性和方法。 多态：同一操作作用于不同的对象，可以有不同的解释，产生不同的执行结果。 多线程。多线程共用一个内存区域。允许同时完成多个任务。可以改善CPU的闲置状态，缩短CPU闲置时间。 半编译半解释。Java并不生成可执行的机器语言，它由编译器生成一种中介代码Bytecode。然后由Java解释器来执行字节码，并在内部使用一种抽象机模型来执行该字节码。称为Java虚拟机。 分布式。Java具有分布式计算的能力。 安全。去除了指针的操作，避免了非法的内存访问。 健壮。 可扩展。 动态链接。 高性能。","s":"Java的特点","u":"/docs/BackEnd/Java/environment","h":"#java的特点","p":458},{"i":464,"t":"Java的工作方式分为以下四步： 源代码编写源代码文件。存为xxx.java 编译器用编译器运行源代码。编译器会检查错误，如果有错就要改正才能产生正确的输出。 执行javac程序来编译xxx.java。如果程序没有错误的话，会产生xxx.class文件，由字节码所组成。 输出编译器会产出字节码。任何支持Java的装置都能够把它转译成可执行的内容。编译后的字节码与平台无关。 编译成代码：xxx.class Java虚拟机（JVM）虚拟机可以读取与执行字节码。 启动Java虚拟机（JVM）来运行xxx.class文件。JVM会将字节码转换成平台能够理解的形式来运行。 最后更新于：2022-7-22","s":"Java的工作方式","u":"/docs/BackEnd/Java/environment","h":"#java的工作方式","p":458},{"i":467,"t":"进入 JetBrains 官网，打开 IDEA 下载链接 点击这里，进入 Download界面，选择下载社区版。 下载之后一路 next 安装即可。","s":"安装","u":"/docs/BackEnd/Java/IDEA","h":"#安装","p":465},{"i":469,"t":"快捷键 说明 psvm / main main 方法 fori for 语句 sout System.out.println( ); soutv System.out.println(\" = \" + ); souf System.out.printf(\" \"); set 构造方法时自动生成 setXXX方法 get 构造方法时自动生成 getXXX方法 alt + insert / generate 快速生成方法体，如重写方法","s":"快捷键","u":"/docs/BackEnd/Java/IDEA","h":"#快捷键","p":465},{"i":472,"t":"打开文件-设置-外观行为-外观，可以设置皮肤颜色。","s":"设置皮肤","u":"/docs/BackEnd/Java/IDEA","h":"#设置皮肤","p":465},{"i":474,"t":"打开文件-设置-编辑器-字体。","s":"设置字体","u":"/docs/BackEnd/Java/IDEA","h":"#设置字体","p":465},{"i":476,"t":"打开文件-设置-编辑器-常规-自动导入，勾选自动导入选项。","s":"设置自动包导入","u":"/docs/BackEnd/Java/IDEA","h":"#设置自动包导入","p":465},{"i":478,"t":"打开文件-设置-编辑器-常规-代码完成，然后取消勾选匹配。","s":"设置代码提示忽略大小写","u":"/docs/BackEnd/Java/IDEA","h":"#设置代码提示忽略大小写","p":465},{"i":480,"t":"打开文件-设置-外观-外观-背景图片。 最后更新于：2022-7-22","s":"设置IDEA背景图片","u":"/docs/BackEnd/Java/IDEA","h":"#设置idea背景图片","p":465},{"i":483,"t":"Java 的 Math 包含了用于执行基本数学运算的属性和方法，如初等指数、对数、平方根和三角函数。 Math 的方法都被定义为 static 形式，通过 Math 类可以在主函数中直接调用。 public class Test { public static void main (String []args) { System.out.println(\"90 度的正弦值：\" + Math.sin(Math.PI/2)); System.out.println(\"0度的余弦值：\" + Math.cos(0)); System.out.println(\"60度的正切值：\" + Math.tan(Math.PI/3)); System.out.println(\"1的反正切值： \" + Math.atan(1)); System.out.println(\"π/2的角度值：\" + Math.toDegrees(Math.PI/2)); System.out.println(Math.PI); } } res 90 度的正弦值：1.0 0度的余弦值：1.0 60度的正切值：1.7320508075688767 1的反正切值： 0.7853981633974483 π/2的角度值：90.0 3.141592653589793","s":"Math 类","u":"/docs/BackEnd/Java/javanumber","h":"#math-类","p":481},{"i":486,"t":"xxxValue() 方法用于将 Number 对象转换为 xxx 数据类型的值并返回。 相关的方法有： 类型 方法及描述 byte byteValue() :以 byte 形式返回指定的数值。 abstract double doubleValue() :以 double 形式返回指定的数值。 abstract float floatValue() :以 float 形式返回指定的数值。 abstract int intValue() :以 int 形式返回指定的数值。 abstract long longValue() :以 long 形式返回指定的数值。 short shortValue() :以 short 形式返回指定的数值。 实例： public class Test{ public static void main(String args[]){ Integer x = 5; // 返回 byte 原生数据类型 System.out.println( x.byteValue() ); // 返回 double 原生数据类型 System.out.println(x.doubleValue()); // 返回 long 原生数据类型 System.out.println( x.longValue() ); }} res 5 5.0 5","s":"xxxValue","u":"/docs/BackEnd/Java/javanumber","h":"#xxxvalue","p":481},{"i":488,"t":"compareTo() 方法用于将 Number 对象与方法的参数进行比较。可用于比较 Byte, Long, Integer等。 该方法用于两个相同数据类型的比较，两个不同类型的数据不能用此方法来比较。 public int compareTo( NumberSubClass referenceName ) 参数 referenceName -- 可以是一个 Byte, Double, Integer, Float, Long 或 Short 类型的参数。 返回值 如果指定的数与参数相等返回 0。 如果指定的数小于参数返回 -1。 如果指定的数大于参数返回 1。 public class Test{ public static void main(String args[]){ Integer x = 5; System.out.println(x.compareTo(3)); System.out.println(x.compareTo(5)); System.out.println(x.compareTo(8)); }} res 1 0 -1","s":"compareTo","u":"/docs/BackEnd/Java/javanumber","h":"#compareto","p":481},{"i":490,"t":"equals() 方法用于判断 Number 对象与方法的参数进是否相等。 参数 o -- 任何对象。 返回值 如 Number 对象不为 Null，且与方法的参数类型与数值都相等返回 True，否则返回 False。 Double 和 Float 对象还有一些额外的条件，可以参阅 API 手册：JDK 1.6。 public class Test{ public static void main(String args[]){ Integer x = 5; Integer y = 10; Integer z =5; Short a = 5; System.out.println(x.equals(y)); System.out.println(x.equals(z)); System.out.println(x.equals(a)); }} res false true false","s":"equals","u":"/docs/BackEnd/Java/javanumber","h":"#equals","p":481},{"i":492,"t":"public class Test{ public static void main(String args[]){ Integer x = 5; System.out.println(x.toString()); System.out.println(Integer.toString(12)); //输出的结果为 5 /n 12 /n }}","s":"toString","u":"/docs/BackEnd/Java/javanumber","h":"#tostring","p":481},{"i":494,"t":"valueOf() 方法用于返回给定参数的原生 Number 对象值，参数可以是原生数据类型, String等。 该方法是静态方法。该方法可以接收两个参数一个是字符串，一个是基数。 static Integer valueOf(int i) static Integer valueOf(String s) static Integer valueOf(String s, int radix) 参数 i -- Integer 对象的整数。 s -- Integer 对象的字符串。 radix --在解析字符串 s 时使用的进制数，用于指定使用的进制数。 返回值 Integer valueOf(int i)：返回一个表示指定的 int 值的 Integer 实例。 Integer valueOf(String s):返回保存指定的 String 的值的 Integer 对象。 Integer valueOf(String s, int radix): 返回一个 Integer 对象，该对象中保存了用第二个参数提供的基数进行解析时从指定的 String 中提取的值。 public class Test{public static void main(String args[]){ Integer x =Integer.valueOf(9); Double c = Double.valueOf(5); Float a = Float.valueOf(\"80\"); Integer b = Integer.valueOf(\"444\",16); // 使用 16 进制 System.out.println(x); System.out.println(c); System.out.println(a); System.out.println(b); }} res 9 5.0 80.0 1092","s":"valueOf","u":"/docs/BackEnd/Java/javanumber","h":"#valueof","p":481},{"i":496,"t":"parseInt() 方法用于将字符串参数作为有符号的十进制整数进行解析。 如果方法有两个参数， 使用第二个参数指定的基数，将字符串参数解析为有符号的整数。 static int parseInt(String s) static int parseInt(String s, int radix) 参数 s -- 十进制表示的字符串。 radix -- 指定的基数。 返回值 parseInt(String s): 返回用十进制参数表示的整数值。 parseInt(int i): 使用指定基数的字符串参数表示的整数 (基数可以是 10, 2, 8, 或 16 等进制数) 。 public class Test{ public static void main(String args[]){ int x =Integer.parseInt(\"9\"); double c = Double.parseDouble(\"5\"); int b = Integer.parseInt(\"444\",16); System.out.println(x); System.out.println(c); System.out.println(b); }} res 9 5.0 1092","s":"parseInt","u":"/docs/BackEnd/Java/javanumber","h":"#parseint","p":481},{"i":498,"t":"取绝对值。 public class Test{ public static void main(String args[]){ Integer a = -8; double d = -100; float f = -90f; System.out.println(Math.abs(a)); System.out.println(Math.abs(d)); System.out.println(Math.abs(f)); }} res 8 100.0 90.0","s":"abs","u":"/docs/BackEnd/Java/javanumber","h":"#abs","p":481},{"i":500,"t":"ceil() 方法可对一个数进行上舍入，返回值大于或等于给定的参数，类型为双精度浮点型。 floor() 方法可对一个数进行下舍入，返回给定参数最大的整数，该整数小于或等给定的参数。 double ceil(double d) double ceil(float f) double floor(double d) double floor(float f) 参数 double 或 float 的原生数据类型。 返回值 返回 double 类型，返回值大于或等于(小于或等于）给定的参数。 public class Test{ public static void main(String args[]){ double d = 100.675; float f = -90; System.out.println(Math.ceil(d)); System.out.println(Math.ceil(f)); System.out.println(Math.floor(d)); System.out.println(Math.floor(f)); }} res 101.0 -90.0 100.0 -90.0","s":"ceil 和 floor","u":"/docs/BackEnd/Java/javanumber","h":"#ceil-和-floor","p":481},{"i":502,"t":"rint() 方法返回最接近参数的整数值。 语法 该方法有以下几种语法格式： double rint(double d) 参数 double 类型数据。 返回值 返回 double 类型数组，是最接近参数的整数值。 public class Test{ public static void main(String args[]){ double d = 100.675; double e = 100.500; double f = 100.200; System.out.println(Math.rint(d)); System.out.println(Math.rint(e)); System.out.println(Math.rint(f)); }} res 101.0 100.0 100.0","s":"rint","u":"/docs/BackEnd/Java/javanumber","h":"#rint","p":481},{"i":504,"t":"round() 方法返回一个最接近的 int、long 型值，四舍五入。 round 表示\"四舍五入\"，算法为 Math.floor(x+0.5) ，即将原来的数字加上 0.5 后再向下取整，所以 Math.round(11.5) 的结果为 12，Math.round(-11.5) 的结果为 -11。 语法 该方法有以下几种语法格式： long round(double d) int round(float f) 参数 d -- double 或 float 的原生数据类型 f -- float 原生数据类型 返回值 返回一个最接近的int、long型值，方法会指定返回的数据类型。 public class Test{ public static void main(String args[]){ double d = 100.675; double e = 100.500; float f = 100; float g = 90f; System.out.println(Math.round(d)); System.out.println(Math.round(e)); System.out.println(Math.round(f)); System.out.println(Math.round(g)); }} res 101 101 100 90","s":"round","u":"/docs/BackEnd/Java/javanumber","h":"#round","p":481},{"i":506,"t":"返回最小值。 double min(double arg1, double arg2) float min(float arg1, float arg2) int min(int arg1, int arg2) long min(long arg1, long arg2) public class Test{ public static void main(String args[]){ System.out.println(Math.min(12.123, 12.456)); System.out.println(Math.min(23.12, 23.0)); }} res 12.123 23.0","s":"min","u":"/docs/BackEnd/Java/javanumber","h":"#min","p":481},{"i":508,"t":"返回最大值。 double max(double arg1, double arg2) float max(float arg1, float arg2) int max(int arg1, int arg2) long max(long arg1, long arg2) public class Test{ public static void main(String args[]){ System.out.println(Math.max(12.123, 18.456)); System.out.println(Math.max(23.12, 23.0)); }} res 18.456 23.12","s":"max","u":"/docs/BackEnd/Java/javanumber","h":"#max","p":481},{"i":510,"t":"exp() 方法用于返回自然数底数e的参数次方。 double exp(double d) public class Test{ public static void main(String args[]){ double x = 11.635; double y = 2.76; System.out.printf(\"e 的值为 %.4f%n\", Math.E); System.out.printf(\"exp(%.3f) 为 %.3f%n\", x, Math.exp(x)); }} res e 的值为 2.7183 exp(11.635) 为 112983.831","s":"exp","u":"/docs/BackEnd/Java/javanumber","h":"#exp","p":481},{"i":512,"t":"取对数值。 double log(double d) public class Test{ public static void main(String args[]){ double x = 11.635; double y = 2.76; System.out.printf(\"e 的值为 %.4f%n\", Math.E); System.out.printf(\"log(%.3f) 为 %.3f%n\", x, Math.log(x)); }} res e 的值为 2.7183 log(11.635) 为 2.454","s":"log","u":"/docs/BackEnd/Java/javanumber","h":"#log","p":481},{"i":514,"t":"pow() 方法用于返回第一个参数的第二个参数次方。 double pow(double base, double exponent) 参数 base -- 任何原生数据类型。 exponent -- 任何原生数据类型。 public class Test{ public static void main(String args[]){ double x = 11.635; double y = 2.76; System.out.printf(\"e 的值为 %.4f%n\", Math.E); System.out.printf(\"pow(%.3f, %.3f) 为 %.3f%n\", x, y, Math.pow(x, y)); }} res e 的值为 2.7183 pow(11.635, 2.760) 为 874.008","s":"pow","u":"/docs/BackEnd/Java/javanumber","h":"#pow","p":481},{"i":516,"t":"开方。 double sqrt(double d) public class Test{ public static void main(String args[]){ double x = 11.635; double y = 2.76; System.out.printf(\"e 的值为 %.4f%n\", Math.E); System.out.printf(\"sqrt(%.3f) 为 %.3f%n\", x, Math.sqrt(x)); }} res e 的值为 2.7183 sqrt(11.635) 为 3.411","s":"sqrt","u":"/docs/BackEnd/Java/javanumber","h":"#sqrt","p":481},{"i":518,"t":"public class Test{ public static void main(String args[]){ double degrees = 45.0; double radians = Math.toRadians(degrees); System.out.format(\"pi 的值为 %.4f%n\", Math.PI); System.out.format(\"%.1f 度的正弦值为 %.4f%n\", degrees, Math.sin(radians)); }} res pi 的值为 3.1416 45.0 度的正弦值为 0.7071","s":"sin","u":"/docs/BackEnd/Java/javanumber","h":"#sin","p":481},{"i":520,"t":"public class Test{ public static void main(String args[]){ double degrees = 45.0; double radians = Math.toRadians(degrees); System.out.format(\"pi 的值为 %.4f%n\", Math.PI); System.out.format(\"%.1f 度的余弦值为 %.4f%n\", degrees, Math.cos(radians)); }} res pi 的值为 3.1416 45.0 度的余弦值为 0.7071","s":"cos","u":"/docs/BackEnd/Java/javanumber","h":"#cos","p":481},{"i":522,"t":"public class Test{ public static void main(String args[]){ double degrees = 45.0; double radians = Math.toRadians(degrees); System.out.format(\"pi 的值为 %.4f%n\", Math.PI); System.out.format(\"%.1f 度的正切值是 %.4f%n\", degrees, Math.tan(radians)); }} res pi 的值为 3.1416 45.0 度的正切值是 1.0000","s":"tan","u":"/docs/BackEnd/Java/javanumber","h":"#tan","p":481},{"i":524,"t":"asin() 方法用于返回指定double类型参数的反正弦值。 public class Test{ public static void main(String args[]){ double degrees = 45.0; double radians = Math.toRadians(degrees); System.out.format(\"pi 的值为 %.4f%n\", Math.PI); System.out.format(\"%.4f 的反正弦值为 %.4f 度 %n\", Math.sin(radians), Math.toDegrees(Math.asin(Math.sin(radians)))); }} res pi 的值为 3.1416 0.7071 的反正弦值为 45.0000 度","s":"asin","u":"/docs/BackEnd/Java/javanumber","h":"#asin","p":481},{"i":526,"t":"acos() 方法用于返回指定 double 类型参数的反余弦值。 public class RunoobTest { public static void main(String args[]){ double degrees = 45.0; double radians = Math.toRadians(degrees); System.out.format(\"pi 的值为 %.4f%n\", Math.PI); System.out.format(\"%.4f 的反余弦值为 %.4f 度 %n\", Math.cos(radians), Math.toDegrees(Math.acos(Math.sin(radians)))); }} res pi 的值为 3.1416 0.7071 的反余弦值为 45.0000 度","s":"acos","u":"/docs/BackEnd/Java/javanumber","h":"#acos","p":481},{"i":528,"t":"public class Test{ public static void main(String args[]){ double degrees = 45.0; double radians = Math.toRadians(degrees); System.out.format(\"pi 的值为 %.4f%n\", Math.PI); System.out.format(\"%.4f 的反正切值 %.4f 度 %n\", Math.cos(radians), Math.toDegrees(Math.atan(Math.sin(radians)))); }} res pi 的值为 3.1416 0.7071 的反正切值 35.2644 度","s":"atan","u":"/docs/BackEnd/Java/javanumber","h":"#atan","p":481},{"i":530,"t":"public class Test{ public static void main(String args[]){ double x = 45.0; double y = 30.0; System.out.println( Math.toDegrees(x) ); System.out.println( Math.toDegrees(y) ); }} res 2578.3100780887044 1718.8733853924698","s":"toDegrees","u":"/docs/BackEnd/Java/javanumber","h":"#todegrees","p":481},{"i":532,"t":"toRadians() 方法用于将角度转换为弧度。 public class Test{ public static void main(String args[]){ double x = 45.0; double y = 30.0; System.out.println( Math.toRadians(x) ); System.out.println( Math.toRadians(y) ); }} res 0.7853981633974483 0.5235987755982988","s":"toRadians","u":"/docs/BackEnd/Java/javanumber","h":"#toradians","p":481},{"i":534,"t":"返回一个随机数。 public class Test{ public static void main(String args[]){ System.out.println( Math.random() ); System.out.println( Math.random() ); }} res 0.5444085967267008 0.7960235983184115","s":"random","u":"/docs/BackEnd/Java/javanumber","h":"#random","p":481},{"i":536,"t":"基础语法 一个Java程序可以认为是一系列对象的集合，这些对象之间彼此调用的方法可以协同工作。下面简单介绍一下类、对象、方法和实例变量的概念。 对象：对象是类的一个实例，例如，一台汽车是一个对象，它的状态有：颜色、品牌、大小；行为有：启动、加速、减速等。 类：类是一个模板，它描述一类对象的行为和状态。 方法：方法就是行为，一个类有很多方法。逻辑运算、数据修改和所有动作都是在方法中完成的。 实例变量：每个对象都有独特的实例变量，对象的状态由这些实例变量的值决定的。","s":"Java概述","u":"/docs/BackEnd/Java/language","h":"","p":535},{"i":538,"t":"Project module package class","s":"Idea项目结构","u":"/docs/BackEnd/Java/language","h":"#idea项目结构","p":535},{"i":540,"t":"打开 Idea ，选择新建项目。 选择语言Java并选择JDK。 点击创建即可创建完成。 首先我们要知道java项目的文件层次是：项目，包，类。 可以直接在 src 文件夹上创建一个 Java类 。 创建完成。","s":"使用Idea创建Java项目","u":"/docs/BackEnd/Java/language","h":"#使用idea创建java项目","p":535},{"i":542,"t":"下面是一个输出Hello World的Java程序。 快速生成main语句 在IDEA中输入 psvm 即可快速生成 main 语句。 public class HelloWorld{ public static void main(String[] args){ System.out.println(\"Hello World\"); }} caution 类名和文件名必须保持一致。 可以用记事本编写程序，保存为 .java 格式，然后进行编译和运行。 这里使用 IDEA 编写代码，运行结果如下：","s":"第一个Java程序","u":"/docs/BackEnd/Java/language","h":"#第一个java程序","p":535},{"i":545,"t":"Java 标准版，用于桌面应用开发，是其他两个版本的基础。但是在桌面领域 C 和 C++ 比较强。如 JB 全家桶等。","s":"Java SE","u":"/docs/BackEnd/Java/language","h":"#java-se","p":535},{"i":547,"t":"小型版，开发嵌入式的电子设备。逐渐被安卓、IOS替代。如功能机的系统。","s":"Java ME","u":"/docs/BackEnd/Java/language","h":"#java-me","p":535},{"i":549,"t":"企业版，用于网站服务器开发。如京东的后台。","s":"Java EE","u":"/docs/BackEnd/Java/language","h":"#java-ee","p":535},{"i":551,"t":"高级语言的编译运行方式： 编程。 编译。将代码翻译成二进制机器语言。 运行。让机器执行。 高级语言有编译型和解释型语言。 编译型： 整体翻译，比如C语言，在编译后，会将 .c 文件编译成 .obj 文件，对于不同的操作系统都要重新编译。 解释性： 按行解释，再交给不同的设备。Python直接拿着代码去解释，而不预先产生另外的文件。 混合型： Java。先将Java编译成 .class 文件，再交给虚拟机去运行。对于不同的操作系统，适配不同的虚拟机。 虚拟机如 Windows JVM、Linux JVM 等。","s":"Java跨平台原理","u":"/docs/BackEnd/Java/language","h":"#java跨平台原理","p":535},{"i":554,"t":"JDK（Java Development kit），Java开发工具包。包含以下内容： JVM：Java Virtual Mechine。虚拟机。 核心类库：比如 System out println 。 Java开发工具：编译工具、运行工具、调试工具、内存分析工具。","s":"JDK","u":"/docs/BackEnd/Java/language","h":"#jdk","p":535},{"i":556,"t":"如果只需要运行并不需要开发，那么使用虚拟机、核心类库就可以，不需要开发工具的一部分，那么这个包就叫 JRE。 最后更新于：2022-7-22 20:50","s":"JRE","u":"/docs/BackEnd/Java/language","h":"#jre","p":535},{"i":559,"t":"Java 注释包含三种，单行注释、多行注释、文档注释。 //这是单行注释/* 这是 多行 注释*//**这是文档注释*/","s":"注释","u":"/docs/BackEnd/Java/languages11","h":"#注释","p":557},{"i":561,"t":"关键字：被赋予特定含义的单词。比如 class ， class 类是Java的基本组成单元。","s":"关键字","u":"/docs/BackEnd/Java/languages11","h":"#关键字","p":557},{"i":563,"t":"下面是一次变量赋值打印过程： public class bianliang { public static void main(String[] args){ // 变量 int a=10; System.out.println(a); }}// 打印结果：10 变量的基本用法：定义变量-输出。 public class bianliang { public static void main(String[] args){ // 变量参与运算 int a=10; int b=20; System.out.println(a+b); }}// 打印结果：30 练习 公交车上初始没有乘客，第一站上去一个乘客；第二站上去两，下来一个；第三站上去两个，下来一个；第四站下来一位乘客；第五站上去一个乘客。那么到了终点车上一共几个乘客? public class bustest1 { /* * 公交车上初始没有乘客，第一站上去一个乘客； * 第二站上去两，下来一个； * 第三站上去两个，下来一个； * 第四站下来一位乘客；第五站上去一个乘客。 * 那么到了终点车上一共几个乘客? * */ public static void main(String[] args){ int sum=0; // 1 sum++; // 2 sum=sum+2; sum=sum-1; // 3 sum=sum+2; sum=sum-1; // 4 sum=sum-1; // 5 sum++; System.out.println(sum); }}","s":"变量","u":"/docs/BackEnd/Java/languages11","h":"#变量","p":557},{"i":565,"t":"基本数据类型​ 类型名称 关键字 占用内存 取值范围 字节型 byte 1 字节 -128~127 短整型 short 2 字节 -32768~32767 整型 int 4 字节 -2147483648~2147483647 长整型 long 8 字节 -9223372036854775808L~9223372036854775807L 单精度浮点型 float 4 字节 +/-3.4E+38F（6~7 个有效位） 双精度浮点型 double 8 字节 +/-1.8E+308 (15 个有效位） 字符型 char 2 字节 ISO 单一字符集 布尔型 boolean 1 字节 true 或 false char a='a';// 等价于char a=97; 示例 显示字符‘α’在Unicode表中的位置；显示以字符‘α’开始的25个字符。 提示：要显示一个字符在Unicode表中的位置，必须使用int类型显示转换，如(int)’a’。 同理，要显示表中相应位置上的字符，必须使用char类型显示转换。 package com.jetzihan.m2;//显示字符’α’在Unicode表中的位置，显示以字符’α’开始的25个字符public class Example2_1{ public static void main (String args[ ]) { char c='α'; System.out.println(\"希腊字母\"+c+\"在unicode表中的顺序位置:\"+(int)c); System.out.println(\"希腊字母表：\"); for(int i=(int)c;i<(int)c+25;i++) { System.out.print(\" \"+(char)i); } }} Res 希腊字母α在unicode表中的顺序位置:945 希腊字母表： α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω 引用数据类型​ 类、数组、泛型或 null 。","s":"数据类型","u":"/docs/BackEnd/Java/languages11","h":"#数据类型","p":557},{"i":567,"t":"在为变量起名的时候，名字有以下要求： 由数字、字母、下划线和美元符组成。 不能用数字开头。 不能是保留字。 区分大小写。 它可以是 Unicode 字符，甚至是中文。 boolean 关闭 = true; 小驼峰变量命名 标识符是一个单词的时候全部小写： name。 多个单词的时候第一个小写其他单词首字母大写： firstName。 大驼峰类命名 标识符是一个单词的时候首字母大写： Student。 多个单词的时候第每个单词首字母大写： GoodStudent。","s":"标识符和命名规范","u":"/docs/BackEnd/Java/languages11","h":"#标识符和命名规范","p":557},{"i":569,"t":"// 转义字符public class zhuan { public static void main(String[] args){ System.out.println(\"hello\\\"world\"); }}","s":"转义字符","u":"/docs/BackEnd/Java/languages11","h":"#转义字符","p":557},{"i":571,"t":"当把级别低的数据类型赋值给级别高的数据类型时，会自动完成数据类型转换。 int a=10;long b=a; 当把级别高的数据类型赋值给级别低的数据类型时，必须进行强制类型转换。 long a=10;int b=(int)a;","s":"数据类型转换","u":"/docs/BackEnd/Java/languages11","h":"#数据类型转换","p":557},{"i":573,"t":"Java为我们写好了 Scanner 类用于键盘输入。","s":"输入和输出","u":"/docs/BackEnd/Java/languages11","h":"#输入和输出","p":557},{"i":575,"t":"System.out.println(\"你好\");System.out.println(\"你好\"+x);System.out.println(\":\"+123+\"大于\"+122);","s":"println","u":"/docs/BackEnd/Java/languages11","h":"#println","p":557},{"i":577,"t":"printf(格式控制符，表达式1，表达式2，……，表达式n); 格式控制符以一个%开始，一个字母结束，字母规定了方法按照何种方式打印这个值，例如d表示十进制整数（int），f表示浮点数等。","s":"printf","u":"/docs/BackEnd/Java/languages11","h":"#printf","p":557},{"i":579,"t":"用于从键盘输入数据。 Input.java // 导包import java.util.Scanner;public class Input { public static void main(String[] args){ // 创建Scanner对象 Scanner sc=new Scanner(System.in); //接收数据 int i=sc.nextInt(); // 打印 System.out.println(i); }}// 输入2，输出2","s":"Scanner","u":"/docs/BackEnd/Java/languages11","h":"#scanner","p":557},{"i":581,"t":"在下面的代码中，B 类继承了 A 类，B 类就拥有了 A 类的所有属性和方法。参数 b 也是 B 类中的成员。 // 类 Apublic class A { // 变量 b int b=10; public void show(){ System.out.println(\"A\"); }}// 类 B 继承 Apublic class B extends A { public void show(){ System.out.println(\"B\"); }}","s":"继承","u":"/docs/BackEnd/Java/languages11","h":"#继承","p":557},{"i":583,"t":"// People 类public class People { // 重载方法 void show(String s){ System.out.println(\"show(String)\"); } int show(int i){ return i*2; } void show(String s,int i){ System.out.println(\"show(String,int)\"); } double show(float i,float s){ return i+s; }}","s":"重载","u":"/docs/BackEnd/Java/languages11","h":"#重载","p":557},{"i":585,"t":"// People 类public class People { // 原方法 int x=10; int show(){ return x; }}// Student 类继承 Peoplepublic class Student extends People { // 重写方法 int x=100; int show(){ return x*2; }}","s":"重写","u":"/docs/BackEnd/Java/languages11","h":"#重写","p":557},{"i":588,"t":"要表示一个学生的年龄、性别、身高和体重等信息： public class Student { int age; char gender; float height; float weight;} 在系统分配基本数据类型时，会分配数据类型的值，在分配复合数据类型时，会分配一个地址。","s":"复合数据类型","u":"/docs/BackEnd/Java/numberlist","h":"#复合数据类型","p":586},{"i":590,"t":"一个容器，存储同种数据类型的多个值。这个容器有名称和类型控制。数组存值时有隐式转换。","s":"数组介绍","u":"/docs/BackEnd/Java/numberlist","h":"#数组介绍","p":586},{"i":592,"t":"创建数组的引用。数组的定义有两种方式： dataType[] arrayRefVar; // 首选方法dataType arrayRefVar[]; // 效果相同dataType arrayRefVar[][]; // 二维数组 实例： double[] mylist;double mylist[];","s":"声明数组","u":"/docs/BackEnd/Java/numberlist","h":"#声明数组","p":586},{"i":594,"t":"Java 使用 new 操作符来创建一个数组。（在上面声明数组时并没有分配内存空间） 数组名字= new 数据类型 [数组长度] ; arrayRefVar = new dataType[arrarySize]; // 声明式创建dataType[] arraryRefVar = {value0,value1,.....,valueN}; // 枚举创建","s":"创建数组","u":"/docs/BackEnd/Java/numberlist","h":"#创建数组","p":586},{"i":596,"t":"可以在声明的时候初始化数组，也可以在创建的时候初始化数组。 // 在下面这条语句中，完成了数组的声明和创建，不需要使用 newfloat[ ] boy={21.3f,23.89f,2.0f,23f,668.8f};// 等价于float[ ] boy=new float[5];boy[0]=21.3f;boy[1]=23.89f;boy[2]=2.0f;boy[3]=23f;boy[4]=668.8f;","s":"初始化数组","u":"/docs/BackEnd/Java/numberlist","h":"#初始化数组","p":586},{"i":598,"t":"public class TestArray { public static void main(String[] args) { // 数组大小 int size = 10; // 在声明的同时创建数组 double[] myList = new double[size]; myList[0] = 5.6; myList[1] = 4.5; myList[2] = 3.3; myList[3] = 13.2; myList[4] = 4.0; myList[5] = 34.33; myList[6] = 34.0; myList[7] = 45.45; myList[8] = 99.993; myList[9] = 11123; // 计算所有元素的总和 double total = 0; for (int i = 0; i < size; i++) { total += myList[i]; } System.out.println(\"总和为： \" + total); }} res 总和为 11367.373 下面的图片描述了这个数组：","s":"实例","u":"/docs/BackEnd/Java/numberlist","h":"#实例","p":586},{"i":600,"t":"数组属于引用型变量，两个相同的数组如果具有相同的引用，它们就有完全相同的元素。 int [ ] a={1, 2, 3},b={4, 5}; 如果有赋值语句 a=b; 则系统将释放最初分配给数组a的元素，使得a的元素与b的元素相同，即a[0], a[1]就是b[0], b[1]，而最初分配给a的三个元素已不存在。 如果有赋值语句 b=a; 则b[0], b[1], b[2]就是a[0], a[1], a[2]，而最初分配给b的两个元素已不存在。","s":"数组的引用","u":"/docs/BackEnd/Java/numberlist","h":"#数组的引用","p":586},{"i":602,"t":"Java允许使用 int 类型变量指定数组的大小。 int size=30; double n[ ]=new double[size] Java不允许在声明数组的中括号内指定数组元素的个数。 int a[12];//（错误！）int[12] a;//（错误！）","s":"注意事项","u":"/docs/BackEnd/Java/numberlist","h":"#注意事项","p":586},{"i":604,"t":"通常使用循环来处理一个数组。 public class TestArray { public static void main(String[] args) { double[] myList = {1.9, 2.9, 3.4, 3.5}; // 打印所有数组元素 for (int i = 0; i < myList.length; i++) { System.out.println(myList[i] + \" \"); } // 计算所有元素的总和 double total = 0; for (int i = 0; i < myList.length; i++) { total += myList[i]; } System.out.println(\"Total is \" + total); // 查找最大元素 double max = myList[0]; for (int i = 1; i < myList.length; i++) { if (myList[i] > max) max = myList[i]; } System.out.println(\"Max is \" + max); }} res 1.9 2.9 3.4 3.5 Total is 11.7 Max is 3.5","s":"处理数组","u":"/docs/BackEnd/Java/numberlist","h":"#处理数组","p":586},{"i":606,"t":"不使用下标的情况下遍历数组： for(type element: array){ System.out.println(element);} 实例： public class TestArray { public static void main(String[] args) { double[] myList = {1.9, 2.9, 3.4, 3.5}; // 打印所有数组元素 for (double element: myList) { System.out.println(element); } }}","s":"For-Each 循环","u":"/docs/BackEnd/Java/numberlist","h":"#for-each-循环","p":586},{"i":608,"t":"例如，下面的例子就是一个打印 int 数组中元素的方法: public static void printArray(int[] array) { for (int i = 0; i < array.length; i++) { System.out.print(array[i] + \" \"); }} 下面例子调用 printArray 方法打印出 3，1，2，6，4 和 2： printArray(new int[]{3, 1, 2, 6, 4, 2});","s":"将数组作为函数的参数","u":"/docs/BackEnd/Java/numberlist","h":"#将数组作为函数的参数","p":586},{"i":610,"t":"public static int[] reverse(int[] list) { int[] result = new int[list.length]; for (int i = 0, j = result.length - 1; i < list.length; i++, j--) { result[j] = list[i]; } return result;} 在上述代码中，将返回 result 数组。","s":"将数组作为函数的返回值","u":"/docs/BackEnd/Java/numberlist","h":"#将数组作为函数的返回值","p":586},{"i":612,"t":"多维数组可以看成是数组的数组，比如二维数组就是一个特殊的一维数组，其每一个元素都是一个一维数组，例如： String[][] str = new String[3][4];","s":"多维数组","u":"/docs/BackEnd/Java/numberlist","h":"#多维数组","p":586},{"i":614,"t":"可以用每一维分配空间 type[][] typeName = new type[typeLength1][typeLength2]; type 可以为基本数据类型和复合数据类型，typeLength1 和 typeLength2 必须为正整数，typeLength1 为行数，typeLength2 为列数。 比如： int[][] a = new int[2][3]; 从最高维开始，分别为每一维分配空间，例如： String[][] s = new String[2][];s[0] = new String[2];s[1] = new String[3];s[0][0] = new String(\"Good\");s[0][1] = new String(\"Luck\");s[1][0] = new String(\"to\");s[1][1] = new String(\"you\");s[1][2] = new String(\"!\"); 解析： s[0]=new String[2] 和 s[1]=new String[3] 是为最高维分配引用空间，也就是为最高维限制其能保存数据的最长的长度，然后再为其每个数组元素单独分配空间 s0=new String(\"Good\") 等操作。","s":"初始化二维数组","u":"/docs/BackEnd/Java/numberlist","h":"#初始化二维数组","p":586},{"i":616,"t":"在多维数组中，每一个维度的长度可以不同，在修改指向后，原来的数组会被覆盖，并且修改被引用的数组，引用它的数组也会改变。 package com.jetzihan.m2;public class TestDimension{ public static void main(String[] args){ //声明、创建和初始化由一维数组构成的数组： int[][] n = new int[2][]; n[0] = new int[3]; //第一个一维数组长度为3 n[0][0] = 1; n[0][1] = 2; n[0][2] = 3; n[1] = new int[2]; //第二个一维数组长度为2 n[1][0] = 11; n[1][1] = 12; //声明、创建和初始化一个一维数组： int[] a = {101, 102, 103, 104}; //引用重新指向,修改 a 将导致 n 也发生修改 n[0] = a; // n 的第一行被覆盖 a[2]=109; System.out.println(\"n[0][2]的值是3还是103还是109？\"); System.out.println(\"n[0][2]的值是\" + n[0][2]); }}// 输出109","s":"多维数组的引用","u":"/docs/BackEnd/Java/numberlist","h":"#多维数组的引用","p":586},{"i":618,"t":"java.util.Arrays 类能方便地操作数组，它提供的所有方法都是静态的。 具有以下功能： 给数组赋值：通过 fill 方法。 对数组排序：通过 sort 方法,按升序。 比较数组：通过 equals 方法比较数组中元素值是否相等。 查找数组元素：通过 binarySearch 方法能对排序好的数组进行二分查找法操作。 具体说明请查看下表： 序号 方法和说明 1 public static int binarySearch(Object[] a, Object key),用二分查找算法在给定数组中搜索给定值的对象(Byte,Int,double等)。数组在调用前必须排序好的。如果查找值包含在数组中，则返回搜索键的索引；否则返回 (-(插入点) - 1)。 2 public static boolean equals(long[] a, long[] a2),如果两个指定的 long 型数组彼此相等，则返回 true。如果两个数组包含相同数量的元素，并且两个数组中的所有相应元素对都是相等的，则认为这两个数组是相等的。换句话说，如果两个数组以相同顺序包含相同的元素，则两个数组是相等的。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）。 3 public static void fill(int[] a, int val),将指定的 int 值分配给指定 int 型数组指定范围中的每个元素。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）。 4 public static void sort(Object[] a),对指定对象数组根据其元素的自然顺序进行升序排列。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）。 最后更新于：2022-7-29 20:50","s":"Arrays API","u":"/docs/BackEnd/Java/numberlist","h":"#arrays-api","p":586},{"i":621,"t":"String s1 = \"Runoob\"; // String 直接创建String s2 = \"Runoob\"; // String 直接创建String s3 = s1; // 相同引用String s4 = new String(\"Runoob\"); // String 对象创建String s5 = new String(\"Runoob\"); // String 对象创建 或者这样： public class StringDemo{ public static void main(String args[]){ char[] helloArray = { 'r', 'u', 'n', 'o', 'o', 'b'}; String helloString = new String(helloArray); System.out.println( helloString ); }}","s":"创建 String","u":"/docs/BackEnd/Java/stringclass","h":"#创建-string","p":619},{"i":623,"t":"public class StringDemo { public static void main(String args[]) { String site = \"Jetzihan.com\"; int len = site.length(); System.out.println( \"Jetzihan网址长度 : \" + len ); }} res Jetzihan网址长度 :12","s":"字符串长度","u":"/docs/BackEnd/Java/stringclass","h":"#字符串长度","p":619},{"i":625,"t":"String 类提供了连接两个字符串的方法： string1.concat(string2); 返回 string2 连接 string1 的新字符串。也可以对字符串常量使用 concat() 方法，如： public class StringDemo { public static void main(String args[]) { String string1 = \"我的名字：\"; System.out.println(\"1、\" + string1 + \"czh\"); }} res 1、我的名字：czh","s":"连接字符串","u":"/docs/BackEnd/Java/stringclass","h":"#连接字符串","p":619},{"i":627,"t":"我们知道输出格式化数字可以使用 printf() 和 format() 方法。 String 类使用静态方法 format() 返回一个String 对象而不是 PrintStream 对象。 String 类的静态方法 format() 能用来创建可复用的格式化字符串，而不仅仅是用于一次打印输出。 如下所示： System.out.printf(\"浮点型变量的值为 \" + \"%f, 整型变量的值为 \" + \" %d, 字符串变量的值为 \" + \"is %s\", floatVar, intVar, stringVar); 你也可以这样写: String fs;fs = String.format(\"浮点型变量的值为 \" + \"%f, 整型变量的值为 \" + \" %d, 字符串变量的值为 \" + \" %s\", floatVar, intVar, stringVar);","s":"创建格式化字符串","u":"/docs/BackEnd/Java/stringclass","h":"#创建格式化字符串","p":619},{"i":629,"t":"菜鸟教程","s":"String API","u":"/docs/BackEnd/Java/stringclass","h":"#string-api","p":619},{"i":632,"t":"数据是信息的符号表示。信息=数据+语义。","s":"数据和信息","u":"/docs/BackEnd/MySql/mysqlstart","h":"#数据和信息","p":630},{"i":634,"t":"数据库（DataBase），用来组织、存储、管理数据的仓库。数据库有多种来源，声音、视频、图片、文本等。数据库最基本的操作就是新增、查询、更新、删除等操作。","s":"什么是数据库","u":"/docs/BackEnd/MySql/mysqlstart","h":"#什么是数据库","p":630},{"i":637,"t":"在 Excel 中，数据结构分别为 工作簿、工作表、数据行、列 这四个部分。","s":"Excel 中的数据结构","u":"/docs/BackEnd/MySql/mysqlstart","h":"#excel-中的数据结构","p":630},{"i":639,"t":"从大到小分为： 数据库（database） 数据表（table） 数据行（row） 字段（field），相当于 Excel 中的列，每个字段都有自己的数据类型。","s":"传统型数据库","u":"/docs/BackEnd/MySql/mysqlstart","h":"#传统型数据库","p":630},{"i":641,"t":"一般情况下，每一个项目都由自己的一个独立的数据库。 不同的数据存储到不同的数据表中，例如用户数据存储到用户表、图书数据存储到图书表。 每个表中具体存储那些信息都由字段来决定。例如 user 表可以设计 id、username、password 三个字段。 表中的行代表每一条数据。","s":"库、表、行、字段的关系","u":"/docs/BackEnd/MySql/mysqlstart","h":"#库表行字段的关系","p":630},{"i":644,"t":"域：一组具有相同性质的值的集合，例如整数、字符串、日期等。又称为值域。 元组：一个元组是一个有限的、不可再分的数据项序列，例如（1，2，3）就是一个元组。 关系: 笛卡尔积的一个子集，是一个二维表，每一行是一个元组，每一列是一个域。在定义域 D1,D2,...,Dn 上的关系 R 是一个有限的元组集合。 笛卡尔积 笛卡尔积是指两个集合中任意元素的组合。例如集合 A = {1,2,3}，集合 B = {a,b,c}，则 A 和 B 的笛卡尔积为：A × B = {(1,a),(1,b),(1,c),(2,a),(2,b),(2,c),(3,a),(3,b),(3,c)}。 同类关系：具有相同框架（个数和范围）的关系。 在关系模型中，关系可进一步定义为：关系头+关系体，关系头由属性名的集合构成，关系体由元组的集合构成。","s":"关系模型的数据结构及形式化定义","u":"/docs/BackEnd/MySql/mysqlstart","h":"#关系模型的数据结构及形式化定义","p":630},{"i":646,"t":"对于开发人员只需要 MySQL Server 和 MySQL Workbench 这两个软件。 MySQL Server:提供数据存储和服务的软件。 MySQL Workbench:可视化 MySQL 管理工具。可以操作 MySQL Server 中的数据。","s":"安装和配置 MySQL","u":"/docs/BackEnd/MySql/mysqlstart","h":"#安装和配置-mysql","p":630},{"i":648,"t":"首先进入 MySQL官网,选择菜单中的 Downloads ，找到如下链接： 选择安装 Windows 版本： 安装后，打开文件：mysql-installer-community-8.0.30.0.msi. 选择下面第1个： 然后进入下一步，选择 Execute 安装。 接着一直安装即可。","s":"在 Win10 上安装 MySQL","u":"/docs/BackEnd/MySql/mysqlstart","h":"#在-win10-上安装-mysql","p":630},{"i":652,"t":"域是一组有相同数据类型的值的集合，例如整数域、实数域、字符串域等。一般用D表示域，D中的元素用d(分量)表示。域中所包含元素的个数被称为域的基数，记作m。如： D = {1,2,3,4,5,6,7,8,9,0}m = 10","s":"域","u":"/docs/BackEnd/MySql/relationdb","h":"#域","p":649},{"i":654,"t":"给定一组域D1,D2,…,Dn，其笛卡尔积D1×D2×…×Dn是由D1中的每个元素d1与D2中的每个元素d2,…,Dn中的每个元素dn组成的有序对(d1,d2,…,dn)的集合。 D1 = {1,2,3}D2 = {a,b,c}D1×D2 = {(1,a),(1,b),(1,c),(2,a),(2,b),(2,c),(3,a),(3,b),(3,c)} 上述每个元素 (d1,d2,…,dn) 称为一个元组，其中d1称为元组的第一个分量，d2称为元组的第二个分量，…，dn称为元组的第n个分量。这是一个 n-元组。 笛卡尔积的基数为： m = m1*m2*…*mn 即 Π(i=1,n)mi。在上述例子中，m = 3*3 = 9。 同时，笛卡尔积可以表示成一个二维表的形式。设D1={李力，王平，刘伟}，D2={男，女}，则D1×D2的笛卡尔积为： D1×D2 = {(李力,男),(李力,女),(王平,男),(王平,女),(刘伟,男),(刘伟,女)} 表示为二维表： 姓名 性别 李力 男 李力 女 王平 男 王平 女 刘伟 男 刘伟 女","s":"笛卡尔积","u":"/docs/BackEnd/MySql/relationdb","h":"#笛卡尔积","p":649},{"i":656,"t":"在笛卡尔积中的任意一个子集称为定义在笛卡尔积上的一个关系。 R(D1,D2) = {(李力,男),(李力,女),(王平,男),(王平,女),(刘伟,男),(刘伟,女)} 笛卡尔积D1×D2×…×Dn上的关系R(D1,D2,…,Dn)被称为定义在域D1,D2,…,Dn上的n元关系。 如上面的例子有这样的关系： 姓名 性别 李力 男 王平 女 刘伟 男 关系的基数是关系中元组的个数。 n=1，称为一元关系。 关系中的每个元素是关系中的元组，通常用 t 来表示。 关系也可以看作一个二维表，每个元组对应表中的一行，每个分量对应表中的一列。 具有相同关系框架的关系称为同类关系。 关系可分为关系的头和关系的体。一般关系的头保持不变，关系的体不断增长。在产生的关系中，并不是所有的关系符合逻辑。","s":"关系","u":"/docs/BackEnd/MySql/relationdb","h":"#关系","p":649},{"i":658,"t":"关系模式是对关系的描述，关系模式需要指出元组的结构，即由哪些属性组成，属性取自哪个域，属性和域之间存在映射关系。关系模式可以形式化为： R(U,D,DOM,F) 其中： R是关系的名称，是一个非空有限集合。 U是关系的属性集合，是一个非空有限集合。 D是属性来自的域。 DOM是属性和域之间的映射关系。 F是属性数据的依赖关系集合。 简记为： R(U)或R(A1,A2,…,An)// 其中，A1,A2,…,An是属性的名称 关系模式是型，关系是值。","s":"关系模式","u":"/docs/BackEnd/MySql/relationdb","h":"#关系模式","p":649},{"i":660,"t":"在给定的领域中，所有实体以及实体之间的联系所对应的关系的集合构成一个关系的数据库。 - 关系数据库 - 关系模式 - 关系 关系数据库的模式是对关系数据库的描述，关系数据库的模式是关系模式的集合。","s":"关系数据库","u":"/docs/BackEnd/MySql/relationdb","h":"#关系数据库","p":649},{"i":663,"t":"关系候选码是能够标识关系中元组唯一性的一个属性或属性组合。候选码有唯一性和最小性。 如学生表中，学号是唯一的，所以学号是候选码。但是在选课关系中，学号和课程号组合起来才能唯一标识一个选课记录，所以学号和课程号组合起来是候选码。","s":"候选码","u":"/docs/BackEnd/MySql/relationdb","h":"#候选码","p":649},{"i":665,"t":"从多个候选码中选择一个作为查询、修改、删除记录的最主要依据，称为主码。比如学生表中，学号是主码。或者在姓名不重复的情况下，姓名也可以作为主码。 主属性。包含在主码中的各个属性称为关系的主属性。 非主属性。不包含在主码中的属性称为非主属性。 全码。所有属性的组合是关系的候选码。 举一个全码的例子，在教师、学生、课程三种关系中，教师号、学号、课程号三个属性的组合是全码。这个全码构成了教师教课的关系、学生选课的关系。","s":"主码","u":"/docs/BackEnd/MySql/relationdb","h":"#主码","p":649},{"i":667,"t":"如果关系R2的一个或一组属性不是关系R2的主码，而是另一个关系R1的主码，则称这个属性或属性组合为关系R2的外码。","s":"外码","u":"/docs/BackEnd/MySql/relationdb","h":"#外码","p":649},{"i":669,"t":"关系的完整性有三类约束：实体完整性、参照完整性和用户自定义完整性。","s":"关系的完整性","u":"/docs/BackEnd/MySql/relationdb","h":"#关系的完整性","p":649},{"i":671,"t":"主码的值不能为空或者部分为空。否则就会违背现实世界的情况。","s":"实体完整性","u":"/docs/BackEnd/MySql/relationdb","h":"#实体完整性","p":649},{"i":673,"t":"参照的完整性要求关系中不允许引用不存在的实体。与实体完整性是关系模型必须满足的完整性约束条件，目的是保证数据的一致性。参照完整性又称引用完整性。","s":"参照完整性","u":"/docs/BackEnd/MySql/relationdb","h":"#参照完整性","p":649},{"i":675,"t":"用户自定义完整性是用户根据实际需要定义的完整性约束条件。比如在成绩表中，成绩不能小于0或者大于100。","s":"用户自定义完整性","u":"/docs/BackEnd/MySql/relationdb","h":"#用户自定义完整性","p":649},{"i":677,"t":"关系代数是一种抽象的查询语言，关系代数的运算对象和运算结果都是关系。下面是一些关系代数的运算符。","s":"关系代数","u":"/docs/BackEnd/MySql/relationdb","h":"#关系代数","p":649},{"i":679,"t":"集合运算符： 并运算：R ∪ S 交运算：R ∩ S 差运算：R - S 笛卡尔积：R × S 关系运算符： 选择：σ 投影：π 连接：⋈ 除：÷ 比较运算符： 等于：= 不等于：≠ 小于：< 小于等于：≤ 大于：> 大于等于：≥ 逻辑运算符： 与：∧ 或：∨ 非：¬","s":"关系运算符","u":"/docs/BackEnd/MySql/relationdb","h":"#关系运算符","p":649},{"i":681,"t":"若关系 R 和关系 S 有相同的度数。 关系R和关系S的并运算： R ∪ S = {r ∪ s | r ∈ R, s ∈ S} 关系R和关系S的交运算： R ∩ S = {r ∩ s | r ∈ R, s ∈ S} 关系R和关系S的差运算： R - S = {r - s | r ∈ R, s ∈ S} 广义笛卡尔积： R × S = {r × s | r ∈ R, s ∈ S} 举例： R = {1, 2, 3}，S = {a, b, c}，则： R ∪ S = {1, 2, 3, a, b, c}R ∩ S = {}R - S = {1, 2, 3}R × S = {(1, a), (1, b), (1, c), (2, a), (2, b), (2, c), (3, a), (3, b), (3, c)}","s":"传统的集合运算","u":"/docs/BackEnd/MySql/relationdb","h":"#传统的集合运算","p":649},{"i":683,"t":"设关系模式为R(A1, A2, ..., An)，他的一个关系为R，t 是 R 的一个元组，t = (a1, a2, ..., an)。t[Ai] 表示 t 的第 i 个分量，即 ai。","s":"专门的关系运算","u":"/docs/BackEnd/MySql/relationdb","h":"#专门的关系运算","p":649},{"i":685,"t":"若 A={Ai1, Ai2, ..., Ain}，其中 Ai1, Ai2, ..., Ain 是 A1, A2, ..., An 的一部分，那么 A 就称为属性列或域列。A上加一个波浪线表示在A1, A2, ..., An中去除A后剩下的属性。","s":"属性列","u":"/docs/BackEnd/MySql/relationdb","h":"#属性列","p":649},{"i":687,"t":"R为m目","s":"连接","u":"/docs/BackEnd/MySql/relationdb","h":"#连接","p":649},{"i":691,"t":"一个关系对应一个基本表，一个或多个基本表对应一个独立的存储文件。","s":"基本表","u":"/docs/BackEnd/MySql/sql","h":"#基本表","p":688},{"i":693,"t":"视图是由一个或几个基本表导出的表。是一个虚拟的表，不占用存储空间。当基本表发生变化时，视图也会发生变化。例如，有一个学生进本情况表S（SNo，SName，SDept，SClass），现在要查询学生的姓名和所在班级，可以建立一个视图V（SName，SClass），然后查询V表即可。它是在表 S 之上投影出来的。 SQL支持数据库的三级结构，外模式对应视图和部分基本表，模式对应于基本表，内模式对应于存储文件。","s":"视图","u":"/docs/BackEnd/MySql/sql","h":"#视图","p":688},{"i":695,"t":"数据文件​ Database File，一个数据库可以有一个或多个数据文件，当有多个数据文件时，每个数据文件被定义为一个主文件，其扩展名是 .mdf，其余的数据文件被定义为次数据文件（Secondary Data File），其扩展名是 .ndf。 事务日志文件​ Transaction Log File，一个数据库可以有一个或多个事务日志文件，其扩展名是 .ldf。 文件组​ File Group，一个数据库可以有一个或多个文件组，每个文件组包含一个主数据文件和零个或多个次数据文件。","s":"SQL数据库的结构","u":"/docs/BackEnd/MySql/sql","h":"#sql数据库的结构","p":688},{"i":698,"t":"Management Studio​ 在 Management Studio 中，可以通过右键单击数据库节点，选择“新建数据库”来创建数据库。 SQL语句​ CREATE DATABASE 数据库名 选填语句： [FILEGROUP 文件组名]( NAME=数据文件逻辑名称, FILENAME='路径+数据文件名', SIZE=数据文件初始大小, MAXSIZE=数据文件最大大小, FILEGROWTH=数据文件增长大小)[LOG ON( NAME=事务日志文件逻辑名称, FILENAME='路径+事务日志文件名', SIZE=事务日志文件初始大小, MAXSIZE=事务日志文件最大大小, FILEGROWTH=事务日志文件增长大小)][COLLATE 数据库校验方式名称][FOR ATTACH] -- 用于附加数据库,将已经存在的数据库文件附加到数据库中 例子 用 SQL 命令创建一个数据库 Teach，数据文件的逻辑名称为 TeachData，数据文件的物理名称为 TeachData.mdf，数据文件的初始大小为 10M，最大的存储空间为 500MB，存储空间自动增长量为 10MB，日志文件的逻辑名称为 Teach_Log，日志文件物理地存放在D盘根目录下。文件名为 TeachData.ldf，初始存储空间大小为 5MB，最大存储空间为 500MB，存储空间自动增长量为5MB。 CREATE DATABASE TeachON( NAME=Teach_Data, FILENAME='D:\\TeachData.mdf', SIZE=10, MAXSIZE=500, FILEWORTH=20)LOG ON( NAME=Teach_Log, FILENAME='D:\\TeachData.ldf', SIZE=5, MAXSIZE=500, FILEWORTH=5)","s":"创建数据库","u":"/docs/BackEnd/MySql/sql","h":"#创建数据库","p":688},{"i":700,"t":"可以用 ALTER DATABASE 命令修改数据库。只有数据库管理员（DBA）或者 CREATE DATABASE 权限的才可以有权执行这个命令。下面列出了常用的数据库 SQL 命令的基本格式如下： ALTER DATABASEADD FILE(具体文件格式)[,...n][TO FILEGROUP 文件组名]|ADD LOG FILE 具体文件格式[,...n]|REMOVE FILE 文件逻辑问题|MODIFY FILE(具体文件格式)|ADD FILEGROUP 文件组名|MODIFY FILEGROUP 文件组名|MODIFY FILEGROUP 文件组名{READ_ONLY|READ_WRITE, | DEFAULT, | NAME = 新文件组名}","s":"修改数据库","u":"/docs/BackEnd/MySql/sql","h":"#修改数据库","p":688},{"i":703,"t":"数据库系统(Database System),主要由数据库、数据库用户、计算机硬件系统和计算机软件系统组成。","s":"数据库系统组成","u":"/docs/BackEnd/MySql/xulun","h":"#数据库系统组成","p":701},{"i":705,"t":"数据库是按照数据结构来组织、存储和管理数据的仓库。它有两个特点： 集成性。数据库中的数据是相关联的，它们之间存在着某种联系，这种联系可以是逻辑联系，也可以是物理联系。 共享性。数据库中的数据可以被多个用户共享。","s":"数据库","u":"/docs/BackEnd/MySql/xulun","h":"#数据库","p":701},{"i":707,"t":"数据库用户有三类： 应用程序员。他们设计和编写应用程序，使用数据库系统来存储和管理数据。 数据库管理员。数据库管理员是数据库系统的管理者，他们负责数据库系统的建立、维护和管理。 数据库应用用户。数据库应用用户是数据库系统的最终用户，他们通过应用程序来访问数据库系统。 数据库管理员（Database Administrator）在大型项目中极为重要，他们负责数据库系统的建立、维护和管理。数据库管理员的主要工作包括： 数据库设计。数据库设计是数据库系统的核心工作，它包括数据库的逻辑设计和物理设计。 数据库实现。数据库实现是将数据库设计转换为数据库系统的过程。 数据库运行和维护。数据库运行和维护是保证数据库系统正常运行的重要工作。 数据库安全。数据库安全是保证数据库系统的安全的重要工作。 帮助用户使用数据库系统。帮助用户使用数据库系统是数据库管理员的重要工作。","s":"数据库用户","u":"/docs/BackEnd/MySql/xulun","h":"#数据库用户","p":701},{"i":709,"t":"计算机硬件系统是数据库系统的基础，它包括计算机系统、存储系统和通信系统。","s":"计算机硬件系统","u":"/docs/BackEnd/MySql/xulun","h":"#计算机硬件系统","p":701},{"i":711,"t":"软件系统主要包括数据库管理系统（Database Management System，简称DBMS）和操作系统（Operating System，简称OS）。","s":"计算机软件系统","u":"/docs/BackEnd/MySql/xulun","h":"#计算机软件系统","p":701},{"i":714,"t":"数据库系统的内部体系结构是三级结构，它包括： 模式，又称概念模式，它描述了数据库中全体数据的逻辑结构和特征。处于三级模式的中间层，不涉及 数据的物理存储细节和硬件环境，与所使用的开发工具或者语言无关。一个数据库只有一个模式，它是数据库的逻辑结构的描述，是数据库的蓝图。 外模式 （外部模式，或用户模式，或子模式）。它是三级结构的最外层，使用户能够看到和使用数据库中的数据。外模式是数据库的逻辑结构的子集，它是数据库的实际使用者看到的部分，是数据库用户的数据视图或者用户视图。外模式一般是 内模式的子集。一个数据库可以有多个外模式。 内模式 。内模式又称存储模式或者物理模式。是三级结构的最内层，它描述了数据库中数据的物理结构和存储方式。内模式是数据库的逻辑结构的实现，是数据库的实际存储结构。一个数据库只有一个内模式。它可能记录以什么方式存储数据（比如顺序存储或者索引存储），以及数据的物理存储位置，又或者是否进行压缩。","s":"三级结构","u":"/docs/BackEnd/MySql/xulun","h":"#三级结构","p":701},{"i":716,"t":"DBMS在三级模式之间建立了二级映像，它们之间的映像关系如下： 模式映像到外模式。例如，在学生的逻辑结构中添加新的属性，如“学生的爱好”，这个属性就会映像到外模式中，即用户可以看到这个属性。 外模式映像到内模式。当采取了更加先进的存储技术时，只要保持其模式不变化，就可以把存储结构的变化限制在模式之下，这使数据的存储结构和存储方式都高度独立于应用程序。","s":"二级映像","u":"/docs/BackEnd/MySql/xulun","h":"#二级映像","p":701},{"i":719,"t":"单用户的数据库是指只有一个用户使用的数据库。不能实现多用户共享，因此只能用于个人使用。","s":"单用户的数据库","u":"/docs/BackEnd/MySql/xulun","h":"#单用户的数据库","p":701},{"i":721,"t":"主从数据库是指一个数据库系统中有一个主数据库和多个从数据库。是一个单个大型主机带终端的数据库。","s":"主从数据库","u":"/docs/BackEnd/MySql/xulun","h":"#主从数据库","p":701},{"i":723,"t":"分布式数据库是指多个数据库系统共同组成一个数据库系统。是多个计算机共同组成的数据库系统。","s":"分布式数据库","u":"/docs/BackEnd/MySql/xulun","h":"#分布式数据库","p":701},{"i":725,"t":"在这个结构的数据库中，DBMS和数据库存放在数据库服务器上，应用程序和相关的开发工具安装在客户机上。（富客户端） 客户机/服务器数据库的弊端 十分不方便，每次维护升级都需要重新安装客户端，而且客户端的安装包很大，很多时候还需要重新安装操作系统。","s":"客户机/服务器数据库","u":"/docs/BackEnd/MySql/xulun","h":"#客户机服务器数据库","p":701},{"i":727,"t":"客户端只安装通用的浏览器软件，应用程序不安装在客户端，而是安装在介于客户端和数据库服务器之间的应用服务器上。（瘦客户端）","s":"浏览器/服务器数据库","u":"/docs/BackEnd/MySql/xulun","h":"#浏览器服务器数据库","p":701},{"i":729,"t":"数据库管理系统即DBMS，是一种软件系统，它是数据库系统的核心部分。DBMS就是把抽象的数据处理成计算机中具体的物理数据的软件。 主要包括数据定义功能、数据操纵功能、数据库运行管理功能、数据库的建立和维护功能、数据通信接口及组织、存储和管理功能。","s":"数据库管理系统","u":"/docs/BackEnd/MySql/xulun","h":"#数据库管理系统","p":701},{"i":731,"t":"DBMS提供数据定义语言（Data Definition Language，DDL）来定义数据库的结模式、外模式和内模式三级结构。","s":"数据定义功能","u":"/docs/BackEnd/MySql/xulun","h":"#数据定义功能","p":701},{"i":733,"t":"DBMS提供数据操纵语言（Data Manipulation Language，DML）来操纵数据库中的数据。例如，SQL语言提供查询语句（SELECT）、插入语句（INSERT）、更新语句（UPDATE）和删除语句（DELETE）等。","s":"数据操纵功能","u":"/docs/BackEnd/MySql/xulun","h":"#数据操纵功能","p":701},{"i":735,"t":"DBMS提供数据库的运行管理功能，包括数据库的安全管理、备份和恢复、并发控制、完整性控制。","s":"数据库的运行管理功能","u":"/docs/BackEnd/MySql/xulun","h":"#数据库的运行管理功能","p":701},{"i":737,"t":"DBMS提供数据库的建立和维护功能，数据库的维护包括数据库的转储、恢复、重构造、系统性能监视和分析等。","s":"数据库的建立和维护功能","u":"/docs/BackEnd/MySql/xulun","h":"#数据库的建立和维护功能","p":701},{"i":739,"t":"DBMS提供数据通信接口，使用户可以通过这些接口与数据库进行通信。","s":"数据通信接口","u":"/docs/BackEnd/MySql/xulun","h":"#数据通信接口","p":701},{"i":741,"t":"DBMS提供组织、存储和管理功能，包括数据的存储管理、索引管理、文件管理、存储空间管理、缓冲管理、重组管理、安全管理、完整性管理、并发管理、恢复管理、事务管理等。","s":"组织、存储和管理功能","u":"/docs/BackEnd/MySql/xulun","h":"#组织存储和管理功能","p":701},{"i":744,"t":"语言编译处理程序是DBMS的核心部分，它负责把用户的数据操纵语言（DML）转换成数据库系统能够识别的语言，然后把这些语言转换成数据库系统能够执行的语言。","s":"语言编译处理程序","u":"/docs/BackEnd/MySql/xulun","h":"#语言编译处理程序","p":701},{"i":746,"t":"DBMS提供一系列运行控制程序，负责数据库系统运行过程中的控制和管理，主要包括下面几部分： 系统总控程序。用于协调和控制各程序的活动。它是DBMS的核心。 安全性控制程序。 完整性控制程序。 并发控制程序。 数据存取和更新程序。 通信控制程序。","s":"系统运行控制程序","u":"/docs/BackEnd/MySql/xulun","h":"#系统运行控制程序","p":701},{"i":748,"t":"包括装备程序、重组程序以及系统的恢复程序。","s":"系统建立和维护程序","u":"/docs/BackEnd/MySql/xulun","h":"#系统建立和维护程序","p":701},{"i":750,"t":"数据字典是描述数据库信息的数据目录。","s":"数据字典","u":"/docs/BackEnd/MySql/xulun","h":"#数据字典","p":701},{"i":753,"t":"数据库的层次模型是类似一个树形结构，在这种层次结构模型中，每一个节点表示一个记录型，每个记录型又包含多个字段。","s":"层次模型","u":"/docs/BackEnd/MySql/xulun","h":"#层次模型","p":701},{"i":755,"t":"网状模型采用类似图的形式来描述。","s":"网状模型","u":"/docs/BackEnd/MySql/xulun","h":"#网状模型","p":701},{"i":757,"t":"关系模型是最常用的数据模型，它是一种二维表结构，每个表都有一个名字，每个表都由若干个字段组成，每个字段都有一个名字，每个字段都有一个数据类型。关系模型的数据结构是规范化的二维表，它由表名、表头和表体组成。表名即表的名称，如（T1、T2、T3）。表头即表的属性。表体即表的记录。 如一张教师表（T）： Tno Tname Tsex Ttitle Tdept 1 张三 男 讲师 计算机系 2 李四 男 副教授 计算机系 3 王五 男 教授 网工 4 赵六 女 讲师 计算机系 5 钱七 女 副教授 数媒 学生表（S）： Sno Sname Ssex Sage Sdept 1 张三 男 20 计算机系 2 李四 男 21 计算机系 3 王五 男 22 计算机系 4 赵六 女 23 计算机系 5 钱七 女 24 数媒 课程关系表（C）： Cno Cname Ccredit Tno 1 数据库 4 1 2 网络 4 3 3 数学 4 2 4 英语 4 4 5 体育 4 5 选课关系表（SC）： Sno Cno Grade 1 1 90 1 2 80 1 3 70 1 4 60 1 5 50 2 1 90 2 2 80 2 3 70 2 4 60 2 5 50 3 1 90 3 2 80 3 3 70 3 4 60 3 5 50 4 1 90 4 2 80 4 3 70 4 4 60 4 5 50 5 1 90 5 2 80 5 3 70 5 4 60 5 5 50 授课关系表（TC）： Tno Cno 1 1 1 2 1 3 1 4 1 5 2 1 2 2 2 3 2 4 2 5 3 1 3 2 3 3 3 4 3 5 4 1 4 2 4 3 4 4 4 5 5 1 5 2 5 3 5 4 5 5 关系与关系实例。一个关系实例就是一个由行和列组成的二维表。如上面就有五个关系实例，分别是教师表、学生表、课程关系表、选课关系表和授课关系表。 元组。元组是关系中的一行，它是一个不可分割的整体。如上面的教师表中的一行就是一个元组，如（1、张三、男、讲师、计算机系）。 属性。属性是关系中的一列，它是一个不可分割的整体。如上面的教师表中的一列就是一个属性，如（Tno、Tname、Tsex、Ttitle、Tdept）。 域。域是属性的取值范围。如上面的教师表中的Tsex属性的域是 {男、女} ，Ttitle属性的域是{讲师、副教授、教授}，Tdept属性的域是 {计算机系、网工、数媒} 。 分量。分量是元组中的一个值。如上面的教师表中的一行（1、张三、男、讲师、计算机系）中的张三就是一个分量。 候选码。候选码是一个或多个属性的集合，它能唯一地标识关系中的每一个元组。如上面的教师表中的Tno属性就是一个候选码，因为它能唯一地标识关系中的每一个元组。 主码。主码是候选码中的一个，它是关系中的一个属性或属性组，它能唯一地标识关系中的每一个元组。如上面的教师表中的Tno属性就是一个主码，因为它能唯一地标识关系中的每一个元组。 关系模式。关系模式是关系的一个描述，它由关系的名称和属性组成。如上面的教师表的关系模式是（Tno、Tname、Tsex、Ttitle、Tdept）。 关系实例。关系实例是关系的一个具体的值，它由关系的名称和元组组成。如上面的教师表的关系实例是（Tno、Tname、Tsex、Ttitle、Tdept）和（1、张三、男、讲师、计算机系）。","s":"关系模型","u":"/docs/BackEnd/MySql/xulun","h":"#关系模型","p":701},{"i":759,"t":"对象是现实世界中实体的模型化。如一个学生、一门课程和考试记录都可以看成对象。","s":"面向对象模型","u":"/docs/BackEnd/MySql/xulun","h":"#面向对象模型","p":701},{"i":762,"t":"使用 express.static() 快速托管静态资源 使用 express 路由精简项目结构 使用 express 常见的中间件 使用 express 创建 API 接口 在 express 中启用 cors 跨域资源共享","s":"学习目标","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#学习目标","p":760},{"i":764,"t":"Express 是快速，开放，极简主义的 Web 框架，基于 Node.js 平台。它的作用与 Http 模块类似，专门用来创建 Web 服务。本质就是一个 npm 包。 Express中文网。","s":"什么是 Express","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#什么是-express","p":760},{"i":766,"t":"http 内置模块比较复杂 Express 对其进行封装，提高了使用效率","s":"为什么 Express","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#为什么-express","p":760},{"i":768,"t":"Web网站服务器：提供 Web 资源的服务器。 API接口服务器：专门对外提供 API接口的服务器。","s":"Express 能够做什么","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#express-能够做什么","p":760},{"i":770,"t":"在项目所在目录中，运行下面的终端命令： npm i express@4.17.1","s":"安装 Express","u":"/docs/BackEnd/Node.js/Express/Express1","h":"#安装-express","p":760},{"i":773,"t":"// 导入const express = require('express')// 创建服务器实例const app = express()// 监听端口，启动服务器app.listen(80,()=>{ console.log('Express server running at http://127.0.0.1')})","s":"创建基本服务器","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#创建基本服务器","p":771},{"i":776,"t":"通过 app.get() 方法，具体语法格式如下： 参数1：客户端的URL地址 参数2：对应的处理函数 req：请求对象（请求的属性和方法） res：响应对象（响应的属性和方法） app.get('请求URL',function(req,res){ // 处理函数})","s":"GET 请求","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#get-请求","p":771},{"i":778,"t":"通过 app.post() 方法，具体语法格式如下： 参数1：客户端的URL地址 参数2：对应的处理函数 req：请求对象（请求的属性和方法） res：响应对象（响应的属性和方法） app.post('请求URL',function(req,res){ // 处理函数})","s":"POST 请求","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#post-请求","p":771},{"i":780,"t":"通过 res.send 方法，即可把处理内容发送给客户端。 app.get('/user',function(req,res){ // 向客户端返回一个 json 对象 res.send({name:'za',age:20,gender:'男'})})app.post('/user',function(req,res){ // 向客户端返回一个 json 对象 res.send({name:'za',age:20,gender:'男'})})","s":"响应内容","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#响应内容","p":771},{"i":782,"t":"01.js // 导入expressconst express = require(\"express\");// 创建服务器实例const app = express();app.get(\"/user\", (req, res) => { res.send({ name: \"za\", age: 20, gender: \"男\" });});// 监听接口app.listen(80, () => { console.log(\"Express服务器运行在 http://127.0.0.1\");}); node 01.js 在浏览器打开 <http://127.0.0.1/user>: 或者使用 Apifox 进行测试，POST 同上，不在赘述：","s":"例子","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#例子","p":771},{"i":784,"t":"通过 req.query 对象，可以访问到查询字符串的方式，发送到服务器的参数： app.get('/',(req,res)=>{ // req.query 默认是一个空的对象 // 客户端使用 ?name=zs&age=20 这种字符串查询方式，发送到服务端的参数可以通过 // req.query 访问到 console.log(req.query)}) 在 Apifox 中请求 127.0.0.1?name=zs&age=20，控制台打印： { name: 'zs', age: '20' }","s":"获取 URL 携带的查询参数","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#获取-url-携带的查询参数","p":771},{"i":786,"t":"可以通过 req.params 访问动态参数对象： app.get('/user/:id',(req,res)=>{ // :id 是一个动态参数 console.log(req.params) res.send(req.params)}) 结果： 但实际上这里的 :id 并不是固定的写法，也可以叫做 :ids 等等，后面这个名称的值决定了参数名。也可以多个动态参数： app.get('/user/:username/:id',(req,res)=>{ // :id 是一个动态参数 console.log(req.params) res.send(req.params)})","s":"获取 URL 中的动态参数","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#获取-url-中的动态参数","p":771},{"i":789,"t":"express.static()。用于创建一个静态资源服务器，通过如下的代码即可把 public 目录下的所有资源对外公开访问。 app.use(express.static('public')) 如此，以下链接生效： <http://localhost:3000/images/bg.jpg> <http://localhost:3000/css/style.css> <http://localhost:3000/js/login.js> 我们创建一个 clock 文件夹，内有静态资源。 // 导入expressconst express = require(\"express\");// 创建服务器实例const app = express();// 使用 express.static 方法快速对外提供静态资源app.use(express.static(\"./clock\"));// 监听接口app.listen(80, () => { console.log(\"Express服务器运行在 http://127.0.0.1\");}); 运行： node it 浏览器访问路径 http://127.0.0.1/index.css :","s":"单个目录","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#单个目录","p":771},{"i":791,"t":"只需要连续多次调用这个函数即可。 app.use(express.static('public'))app.use(express.static('files')) 访问静态资源时，会按照调用顺序来查找相关资源，比如我们需要请求 index.html ，如果 public 已经存在了，就不会再去 files 中查找了。","s":"多个资源目录","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#多个资源目录","p":771},{"i":793,"t":"默认情况下资源访问不包含文件夹前缀。如果希望托管路径之前添加路径前缀，可以使用下面的方法： app.use('/public',express.static('public')) 此时去访问会出现相应的前缀：http://127.0.0.1/public/index.css","s":"挂载路径前缀","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#挂载路径前缀","p":771},{"i":795,"t":"在写代码时，如果对代码进行了修改，那么我们要重启终端才生效，nodemon 为我们省下了这件事。它能够监听项目的变动，会帮我们自动重启终端。 npm install -g nodemon 这样一来，我们运行项目，就要替换成： nodemon hello.js [nodemon] 2.0.19[nodemon] to restart at any time, enter `rs` [nodemon] watching path(s): *.*[nodemon] watching extensions: js,mjs,json [nodemon] starting `node .\\04.动态参数对象.js`Express服务器运行在 http://127.0.0.1","s":"nodemon","u":"/docs/BackEnd/Node.js/Express/Express2","h":"#nodemon","p":771},{"i":798,"t":"路由就是映射关系。比如拨打 10086 时，不同的数字按键可以映射不同的功能，数字按键和功能之间的关系就是映射关系。","s":"什么是路由","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#什么是路由","p":796},{"i":801,"t":"Express 中的路由 指客户端的请求和服务器处理函数之间的映射关系。Express 中的路由由下面的三部分组成： 请求的类型 请求的 URL 地址 处理函数 app.METHOD(PATH,HANDLER)// Method 指请求的类型，Path指请求的URL地址，HANDLER指处理函数","s":"组成","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#组成","p":796},{"i":803,"t":"对客户端请求的响应就是一个路由的例子： app.get(\"/user\", (req, res) => { res.send('HelloWorld');});","s":"例子","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#例子","p":796},{"i":805,"t":"每次客户端发起请求时，需要先进行路由匹配，只有匹配成功才会调用对应的函数。在路由匹配时，会按照函数编写的顺序从上到下进行匹配，直到匹配成功为止。请求的类型和请求的URL地址必须同时满足才能匹配成功。","s":"匹配过程","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#匹配过程","p":796},{"i":808,"t":"// 挂载到getapp.get(\"/user\", (req, res) => { res.send('HelloWorld');});// 挂载到postapp.post(\"/user\", (req, res) => { res.send('HelloWorld');});","s":"挂载到 app","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#挂载到-app","p":796},{"i":810,"t":"为了对路由进行模块化管理，Express 不建议像上面一样直接在 app 上挂载，而是推荐将其抽离为单独的模块。 创建路由模块对应的js文件 调用 express.router() 创建路由实例对象 向实例对象挂载具体的路由 使用 module.exports 向外共享路由对象 使用 app.use 函数注册路由模块 创建路由模块​ router.js // router.jsconst express = require('express')// 创建路由对象const router = express.Router()// 挂载具体路由router.get('/user/list', (req, res) => { res.send('Get user list.')})router.post('/user/add', (req, res) => { res.send('Add new user.')})// 向外导出路由对象module.exports = router 注册路由模块​ useRouter.js // 导入expressconst express = require(\"express\");// 创建服务器实例const app = express();// 导入路由模块const router = require(\"./06.router\");// 注册路由模块app.use(router);// 监听接口app.listen(80, () => { console.log(\"Express服务器运行在 http://127.0.0.1\");}); 此时，使用 apifox 请求这个接口。 得到了预期结果。实际上，这里的 router 就是一个中间件。","s":"模块化路由","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#模块化路由","p":796},{"i":812,"t":"类似前面的托管静态资源，这里也可以为路由添加前缀。 app.use('/api',router)","s":"路由前缀","u":"/docs/BackEnd/Node.js/Express/Express3","h":"#路由前缀","p":796},{"i":815,"t":"中间件（Middleware），是业务流程的中间处理环节。 在污水处理时要经过一级处理、二级处理、三级处理才能排放出符合标准的污水。这三个处理换姐就是中间件，中间件都需要输入和输出。","s":"什么是中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#什么是中间件","p":813},{"i":817,"t":"当一个请求到达 Express 服务器时，在无法直接完成处理的情况下，可以调用多个中间件，对这次的请求进行预处理。当所有处理完毕后，再交付给客户端。","s":"调用流程","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#调用流程","p":813},{"i":819,"t":"本质上就是一个 function 处理函数，包含 req, res, next 三个参数，next() 参数把流转关系交给下一个中间件或路由: app.get('/',function(req,res,next){ // 中间件函数 next();})","s":"格式","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#格式","p":813},{"i":821,"t":"实现多个中间件连续调用的关键。它表示把流转关系转交给下一个中间件或者路由。","s":"next 函数","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#next-函数","p":813},{"i":823,"t":"const mw = function(req,res,next){ console.log(\"这是一个中间件函数\"); // 必须调用next函数 next();}","s":"定义中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#定义中间件","p":813},{"i":825,"t":"服务端发起任何请求都会出发的中间件叫做全局生效中间件。调用 app.use 即可定义一个全局生效的中间件。 app.use(mw) 使用下面的脚本： // 导入expressconst express = require(\"express\");// 创建服务器实例const app = express();// 导入路由模块const router = require(\"./06.router\");// 定义中间件函数const mw = function (req, res, next) { console.log(\"这是一个中间件函数\"); next();};// 将mw注册为全局生效的中间件app.use(mw);app.get(\"/\", (req, res) => { res.send(\"HomePage\");});app.get(\"/user\", (req, res) => { res.send(\"UserPage\");});// 监听接口app.listen(80, () => { console.log(\"Express服务器运行在 http://127.0.0.1\");}); 在终端运行,并在 Apifox 中请求这个 / 接口： 控制台输出： [nodemon] 2.0.19[nodemon] to restart at any time, enter `rs`[nodemon] watching path(s): *.*[nodemon] watching extensions: js,mjs,json [nodemon] starting `node .\\08.中间件.js` Express服务器运行在 http://127.0.0.1这是一个中间件函数 请求 /user 接口： [nodemon] 2.0.19[nodemon] to restart at any time, enter `rs`[nodemon] watching path(s): *.*[nodemon] watching extensions: js,mjs,json [nodemon] starting `node .\\08.中间件.js` Express服务器运行在 http://127.0.0.1这是一个中间件函数这是一个中间件函数 在这个例子中，中间件 mw 调用完成后，next 函数调用了下一个路由。","s":"全局中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#全局中间件","p":813},{"i":827,"t":"实际上，上面的定义和 use 操作是可以合并的： app.use(function (req, res, next) { console.log(\"这是一个中间件函数\"); next();});","s":"简化全局中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#简化全局中间件","p":813},{"i":829,"t":"服务器会按照定义的顺序进行中间件调用。 app.use(function (req, res, next) { console.log(\"这是一个中间件函数1\"); next();});app.use(function (req, res, next) { console.log(\"这是一个中间件函数2\"); next();});","s":"多个全局中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#多个全局中间件","p":813},{"i":831,"t":"在多个中间件的中间，共享同一份req和res，所以我们可以在上游中间件中统一为req和res添加自定义属性和方法，供下游的中间件和路由使用。 如下面的例子，我们将获取时间抽象成一个中间件，在这个中间件中，我们把请求到达的时间挂载到 req 对象上，这样，在下面监听请求时就可以从中间件获取请求到达的时间。 // 导入expressconst express = require(\"express\");// 创建服务器实例const app = express();// 导入路由模块const router = require(\"./06.router\");// 定义中间件函数const mw = function (req, res, next) { // 获取请求到达服务器的时间 const time = Date.now(); // 挂载到req req.startTime = time; console.log(\"这是一个中间件函数\"); next();};// 将mw注册为全局生效的中间件app.use(mw);app.get(\"/\", (req, res) => { res.send(\"HomePage\" + req.startTime);});app.get(\"/user\", (req, res) => { res.send(\"UserPage\" + req.startTime);});// 监听接口app.listen(80, () => { console.log(\"Express服务器运行在 http://127.0.0.1\");}); 执行这个脚本： 上面就拿到了该时间。 因此，我们发现，中间件可以简化代码的书写。","s":"中间件的作用","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#中间件的作用","p":813},{"i":833,"t":"不使用 app.use 函数来声明中间件，就不会是全局的中间件。 // 导入expressconst express = require(\"express\");// 创建服务器实例const app = express();// 导入路由模块const router = require(\"./06.router\");// 定义中间件函数const mw = function (req, res, next) { // 获取请求到达服务器的时间 const time = Date.now(); // 挂载到req req.startTime = time; console.log(\"这是一个中间件函数\"); next();};// 在下面增加一个参数，可以调用这个中间件。app.get(\"/\", mw, (req, res) => { res.send(\"HomePage\" + req.startTime);});app.get(\"/user\", (req, res) => { res.send(\"UserPage\" + req.startTime);});// 监听接口app.listen(80, () => { console.log(\"Express服务器运行在 http://127.0.0.1\");});","s":"局部生效中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#局部生效中间件","p":813},{"i":835,"t":"app.get(\"/\", mw1 , mw2 , mw3 , (req, res) => { res.send(\"HomePage\" + req.startTime);});//或者app.get(\"/\", [mw1 , mw2 , mw3] , (req, res) => { res.send(\"HomePage\" + req.startTime);});","s":"多个局部中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#多个局部中间件","p":813},{"i":837,"t":"必须在路由之前定义中间件，否则就不会生效 客户端发送的请求可以连续调用多个中间件 中间件结束 next() 函数不可忽略，否则请求不会继续 防止逻辑混乱， next() 之后不要再编写其他代码 连续调用多个中间件时，公用 req 和 res 对象","s":"中间件注意事项","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#中间件注意事项","p":813},{"i":839,"t":"Express 将中间件分成了五类的中间件： 应用级别的中间件 路由级别的中间件 错误级别的中间件 Express 内置中间件 第三方中间件","s":"中间件分类","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#中间件分类","p":813},{"i":841,"t":"凡是通过 app.use() app.get() app.post() 之类绑定到 app 上的中间件都是应用级的中间件。上面的代码中的全局中间件和局部中间件都是应用级中间件。 app.get(\"/\", mw1 , mw2 , mw3 , (req, res) => { res.send(\"HomePage\" + req.startTime);});","s":"应用级中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#应用级中间件","p":813},{"i":843,"t":"绑定到 express.Router() 实例上的中间件都是路由级别的中间件。 router.use(function(req,res,next){ console.log(\"路由级中间件\");0 next();})","s":"路由级中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#路由级中间件","p":813},{"i":845,"t":"用于捕获项目中发生的错误，包含四个参数：err,req,res,next: app.get('/'.function(req,res){ // 人为制造错误 throw new Error('服务器发生错误！'); // 因为上一行发生错误，所以不会执行到这里 res.send('HomePage');})app.use(function(err,req,res,next){ console.log('发生了错误错误'+err.message); res.send('Error!'+err.message);})","s":"错误级中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#错误级中间件","p":813},{"i":847,"t":"express.static快速托管静态资源的中间件（无兼容性）。 express.json 解析 json 格式的请求体数据（4.16.0+)。 express.urlencoded 解析 URL-encoded 格式的请求体数据（4.16.0+)。 app.use(express.json())app.use(express.urlencoded({ extended: false })) 从 Apifox 发送一个 json 数据到服务器​ 在 Apifox 中 Body 面板发送数据。 模拟一些数据： // 导入expressconst express = require(\"express\");// 创建服务器实例const app = express();app.post(\"/user\", (req, res) => { // 使用 res.body 接收发来的请求体数据 console.log(req.body); res.send(\"UserPage\");});// 监听接口app.listen(80, () => { console.log(\"Express服务器运行在 http://127.0.0.1\");}); 控制台打印： Express服务器运行在 http://127.0.0.1undefined 没有配置解析方式，所以这里无法解析表单。 // 导入expressconst express = require(\"express\");// 创建服务器实例const app = express();app.use(express.json());app.post(\"/user\", (req, res) => { // 使用 res.body 接收发来的请求体数据 console.log(req.body); res.send(\"UserPage\");});// 监听接口app.listen(80, () => { console.log(\"Express服务器运行在 http://127.0.0.1\");}); 重新发送请求，控制台打印： Express服务器运行在 http://127.0.0.1{ name: 'zs', age: 10 }","s":"内置中间件","u":"/docs/BackEnd/Node.js/Express/Express4","h":"#内置中间件","p":813},{"i":851,"t":"将单个 index.html 页面拆分成三个文件：分别是 html 、 js 、 css 文件。拆分后放在 clock 目录中。","s":"目标效果","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#目标效果","p":849},{"i":853,"t":"Details <!DOCTYPE html><html lang=\"en\"><head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"> <title>index首页</title> <style> html, baby { margin: 0; padding: 0; height: 100%; background-image: linear-gradient(to bottom right, red, gold); } .box { width: 400px; height: 250px; background-color: rgba(255, 255, 255, 0.6); border-radius: 6px; position: absolute; left: 50%; top: 40%; transform: translate(-50%, -50%); box-shadow: 1px 1px 10px #fff; text-shadow: 0px 1px 30px white; display: flex; justify-content: space-around; align-items: center; font-size: 70px; user-select: none; padding: 0 20px; /* 盒子投影*/ -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(0%, transparent), to(rgba(250, 250, 250, .2))); } </style></head><body><div class=\"box\"> <div id=\"HH\">00</div> <div>:</div> <div id=\"mm\">00</div> <div>:</div> <div id=\"ss\">00</div></div><script> window.onload = function () { // 定时器，每隔1秒执行1次 setInterval(() => { var dt = new Date() var HH = dt.getHours() var mm = dt.getMinutes() var ss = dt.getSeconds() // 为页面上的元素赋值 document.querySelector('#HH').innerHTML = padZero(HH) document.querySelector('#mm').innerHTML = padZero(mm) document.querySelector('#ss').innerHTML = padZero(ss) }, 1000) } // 补零函数 function padZero(n) { return n > 9 ? n : '0' + n }</script></body></html>","s":"原始代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#原始代码","p":849},{"i":855,"t":"创建正则表达式，分别来匹配 style 标签和 script 标签。 使用 fs 模块，读取需要处理的 HTML 文件。 自定义 resolveCSS 方法(拆解)，写入 index.css 文件。 自定义 resolveJS 方法(拆解)，写入 index.js 文件。 自定义 resolveHTML 方法(拆解)，写入 index.html 文件。","s":"分析","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#分析","p":849},{"i":857,"t":"const fs = require(\"fs\");const path = require(\"path\");//正则表达式const regStyle = /<style>[\\s\\S]*<\\/style>/;const regScript = /<script>[\\s\\S]*<\\/script>/;// \\s 表示空白字符，\\S标识非空白字符，*表示匹配任意次数","s":"正则表达式","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#正则表达式","p":849},{"i":859,"t":"...// 读取原始文件，将HTML代码以纯文本的方式读入fs.readFile( path.join(__dirname, \"../index.html\"), \"utf8\", function (err, dataStr) { // 读取失败 if (err) { return console.log(\"读取HTML失败!\"); } // 拆分 resolveCSS(dataStr); resolveJS(dataStr); resolveHTML(dataStr); });...","s":"读取原始 HTML 文件","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#读取原始-html-文件","p":849},{"i":861,"t":"function resolveCSS(htmlStr) { // 调用正则表达式匹配 const r1 = regStyle.exec(htmlStr); // 处理提取后的字符串，将标签去掉 const newCSS = r1[0].replace(\"<style>\", \"\").replace(\"</style>\", \"\"); fs.writeFile( path.join(__dirname, \"./clock/index.css\"), newCSS, function (err) { if (err) { return console.log(err.message); } console.log(\"写入css成功\"); } );}","s":"拆分CSS代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#拆分css代码","p":849},{"i":863,"t":"function resolveJS(htmlStr) { // 调用正则表达式匹配 const r1 = regScript.exec(htmlStr); // 处理提取后的字符串，将标签去掉 const newCSS = r1[0].replace(\"<script>\", \"\").replace(\"</script>\", \"\"); fs.writeFile( path.join(__dirname, \"./clock/index.js\"), newCSS, function (err) { if (err) { return console.log(err.message); } console.log(\"写入js成功\"); } );}","s":"拆分JS代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#拆分js代码","p":849},{"i":865,"t":"// 读取原始文件，将HTML代码以纯文本的方式读入function resolveHTML(htmlStr) { // 将原来的代码替换为链接 const newHTML = htmlStr .replace(regStyle, '<link rel=\"stylesheet\" href=\"./index.css\"/>') .replace(regScript, '<script src=\"./index.js\"/>'); fs.writeFile( path.join(__dirname, \"./clock/index.html\"), newHTML, function (err) { if (err) { return console.log(err.message); } console.log(\"写入html成功\"); } );}","s":"拆分HTML代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#拆分html代码","p":849},{"i":867,"t":"Details const fs = require(\"fs\");const { resolve } = require(\"path\");const path = require(\"path\");//正则表达式const regStyle = /<style>[\\s\\S]*<\\/style>/;const regScript = /<script>[\\s\\S]*<\\/script>/;// \\s 表示空白字符，\\S标识非空白字符，*表示匹配任意次数// 读取原始文件，将HTML代码以纯文本的方式读入fs.readFile( path.join(__dirname, \"/index.html\"), \"utf8\", function (err, dataStr) { // 读取失败 if (err) { return console.log(\"读取HTML失败!\"); } // 拆分 resolveCSS(dataStr); resolveJS(dataStr); resolveHTML(dataStr); });// 读取原始文件，将CSS代码以纯文本的方式读入function resolveCSS(htmlStr) { // 调用正则表达式匹配 const r1 = regStyle.exec(htmlStr); // exec 返回值是一个数组，数组的【0】是匹配好的结果 // 处理提取后的字符串，将标签去掉 const newCSS = r1[0].replace(\"<style>\", \"\").replace(\"</style>\", \"\"); fs.writeFile( path.join(__dirname, \"./clock/index.css\"), newCSS, function (err) { if (err) { return console.log(err.message); } console.log(\"写入css成功\"); } );}// 读取原始文件，将JS代码以纯文本的方式读入function resolveJS(htmlStr) { // 调用正则表达式匹配 const r1 = regScript.exec(htmlStr); // 处理提取后的字符串，将标签去掉 const newJS = r1[0].replace(\"<script>\", \"\").replace(\"</script>\", \"\"); fs.writeFile(path.join(__dirname, \"./clock/index.js\"), newJS, function (err) { if (err) { return console.log(err.message); } console.log(\"写入js成功\"); });}// 读取原始文件，将HTML代码以纯文本的方式读入function resolveHTML(htmlStr) { // 将原来的代码替换为链接 const newHTML = htmlStr .replace(regStyle, '<link rel=\"stylesheet\" href=\"./index.css\"/>') .replace(regScript, '<script src=\"./index.js\"/>'); fs.writeFile( path.join(__dirname, \"./clock/index.html\"), newHTML, function (err) { if (err) { return console.log(err.message); } console.log(\"写入html成功\"); } );}","s":"完整代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#完整代码","p":849},{"i":869,"t":"PS D:\\desk\\FrontEnd\\test\\8-11> node clock写入js成功写入css成功写入html成功","s":"控制台输出","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#控制台输出","p":849},{"i":871,"t":"运行 index.html :","s":"结果","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#结果","p":849},{"i":873,"t":"writeFile 方法只能创建文件，但是不能创建路径（文件夹） 重复调用 writeFile 时新内容会覆盖旧的内容。","s":"注意点","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample1","h":"#注意点","p":849},{"i":875,"t":"在前一个案例中，我们把一个单项目通过 Nodejs 拆分成了三个文件，现在我们需要通过 Nodejs 实现 clock 的后端。","s":"案例：时钟后端","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"","p":874},{"i":877,"t":"需要将文件存放路径作为每个资源请求的 URL 。 图示： 创建了一个文件夹，结构为： +根目录++clock |--index.html |--index.css |--index.js","s":"核心思路","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#核心思路","p":874},{"i":879,"t":"const fs = require(\"fs\");const path = require(\"path\");const http = require(\"http\");// 服务器创建const server = http.createServer();// 绑定 request 事件server.on(\"request\", function (req, res) { // 事件内容});// 启动服务器server.listen(80, () => { console.log(\"正在监听 127.0.0.1 地址\");});","s":"导入模块和服务器创建","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#导入模块和服务器创建","p":874},{"i":881,"t":"server.on(\"request\", function (req, res) { // 事件内容 // 获取客户端的 url 地址 const url = req.url; // 把请求的 url 地址映射为文件存放路径 // /clock/index.html // /clock/index.js // /clock/index.css const fpath = path.join(__dirname, url);});","s":"将资源请求url地址映射为文件的存放路径","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#将资源请求url地址映射为文件的存放路径","p":874},{"i":883,"t":"// 根据映射的文件路径读取文件内容 fs.readFile(fpath, \"utf8\", function (err, dataStr) { // 读取失败，响应错误消息 if (err) { return res.end(\"404!\"); } //成功之后返回文件项目内容 res.return(dataStr); });","s":"读取文件内容并响应到客户端","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#读取文件内容并响应到客户端","p":874},{"i":885,"t":"node clockweb 浏览器打开 127.0.0.1 : 默认情况： 访问 /index.html: 在浏览器调试器中打开 网络 选项卡，刷新页面可以看到被请求的文件：","s":"启动服务器","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#启动服务器","p":874},{"i":887,"t":"在没有写具体路径时，访问根页面展示 404 ，因此我们希望直接写 index 可以直接访问页面。 let fpath = \"\"; if (url === \"/\") { fpath = path.join(__dirname, \"./clock/index.html\"); } else { fpath = path.join(__dirname, \"./clock\", url); }","s":"优化资源请求路径","u":"/docs/BackEnd/Node.js/NodeBasic/NodeExample2","h":"#优化资源请求路径","p":874},{"i":890,"t":"HTTP 模块能够创建 web 服务器，提供 web 服务。 主要方法： http.createServer()","s":"模块介绍","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#模块介绍","p":888},{"i":892,"t":"常见的服务器软件： IIS 、 Apache 等，安装了这些软件的电脑就能成为一个 web 服务器。Node.js 就能够为我们前端开发者创造一台服务器环境。","s":"模块的作用","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#模块的作用","p":888},{"i":895,"t":"互联网上每台计算机的唯一地址。只有在知道对方电脑的IP地址的情况下才能进行数据通信。 IP地址详细解析","s":"IP地址","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#ip地址","p":888},{"i":897,"t":"可以将 IP地址 比喻成身份证号，那么域名就可以比作 姓名 ，域名更加便于记忆。 域名和服务器详情解析","s":"域名和服务器","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#域名和服务器","p":888},{"i":900,"t":"同样是使用 require 导入。 const http=require('http')","s":"模块导入","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#模块导入","p":888},{"i":902,"t":"const server = http.createServer()","s":"创建实例","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#创建实例","p":888},{"i":904,"t":"// .on 方法可以绑定 request 事件server.on('request',(req ,res)=>{ // 监听。只要有客户端来请求服务器，就会触发request事件，从而调用这个事件函数 console.log('Someone visit our web server');})","s":"绑定 request 事件","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#绑定-request-事件","p":888},{"i":906,"t":"// 调用 server.listen(端口号,cb回调)方法，即可启动web服务器// 这里运行在 80 端口server.listen(80,()=>{ console.log('http server running at http://127.0.0.1');})","s":"启动服务器","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#启动服务器","p":888},{"i":908,"t":"// .on 方法可以绑定 request 事件server.on('request',(req ,res)=>{ // req是请求对象，包含了和客户端相关的数据和属性 // req.url 是客户端的 URL 地址 // req.method 是客户端的请求类型 const str = 'Your request url is ${req.url},and request method is ${req.method}'; console.log(str);}) 创建脚本 server1.js ，执行脚本。 server1.js const http = require(\"http\");const server = http.createServer();// req是请求对象，包含了与客户端相关的属性和数据server.on(\"request\", (req) => { // req.url 是客户端的 URL 地址 const url = req.url; // req.method 是客户端的请求方式 const method = req.method; const str = \"Your request url is ${url},and request method is ${method}\"; console.log(str);});server.listen(80, () => { console.log(\"server running at http://127.0.0.1\");}); node server1 终端运行结果： server running at http://127.0.0.1 然后打开浏览器访问后，终端输出： Your request url is / ,and request method is GET 在浏览器输入框输入 http://127.0.0.1/index.html ，终端运行结果： Your request url is /index.html ,and request method is GET","s":"req 请求对象","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#req-请求对象","p":888},{"i":910,"t":"如果在 request 事件中，如果想访问服务器相关的数据和属性，可以采取下面的方式： // .on 方法可以绑定 request 事件server.on('request',(req ,res)=>{ // res 是响应对象，它包含了与服务器相关的数据和属性，例如： const str = 'Your request url is ${req.url},and request method is ${req.method}'; // res.end()方法，向客户端发送指定的内容,结束此次过程 res.end(str);}) 修改上一节的代码： server1.js const http = require(\"http\");const server = http.createServer();// req是请求对象，包含了与客户端相关的属性和数据server.on(\"request\", (req,res) => { // req.url 是客户端的 URL 地址 const url = req.url; // req.method 是客户端的请求方式 const method = req.method; const str = `Your request url is ${url} ,and request method is ${method}`; console.log(str); // 调用 res 响应一些消息，将 str 返回给客户端 res.end(str);});server.listen(80, () => { console.log(\"server running at http://127.0.0.1\");}); 执行，这时候客户端就能拿到返回结果了： server running at http://127.0.0.1Your request url is /index.html ,and request method is GETYour request url is /favicon.ico ,and request method is GET","s":"res 响应对象","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#res-响应对象","p":888},{"i":912,"t":"当使用res.end(str);发送中文内容时，会发生乱码，因此需要设置响应的值： server.on(\"request\", (req,res) => { // req.url 是客户端的 URL 地址 const url = req.url; // req.method 是客户端的请求方式 const method = req.method; const str = `Your request url is ${url} ,and request method is ${method}`; // 设置响应头 res.setHeader('content-Type','text/html;charset=utf-8'); // 调用 res 响应一些消息，将 str 返回给客户端 res.end(str);});","s":"中文乱码问题","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#中文乱码问题","p":888},{"i":914,"t":"获取请求的 URL 地址 设置默认返回内容，404 判断是否为 / 或者 /index.html 首页 判断是否为 /about.html 页面（其他页面） 防止中文乱码 使用 res.end() 将内容相应给客户端 不同 URL 响应不同的 html 内容 const http = require(\"http\");const server = http.createServer();// req是请求对象，包含了与客户端相关的属性和数据server.on(\"request\", (req, res) => { const url = req.url; let content = \"<h1>404 Not Found</h1>\"; if (url === \"/\" || url === \"/index.html\") { content = \"<h1>首页</h1>\"; } else if (url === \"/about.html\") { content = \"<h1>关于</h1>\"; } res.setHeader(\"content-Type\", \"text/html; charset=utf-8\"); res.end(content);});server.listen(80, () => { console.log(\"server running at http://127.0.0.1\");}); 访问 /和/index.html : 访问 /about.html: 访问不存在的页面：","s":"不同 URL 响应不同的 html 内容","u":"/docs/BackEnd/Node.js/NodeBasic/NodeHttp","h":"#不同-url-响应不同的-html-内容","p":888},{"i":917,"t":"浏览器中 JS 运行时组成：","s":"浏览器中的 JS","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#浏览器中的-js","p":915},{"i":919,"t":"可以 Node.js 就是为了使用 JavaScript 做后端开发而创建的后端环境。","s":"JS 是否可以做后端开发","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#js-是否可以做后端开发","p":915},{"i":921,"t":"和浏览器相似，Nodejs 的运行环境也由 V8 引擎和内置 API 组成。 当然，作为后端环境，Nodejs 无法调用 DOM 和 BOM 等浏览器 API。","s":"Node.js 运行环境","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#nodejs-运行环境","p":915},{"i":923,"t":"使用 Express框架 构建 Web 应用（类似 Java Web）。 使用 Electron框架 构建跨平台桌面应用。 基于 Restify 框架 快速创建 API 接口。 读写、操作数据库。","s":"它能做什么？","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#它能做什么","p":915},{"i":925,"t":"JS 基础语法 Nodejs 内置 API 第三方框架","s":"学习路径","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#学习路径","p":915},{"i":927,"t":"参考之前的文章 Nodejs安装和验证","s":"安装 Nodejs","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs1","h":"#安装-nodejs","p":915},{"i":930,"t":"打开终端 输入 node 要执行的 js 文件的路径 node app.js 在这里创建一个文件名为 api.js 的 Node 文件。 书写下面的代码内容： console.log(\"Hello Node.js\"); 打开 PowerShell 执行： node app.js 终端中会打印我们要 console 的内容：","s":"在Node环境中执行 JS 代码","u":"/docs/BackEnd/Node.js/NodeBasic/Nodejs2","h":"#在node环境中执行-js-代码","p":928},{"i":932,"t":"fs 模块是 Node 提供的用来操作文件的模块。用来满足对文件操作的需求。 fs.readFile()方法，读取指定文件的内容。 fs.writeFile() 方法，向指定文件写入内容。","s":"fs 文件系统模块","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"","p":931},{"i":934,"t":"fs 文件模块是 Node 自带的模块，因此只要导入模块即可。 const fs=require('fs');","s":"导入","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#导入","p":931},{"i":937,"t":"fs.readFile(path [, options],callback); 参数解读： path : 必选参数。字符串，标明文件的路径。 options : 可选参数。标识编码格式。 callback : 必选参数，文件读取完成后要执行的回调函数。","s":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#语法格式","p":931},{"i":939,"t":"使用 utf8 编码格式读取指定文件的内容，并打印 err 和 dataStr 的值。 const fs=require('fs');fs.readFile('./files/11.txt','utf8',function(err,dataStr){ // 无论是否读取成功都会执行回调函数，这整个函数作为参数 console.log(err); console.log('----');// 分割线 console.log(dataStr);// 读取成功的结果}) 用 VScode 创建一个工程。 创建 api.js 文件，内容如下： const fs = require(\"fs\");fs.readFile(\"11.txt\", \"utf8\", function (err, dataStr) { // 无论是否读取成功都会执行回调函数，这整个函数作为参数 console.log(err); console.log(\"----\"); // 分割线 console.log(dataStr); // 读取成功的结果}); 在同层级目录下创建文件 11.txt : 1111 在终端执行这段代码： 可以见得，该方法成功读取了这个文本文件，并返回了正确的值。 null----1111 因为没有发生错误，所以 err 参数值为 null 。 我们不妨试一下，让这段代码读取不存在的文件。这次应该会有 err 报错。 const fs = require(\"fs\");fs.readFile(\"no.txt\", \"utf8\", function (err, dataStr) { // 无论是否读取成功都会执行回调函数，这整个函数作为参数 console.log(err); console.log(\"----\"); // 分割线 console.log(dataStr); // 读取成功的结果}); 正如预期的，返回了错误对象以及不存在数据值。","s":"示例代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#示例代码","p":931},{"i":941,"t":"const fs = require('fs');fs.readFile('11.txt', 'utf8', function (err, dataStr) { if (err) { // 如果读取失败返回错误信息 console.log(\"读取失败\"+ err.message); } else { // 如果读取成功返回数据 console.log(\"读取成功\" + dataStr); }}) 成功状态执行结果： 读取成功1111 失败返回结果： 读取失败ENOENT: no such file or directory, open 'D:\\desk\\FrontEnd\\test\\8-11\\111.txt'","s":"判断文件是否读取成功","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#判断文件是否读取成功","p":931},{"i":944,"t":"fs.readFile(path , data , [, options], callback); 参数解读： path : 必选参数。字符串，标明文件的路径。 data : 必选参数，写入的内容。 options : 可选参数。标识编码格式。 callback : 必选参数，文件读取完成后要执行的回调函数。","s":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#语法格式-1","p":931},{"i":946,"t":"const fs = require(\"fs\");fs.writeFile(\"22.txt\", \"HelloWorld\", \"utf8\", function (err) { console.log(err);}); 写入成功，返回值： null 文件写入： 向 F盘 写入数据会导致失败，我们尝试一下： writefail.js const fs = require(\"fs\");fs.writeFile(\"f:/11.txt\", \"HelloWorld\", \"utf8\", function (err) { console.log(err);}); 执行： node writefail.js 结果： [Error: ENOENT: no such file or directory, open 'f:\\11.txt'] { errno: -4058, code: 'ENOENT', syscall: 'open', path: 'f:\\\\11.txt'}","s":"示例代码","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#示例代码-1","p":931},{"i":948,"t":"fs.writeFile(\"f:/11.txt\", \"HelloWorld\", \"utf8\", function (err) { if (err) { return console.log(\"写入失败\" + err.message); } console.log(\"写入成功\");}); 返回结果同样是写入失败。","s":"判断文件是否写入成功","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#判断文件是否写入成功","p":931},{"i":950,"t":"使用 fs 系统模块，将 成绩.txt 中的考试数据整理到 成绩-ok.txt 中。 成绩.txt 小明=90 小红=98 小绿=89 小兰=90 希望整理完毕后： 成绩-ok.txt 小明：90小红：98小绿：89小兰：90 步骤分析 导入 fs 模块。 使用 readFile 方法读取文件。 判断读取成功与否。 处理成功读取的数据。 处理完的数据使用 writeFile 方法写入新文件。 node 代码： const fs = require(\"fs\");fs.readFile(\"成绩.txt\", \"utf8\", function (err, dataStr) { // 判断是否读取成功 if (err) { return console.log(\"抱歉，数据请求失败 \" + err.message); } // 读取成功 // console.log(\"获得成绩列表\" + dataStr); // 分割数据，使用 split 按照空格为分隔符划分 const arrOld = dataStr.split(\" \"); console.log(\"分割后的数组 \" + arrOld); // 创建新的数组 const arrNew = []; // 执行循环遍历数组，替换 = 为 ： arrOld.forEach((item) => { arrNew.push(item.replace(\"=\", \":\")); // push 操作加入新数组中，并将每个元素的 = 替换成 ： }); console.log(\"替换后的数组 \" + arrNew); // 合并成新数组 const resStr = arrNew.join(\"\\r\\n\"); //在每个数组元素之间添加换行符号 console.log(\"处理后的字符串\\n\" + resStr); fs.writeFile(\"成绩-ok.txt\", resStr, function (err) { if (err) { return console.log(\"写入错误\"); } console.log(\"写入成功\"); });}); 要点： readFile 和 writeFile 的使用。 字符串 split 操作。 replace 操作。 控制台输出结果： 分割后的数组 小明=90,小红=98,小绿=89,小兰=90替换后的数组 小明:90,小红:98,小绿:89,小兰:90处理后的字符串小明:90小红:98小绿:89小兰:90写入成功 写入结果： 成绩-ok.txt 小明:90小红:98小绿:89小兰:90","s":"练习-1","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#练习-1","p":931},{"i":953,"t":"在操作文件时候，如果操作的路径是 ./ 或者 ../ 等前缀的相对路径的时候，很容易出现动态路径的拼接错误。在执行代码的时候 node 是通过 node 脚本所处的目录动态拼接的。 const fs = require('fs');fs.readFile('./files/1.txt', 'utf8', function (err, dataStr) { if (err) { // 如果读取失败返回错误信息 console.log(\"读取失败\"+ err.message); } else { // 如果读取成功返回数据 console.log(\"读取成功\" + dataStr); }}) 但是如果你此时 cd 了上一层的目录，这时你的 node 脚本会按照你 cd 的目录作为前缀拼接，很遗憾，上一层目录是不能访问到这个 file 文件夹的，文件会读取失败。","s":"问题产生","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#问题产生","p":931},{"i":955,"t":"结果这个问题的第一个方法就是提供一个完整的文件路径。但是移植性差，不易于维护。 第二个方法：使用 __dirname 访问路径。 我们测试一下 __dirname 返回结果： path.js console.log(__dirname); node path 控制台返回结果： D:\\desk\\FrontEnd\\test\\8-11 我们可以用它解决上面所说到的问题： const fs = require('fs');fs.readFile(__dirname+'files/1.txt', 'utf8', function (err, dataStr) { if (err) { // 如果读取失败返回错误信息 console.log(\"读取失败\"+ err.message); } else { // 如果读取成功返回数据 console.log(\"读取成功\" + dataStr); }})","s":"问题解决","u":"/docs/BackEnd/Node.js/NodeBasic/NodejsFs","h":"#问题解决","p":931},{"i":958,"t":"模块化的规范是对代码进行模块化拆分和组合时，需要遵循的规则。 使用什么语法来引用模块。 在模块中使用什么语法来向外暴露成员。 好处：方便模块调用，规范代码。","s":"模块化规范","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#模块化规范","p":956},{"i":960,"t":"根据来源不同分为： 内置模块（如 fs、path、http ） 自定义模块 （用户创建的 .js 文件，就是自定义模块） 第三方模块，第三方开发的，使用前需要先下载","s":"模块分类","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#模块分类","p":956},{"i":962,"t":"使用 require 方法加载内置的模块。 加载内置模块 const fs = require('fs') 加载用户自定义的模块(需要提供路径) const custom = require('./custom.js') 加载第三方模块 const moment = require ('moment')","s":"加载模块","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#加载模块","p":956},{"i":964,"t":"我们创建一个自定义模块，在另一个 js 文件中调用这个模块。 模块 m1.js console.log(\"调用了m1这个模块\"); 在另一个文件中调用这个模块。 usem1.js const m1 = require(\"./m1.js\"); 执行 usem1.js ： node usem1.js 控制台输出： 调用了m1这个模块","s":"调用举例","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#调用举例","p":956},{"i":966,"t":"在自定义模块中，定义的变量和方法只能在模块内被访问，这种模块级的限制，叫做模块作用域。 防止全局变量污染举例：在浏览器环境中有如下代码： index.html ...<script src=\"sc1.js\"></script><script src=\"sc2.js\"></script><script> console.log(username);</script> sc1.js var username = '张三' sc2.js var username = '李四' 最终输出: 李四 而实际上 sc1.js 中的代码并没有生效，这就是因为同名，变量被污染了。Nodejs 中的模块作用域能很好解决这一问题。","s":"作用域","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#作用域","p":956},{"i":969,"t":"向外共享模块作用域的成员。 创建文件: module.js console.log(module); 运行文件，控制台输出: Module { id: '.', path: 'D:\\\\desk\\\\FrontEnd\\\\test\\\\8-11', exports: {}, filename: 'D:\\\\desk\\\\FrontEnd\\\\test\\\\8-11\\\\module.js', loaded: false, children: [], paths: [ 'D:\\\\desk\\\\FrontEnd\\\\test\\\\8-11\\\\node_modules', 'D:\\\\desk\\\\FrontEnd\\\\test\\\\node_modules', 'D:\\\\desk\\\\FrontEnd\\\\node_modules', 'D:\\\\desk\\\\node_modules', 'D:\\\\node_modules' ]} 这是默认的成员打印，我们如果希望向外共享成员，就需要利用 exports 属性。","s":"介绍","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#介绍","p":956},{"i":971,"t":"module.export : 在自定义模块中向外共享成员。 模块 m1.js const age=20;module.exports.username = \"张三\";module.exports.sayHello = function () { console.log(\"Hello World\");}; tip 在上面的代码中， age 成员没有通过 module.exports 向外导出，因此 age 是这个模块的私有成员，外部访问不到。 usem1.js const m1 = require(\"./m1.js\");console.log(m1); 执行代码 usem1.js : { username: '张三', sayHello: [Function (anonymous)] }","s":"共享成员","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#共享成员","p":956},{"i":973,"t":"使用 require 方法导入对象时，导入的结果永远以 module.exports 指向的对象为准。 模块 m1.js module.exports.username = \"张三\";module.exports.sayHello = function () { console.log(\"Hello World\");};module.exports={ nickname=\"小黑\", sayHi(){ console.log(\"你好\"); }} 在上面的代码中 module.exports 虽然在前两行指向了 username 和 sayHello 成员，但是在下面 module.exports 重新指向了两个成员，覆盖了之前的成员。因此只有最后这次指向是生效的。","s":"注意","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#注意","p":956},{"i":975,"t":"为了简化 module.exports 这个对象的写法，Node 提供了 exports 对象。默认情况下他们指向的是同一个对象，最终共享的结果还是 module.exports 指向的为准。 console.log(exports);console.log(module.exports);console.log(exports === module.exports); 打印结果： true","s":"exports 对象","u":"/docs/BackEnd/Node.js/NodeBasic/NodeM","h":"#exports-对象","p":956},{"i":978,"t":"path 模块是 node 为我们提供的用来处理路径的模块。满足用户对路径处理的需求。 path.join() 方法，将多个路径片段拼接成一个完成的路径字符串。 path.basename() ，将文件的名字从路径中解析出来。","s":"什么是 path 路径模块","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#什么是-path-路径模块","p":976},{"i":980,"t":"const path = require ('path');","s":"模块导入","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#模块导入","p":976},{"i":982,"t":"使用 path.join() 方法，将多个路径片段拼接成一个完成的路径字符串。","s":"路径拼接","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#路径拼接","p":976},{"i":984,"t":"path.join([...paths]);// 参数：传入任意多个路径片段 返回值：拼接好的路径字符串。","s":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#语法格式","p":976},{"i":986,"t":"const path = require(\"path\");const pathStr = path.join(\"/a\", \"/b\", \"/c\", \"../\", \"./d\", \"e\");console.log(pathStr); 控制台输出： \\a\\b\\d\\e tip 这里存在一个参数为 ../ ，出现这个参数后将会把前面的一个参数路径抵消，也就是在本例子中 /c 被抵消掉了。 也可以这样使用： const path = require(\"path\");const pathStr = path.join(__dirname,\"files/1.txt\");console.log(pathStr);","s":"代码示例","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#代码示例","p":976},{"i":989,"t":"path.basename(path[,ext]); 参数： path 必选，文件的路径。 ext 可选，文件的扩展名。指定扩展名后将不会显示扩展名了。","s":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#语法格式-1","p":976},{"i":991,"t":"const fpath = '/a/b/c/index.html';var fullName = path.basename(fpath);console.log(fullName); // 输出 index.htmlvar nameWidthExt = path.basename(fpath,'.html');console.log(nameWidthExt); // 输出 index","s":"代码示例","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#代码示例-1","p":976},{"i":994,"t":"node 提供了 path.extname() 方法，可以获取文件名中的扩展名部分。 path.extname(path); 返回值：string","s":"语法格式","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#语法格式-2","p":976},{"i":996,"t":"const fpath = '/a/b/c/index.html'; // 路径字符串const fext = path.extname(fpath);console.log(fext); 控制台返回值： .html","s":"代码示例","u":"/docs/BackEnd/Node.js/NodeBasic/Nodepath","h":"#代码示例-2","p":976},{"i":999,"t":"包括以下内容： Vue.js JavaScript React.js css Nodejs 微信小程序 待学的东西很多，不妨慢慢来。","s":"存放前端学习资料的地方","u":"/docs/front","h":"#存放前端学习资料的地方","p":997},{"i":1001,"t":"前端学习路线","s":"前端学习路线","u":"/docs/front","h":"#前端学习路线","p":997},{"i":1004,"t":"前面完成了所有的配置工作。从这里开始我们就开始要些东西啦！但是我们得先把原来的东西删除。 首先删除 docs\\tutorial-basics 文件夹和 docs\\tutorial-extras 文件夹。 但是请保留 docs\\intro.md 文件。这个文件是必须的，你可以将里面的内容改成你的内容，比如介绍你自己。","s":"删除自带的文件","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#删除自带的文件","p":1002},{"i":1006,"t":"在 docs 文件夹创建一个文件夹，比如你希望放置关于 Java 的知识，就可以创建 Java 文件夹。(在这个文件夹下面还可以接着创建文件夹)。 接着，在 Java 文件夹上面右键-新建文件，命名为 01-begin.md ，建议用英文命名，这将决定你的连接的长度。 格式头 Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。它有着 所写即所得 的特点，它使用一种 格式头 来为一篇文档决定关键信息，在恐龙中格式头如下： ---id: Java-in # IDtitle: Java入门 # 标题tags: # 标签 - 演示 - 开始上手--- 然后你就可以快乐的书写内容啦！ 应该使用 Markdown 语法进行书写内容，相关语法不赘述，请参考：恐龙 Markdown 语法 你可以参考 本篇笔记的 Markdown 源文件。 也可以参考下面的示例： ----title: 创建新一篇文档或博客 # 文章标题date: 2022-07-24 # 文章修改时间authors: Chengzihan # 作者昵称tags: [React,Docusaurus] # Tag标签---## 来自 Docusaurus 的问候你准备好为你的开源项目创建文档网站了吗？## 标题会显示在右上方的目录这样，你的用户不用通读全文就可以知晓这篇文章的主要内容。## 目录默认只包括 h2 和 h3 标题。你可以在每个文档或主题配置中设置目录包含的标题层级。标题会保持恰当的间距，让文章看起来层级清晰。- 列表将帮助你- 阐述让用户牢记的关键点 - 你还可以将其嵌套 - 很多次## 自定义标题 ID {#custom-id}你可以用 `{#custom-id}` 语法自定义标题 ID。 显示结果如下：","s":"创建第一篇文档","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#创建第一篇文档","p":1002},{"i":1008,"t":"博客和文档类似，但是目的不同，博客每一篇单独存在，不存在文件层次关系。它的显示结构如下图所示： 删除掉 blog 文件夹内除了 authors.yml 外的 所有文件。","s":"创建你的第一篇博客","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#创建你的第一篇博客","p":1002},{"i":1010,"t":"在 authors.yml 中填写你的个人信息，原文件的记录如下： 修改前 authors.yml endi: name: Endilie Yacop Sucipto title: Maintainer of Docusaurus url: https://github.com/endiliey image_url: https://github.com/endiliey.pngyangshun: name: Yangshun Tay title: Front End Engineer @ Facebook url: https://github.com/yangshun image_url: https://github.com/yangshun.pngslorber: name: Sébastien Lorber title: Docusaurus maintainer url: https://sebastienlorber.com image_url: https://github.com/slorber.png 而你在你只有一个人时，只需要保留第一项，修改如下： 修改后 authors.yml YourName: name: Cheng Zihan title: A student. url: https://github.com/endiliey # Github 仓库地址 image_url: https://github.com/endiliey.png # 头像连接","s":"创建你的作者信息","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#创建你的作者信息","p":1002},{"i":1012,"t":"你的博客必须以 时间-名称.md 构成，名称最好是英文。 例如，一个很好的的文件的例子为： 2022-7-12-MyBlog.md 。 这个文件的格式头为： ----slug: first-blog-posttitle: 认识Vue框架authors: Chengzihantags: [Vuejs]--- 这个文件的内用也按照前面的来写。","s":"新建博客","u":"/docs/FrontEnd/Docus/CreateNewBlog","h":"#新建博客","p":1002},{"i":1015,"t":"Docusaurus 对配置文件将站点信息集中到一处。通过调用API的方式决定页面的结构（如导航栏、页脚、Logo、插件配置等）。悉心维护的 docusaurus.config.js 能够让你在个性化站点的同时，帮助你注于文档本身。","s":"为什么存在配置文件","u":"/docs/FrontEnd/Docus/docs-config","h":"#为什么存在配置文件","p":1013},{"i":1017,"t":"我为你翻译和注释了这个文件。 const lightCodeTheme = require('prism-react-renderer/themes/github'); // 浅色代码插件-主题githubconst darkCodeTheme = require('prism-react-renderer/themes/dracula'); // 深色主题插件/** @type {import('@docusaurus/types').Config} */ const config = { // 配置常量 title: 'My Site', // 网站的标题 tagline: 'Dinosaurs are cool', // 横幅副标题 url: 'https://your-docusaurus-test-site.com', // 当网站上线后的地址 baseUrl: '/', // 默认路径 onBrokenLinks: 'throw', // 处理损坏的链接方式-抛出 onBrokenMarkdownLinks: 'warn', // 处理损坏的md链接-警告 favicon: 'img/favicon.ico', // logo地址 // GitHub pages deployment config. Github Pages部署配置 // If you aren't using GitHub pages, you don't need these. 如果你不需要Github Pages，那么你不需要它 organizationName: 'facebook', // Usually your GitHub org/user name. Github用户名 projectName: 'docusaurus', // Usually your repo name. 仓库名 // Even if you don't use internalization, you can use this field to set useful // metadata like html lang. For example, if your site is Chinese, you may want // to replace \"en\" with \"zh-Hans\". i18n: { defaultLocale: 'zh-Hans', // 设置语言 zh-Hans是中文 locales: ['zh-Hans'], }, presets: [ [ 'classic', // 主题，默认 /** @type {import('@docusaurus/preset-classic').Options} */ ({ docs: { sidebarPath: require.resolve('./sidebars.js'), // Please change this to your repo. // Remove this to remove the \"edit this page\" links. // “编辑此页”地址 editUrl: 'https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/', }, blog: { showReadingTime: true, // Please change this to your repo. // Remove this to remove the \"edit this page\" links. // “编辑此页”地址 editUrl: 'https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/', }, theme: { customCss: require.resolve('./src/css/custom.css'), }, }), ], ], themeConfig: /** @type {import('@docusaurus/preset-classic').ThemeConfig} */ ({ navbar: { title: 'My Site', // 导航栏文字 logo: { alt: 'My Site Logo', src: 'img/logo.svg', //导航栏LOGO }, items: [ //导航栏选项 { type: 'doc', docId: 'intro', position: 'left', label: 'Tutorial', }, {to: '/blog', label: 'Blog', position: 'left'}, { href: 'https://github.com/facebook/docusaurus', label: 'GitHub', position: 'right', }, ], }, footer: { //页脚选项 style: 'dark', links: [ { title: 'Docs', items: [ { label: 'Tutorial', to: '/docs/intro', }, ], }, { title: 'Community', items: [ { label: 'Stack Overflow', href: 'https://stackoverflow.com/questions/tagged/docusaurus', }, { label: 'Discord', href: 'https://discordapp.com/invite/docusaurus', }, { label: 'Twitter', href: 'https://twitter.com/docusaurus', }, ], }, { title: 'More', items: [ { label: 'Blog', to: '/blog', }, { label: 'GitHub', href: 'https://github.com/facebook/docusaurus', }, ], }, ], //底部版权声明，支持 html语法 copyright: `Copyright © ${new Date().getFullYear()} My Project, Inc. Built with Docusaurus.`, }, prism: { theme: lightCodeTheme, darkTheme: darkCodeTheme, }, }),};module.exports = config;","s":"观察默认的配置代码","u":"/docs/FrontEnd/Docus/docs-config","h":"#观察默认的配置代码","p":1013},{"i":1020,"t":"必填。网站标题。会用于页面元数据中，以及浏览器选项卡标题。 类型：String module.exports = { title: '我的网站',}; 他将在以下的界面生效。","s":"title","u":"/docs/FrontEnd/Docus/docs-config","h":"#title","p":1013},{"i":1022,"t":"必填。网站网址。 你可以把它看作是顶级主机名。 举个例子，<https://facebook.github.io/metro/> 的 URL 是 <https://facebook.github.io>，而 <https://docusaurus.io> 的 URL 就是它本身。 这个字段和 baseUrl 字段相关。 类型：string module.exports = { url: 'https://docusaurus.io',};","s":"url","u":"/docs/FrontEnd/Docus/docs-config","h":"#url","p":1013},{"i":1024,"t":"站点的 base URL。 可以被看作是主机名后的路径。 比如，<https://facebook.github.io/metro/> 的 base URL 是 /metro/。 对于没有路径的网址，baseUrl 应设置为 /。 这个字段和 url 字段相关。 开头和末尾始终要包含斜杠。 module.exports = { baseUrl: '/',}; 范例 在本条设置中，有以下的参考： 如果最终发布在 Github Pages 个人主页 ，即你的仓库名为 你的Github ID.github.io ,而你的连接最终生成为：https://mysite.github.io，那么你的 baseUrl 应该设置为：baseUrl: '/'。 如果最终发布在 Github Pages ，即你的仓库名为 mysite ,而你的连接最终生成为：https://mysite.github.io/mysite/，那么你的 baseUrl 应该设置为：baseUrl: '/mysite/',。 如果最终发布在 Netlify ，而你的连接最终生成为： https://mysite.netlify.app ，那么你的 baseUrl 应该设置为：baseUrl: '/'。 上述信息将在你设置后生效，不再赘述，参考官方API。","s":"baseUrl","u":"/docs/FrontEnd/Docus/docs-config","h":"#baseurl","p":1013},{"i":1027,"t":"你的网站图标的路径；必须是可以用于链接 href 的 URL。 比如，如果你的图标位于 static/img/favicon.ico： module.exports = { favicon: '/img/favicon.ico',}; 我们把这个图标设置为： 因此我们填写这个字段如下： module.exports = { favicon: 'https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/coding.png',}; 它将在下面的地方生效：","s":"favicon","u":"/docs/FrontEnd/Docus/docs-config","h":"#favicon","p":1013},{"i":1029,"t":"用于对应你的语言，默认为 en 英文，中文为 zh-Hans 。 i18n: { defaultLocale: 'zh-Hans', locales: ['zh-Hans'], },","s":"i18n","u":"/docs/FrontEnd/Docus/docs-config","h":"#i18n","p":1013},{"i":1031,"t":"网站标语。 module.exports = { tagline: '欢迎你来到我的网站！~',}; 实现效果如下：","s":"tagline","u":"/docs/FrontEnd/Docus/docs-config","h":"#tagline","p":1013},{"i":1033,"t":"你的 Github 用户名。 module.exports = { // 比如我的用户名为 inannan423 organizationName: 'inannan423',};","s":"organizationName","u":"/docs/FrontEnd/Docus/docs-config","h":"#organizationname","p":1013},{"i":1035,"t":"你的代码将放在哪个仓库。 module.exports = { projectName: 'docusaurus',};","s":"projectName","u":"/docs/FrontEnd/Docus/docs-config","h":"#projectname","p":1013},{"i":1037,"t":"主题配置对象，用于自定义网站中诸如导航栏和页脚的组件。使用下面的配置。 themeConfig: /** @type {import('@docusaurus/preset-classic').ThemeConfig} */ ({ navbar: { title: '我的网站', logo: { alt: 'My Site Logo', src: 'https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/coding.png', }, items: [ { type: 'doc', docId: 'intro', position: 'left', label: '我的笔记', }, {to: '/blog', label: '博客', position: 'left'}, { href: 'https://github.com/facebook/docusaurus', label: 'GitHub', position: 'right', }, ], }, footer: { style: 'dark', links: [ { title: '文档', items: [ { label: '我的笔记', to: '/docs/intro', }, ], }, { title: '社区', items: [ { label: 'Stack Overflow', href: 'https://stackoverflow.com/questions/tagged/docusaurus', }, { label: 'Discord', href: 'https://discordapp.com/invite/docusaurus', }, { label: 'Twitter', href: 'https://twitter.com/docusaurus', }, ], }, { title: '更多', items: [ { label: 'Blog', to: '/blog', }, { label: 'GitHub', href: 'https://github.com/facebook/docusaurus', }, ], }, ], copyright: `Copyright © ${new Date().getFullYear()} My Project, Inc. Built with Docusaurus.`, }, prism: { theme: lightCodeTheme, darkTheme: darkCodeTheme, }, }), 效果如下：","s":"themeConfig","u":"/docs/FrontEnd/Docus/docs-config","h":"#themeconfig","p":1013},{"i":1039,"t":"用于填写 点击编辑 标签的链接地址。 presets: [ [ 'classic', /** @type {import('@docusaurus/preset-classic').Options} */ ({ docs: { sidebarPath: require.resolve('./sidebars.js'), // Please change this to your repo. // Remove this to remove the \"edit this page\" links. editUrl: 'https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/', }, blog: { showReadingTime: true, // Please change this to your repo. // Remove this to remove the \"edit this page\" links. editUrl: 'https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/', }, theme: { customCss: require.resolve('./src/css/custom.css'), }, }), ], ],","s":"presets","u":"/docs/FrontEnd/Docus/docs-config","h":"#presets","p":1013},{"i":1042,"t":"静态网站是相对于动态网站而言的，动态网站具有实时性强、数据交互强等特点，但是需要部署后端和服务器的成本，但是对于不需要这些需求的网站，静态网站就可以完成。一个Web前端开发的大作业就是一个静态网站。但是，某些网站有着相同的需求，比如文档站、博客站、官网等。那么能不能把这些需求抽离出来，创造一个工具，能够让开发者通过这个工具就快速生成网站呢？因此静态网站生成器诞生了。以搭建博客为例，我们都需要它能够解析文本，能够生成目录，因此，前端界根据此需求推出了静态网站生成器。又根据现有的最流行技术，创造了不同的生成器。 常见的静态网站生成器有： vuepress，基于vue.js构建，支持文档站、博客站等功能。同时有丰富的插件生态和主题，在国内很大众。 Hugo,基于Go语言的生成器，非常流行，烂大街了，且不好看。 WordPress，更大型的类容管理网站生成工具，十分流行，但不好看。 Docusaurus，基于React.js构建，自有功能比vuepress更加丰富，而且好看，在国内小众。 我之前使用过Vuepress搭建网站，其实我的旧站已经被我改的自认为很好看了哈哈哈。但是我为什么选择了Docusaurus呢？其实，主要是因为它好看并且比较小众不烂大街，另外，它的热更新更加强大。 低代码平台 可能你看到基于React.js构建的字眼就慌了，但是其实你并不需要去掌握React，Docusaurus的高度达到了在你没有掌握这个技术的基础上能够让你从它的文档出发，调用API搭建让你满意的网站，这就是低代码工具的意义。","s":"简介","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#简介","p":1040},{"i":1045,"t":"Docusaurus要求您的电脑配置有Node.js v16.14 或以上版本，如果你没有安装Nodejs，请参考安装Node.js和npm。 然后打开cmd检查安装情况： node -vnpm -v 如果呈现了v16.14以上版本，就说明Node.js部署好了。","s":"安装或检查Node.js","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#安装或检查nodejs","p":1040},{"i":1047,"t":"使用命令行工具可以帮助你快速简单地安装 Docusaurus 并搭建网站框架。新建一个空文件夹并cd这个文件夹，执行下面的指令，它会创建一个包含模板文件的新目录。（操作提示，在文件夹空白处按住上档键Shift和鼠标右键，打开PowerShell窗口，并且请准备好Ladder）。 npm init docusaurus 接着，根据命令窗口提示，输入信息，创建项目。 选择classic。 如果你不想使用TypeScript作为脚本语言，请输入N。 选择npm为包管理器。 初始化项目需要一段时间。 安装完成。","s":"安装Docusaurus","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#安装docusaurus","p":1040},{"i":1049,"t":"在上述过程中，我们将项目命名为了myblog，那么文件夹工程如下： myblog├── blog // 存放博客│ ├── 2019-05-28-hola.md // 必须以时间-名称命名│ ├── 2019-05-29-hello-world.md│ └── 2020-05-30-welcome.md├── docs // 存放笔记文档│ ├── doc1.md // 以名称命名│ ├── doc2.md│ ├── doc3.md│ └── mdx.md├── node_modules // 依赖文件夹├── src // 代码控制文件│ ├── css │ │ └── custom.css // 全局样式文件，可覆盖默认的样式│ └── pages│ ├── styles.module.css // 主页样式文件│ └── index.js // 主页文件├── static // 资源存放│ └── img├── docusaurus.config.js // 博客设置文件├── package.json // 包管理文件├── README.md // Readme文件└── sidebars.js // 侧边管理文件（自动生成）","s":"查看目录结构","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#查看目录结构","p":1040},{"i":1051,"t":"使用Visual Studio工程打开myblog文件夹。 拉起终端，输入下面的指令，运行代码。 npm start 运行成功： 运行结果： 这样，就部署完成啦，下一章我们将进行初始设置。","s":"运行项目","u":"/docs/FrontEnd/Docus/docus-introduction-and-installation","h":"#运行项目","p":1040},{"i":1054,"t":"想必你希望你的博客有一个全局搜索功能，这要写代码嘛？不需要，使用插件就可以。","s":"配置搜索","u":"/docs/FrontEnd/Docus/improveit","h":"#配置搜索","p":1052},{"i":1056,"t":"npm install --save @easyops-cn/docusaurus-search-local","s":"安装 docusaurus-search-local 插件","u":"/docs/FrontEnd/Docus/improveit","h":"#安装-docusaurus-search-local-插件","p":1052},{"i":1058,"t":"在 docusaurus.config.js 的 themes 字段声明这个插件。 module.exports = { // ... Your other configurations. themes: [ // ... Your other themes. [ require.resolve(\"@easyops-cn/docusaurus-search-local\"), { // ... Your options. // `hashed` is recommended as long-term-cache of index file is possible. hashed: true, // For Docs using Chinese, The `language` is recommended to set to: // ``` // language: [\"en\", \"zh\"], // ``` }, ], ],}; 然后就可以了，但是它在你完成部署之后才会生效。","s":"声明这个插件","u":"/docs/FrontEnd/Docus/improveit","h":"#声明这个插件","p":1052},{"i":1060,"t":"帮助你自定义一些组件，包括 导航栏、页脚、主页布局等。 链接 Swizzle","s":"Swizzle","u":"/docs/FrontEnd/Docus/improveit","h":"#swizzle","p":1052},{"i":1062,"t":"在这里有十分精美的网站，它们均使用 Docusaurus 构建，你可能十分惊奇，因为它们已经超出了最初的模板太多太多，我们可以说，Docusaurus 只帮你完成了最基本的步骤，然而，最精巧的独一无二网站永远需要你天马行空的想象。 AgileTs Dyte wiki-iota chatkitty firecms pcc-archive","s":"案例社区","u":"/docs/FrontEnd/Docus/improveit","h":"#案例社区","p":1052},{"i":1064,"t":"很多人可能纳闷。我们应该怎么插入图片呢？有两个办法。 在相应的文档上创建文件夹，将图片放进去进行引用。 图床，用外链的形式插入图片。","s":"怎么插入图片？","u":"/docs/FrontEnd/Docus/imgeswhere","h":"","p":1063},{"i":1066,"t":"就是在本项目中存储图片，但久而久之，这会让你的项目文件过大，访问速度慢，这里不再阐述，参考官方网站：这个链接。","s":"插入项目图片","u":"/docs/FrontEnd/Docus/imgeswhere","h":"#插入项目图片","p":1063},{"i":1068,"t":"微博图床最好的优点是免费，但是缺点是不可控，哪天微博把 API 关了，图片就没了，但是如果你觉得这不重要，可以使用。你可以做好备份。 具体使用参考这篇文章","s":"微博图床","u":"/docs/FrontEnd/Docus/imgeswhere","h":"#微博图床","p":1063},{"i":1070,"t":"可控，而且也不贵，一年 9元 。 可以参考这篇文章：阿里云图床操作","s":"阿里云图床","u":"/docs/FrontEnd/Docus/imgeswhere","h":"#阿里云图床","p":1063},{"i":1072,"t":"经过前面的设置，你的博客网站就完成了。现在，我们需要一个链接能够访问你的站点。最流行的方法是使用 Github Pages 进行代码托管和自动部署，但是 Github 的服务器部署在境外，因此我们在国内的访问速度很慢，那么，在这里我将介绍一种使用 Vercel 的方式部署你的博客。它能够提供可以接受的访问速度。","s":"托管你的站点","u":"/docs/FrontEnd/Docus/putinNetlify","h":"","p":1071},{"i":1074,"t":"Github Pages 是很流行的静态网页托管，你只要将源代码上传到 Github Pages ， Github 就能自动地帮你把你的源码部署到 Github 服务器，然后给你一个链接，你就能通过这个链接访问你的静态页面了。它的最大的好处是能够省下不必要的服务器开支。 前面我已经写过相关文档了，请查看：这篇文章。 但是， docusaurus 不太一样，因为它的源代码并不是我们熟知的静态网页的模样，他还要使用下面的 npm 代码来完成打包这件事： npm run build 完成这件事后，项目的根目录会出现一个 build 文件夹，这里面的内容就是我们熟知的打包后生成的原生 html 文件。 在这个文件夹中， index.js 就是项目入口文件，可以直接 open with live server 在浏览器运行。 但是，我们怎么让 Github 帮我们打包呢？","s":"Github Pages","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#github-pages","p":1071},{"i":1076,"t":"这里可以使用 Github Action 进行自动部署，在你将整个网站上传之后，你就不用管它了。它会帮你执行 npm run build 并部署到服务器。","s":"Github Action","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#github-action","p":1071},{"i":1078,"t":"创建一个 blog 仓库，为了让域名，建议仓库命名为 你的GithubID.github.io。 并创建一个新分支，名叫 gh-pages 。 设置 Github Pages 。 将 Branch 切换为刚刚创建的分支。 gh-pages 。","s":"创建仓库和分支","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#创建仓库和分支","p":1071},{"i":1080,"t":"在你的 Github 主页，选择 setting 。 选择左下角的的 Developer settings 。 然后选择 Personal access tokens 。 填写相关信息，选择 无限期 ， 勾选 repo 和 workflow 。点击创建。 然后生成完成，之后它会生成一串密码： 在你的 Github 主页，选择 setting 。 选择左下角的的 Developer settings 。 然后选择 Personal access tokens 。 填写相关信息，选择 无限期 ， 勾选 repo 和 workflow 。点击创建。 然后生成完成，之后它会生成一串密码： 注意 请记住这一串密码，你将不再能看到它。","s":"注册 token","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#注册-token","p":1071},{"i":1082,"t":"进入你托管博客源码的仓库，选择 setting-secret , 登记上面得到的 token 。 为这个 Secret 取一个名字： ACCESS_TOKEN ，然后将上面得到的密码填到下面： 这个操作的目的是授予权限对仓库进行操作。","s":"登记到你的博客仓库","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#登记到你的博客仓库","p":1071},{"i":1084,"t":"在项目根目录下添加一个文件夹，并配置相应的文件：.github\\workflows\\deploy.yml 。 deploy.yml 文件内容如下： name: Deploy Github pageson: push: branches: - main # 监听 main 分支的 push 操作，一旦有了这个操作，就触发 ACTION 部署。jobs: # 触发事件后进行的操作 build-and-deploy: runs-on: ubuntu-latest # 部署服务器环境：ubuntu steps: # 步骤 - name: Checkout # 检查分支 uses: actions/checkout@main with: persist-credentials: false - name: Install and Build # 安装和部署 run: | npm install # 安装npm包 npm run-script build # 执行 build 操作 - name: Deploy uses: JamesIves/github-pages-deploy-action@releases/v3 with: ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} BRANCH: gh-pages FOLDER: build BUILD_SCRIPT: npm install && npm run build","s":"添加自动部署脚本","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#添加自动部署脚本","p":1071},{"i":1086,"t":"将你的代码推送到你的仓库。之后你就不用管了，以后只需要执行 Push 操作就可以。 然后在 Github Actions 查看进度。 如果为绿色，就可以啦，然后访问 GithubPages 给你的链接。","s":"推送代码","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#推送代码","p":1071},{"i":1088,"t":"Vercel 就更简单了。你不用写脚本，只需要几个按钮点点就可以。 打开Vercel 登录，选择使用 Github 登录。 然后选择新建项目： 选择刚刚新建的博客仓库： 你可以忽略 Create a Team (Optional) ，看下面的： 显然，它已经帮我们识别了我们的项目，要干什么它已经帮我们设置好了。 那就不用管了，点击 Deploy。 等待部署完成。 很有仪式感的界面。 点击 Go to Dashboard，进入管理界面。然后点击展示域名设置。 然后创建一个形如 xxxx.vercel.app 的域名。 OK！选择ADD，之后你就可以在这个域名看到你的博客啦！","s":"Vercel 部署","u":"/docs/FrontEnd/Docus/putinNetlify","h":"#vercel-部署","p":1071},{"i":1090,"t":"这一章节，我们将从代码出发修改各种样式，包括首页、笔记样式等。","s":"样式修改","u":"/docs/FrontEnd/Docus/style-modification","h":"","p":1089},{"i":1092,"t":"我们可以看到首页是下面的结构，而我们希望修改里面的文字和部分样式： 首页在哪设置？ src\\pages\\index.js 但这是一个 React 页面，React 使用函数式编程返回前端 Html 代码。但是，你会问：我并不会写 React 怎么办，别急，你并不需要掌握这个框架的用法，让我们来观察一下这个代码结构。 首先，页面引入了一些必要的组件。包括 React 框架等，这个和你无关。 import React from 'react';import clsx from 'clsx';import Link from '@docusaurus/Link';import useDocusaurusContext from '@docusaurus/useDocusaurusContext';import Layout from '@theme/Layout';import HomepageFeatures from '@site/src/components/HomepageFeatures';import styles from './index.module.css'; 唯一值得注意的是这一句： import HomepageFeatures from '@site/src/components/HomepageFeatures'; 它从 src\\components 文件夹中引入了一个可以反复使用的组件 HomepageFeatures，它对应这一部分： 那这就表明，我们要修改这一部分的话，要到 src\\components 文件夹中找到这个文件。 但是，我们现在还在设置主页，那么我们先把这个 HomepageFeatures 看为一个黑盒，待会再去改它。 我们先看看这个黑盒是怎么调用的： index.js export default function Home() { const {siteConfig} = useDocusaurusContext(); return ( <Layout title={`Hello from ${siteConfig.title}`} description=\"Description will go into a meta tag in <head />\"> <HomepageHeader /> <main> <HomepageFeatures /> </main> </Layout> );} 如上面的代码所示，它创建了一个 Html layout 布局，在这个布局中，它传递了一个叫 title 的参数，这个参数实际上是决定标签页名字的。然后创建了一个 <HomepageHeader /> 这个里面是啥？实际上是调用了前面一个函数。使用 Html 的标签引用了下面的名为 HomepageHeader 的函数，渲染了这个函数中定义的内容。 index.js function HomepageHeader() { const {siteConfig} = useDocusaurusContext(); return ( <header className={clsx('hero hero--primary', styles.heroBanner)}> <div className=\"container\"> <h1 className=\"hero__title\">{siteConfig.title}</h1> <p className=\"hero__subtitle\">{siteConfig.tagline}</p> <div className={styles.buttons}> <Link className=\"button button--secondary button--lg\" to=\"/docs/intro\"> Docusaurus Tutorial - 5min ⏱️ </Link> </div> </div> </header> );} 让我们修改一下这边的文字。 function HomepageHeader() { const {siteConfig} = useDocusaurusContext(); return ( <header className={clsx('hero hero--primary', styles.heroBanner)}> <div className=\"container\"> <h1 className=\"hero__title\">{siteConfig.title}</h1> <p className=\"hero__subtitle\">{siteConfig.tagline}</p> <div className={styles.buttons}> <Link className=\"button button--secondary button--lg\" to=\"/docs/intro\"> 进入我的文档🎉 </Link> </div> </div> </header> );} 实现效果： 好了，我们该去收拾那三张图片了。 进入 src\\components\\HomepageFeatures\\index.js 文件，我们看看代码。 首先创建了一个列表： const FeatureList = [ { title: 'Easy to Use', Svg: require('@site/static/img/undraw_docusaurus_mountain.svg').default, description: ( <> Docusaurus was designed from the ground up to be easily installed and used to get your website up and running quickly. </> ), }, { title: 'Focus on What Matters', Svg: require('@site/static/img/undraw_docusaurus_tree.svg').default, description: ( <> Docusaurus lets you focus on your docs, and we&apos;ll do the chores. Go ahead and move your docs into the <code>docs</code> directory. </> ), }, { title: 'Powered by React', Svg: require('@site/static/img/undraw_docusaurus_react.svg').default, description: ( <> Extend or customize your website layout by reusing React. Docusaurus can be extended while reusing the same header and footer. </> ), },]; 这个列表里面记录了三个图片下面的标题和文字，我们只需要修改里面的内容即可。 const FeatureList = [ { title: '你好', Svg: require('@site/static/img/undraw_docusaurus_mountain.svg').default, description: ( <> 这是我的网站。 </> ), }, { title: '我的爱好', Svg: require('@site/static/img/undraw_docusaurus_tree.svg').default, description: ( <> 我的爱好是前端，包括 vue、react 等。 </> ), }, { title: '在BJFU学习', Svg: require('@site/static/img/undraw_docusaurus_react.svg').default, description: ( <> 我现在在北林信息学院学习 </> ), },]; 然后通过一个 模板函数 实现了渲染。 function Feature({Svg, title, description}) { return ( <div className={clsx('col col--4')}> <div className=\"text--center\"> <Svg className={styles.featureSvg} role=\"img\" /> </div> <div className=\"text--center padding-horiz--md\"> <h3>{title}</h3> <p>{description}</p> </div> </div> );} 这个函数帮我们将图片、标题、内容创建为一个组件，然后再下面的代码中进行调用: export default function HomepageFeatures() { return ( <section className={styles.features}> <div className=\"container\"> <div className=\"row\"> {FeatureList.map((props, idx) => ( <Feature key={idx} {...props} /> ))} </div> </div> </section> );} 最终把三个信息合并成了现在这样。 启发 通过这个给我们一种启发，这也是 React 的优势所在，我们只需要把数据填到一个列表中，然后通过一个函数渲染出来，因此，如果有几千条几万条数据，如果我们要修改，就只需要去修改这个函数，当你使用原生代码时，你可能要去修改每条信息对应的代码，尽管它们一样。 实现结果： 这边的图片，你只需要替换即可。这里不再赘述。","s":"首页修改","u":"/docs/FrontEnd/Docus/style-modification","h":"#首页修改","p":1089},{"i":1094,"t":"你可能并不满意原生的绿色，那么要在哪修改呢？ src\\css\\custom.css 在这个文件中，官方为我们提供了颜色修改的接口。让我们观察这个文件的结构： :root { --ifm-color-primary: #2e8555; --ifm-color-primary-dark: #29784c; --ifm-color-primary-darker: #277148; --ifm-color-primary-darkest: #205d3b; --ifm-color-primary-light: #33925d; --ifm-color-primary-lighter: #359962; --ifm-color-primary-lightest: #3cad6e; --ifm-code-font-size: 95%; --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.1);}[data-theme='dark'] { --ifm-color-primary: #25c2a0; --ifm-color-primary-dark: #21af90; --ifm-color-primary-darker: #1fa588; --ifm-color-primary-darkest: #1a8870; --ifm-color-primary-light: #29d5b0; --ifm-color-primary-lighter: #32d8b4; --ifm-color-primary-lightest: #4fddbf; --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.3);} 这个文件包含了两个类，分别是 light 和 dark 。分别对应了两个主题——浅色和深色。 你可以使用下面的颜色编辑器预览想要的颜色，它会自动生成代码，与此同时你可能发现我的网站随着你的调色而变化。你可以将其复制到你的 src\\css\\custom.css 文件，覆盖掉原有的样式。 tip 主色调最好至少有 WCAG-AA contrast ratio 对比度，以保证可读性。你可以用 Docusaurus 自己的网站来预览你的配色的效果。深色模式下，你可以换一套配色，因为同一种颜色一般不能在浅色和深色模式下都保持足够的可读性。 Primary Color: 编辑 dark 模式重置 Background: CSS Variable Name Hex Adjustment Contrast Rating --ifm-color-primary-lightest #8fbfff Fail 🔴 --ifm-color-primary-lighter #61a5ff Fail 🔴 --ifm-color-primary-light #529cff Fail 🔴 --ifm-color-primary #338bff 0 Fail 🔴 --ifm-color-primary-dark #147aff Fail 🔴 --ifm-color-primary-darker #0571ff Fail 🔴 --ifm-color-primary-darkest #005cd6 AA 👍 把 src/css/custom.css 中的变量替换成这些新变量。 自动生成代码：覆盖并替换 /src/css/custom.css :root { --ifm-color-primary: #338bff; --ifm-color-primary-dark: #147aff; --ifm-color-primary-darker: #0571ff; --ifm-color-primary-darkest: #005cd6; --ifm-color-primary-light: #529cff; --ifm-color-primary-lighter: #61a5ff; --ifm-color-primary-lightest: #8fbfff;} 你可能注意到上面的对比度评分中，我的颜色表都是 Fail ，但是我觉得还挺显眼的，按照自己喜欢来吧~ 我按照上自动生成的代码修改颜色后， src\\css\\custom.css 文件表现如下： :root { --ifm-color-primary: #2a7aac; --ifm-color-primary-dark: #266e9b; --ifm-color-primary-darker: #246892; --ifm-color-primary-darkest: #1d5578; --ifm-color-primary-light: #2e86bd; --ifm-color-primary-lighter: #308cc6; --ifm-color-primary-lightest: #459bd2;}[data-theme='dark'] { --ifm-color-primary: #368cdd; --ifm-color-primary-dark: #247ed4; --ifm-color-primary-darker: #2277c8; --ifm-color-primary-darkest: #1c62a5; --ifm-color-primary-light: #4e99e1; --ifm-color-primary-lighter: #59a0e3; --ifm-color-primary-lightest: #7db4e9;} 网站表现如下： 浅色模式： 深色模式：","s":"主题颜色修改","u":"/docs/FrontEnd/Docus/style-modification","h":"#主题颜色修改","p":1089},{"i":1096,"t":"很多时候，你可能对一些样式不太满意。比如下面，你会发现，一二三级标题颜色一模一样。 这很不显眼。我们就可以在 src\\css\\custom.css 文件中覆盖它，但是我并不知道这个东西的css 类名,这里描述一种获取想要元素的 css类名 的方法。 打开浏览器，按 F12 可以进入 调试模式 。 使用元素选择器选择希望查看的样式。 在这里我们可以得知，这个三级标题的 class 为 .markdown > h3 ,我们复制这个 class ，在 src\\css\\custom.css 修改其字体颜色。（记得为class加上 . ） :root { /* 省略 */}/* For readability concerns, you should choose a lighter palette in dark mode. */[data-theme='dark'] { /* 省略 */}.markdown > h3{ color: var(--ifm-color-primary);} var(--ifm-color-primary) 为使用上面变量的方法，通过这个方法可以使颜色以变量存储，能够在代码重构时更加便捷。 现在页面如下： 修改其他地方也是同理，这里不再赘述。","s":"修改你不满意的样式","u":"/docs/FrontEnd/Docus/style-modification","h":"#修改你不满意的样式","p":1089},{"i":1099,"t":"Nebula是一个轻量级（1kb压缩）JavaScript库，可以创建漂亮的宇宙动画。 包括可配置的恒星，星云，彗星，行星和太阳。Nebula带有一个vanilla JS和一个React包装器。","s":"效果","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#效果","p":1097},{"i":1101,"t":"npm install @flodlc/nebula","s":"安装","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#安装","p":1097},{"i":1104,"t":"import { createNebula } from \"@flodlc/nebula\";<div id=\"nebula-element\"></div>const element = document.getElementById(\"nebula-element\");const nebula = createNebula(element, { starsCount: 250, starsRotationSpeed: 3, nebulasIntensity: 8, ...});// ... if needed:nebula.destroy()","s":"Vanilla JS","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#vanilla-js","p":1097},{"i":1106,"t":"import { ReactNebula } from \"@flodlc/nebula\";export default App = () => { return ( <> // With default config <ReactNebula/> // With custom config <ReactNebula config={{ starsCount: 250, starsRotationSpeed: 3, nebulasIntensity: 8, ... }}/> </> );}","s":"React.js","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#reactjs","p":1097},{"i":1108,"t":"在 config 里面书写配置。 配置项 作用 类型 默认值 注意 starsCount 星星数量 number 350 Recommended: < 1000 starsColor 星星颜色 string #ffffff starsRotationSpeed 星星旋转速度 number 3 cometFrequence 彗星出现的频率 number 15 0 disables the comets nebulasIntensity 星云强度 number 10 sunScale 太阳是否存在 number 1 0 hides the Sun planetsScale 行星是否存在 number 1 0 hides the planets solarSystemOrbite 太阳系轨道 number 65 Recommended: < 100 solarSystemSpeedOrbit 轨道速度 number 100","s":"配置","u":"/docs/FrontEnd/FETricks/createUniverse","h":"#配置","p":1097},{"i":1111,"t":"我们都知道，Github服务器放在境外，当你把个人博客托管到GithubPages之后，你会发现，访问速度非常缓慢，但是如果你的网站上几乎没有本地图片（例如本站），那么你会发现，速度在可接受范围之内了。 本文讲授一种使用微博图床加快文件访问的方法。","s":"前言","u":"/docs/FrontEnd/FETricks/freeweibo","h":"#前言","p":1109},{"i":1113,"t":"点击微博图床插件进行下载","s":"安装微博图床插件","u":"/docs/FrontEnd/FETricks/freeweibo","h":"#安装微博图床插件","p":1109},{"i":1115,"t":"它可能需要你登录微博，那么访问微博就好了。 使用非常的便捷，只要将需要的图片复制进入窗口即可。 如图，你只需要上传一张图片，然后在窗口中粘贴即可。右边会生成各种代码，你可以直接粘贴到你的工程中。 <img src=\"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h2x8crjlfij30r40isjx3.jpg\"/> 在你的博客中，像下面这样插入图片： ![image.png](https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h2x8crjlfij30r40isjx3.jpg) 这样以来，你的代码仓库中就没有什么图片资源了，而微博是国内站点，速度肯定快得多。 👀","s":"打开微博图床插件","u":"/docs/FrontEnd/FETricks/freeweibo","h":"#打开微博图床插件","p":1109},{"i":1118,"t":"我们都知道，建立网站要经历一个长时间的过程，从设计开始，再经历coding过程，最后部署到线上。我们会写web网页，但是要想让我们可以通过网页访问，我们需要一个服务器，很长一段时间内，无论大小网页都需要服务器来处理，这个过程就是部署。但是，如果我们的是静态网页呢？不需要任何解析和数据交换，使用服务器还有意义吗？因此，静态网页托管服务出现了，很多大型互联网企业会为用户提供静态网页托管服务，并且大部分是免费的，省去了购买服务器和维护流程，部署上去就完事。Github Pages就是其中一员，它是一个静态网页托管服务，它可以把你的静态网页部署到Github上，这样，你就可以通过网页访问了。 🔔 几种静态网页托管服务对比 Github Pages | 免费，可以灵活的自定义域名，可以使用Github Action持续集成（非常好用，本站使用了它）。缺点：服务器在境外，国内访问速度慢，不过使用微博图床插件可以解决资源加载速度慢问题。 CODING | 国内代码平台，UI好看，但是变相收费，目前不提供托管服务了。 gitee | 国内托管平台，前些日子关闭了所有开源仓库，需要实名认证才能操作，不能自定义域名。 腾讯云服务 | 国内服务器大头，不过静态网页托管依赖小程序云环境，没有小程序还是算了，不能自定义域名。 另外还有NetLify、阿里云等 Github Pages为Github提供的一项静态网站托管服务，它直接从Github仓库获取静态文件进行构建并发布，然后提供一个github.io的二级域名供用户访问，支持绑定自定义域名，支持开启HTTPS，开启HTTPS会自动申请证书同时在证书过期前自动续签，这一切都是免费的，使用起来极其简单，只需要将你的代码和文件提交到Github，然后开启Pages服务即可，本博客站就托管于Github Pages。 本文将从最基础最简单的操作讲述如何从0开始部署一个静态网页托管服务。建议先看附录！","s":"前言","u":"/docs/FrontEnd/FETricks/github-pages","h":"#前言","p":1116},{"i":1120,"t":"首先，Github处于“半墙”状态，看它主页你就知道为什么了...因此你很可能无法访问，那么你需要一个boost或者ladder。 搞定ladder之后，进入Github，选择注册，按照流程来就可以。 注册完毕之后，访问Github Desktop并安装到桌面，我为什么推荐使用这个呢，因为它是一个简单的桌面版Github，可以支持所有的Github功能，比如提交代码等等。对于没使用过git工具的人来说，图形界面一定要比命令窗口友好的多，由于本文是从0开始，那么我们就用最简单的。如果你有兴趣使用git工具，参考git教程。","s":"一、注册Github账号，安装Github Desktop","u":"/docs/FrontEnd/FETricks/github-pages","h":"#一注册github账号安装github-desktop","p":1116},{"i":1122,"t":"在Github中，点击右上角的“+”，选择“New repository”。 取一个名字，并将仓库设为public，勾选生成README.md文件。 点击“Create repository”。其他不用管。 如下，就建好了。","s":"二、新建仓库","u":"/docs/FrontEnd/FETricks/github-pages","h":"#二新建仓库","p":1116},{"i":1124,"t":"打开Github Desktop。 按照提示，跳转到浏览器登录。登陆完成后可看到下面的界面。 点击File->Clone。 选择仓库名。并指定放在本地一个空文件夹。 点击Clone。在刚才的路径就可以看到了。 Github Desktop也出现了文件管理器。","s":"三、使用Github Desktop将仓库克隆到本地","u":"/docs/FrontEnd/FETricks/github-pages","h":"#三使用github-desktop将仓库克隆到本地","p":1116},{"i":1126,"t":"打开生成的文件夹，将你的代码文件以及所有文件夹复制进去。 ⚠ 警告 你必须将网站的主页命名为index.html，否则会出现404错误。并且index.html只能在文件夹根目录！！！ 打开Github Desktop。这时你可以看到更新了仓库。 填写下面的版本信息，随便填。并提交。 点击Repository->Push。提交到Github。 提交成功！","s":"四、将你的代码放入仓库并Push到github","u":"/docs/FrontEnd/FETricks/github-pages","h":"#四将你的代码放入仓库并push到github","p":1116},{"i":1128,"t":"进入Github，查看文件是否已经提交上来了。 提交成功后，设置GithubPages。 点击Settings->Pages。 将source改为main,点击save。 出现提示表示设置成功，稍等片刻。 可到Actions查看进度。 部署成功！ 点击网页进入。 就可以看到我写的内容啦！","s":"五、设置GithubPages","u":"/docs/FrontEnd/FETricks/github-pages","h":"#五设置githubpages","p":1116},{"i":1130,"t":"你只要在本地的文件夹内编辑好文件，再打开Github Desktop，在没有冲突的情况下，提交即可。","s":"六、怎么维护和更新代码？","u":"/docs/FrontEnd/FETricks/github-pages","h":"#六怎么维护和更新代码","p":1116},{"i":1132,"t":"我只想上传一个index.htnl，还需要安装github desktop吗？答案是不需要的！你只要选择上传文件即可，再点击下面的保存，但是，文件逻辑顺序一定要对。如果你要上传大文件，这个方法不行。 什么？你的网站还没开始写？那就别装github desktop了，直接在github上coding！将链接中的.com改为.dev，打开线上vscode，在里面即可完成编码过程。 👀你学会了吗？","s":"附录：如果文件很少怎么办？","u":"/docs/FrontEnd/FETricks/github-pages","h":"#附录如果文件很少怎么办","p":1116},{"i":1135,"t":"Node.js 简单的说 Node.js 就是运行在服务端的JavaScript。他为前端程序员提供了友好的支持。对于不懂像 PHP、Python 或 Ruby 等动态编程后端开发语言，然后想创建自己的服务的前端程序员，Node.js 是一个非常好的选择。NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种： 允许用户从NPM服务器下载别人编写的第三方包到本地使用。 允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。 允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。 也就是说，安装了NodeJs自然而然就部署了npm。","s":"什么是NodeJs和NPM","u":"/docs/FrontEnd/FETricks/install-nodejs-and-npm","h":"#什么是nodejs和npm","p":1133},{"i":1137,"t":"首先去node官网下载LTS（长期支持稳定）版本，下载下来后，双击安装包，一步一步安装即可； 选择安装路径： 选择“添加到环境变量”（这个很重要） 安装完成后，检查是否正常： 在windows开始图标上右键，打开PowerShell：","s":"下载并安装NodeJs","u":"/docs/FrontEnd/FETricks/install-nodejs-and-npm","h":"#下载并安装nodejs","p":1133},{"i":1139,"t":"输入下面的指令。 检查环境变量配置： echo %PATH% 检查node版本： node -v 如果如下图，说明一切正常： 检查npm： npm -v 如此，就安装完成了。 参考文章 https://www.cnblogs.com/liluxiang/p/9592003.html https://blog.csdn.net/qq_38738510/article/details/100988518","s":"检查配置","u":"/docs/FrontEnd/FETricks/install-nodejs-and-npm","h":"#检查配置","p":1133},{"i":1142,"t":"本小程序基于UxxHans Rainbow Cats的项目进行二次开发，优化了UI，突破20条数据获取限制，增加纪念日计时功能，增加记事本功能，允许上传图片。下面将从最基础的地方开始，讲述如何部署这个微信小程序。 话不多说求星星，请给我一个STAR！仓库地址","s":"准备","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#准备","p":1140},{"i":1144,"t":"1.免费。从部署到上线不需要任何费用。除非你的数据库存储很多数据和图片，会付一点钱，但是免费额度已经足够。😁 2.快速。你只需要克隆我的项目，在你的电脑上部署，修改部分参数就可以上线，不到一小时就能使用。 3.功能丰富。突破了20条限制，让你不需要在乎发了多少条都能获取。增加记事本功能和倒计时功能，记录美好瞬间。 4.使用了云开发三大基础能力。不需要自己配置服务器，高效便捷。使用云开发数据库对文档型数据库进行读写。在小程序前端直接上传/下载云端文件，在云开发控制台可视化管理。在云端运行的代码，微信私有协议天然鉴权，开发者只需编写业务逻辑代码。","s":"特点","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#特点","p":1140},{"i":1146,"t":"进入微信公众平台,点击“小程序”进入注册。 填写一个尚未在公众平台注册过的邮箱，完成如下设置后，点击注册。 此时，腾讯会给你的这个邮箱发一条验证码，点击链接验证即可。 填写主体信息，选择“个人”。 填写管理员信息，进行身份验证（很快！） 您也可以用已经存在的公众号注册小程序 完成注册后，进入管理界面。 点击设置，拉到最下边，获取AppID（重要）并记录下来。 在基本设置中完善小程序信息，类别随意选择。 ⚠ 您不需要进行微信验证，这是花钱的。是商业性App需要的东西。 进入微信开发工具下载界面下载微信开发工具。选择Stable版即可。 不出意外的话，您的电脑应该是64位。 🔔 建议不要安装在C盘。 安装完成后，打开。 到这一步，你就不用管了，也不用新建，等会再说。","s":"注册小程序并下载微信开发者工具","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#注册小程序并下载微信开发者工具","p":1140},{"i":1148,"t":"到仓库地址，克隆源代码。 你可以使用git工具进行克隆，我想会的一定不需要我来讲，那么我就说小白方法。 你只需要在“Code”下拉菜单中，选择Download ZIP，将压缩包下载下来，解压即可。 🔔 你可能需要ladder才能访问Github，如果你访问不了，可以给我发邮件：czhorange@foxmail.com或者加我的QQ：605031236,可以答疑解惑哦！","s":"克隆源代码","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#克隆源代码","p":1140},{"i":1150,"t":"点击微信开发者工具，选择导入项目，导入刚刚克隆的文件夹或者解压的文件夹。 这里的AppID你需要修改成上面让你记录的AppID，默认的这个是我的，你用不了。 点击左上角“云开发”进入云开发管理界面。 按照提示，新建一个云环境。 记录你的云环境ID。 打开\"Miniprogram/envlist.js\"，将拷贝的云环境ID更换原有的envID。 在cloudfunctions文件夹上右键选择环境。 然后在cloudfunctions文件夹下的文件上右键，上传并部署云函数。（cloudfunctions文件夹内所有文件夹都要上传依赖！） 可以到云开发控制台查看是否部署成功。","s":"打开项目开通云开发","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#打开项目开通云开发","p":1140},{"i":1152,"t":"在控制台数据库页，创建三个云开发数据库集合 'MarketList'， 'MissionList' ,'Txts','UserList'. 在UserList集合里面创建两个数据，里面创建两个值：_openid(string类), credit(number类)，credit设置为0 。（openid具体数据稍后再填） ⚠ 重要步骤 选择云开发里数据库三个选项中的最后一个 数据权限，选择自定义，然后点击新窗口下面蓝色加亮文字，把所有用户读写权限设置为true。接下来重复此步骤把剩下三个数据集合的权限也设置好。（没有设置会导致你们互相看不到彼此发的任务和商品，也无法赚积分） 注意，一定要把四个集合全部这样设置！ 在云开发数据库添加新的文件夹photo：","s":"数据库部署","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#数据库部署","p":1140},{"i":1154,"t":"app.json修改里面的小程序名称： about.wxml里面修改开发者信息，把汉字替换掉就行： Account/index.wxml里面修改积分信息的前缀： mainpage/index.wxml里面修改欢迎名称： mainpage/index.js修改在一起的时间： 一定要按照原来的格式修改时间。","s":"你需要替换的地方","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#你需要替换的地方","p":1140},{"i":1156,"t":"项目文件夹中的图片需要你替换： 首先是home/a.jpg需要你换成你自己的名称的图片。 ⚠ 注意，你替换的图片必须与原图名称一模一样。 然后是miniprogram\\images\\Mission中的标识你们的图片，可以替换成你想要的图。他会在帖子上显示表明是谁发的。南瓜是女生，橙子是男生。","s":"图片替换","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#图片替换","p":1140},{"i":1158,"t":"在左边的预览器中测试功能是否正常。 进入微信公众平台将刚刚上传的小程序版本号改为体验版。 你不需要上传审核，只要设为体验版即可。 将小程序分享到女朋友手机上。 在两个手机上运行小程序，分别在两个手机上的小程序里新建任务，然后到missionlist数据库集合去找自己和女朋友的_openid变量。 你发的那个openid就是你的id号，女朋友发的openid就是她的id号。 把这两个openid拷贝到UserList数据集合里刚刚创建的的_openid变量中 同时也要把他们拷到app.js文件里的kirbyOpenId和deeOpenId的值里。 然后再试试看是不是成功了！（右滑任务或商品可以删除或者星标哦） 然后改好了再在右上角上传，这次在这里上传了就好了，一会手机上就会更新了，你不需要审核，体验版足矣。","s":"创建体验版小程序","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#创建体验版小程序","p":1140},{"i":1160,"t":"如有疑问可以留言哦！如果你觉得有用请在github给我一个star！ 给我一个STAR！！！！🤕 仓库地址","s":"后记","u":"/docs/FrontEnd/FETricks/mini-inannan","h":"#后记","p":1140},{"i":1163,"t":"背景 在我的博客建立之初，由于懵懂无知，把图片放在工程本地，导致打包大小变得很大，并且托管到GithubPages后图片加载的速度惨不忍睹。因此我上网搜索一些前辈的经验，这个经验就是建立图床，使用外链引入到Markdown笔记中，这样工程包的大小缩小了，访问速度也有所提升。 ![image.png](https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3p10rb6uwj31400kl7e5.jpg) 最开始使用的图床就是微博图床，首先感谢新浪微博提供的免费图床(对外链无限制),以及速度快到惊人的cdn图片加速服务，还有丰富的浏览器插件，简直是薅羊毛！ 但是，由于这个图床服务并不是微博官方提供给用户的服务，所以，一旦微博停止这个服务，我们的图片将无法访问，有一种“命运攥在别人手里”的感觉。因此，我还决定趁现在博客还不多的时候，将微博图床迁移到别的地方，这里，我选择阿里云oss。","s":"前言","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#前言","p":1161},{"i":1165,"t":"首先我要把之前上传到微博图床的图片全部下载下来，放到本地，再转移到阿里云。 解决方案 先用Python爬虫将我的博客上的所有用微博图床存储的图片爬下来放在本地，以图片后缀命名。脚本的核心思想是使通过遍历HTML中的img标签，用正则表达式比对并抓取标签内的src地址参数。 ex = '<img.*?src=\"(.*?)\".*?' # 比对 img_list = re.findall(ex, web_text) 然后再把链接地址对应的图片下载到本地。 使用下面的Pyhton脚本： import reimport requestsdef download_img(): error_img = 0 success_img = 0 url = input('请输入网站地址：') headers = { 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36 Edg/87.0.664.75' } web_text = requests.get(url, headers=headers).text ex = '<img.*?src=\"(.*?)\".*?' img_list = re.findall(ex, web_text) print('图片地址:', img_list) if len(img_list) == 0: print('该站有反爬虫机制，请换一个网站') for img in img_list: try: # 补充协议头 if not (img.startswith('http') or img.startswith('https')): img = 'http:' + img img_binary = requests.get(img, headers=headers).content # 切割出最后一个字符串 file_name = img.split('/')[-1] # 切割 query字符 file_name = file_name.split('?')[0] with open(f'./img/{file_name}', 'wb') as fp: fp.write(img_binary) print(file_name, '，下载成功') success_img += 1 except Exception as e: print(e) error_img += 1 continue print('下载图片完成！') return success_img, error_imgif __name__ == '__main__': success_img, error_img = download_img() print(f'总计下载：{success_img}，下载失败：{error_img}') 执行结果抓图： 保存结果如图： 脚本参考 来自CSDN夏2同学，http://t.csdn.cn/6pWJ5","s":"爬取已经使用的图片","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#爬取已经使用的图片","p":1161},{"i":1168,"t":"首先，在阿里云首页选择对象存储OSS服务。","s":"注册","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#注册","p":1161},{"i":1170,"t":"点击创建一个新的bucket。 填写bucket参数。","s":"创建bucket","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#创建bucket","p":1161},{"i":1172,"t":"打开创建的bucket列表，如图，只需要复制oss-cn-beijing即可，不需要后面的.aliyuncs.com。","s":"获取地域结点信息","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#获取地域结点信息","p":1161},{"i":1174,"t":"来到页面的右上角，鼠标放在你的头像上，在弹出的框里选择AccessKey管理。 进入后，创建一个AccessKey。 在弹出的界面里，记住你的accessKeyId和accessKeySecret.","s":"创建AccessKey","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#创建accesskey","p":1161},{"i":1176,"t":"在Github中下载PicGo，并点击安装。在电脑桌面右下角的PicGo图标打开软件。在图床设置里面选择阿里云OSS，依照以下步骤填写信息： 设定Keyld：填写刚刚获得的AccessKeyID 设定KeySecret：填写AccessKeyIDSecret 设定储存空间名：填写bucket名称，这里填写的是bucket名称，不是浏览器里的域名。 确认存储区域：填写你的地域节点，注意复制的格式。 指定存储路径：其实就是自定义一个文件夹的名字，以/结尾，它会自动在你的bucket里面创建一个文件夹，并把图片上传进去。 参考文章链接 http://t.csdn.cn/oZkFg","s":"PicGo配置","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#picgo配置","p":1161},{"i":1178,"t":"将前面爬取的图片上传到bucket文件夹中。 找到上传后文件的地址。 https://xxxxxx.oss-cn-beijing.aliyuncs.com/blog/1656914971349.png 我们可以观察到该地址是以https://xxxxxx.oss-cn-beijing.aliyuncs.com/blog/作为前缀的，而微博图床的连接是https://tva1.sinaimg.cn/large/1656914971349.png，由于两者后缀可以一一对应，我们只需要到工程文件中替换前缀即可。使用vscode的替换功能。 如图，替换后，全部连接就生效了。","s":"替换原来博客中的微博图床","u":"/docs/FrontEnd/FETricks/picbed-migration","h":"#替换原来博客中的微博图床","p":1161},{"i":1182,"t":"我们经常会遇到多人合作开发的项目，但是问题是，当我们多个人共同开发一个项目时，怎么把大家的合起来呢？ 是这样吗？ 串行工作：每个人负责一个模块，在这个人书写自己的模块时，其他人闲着，在这个人写好代码后，把代码打包，压缩包发送给下一个人。 并行工作：多人同时进行编码，写好之后进行合并。 你平时是怎么操作的呢？实际上，显然是并行工作的效率高，但是怎么达到这个目的呢？答案就是，代码托管。我们将代码放在某个平台的仓库里上，每个协作者在仓库中创建一个属于自己的分支（branch），并将代码拷贝一份副本在本地，在本地进行自己部分的编码和测试工作，在编码完成后，把这个工程推送（Push）到仓库中自己的分支里，并向主分支（main）发起合并请求（pull request），在管理员审核过后，就可以自动比较二者不一样的地方，进行合并（Merge）。 举个栗子 比如，老师新出了一张试卷，但是老师不想自己得到答案，因此她安排A、B、C三位学霸来做这套试卷。分别将这三个同学的试卷记为a、b、c。假设老师那里有一张空白试卷m。那么老师就是一个仓库。这张试卷m就是主分支（branch main），试卷a、b、c就是另外三个子分支。老师安排A同学做选择题，B同学做填空题，C做大题，在A做完选择题后，他将卷子交给老师（这叫提交合并请求），老师看了之后觉得没问题，就把A的答案誊抄到空白卷m上（这叫合并），B做完填空题后，手比较痒，就另外做了选择题，他也把卷子交给老师，老师看了之后，发现B的选择题答案和A的不一样（这叫产生了冲突），老师经过仔细判断之后发现A写的是对的，就保留A的选择题答案，忽略B的选择题答案（这叫解决冲突），然后将B的填空题合并上去。C做完大题之后交给老师，老师经过审核发现没有冲突的地方，因此也把C的试卷合并到m中。 我们可以得出以下结论： 总有人来扮演老师的角色，负责审核和解决冲突。 做题时A、B、C三位协作者可以同时做试卷，不受其他人影响。","s":"协作原理","u":"/docs/FrontEnd/FETricks/project-coll","h":"#协作原理","p":1179},{"i":1184,"t":"平台名称 说明 网址 Github 代码托管、版本控制界老大哥，千万以上开发者活跃的开源平台，很多知名框架和软件如react、vue、vscode都在上面开发维护。但是由于一些不可描述的原因，处于“半墙”状态。 github.com Gitee 国内的代码托管平台，和Github功能很像，但是目前越来越收紧开源政策了。 gitee.com 开源中国 在国内程序员圈子里名气最大的开源技术社区，程序员社区，提供了技术、学习、开发、甚至职业发展的各种互动，收录超过两万款开源软件。 http://oschina.net 微信代码管理 微信开发者的工程托管平台，配套微信开发工具，对小程序之类的工程很友好。 https://git.weixin.qq.com/ 了解了上面的，那我们就开始吧！本文将结合Github讲解协作部署的全过程。","s":"常见的协作平台","u":"/docs/FrontEnd/FETricks/project-coll","h":"#常见的协作平台","p":1179},{"i":1186,"t":"首先，Github处于“半墙”状态，看它主页你就知道为什么了...因此你很可能无法访问，那么你需要一个boost或者ladder。 搞定ladder之后，进入Github，选择注册，按照流程来就可以。 注册Github详细操作","s":"注册Github","u":"/docs/FrontEnd/FETricks/project-coll","h":"#注册github","p":1179},{"i":1188,"t":"我个人更加倾向于使用图形界面而不是一个黑色的字很小的命令窗口。因此这里会用Github Desktop作为版本控制工具。当然，Git也是程序员必备的技能之一，建议学一学。可参考git教程 在上面注册完毕之后，访问Github Desktop并安装到桌面。","s":"下载Github Desktop","u":"/docs/FrontEnd/FETricks/project-coll","h":"#下载github-desktop","p":1179},{"i":1190,"t":"tip 工程管理者需要建立仓库 在Github中，点击右上角的“+”，选择“New repository”。 取一个名字，并将仓库设为public，勾选生成README.md文件。 点击“Create repository”。其他不用管。 如下，就建好了。","s":"创建仓库","u":"/docs/FrontEnd/FETricks/project-coll","h":"#创建仓库","p":1179},{"i":1192,"t":"tip 工程管理者需要添加协作成员 打开仓库界面，选择settings。 点击“Add People”。 按照提示输入对方相关信息，发送请求即可。 成功添加如图所示：","s":"添加协作成员","u":"/docs/FrontEnd/FETricks/project-coll","h":"#添加协作成员","p":1179},{"i":1194,"t":"tip 协作者需要接受请求 打开Github主页，在头像下拉栏找到消息通知。 点击Join，即可加入。 加入成功如图所示：","s":"接受协作请求","u":"/docs/FrontEnd/FETricks/project-coll","h":"#接受协作请求","p":1179},{"i":1196,"t":"打开下载好的Github Desktop，点击选择File-clone。 选择URL，填写仓库的地址。 在仓库的主页进行获取。 创建本地的空文件夹。 然后点击克隆。 克隆过程： 克隆成功后在相应的文件夹可以找到源代码了。 用vscode打开这个文件夹就可以开始修改了。 打开之后如图。","s":"克隆仓库","u":"/docs/FrontEnd/FETricks/project-coll","h":"#克隆仓库","p":1179},{"i":1198,"t":"在管理员的仓库中，新建自己的分支。如下： 创建成功：","s":"添加分支","u":"/docs/FrontEnd/FETricks/project-coll","h":"#添加分支","p":1179},{"i":1200,"t":"caution 这要求你的电脑必须安装了nodejs。计算机网络课程设计中已经安装了它。 在上传时，由于依赖往往较大，所以都会被忽略掉，gitignore就记录了这些需要忽略的文件。 那么在下面打开终端。 输入安装依赖指令。 npm install caution 注意，npm安装时可能也需要打开ladder。 安装过程：","s":"安装依赖","u":"/docs/FrontEnd/FETricks/project-coll","h":"#安装依赖","p":1179},{"i":1202,"t":"完成上面的操作之后即可进行代码测试了。这里以vue的工程为例，在终端中输入： npm run dev 如后在本地的环回地址在浏览器中打开。 localhost:8081","s":"测试","u":"/docs/FrontEnd/FETricks/project-coll","h":"#测试","p":1179},{"i":1204,"t":"先进行代码Pull，先切换为main分支进行Pull。 caution 在每次你要开始写代码之前先进行Pull！不然冲突等着你呢！ 先Pull再Push！ 先Pull再Push！ 先Pull再Push！ 进行Pull： 在完成源代码编写之后，即可上传代码了。 打开Github Desktop，即可看到修改后的文件。 中间是前后对比。 在左下角添加提交评论。 推送到你自己的分支： 点击Push。 Push完成后到管理员仓库自己的分支下，查看Push结果。如果这里的评论和你填写的评论一致，说明已经推送成功了。","s":"Push代码","u":"/docs/FrontEnd/FETricks/project-coll","h":"#push代码","p":1179},{"i":1206,"t":"仓库主页会提示你进行合并，点击合并即可。 写一下评论，点击提交。 下面即代表提交成功。 提交完合成后，你可以告诉你的管理员。","s":"请求合并","u":"/docs/FrontEnd/FETricks/project-coll","h":"#请求合并","p":1179},{"i":1208,"t":"在管理员这边即可审核并合并： info 若还有不详细的地方，后续补充。","s":"审核并合并","u":"/docs/FrontEnd/FETricks/project-coll","h":"#审核并合并","p":1179},{"i":1211,"t":"我们常常需要将自己建的某个静态网站部署到服务器或者托管到某个平台上，这样就能够将其发布到互联网，允许大家通过特定的域名访问了。但是，静态网站使用服务器，往往比较浪费资源，成本也比较高，那么大家更倾向于将其托管到某个平台。这个非常类似与前一篇所讲的Github Pages，但是，Github Pages有一大痛点，就是太慢。 如何简单快速又低成本的解决这个问题呢？答案是Netlify Yes！ Netlify简介 Netlify是一家提供静态网站托管的综合平台，支持自动从Github等仓库拉取代码并构建成静态网站进行发布（也就是说，你的代码仍旧放在Github上，但是可以在Netlify发布！），同时也支持自定义域名，自动申请SSL证书等功能，更为重要的是自动启用CDN加速，国内访问速度要快很多。","s":"前言","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#前言","p":1209},{"i":1214,"t":"进入Netlify官网，点击右上角进行账户注册。","s":"注册Netlify","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#注册netlify","p":1209},{"i":1216,"t":"注册完毕后，可以从Github绑定一个待构建的仓库到Netlify。进入主页，选择Add new site，点击选择Import an existing project： 从Github中绑定仓库（绑定其他平台的仓库也可以）。 在下方选择一个想要使用的仓库： 选择需要构建的分支： 点击Deploy site。 构建成功！","s":"绑定仓库和构建","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#绑定仓库和构建","p":1209},{"i":1218,"t":"点击“域设置” 选择编辑域名。 然后就能访问啦！速度嘎嘎快！ 我稍微ping了一下，看看结果： 使用netlify加速：","s":"自定义域名","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#自定义域名","p":1209},{"i":1220,"t":"Netlify还提供付费服务，不过免费的服务应该够用了，我们看看免费额度是多少： 每个月100GB的带宽，300分钟的构建时长！ 转载声明 本文中参考了运维咖啡吧的文章，来自稀土掘金，原文链接","s":"费用信息","u":"/docs/FrontEnd/FETricks/use-netlify","h":"#费用信息","p":1209},{"i":1223,"t":"在上一节中，我们为游戏添加了交互，但是目前交互只能放下X棋子，当前，每个 Square 组件都维护了游戏的状态（state）。我们可以把所有 9 个 Square 的值放在一个地方，这样我们就可以判断出胜者了。 你可能会想，我们也可以在棋盘 Board 组件中收集每个格子 Square 组件中的 state。虽然技术上来讲是可以实现的，但是代码如此编写会让人很难理解，并且我们以后想要维护重构时也会非常困难。所以，最好的解决方式是直接将所有的 state 状态数据存储在 Board 父组件当中。之后 Board 组件可以将这些数据通过 props 传递给各个 Square 子组件，正如上文我们把数字传递给每一个 Square 一样。 当你遇到需要同时获取多个子组件数据，或者两个组件之间需要相互通讯的情况时，需要把子组件的 state 数据提升至其共同的父组件当中保存。之后父组件可以通过 props 将状态数据传递到子组件当中。这样应用当中所有组件的状态数据就能够更方便地同步共享了。 像这种将组件的 state 提升到父组件的情形在重构 React 组件时经常会遇到 —— 借此我们来实践一下。 为 Board 组件添加构造函数，将 Board 组件的初始状态设置为长度为 9 的空值数组： class Board extends React.Component { constructor(props) { super(props); this.state = { squares: Array(9).fill(null), // 创建九个格子的状态，并初始化为null } } renderSquare(i) { return <Square value={i} />; }··· 当我们玩游戏时，this.state.squares 数组的值可能如下所示，有的是空的，有的是划上的： [ 'O', null, 'X', 'X', 'X', 'O', 'O', null, null,] Board 组件当前的 renderSquare 方法看起来像下面这样： renderSquare(i) { return <Square value={i} />; } 开始时，我们依次使把 0 到 8 的值通过 prop 从 Board 向下传递，从而让它们显示出来。上一步与此不同，我们根据 Square 自己内部的 state，使用了 “X” 来代替之前的数字。因此，Square 忽略了当前从 Board 传递给它的那个 value prop。 让我们再一次使用 prop 的传递机制。我们通过修改 Board 来指示每一个 Square 的当前值（'X', 'O', 或者 null）。我们在 Board 的构造函数中已经定义好了 squares 数组，这样，我们就可以通过修改 Board 的 renderSquare 方法来读取这些值了。 renderSquare(i) { return <Square value={this.state.squares[i]} />; } 这样，每个 Square 就都能接收到一个 value prop 了，这个 prop 的值可以是 'X'、 'O'、 或 null（null 代表空方格）。 那么接下来我们肯定要修改 Square 的监听函数。 这样，每个 Square 就都能接收到一个 value prop 了，这个 prop 的值可以是 'X'、 'O'、 或 null（null 代表空方格）。 相反，从 Board 组件向 Square 组件传递一个函数，当 Square 被点击的时候，这个函数就会被调用。接着，我们将 Board 组件的 renderSquare 方法改写为如下效果： renderSquare(i) { return <Square value={this.state.squares[i]} onClick={()=>this.handleClick(i)} />; } tip 为了提高可读性，我们把返回的 React 元素拆分成了多行，同时在最外层加了小括号，这样 JavaScript 解析的时候就不会在 return 的后面自动插入一个分号从而破坏代码结构了。 现在我们从 Board 组件向 Square 组件中传递两个 props 参数：value 和 onClick。onClick prop 是一个 Square 组件点击事件监听函数。接下来，我们需要修改 Square 的代码： 将 Square 组件的 render 方法中的 this.state.value 替换为 this.props.value 。 将 Square 组件的 render 方法中的 this.setState() 替换为 this.props.onClick() 。 删掉 Square 组件中的构造函数 constructor，因为该组件不需要再保存游戏的 state。进行上述修改之后，代码会变成下面这样: class Square extends React.Component { render() { return ( <button className=\"square\" onClick={() => this.props.onClick()} > {this.props.value} </button> ); }} 每一个 Square 被点击时，Board 提供的 onClick 函数就会触发。我们回顾一下这是怎么实现的： 向 DOM 内置元素 <button> 添加 onClick prop，让 React 开启对点击事件的监听。 当 button 被点击时，React 会调用 Square 组件的 render() 方法中的 onClick 事件处理函数。 事件处理函数触发了传入其中的 this.props.onClick() 方法。这个方法是由 Board 传递给 Square 的。 由于 Board 把 onClick={() => this.handleClick(i)} 传递给了 Square，所以当 Square 中的事件处理函数触发时，其实就是触发的 Board 当中的 handleClick(i) 方法。 现在我们还尚未定义 handleClick() 方法，所以代码还不能正常工作。如果此时点击 Square，你会在屏幕上看到红色的错误提示，提示内容为：“this.handleClick is not a function”。 tip 因为 DOM 元素 <button> 是一个内置组件，因此其 onClick 属性在 React 中有特殊的含义。而对于用户自定义的组件来说，命名就可以由用户自己来定义了。我们给 Square 的 onClick 和 Board 的 handleClick 赋予任意的名称，代码依旧有效。在 React 中，有一个命名规范，通常会将代表事件的监听 prop 命名为 on[Event]，将处理事件的监听方法命名为 handle[Event] 这样的格式。 这时候我们点击 Square 的时候，浏览器会报错，因为我们还没有定义 handleClick 方法。我们现在来向 Board 里添加 handleClick 方法： class Board extends React.Component { constructor(props) { super(props); this.state = { squares: Array(9).fill(null), }; } handleClick(i) { const squares = this.state.squares.slice(); squares[i] = 'X'; this.setState({squares: squares}); } renderSquare(i) { return ( <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)} /> ); } render() { const status = 'Next player: X'; return ( <div> <div className=\"status\">{status}</div> <div className=\"board-row\"> {this.renderSquare(0)} {this.renderSquare(1)} {this.renderSquare(2)} </div> <div className=\"board-row\"> {this.renderSquare(3)} {this.renderSquare(4)} {this.renderSquare(5)} </div> <div className=\"board-row\"> {this.renderSquare(6)} {this.renderSquare(7)} {this.renderSquare(8)} </div> </div> ); }} 现在，我们可以通过点击 Square 来填充那些方格，效果与之前相同。但是，当前 state 没有保存在单个的 Square 组件中，而是保存在了 Board 组件中。每当 Board 的 state 发生变化的时候，这些 Square 组件都会重新渲染一次。把所有 Square 的 state 保存在 Board 组件中可以让我们在将来判断出游戏的胜者。 因为 Square 组件不再持有 state，因此每次它们被点击的时候，Square 组件就会从 Board 组件中接收值，并且通知 Board 组件。在 React 术语中，我们把目前的 Square 组件称做“受控组件”。在这种情况下，Board 组件完全控制了 Square 组件。 注意，我们调用了 .slice() 方法创建了 squares 数组的一个副本，而不是直接在现有的数组上进行修改。在下一节，我们会介绍为什么我们需要创建 square 数组的副本。","s":"状态提升","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#状态提升","p":1221},{"i":1225,"t":"在上一节内容当中，我们建议使用 .slice() 函数对 squares 数组进行拷贝，而非直接修改现有的数组。接下来我们来学习不可变性以及不可变性的重要性。 一般来说，有两种改变数据的方式。第一种方式是直接修改变量的值，第二种方式是使用新的一份数据替换旧数据。","s":"为什么不可变性在 React 中非常重要","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#为什么不可变性在-react-中非常重要","p":1221},{"i":1227,"t":"var player = {score: 1, name: 'Jeff'};player.score = 2;// player 修改后的值为 {score: 2, name: 'Jeff'}","s":"直接修改数据","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#直接修改数据","p":1221},{"i":1229,"t":"var player = {score: 1, name: 'Jeff'};var newPlayer = Object.assign({}, player, {score: 2});// player 的值没有改变, 但是 newPlayer 的值是 {score: 2, name: 'Jeff'}// 使用对象展开语法，就可以写成：// var newPlayer = {...player, score: 2}; 不直接修改（或改变底层数据）这种方式和前一种方式的结果是一样的，这种方式有以下几点好处：","s":"新数据替换旧数据","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#新数据替换旧数据","p":1221},{"i":1231,"t":"不可变性使得复杂的特性更容易实现。在后面的章节里，我们会实现一种叫做“时间旅行”的功能。“时间旅行”可以使我们回顾井字棋的历史步骤，并且可以“跳回”之前的步骤。这个功能并不是只有游戏才会用到——撤销和恢复功能在开发中是一个很常见的需求。不直接在数据上修改可以让我们追溯并复用游戏的历史记录。","s":"简化复杂的功能","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#简化复杂的功能","p":1221},{"i":1233,"t":"如果直接修改数据，那么就很难跟踪到数据的改变。跟踪数据的改变需要可变对象可以与改变之前的版本进行对比，这样整个对象树都需要被遍历一次。 跟踪不可变数据的变化相对来说就容易多了。如果发现对象变成了一个新对象，那么我们就可以说对象发生改变了。","s":"跟踪数据的改变","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#跟踪数据的改变","p":1221},{"i":1235,"t":"不可变性最主要的优势在于它可以帮助我们在 React 中创建 pure components。我们可以很轻松的确定不可变数据是否发生了改变，从而确定何时对组件进行重新渲染。 查阅性能优化章节，以了解更多有关 shouldComponentUpdate() 函数及如何构建 pure components 的内容。","s":"确定在 React 中何时重新渲染","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#确定在-react-中何时重新渲染","p":1221},{"i":1237,"t":"接下来我们把 Square 组件重写为一个函数组件。 如果你想写的组件只包含一个 render 方法，并且不包含 state，那么使用函数组件就会更简单。我们不需要定义一个继承于 React.Component 的类，我们可以定义一个函数，这个函数接收 props 作为参数，然后返回需要渲染的元素。函数组件写起来并不像 class 组件那么繁琐，很多组件都可以使用函数组件来写。 把 Square 类替换成下面的函数： function Square(props) { return ( <button className=\"square\" onClick={props.onClick}> {props.value} </button> );} 我们把两个 this.props 都替换成了 props。 tip 当我们把 Square 修改成函数组件时，我们同时也把 onClick={() => this.props.onClick()} 改成了更短的 onClick={props.onClick}（注意两侧都没有括号）。","s":"函数组件","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#函数组件","p":1221},{"i":1239,"t":"现在井字棋还有一个明显的缺陷有待完善：目前还不能在棋盘上标记 “O”。 我们将 “X” 默认设置为先手棋。你可以通过修改 Board 组件的构造函数中的初始 state 来设置默认的第一步棋子： class Board extends React.Component { constructor(props) { super(props); this.state = { squares: Array(9).fill(null), xIsNext: true, }; } 棋子每移动一步，xIsNext（布尔值）都会反转，该值将确定下一步轮到哪个玩家，并且游戏的状态会被保存下来。我们将通过修改 Board 组件的 handleClick 函数来反转 xIsNext 的值： handleClick(i) { const squares = this.state.squares.slice(); squares[i] = this.state.xIsNext ? 'X' : 'O'; this.setState({ squares: squares, xIsNext: !this.state.xIsNext, }); } 修改之后，我们就实现了 “X” 和 “O” 轮流落子的效果。尝试玩一下。 接下来修改 Board 组件 render 方法中 “status” 的值，这样就可以显示下一步是哪个玩家的了。 render() { const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O'); return ( // 其他部分没有改变 现在你整个的 Board 组件的代码应该是下面这样的： class Board extends React.Component { constructor(props) { super(props); this.state = { squares: Array(9).fill(null), xIsNext: true, }; } handleClick(i) { const squares = this.state.squares.slice(); squares[i] = this.state.xIsNext ? 'X' : 'O'; this.setState({ squares: squares, xIsNext: !this.state.xIsNext, }); } renderSquare(i) { return ( <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)} /> ); } render() { const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O'); return ( <div> <div className=\"status\">{status}</div> <div className=\"board-row\"> {this.renderSquare(0)} {this.renderSquare(1)} {this.renderSquare(2)} </div> <div className=\"board-row\"> {this.renderSquare(3)} {this.renderSquare(4)} {this.renderSquare(5)} </div> <div className=\"board-row\"> {this.renderSquare(6)} {this.renderSquare(7)} {this.renderSquare(8)} </div> </div> ); }}","s":"轮流落子","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#轮流落子","p":1221},{"i":1241,"t":"至此我们就可以看出下一步会轮到哪位玩家，与此同时，我们还需要显示游戏的结果来判定游戏结束。拷贝如下 calculateWinner 函数并粘贴到文件底部： function calculateWinner(squares) { const lines = [ [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6], ]; for (let i = 0; i < lines.length; i++) { const [a, b, c] = lines[i]; if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) { return squares[a]; } } return null;} 传入长度为 9 的数组，此函数将判断出获胜者，并根据情况返回 “X”，“O” 或 “null”。 接着，在 Board 组件的 render 方法中调用 calculateWinner(squares) 检查是否有玩家胜出。一旦有一方玩家胜出，就把获胜玩家的信息显示出来，比如，“胜者：X” 或者“胜者：O”。现在，我们把 Board 的 render 函数中的 status 的定义修改为如下代码： render() { const winner = calculateWinner(this.state.squares); let status; if (winner) { status = 'Winner: ' + winner; } else { status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O'); } return ( // 其他部分没有修改 最后，修改 handleClick 事件，当有玩家胜出时，或者某个 Square 已经被填充时，该函数不做任何处理直接返回。 handleClick(i) { const squares = this.state.squares.slice(); if (calculateWinner(squares) || squares[i]) { return; } squares[i] = this.state.xIsNext ? 'X' : 'O'; this.setState({ squares: squares, xIsNext: !this.state.xIsNext, }); }","s":"判断出胜者","u":"/docs/FrontEnd/React/React-in/make-game-better","h":"#判断出胜者","p":1221},{"i":1244,"t":"React 是一个用于构建用户界面的 JAVASCRIPT 库。React 主要用于构建 UI，很多人认为 React 是 MVC 中的 V（视图）。React 起源于 Facebook 的内部项目，用来架设 Instagram 的网站，并于 2013 年 5 月开源。React 拥有较高的性能，代码逻辑非常简单，越来越多的人已开始关注和使用它。React如今已成为和vue、Angular并列存在的三大框架之一。 下面将跟随React官方的教程，学习React，下面的流程大部分搬运自官方教程，很多也是自己理解后编写的。 要做出什么东西？ 接下来，我们一起用 React 开发一个井字棋（tic-tac-toe）。你可以提前预览我们要写的游戏的最终效果。如果你看不懂其中的代码，或不熟悉这些语法，别担心！接下来的教程会一步一步帮助你理解 React 及其语法。在继续后面的教程之前，推荐你先玩一下这个井字棋。在游戏里，你会看到游戏面板的右边有一个标有序号的列表。这个列表记录了游戏中的每个步骤，并且会随着游戏的进行不断更新。等你熟悉游戏功能，便可关掉它！我们会在一个简单的模板上开始写起。下一步就是帮做好准备工作，这样你就可以开始游戏开发了。","s":"React介绍","u":"/docs/FrontEnd/React/React-in/react-introduction","h":"#react介绍","p":1242},{"i":1246,"t":"前置条件： 确保你安装了较新版本的 Node.js。","s":"环境准备","u":"/docs/FrontEnd/React/React-in/react-introduction","h":"#环境准备","p":1242},{"i":1248,"t":"npx create-react-app my-app 删除掉新项目中 src/ 文件夹下的所有文件。 caution 不要删除整个 src 文件夹，删除里面的源文件。我们会在接下来的步骤中使用示例代码替换默认源文件。 cd src# 如果你使用 Windows:del *# 然后回到项目文件夹cd .. 在 src/ 文件夹中创建一个名为 index.css 的文件，并拷贝这些 CSS 代码。 Details body { font: 14px \"Century Gothic\", Futura, sans-serif; margin: 20px;}ol, ul { padding-left: 30px;}.board-row:after { clear: both; content: \"\"; display: table;}.status { margin-bottom: 10px;}.square { background: #fff; border: 1px solid #999; float: left; font-size: 24px; font-weight: bold; line-height: 34px; height: 34px; margin-right: -1px; margin-top: -1px; padding: 0; text-align: center; width: 34px;}.square:focus { outline: none;}.kbd-navigation .square:focus { background: #ddd;}.game { display: flex; flex-direction: row;}.game-info { margin-left: 20px;} 在 src/ 文件夹下创建一个名为 index.js 的文件，并拷贝这些 JS 代码。 Details class Square extends React.Component { render() { return ( <button className=\"square\"> {/* TODO */} </button> ); }}class Board extends React.Component { renderSquare(i) { return <Square />; } render() { const status = 'Next player: X'; return ( <div> <div className=\"status\">{status}</div> <div className=\"board-row\"> {this.renderSquare(0)} {this.renderSquare(1)} {this.renderSquare(2)} </div> <div className=\"board-row\"> {this.renderSquare(3)} {this.renderSquare(4)} {this.renderSquare(5)} </div> <div className=\"board-row\"> {this.renderSquare(6)} {this.renderSquare(7)} {this.renderSquare(8)} </div> </div> ); }}class Game extends React.Component { render() { return ( <div className=\"game\"> <div className=\"game-board\"> <Board /> </div> <div className=\"game-info\"> <div>{/* status */}</div> <ol>{/* TODO */}</ol> </div> </div> ); }}// ========================================const root = ReactDOM.createRoot(document.getElementById(\"root\"));root.render(<Game />); 拷贝以下三行代码到 src/ 文件夹下的 index.js 文件的顶部： import React from 'react';import ReactDOM from 'react-dom';import './index.css'; 现在，在项目文件夹下执行 npm start 命令，然后在浏览器访问 http://localhost:3000。这样你就可以在浏览器中看见一个空的井字棋的棋盘了。","s":"Create React App","u":"/docs/FrontEnd/React/React-in/react-introduction","h":"#create-react-app","p":1242},{"i":1251,"t":"React 是一个声明式，高效且灵活的用于构建用户界面的 JavaScript 库。使用 React 可以将一些简短、独立的代码片段组合成复杂的 UI 界面，这些代码片段被称作“组件”。 React 中拥有多种不同类型的组件，我们先从 React.Component 的子类开始介绍： class ShoppingList extends React.Component { render() { return ( //以下是一个react元素 <div className=\"shopping-list\"> <h1>Shopping List for {this.props.name}</h1> <ul> <li>Instagram</li> <li>WhatsApp</li> <li>Oculus</li> </ul> </div> ); }}// 用法示例: <ShoppingList name=\"Mark\" /> 在上面的代码中，使用了组件的形式来告诉React我们希望在屏幕上呈现的内容。正是因为函数式声明，使得在数据发生变化时React能够高效地重新渲染组件。 我们首先定义了一个叫ShoppingList的组件类，每一个组件可以接受一些参数，这些参数被称为props，上面的name=\"Mark\"就是将参数传入组件的过程。然后再通过render渲染到页面。 JSX语法 由React扩展的Js语法，JSX 可以让你更轻松地书写这些函数式声明结构。 上面的这些代码等同于： return React.createElement('div', {className: 'shopping-list'}, React.createElement('h1', /* ... h1 children ... */), React.createElement('ul', /* ... ul children ... */)); 在 JSX 中你可以任意使用 JavaScript 表达式，只需要用一个大括号把表达式括起来。每一个 React 元素事实上都是一个 JavaScript 对象，你可以在你的程序中把它当保存在变量中或者作为参数传递。 前文中的 ShoppingList 组件只会渲染一些内置的 DOM 组件，如<div />、<li />等。但是你也可以组合和渲染自定义的 React 组件。例如，你可以通过 <ShoppingList /> 来表示整个购物清单组件。每个组件都是封装好的，并且可以单独运行，这样你就可以通过组合简单的组件来构建复杂的 UI 界面。","s":"React是什么","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#react是什么","p":1249},{"i":1253,"t":"在前面我们初始化的源代码中，打开 src/index.js ,这些初始代码是我们要开发的小游戏的基础代码。在上面已经提供了 CSS 样式，这样你只需要关注使用 React 来开发这个井字棋了。 通过阅读代码可以看到三个组件：","s":"阅读初始代码","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#阅读初始代码","p":1249},{"i":1255,"t":"src/index.js class Square extends React.Component { render() { return ( <button className=\"square\"> {/* TODO */} </button> ); }} 我们可以看到，Square组件返回了一个类名叫 square 的 button 按钮。React 将这个类名为 square 组件封装成了一个组件，方便后面调用。 在 css 代码中，它有这样的样式： .square { background: #fff; border: 1px solid #999; float: left; font-size: 24px; font-weight: bold; line-height: 34px; height: 34px; margin-right: -1px; margin-top: -1px; padding: 0; text-align: center; width: 34px;}","s":"Square-棋盘格","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#square-棋盘格","p":1249},{"i":1257,"t":"在这个命名为 Board 的函数中利用上面的 Square 的组件创建了一个九宫格,这个九宫格由三行组成，每行由三个棋盘格组成。 class Board extends React.Component { renderSquare(i) { return <Square />; } render() { const status = 'Next player: X'; return ( <div> <div className=\"status\">{status}</div> <div className=\"board-row\"> {this.renderSquare(0)} {this.renderSquare(1)} {this.renderSquare(2)} </div> <div className=\"board-row\"> {this.renderSquare(3)} {this.renderSquare(4)} {this.renderSquare(5)} </div> <div className=\"board-row\"> {this.renderSquare(6)} {this.renderSquare(7)} {this.renderSquare(8)} </div> </div> ); }}","s":"Board-棋盘","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#board-棋盘","p":1249},{"i":1259,"t":"在这个函数中，利用上面的棋盘封装了一个游戏界面。 class Game extends React.Component { render() { return ( <div className=\"game\"> <div className=\"game-board\"> <Board /> </div> <div className=\"game-info\"> <div>{/* status */}</div> <ol>{/* TODO */}</ol> </div> </div> ); }}","s":"Game-游戏主体","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#game-游戏主体","p":1249},{"i":1261,"t":"每个定义的组件之间可以通过 Props 传递参数。我们尝试将数据从 Board 组件传递到 Square 组件中。 在 Board 组件的 renderSquare 方法中，我们将代码改写成下面这样，传递一个名为 value 的 prop 到 Square 当中： class Board extends React.Component { renderSquare(i) { return <Square value={i} />; } ···} 修改 Square 组件中的 render 方法，把 {/*TODO*/} 替换为 {this.props.value} ，以显示上文中传入的值： class Square extends React.Component { render() { return ( <button className=\"square\"> {this.props.value} </button> ); }} 修改前: 修改后，每个格子中都会存在一个数字： 我们刚刚成功地把一个 prop 从父组件 Board “传递”给了子组件 Square 。在 React 应用中，数据通过 props 的传递，从父组件流向子组件。也就是说，我们成功 Board 中传递的参数值（0~8）给了子组件进行处理，并显示出来。","s":"通过 Props 传递数据","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#通过-props-传递数据","p":1249},{"i":1263,"t":"接下来我们试着让棋盘的每一个格子在点击之后能落下一颗 X 作为棋子。 首先，我们把 Square 组件中 render() 方法的返回值中的 button 标签修改为如下内容： class Square extends React.Component { render() { return ( <button className=\"square\" onClick={function () { alert('click') }}> {this.props.value} </button> ); }} 如果此刻点击某个格子，浏览器会弹出提示框。触发事件 onClick ,显示出提示：“click”。在这里 alert 是弹出事件，括号里面的是弹出参数。 JavaScript 箭头函数 为了少输入代码，同时为了避免 this 造成的困扰，我们在这里使用箭头函数 来进行事件处理，如下所示： onClick={() => alert('click')} 此处使用了 onClick={() => alert('click')} 的方式向 onClick 这个 prop 传入一个函数。 React 将在单击时调用此函数。但很多人经常忘记编写 () =>，而写成了 onClick={alert('click')}，这种常见的错误会导致每次这个组件渲染的时候都会触发弹出框。 接下来，我们希望 Square 组件可以“记住”它被点击过，然后用 “X” 来填充对应的方格。我们用 state 来实现所谓“记忆”的功能。 可以通过在 React 组件的构造函数中设置 this.state 来初始化 state。this.state 应该被视为一个组件的私有属性。我们在 this.state 中存储当前每个方格（Square）的值，并且在每次方格被点击的时候改变这个值。 首先，我们向这个 class 中添加一个构造函数，用来初始化 state： React 构造函数 constructor 函数时组件最先执行的函数。 class childen extends react.Component{ constructor(props){ super(props); this.state={ attr1:\"\", } }} spuer()： 注意在定义组件的时候可以没用constructor方法，一旦定义，就必须使用spuer方法，这不是react规定的而是es6要求，具体原因如下： 首先，我们向这个 class 中添加一个构造函数，用来初始化 state： class Square extends React.Component { constructor(props) { super(props); this.state = { // 用于记忆状态 value: null, } } render() { return ( <button className=\"square\" onClick={() => alert(\"Click!\")}> {this.props.value} </button> ); }} 现在，我们来修改一下 Square 组件的 render 方法，这样，每当方格被点击的时候，就可以显示当前 state 的值了： 在 <button> 标签中，把 this.props.value 替换为 this.state.value。 将 onClick={...} 事件监听函数替换为 onClick={() => this.setState({value: 'X'})}。 为了更好的可读性，将 className 和 onClick 的 prop 分两行书写。 修改之后，Square 组件中 render 方法的返回值中的 <button> 标签就变成了下面这样： class Square extends React.Component { constructor(props) { super(props); this.state = { // 用于记忆状态 value: null, } } render() { return ( <button className=\"square\" onClick={() => this.setState({ value: 'x' })}> {this.state.value} </button> ); }} 每次在组件中调用 setState 时，React 都会自动更新其子组件。","s":"给组件添加交互功能","u":"/docs/FrontEnd/React/React-in/React.jsHello","h":"#给组件添加交互功能","p":1249},{"i":1265,"t":"文章信息 原文地址：Learning React.js is easier than you think 原文作者：Samer Buna 译文出自：掘金翻译计划 本文永久链接：https://github.com/xitu/gold-miner/blob/master/TODO/learning-react-js-is-easier-than-you-think.md 译者：Cherry 校对者：LeviDing、undead25","s":"React.js基本用法","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"","p":1264},{"i":1267,"t":"React 是围绕可重用组件的概念设计的。你定义小组件并将它们组合在一起形成更大的组件。 无论大小，所有组件都是可重用的，甚至在不同的项目中也是如此。 React 组件最简单的形式，就是一个普通的 JavaScript 函数： function Button (props) { // 这里返回一个 DOM 元素，例如： return <button type=\"submit\">{props.label}</button>;}// 将按钮组件呈现给浏览器，在这里，label是一个props（参数）ReactDOM.render(<Button label=\"Save\" />, mountNode) 括号中的 button 标签将稍后解释。现在不要担心它们。ReactDOM 也将稍后解释，但如果你想测试这个例子和所有接下来的例子，上述 render 函数是必须的。（React 将要接管和控制的是 ReactDOM.render 的第 2 个参数即目标 DOM 元素）。在 jsComplete REPL 中，你可以使用特殊的变量 mountNode。 组件化的注意事项： 组件名称首字母大写，Button。必须要这样做是因为我们将处理 HTML 元素和 React 元素的混合。小写名称是为 HTML 元素保留的。事实上，将 React 组件命名为 “button” 然后你就会发现 ReactDOM 会忽略这个函数，仅仅是将其作为一个普通的空 HTML 按钮来渲染。 每个组件都接收一个属性列表，就像 HTML 元素一样。在 React 中，这个列表被称为属性。虽然你可以将一个函数随意命名。 在上面 Button 函数组件的返回输出中，我们奇怪地写了段看上去像 HTML 的代码。这实际上既不是 JavaScript 也不是 HTML，老实说，这甚至不是 React.js。然而它非常流行，以至于成为 React 应用程序中的默认值。这就是所谓的 JSX，这是一个JavaScript 的扩展。JSX 也是一个折中方案！","s":"React 的组件化模式","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#react-的组件化模式","p":1264},{"i":1269,"t":"上面的代码也可以不使用 JSX 而是用纯 React.js 进行编写： function Button (props) { return React.createElement( \"button\", { type: \"submit\" }, props.label // 声明需要参数 label );}// 要使用 Button，你可以这么做ReactDOM.render( React.createElement(Button, { label: \"Save\" }), mountNode);","s":"关于 JSX","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#关于-jsx","p":1264},{"i":1271,"t":"在 React 顶级 API 中，createElement 函数是主函数。这是你需要学习的 7 个 API 中的 1 个。React 的 API 就是这么小。 就像 DOM 自身有一个 document.createElement 函数来创建一个由标签名指定的元素一样，React 的 createElement 函数是一个高级函数，有和 document.createElement 同样的功能，但它也可以用于创建一个表示 React 组件的元素。当我们使用上面例 2 中的按钮组件时，我们使用的是后者。 不像 document.createElement，React 的 createElement 在接收第二个参数后，接收一个动态参数，它表示所创建元素的子元素。所以 createElement 实际上创建了一个树。 这里就是这样的一个例子： const InputForm = React.createElement( \"form\", { target: \"_blank\", action: \"https://google.com/search\" }, React.createElement(\"div\", null, \"Enter input and click Search\"), React.createElement(\"input\", { className: \"big-input\" }), React.createElement(Button, { label: \"Search\" }));// InputForm 使用 Button 组件，所以我们需要这样做：function Button (props) { return React.createElement( \"button\", { type: \"submit\" }, props.label );}// 然后我们可以通过 .render 方法直接使用 InputFormReactDOM.render(InputForm, mountNode);","s":"例 2：不使用 JSX 编写 React 组件","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-2不使用-jsx-编写-react-组件","p":1264},{"i":1273,"t":"上面例子中的一些事情值得注意： InputForm 不是一个 React 组件；它仅仅是一个 React 元素。这就是为什么我们可以在 ReactDOM.render 中直接使用它并且可以在调用时不使用 <InputForm /> 的原因。 React.createElement 函数在前两个参数后接收了多个参数。从第3个参数开始的参数列表构成了创建元素的子项列表。 我们可以嵌套 React.createElement 调用，因为它是 JavaScript。 当这个元素不需要属性时，React.createElement 的第二个参数可以为空或者是一个空对象。 我们可以在 React 组件中混合 HTML 元素。你可以将 HTML 元素作为内置的 React 组件。 React 的 API 试图和 DOM API 一样，这就是为什么我们在 input 元素中使用 className 代替 class 的原因。我们都希望如果 React 的 API 成为 DOM API 本身的一部分，因为，你知道，它要好得多。 上述的代码是当你引入 React 库的时候浏览器是怎样理解的。浏览器不会处理任何 JSX 业务。然而，我们更喜欢看到和使用 HTML，而不是那些 createElement 调用（想象一下只使用 document.createElement 构建一个网站！）。这就是 JSX 存在的原因。取代上述调用 React.createElement 的方式，我们可以使用一个非常简单类似于 HTML 的语法： const InputForm = <form target=\"_blank\" action=\"https://google.com/search\"> <div>Enter input and click Search</div> <input className=\"big-input\" name=\"q\" /> <Button label=\"Search\" /> </form>;// InputForm “仍然”使用 Button 组件，所以我们也需要这样。// JXS 或者普通的表单都会这样做function Button (props) { // 这里返回一个 DOM 元素。例如： return <button type=\"submit\">{props.label}</button>;}// 然后我们可以直接通过 .render 使用 InputFormReactDOM.render(InputForm, mountNode);","s":"例 3：React 创建元素的 API","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-3react-创建元素的-api","p":1264},{"i":1275,"t":"注意上面的几件事： 这不是 HTML 代码。比如，我们仍然可以使用 className 代替 class。 我们仍在考虑怎样让上述的 JavaScript 看起来像是 HTML。看一下我在最后是怎样添加的。 我们在上面（例 4）中写的就是 JSX。然而，我们要将编译后的版本（例 3）给浏览器。要做到这一点，我们需要使用一个预处理器将 JSX 版本转换为 React.createElement 版本。 这就是 JSX。这是一种折中的方案，允许我们用类似 HTML 的语法来编写我们的 React 组件，这是一个很好的方法。 “Flux” 在头部作为韵脚来使用，但它也是一个非常受欢迎的 应用架构，由 Facebook 推广。最出名的是 Redux，Flux 和 React 非常合适。 JSX，可以单独使用，不仅仅适用于 React。","s":"例 4：为什么在 React 中 JSX 受欢迎","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-4为什么在-react-中-jsx-受欢迎","p":1264},{"i":1277,"t":"在 JSX 中，你可以在一对花括号内使用任何 JavaScript 表达式。 const RandomValue = () => <div> { Math.floor(Math.random() * 100) } </div>;// 使用：ReactDOM.render(<RandomValue />, mountNode);","s":"在 JSX 的任何地方使用 JavaScript","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#在-jsx-的任何地方使用-javascript","p":1264},{"i":1279,"t":"任何 JavaScript 表达式可以直接放在花括号中。这相当于在 JavaScript 中插入 ${} 模板。 这是 JSX 内唯一的约束：只有表达式。例如，你不能使用 if 语句，但三元表达式是可以的。 JavaScript 变量也是表达式，所以当组件接受属性列表时（不包括 RandomValue 组件，props 是可选择的），你可以在花括号里使用这些属性。我们在上述（例 1）的 Button 组件是这样使用的。 JavaScript 对象也是表达式。有些时候我们在花括号中使用 JavaScript 对象，这看起来像是使用了两个花括号，但是在花括号中确实只有一个对象。其中一个用例就是将 CSS 样式对象传递给响应中的特殊样式属性： const ErrorDisplay = ({message}) => <div style={ { color: 'red', backgroundColor: 'yellow' } }> {message} </div>;// 使用ReactDOM.render( <ErrorDisplay message=\"These aren't the droids you're looking for\" />, mountNode);","s":"例 5：在 JSX 中使用 JavaScript 表达式","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-5在-jsx-中使用-javascript-表达式","p":1264},{"i":1281,"t":"注意我解构的只是在属性参数之外的信息。这只是 JavaScript。还要注意上面的样式属性是一个特殊的属性（同样，它不是 HTML，它更接近 DOM API）。我们使用一个对象作为样式属性的值并且这个对象定义样式就像我们使用 JavaScript 那样（我们可以这样做）。 你可以在 JSX 中使用 React 元素。因为这也是一个表达式（记住，一个 React 元素只是一个函数调用）： const MaybeError = ({errorMessage}) => <div> {errorMessage && <ErrorDisplay message={errorMessage} />} </div>;// MaybeError 组件使用 ErrorDisplay 组件const ErrorDisplay = ({message}) => <div style={ { color: 'red', backgroundColor: 'yellow' } }> {message} </div>;// 现在我们使用 MaybeError 组件：ReactDOM.render( <MaybeError errorMessage={Math.random() > 0.5 ? 'Not good' : ''} />, mountNode);","s":"例 6：一个对象传递特殊的 React 样式参数","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-6一个对象传递特殊的-react-样式参数","p":1264},{"i":1283,"t":"上述 MaybeError 组件只会在有 errorMessage 传入或者另外有一个空的 div 才会显示 ErrorDisplay 组件。React 认为 {true}、 {false} {undefined} 和 {null} 是有效元素，不呈现任何内容。 我们也可以在 JSX 中使用所有的 JavaScript 的集合方法（map、reduce 、filter、 concat 等）。因为他们返回的也是表达式： const Doubler = ({value=[1, 2, 3]}) => <div> {value.map(e => e * 2)} </div>;// 使用下面内容 ReactDOM.render(<Doubler />, mountNode);","s":"例 7：一个 React 元素是一个可以通过 {} 使用的表达式","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-7一个-react-元素是一个可以通过--使用的表达式","p":1264},{"i":1285,"t":"请注意我是如何给出上述 value 属性的默认值的，因为这全部都只是 JavaScript。注意我只是在 div 中输出一个数组表达式。React 是完全可以的。它只会在文本节点中放置每一个加倍的值。","s":"例 8：在 {} 中使用数组","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-8在--中使用数组","p":1264},{"i":1287,"t":"简单的函数组件非常适合简单的需求，但是有的时候我们需要的更多。React 也支持通过使用 JavaScript 类来创建组件。这里 Button 组件（在例 1 中）就是使用类的语法编写的。 class Button extends React.Component { render() { return <button>{this.props.label}</button>; }}// 使用（相同的语法）ReactDOM.render(<Button label=\"Save\" />, mountNode);","s":"使用 JavaScript 类写 React 组件","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#使用-javascript-类写-react-组件","p":1264},{"i":1289,"t":"类的语法是非常简单的：定义一个扩展的 React.Component 类（另一个你需要学习的 React 的顶级 API）。该类定义了一个单一的实例函数 —— render()，并使函数返回虚拟 DOM 对象。每一次我们使用基于类的 Button 组件（例如，通过 <Button ... />）,React 将从这个基于类的组件中实例化对象，并在 DOM 树中使用该对象。 这就是为什么上面的例子中我们可以在 JSX 中使用 this.props.label 渲染输出的原因，因为每一个组件都有一个特殊的称为 props 的 实例 属性，这让所有的值传递给该组件时被实例化。 由于我们有一个与组件的单个使用相关联的实例，所以我们可以按照自己的意愿定制该实例。例如，我们可以通过使用常规 JavaScript 构造函数来构造它： class Button extends React.Component { constructor(props) { super(props); this.id = Date.now(); } render() { return <button id={this.id}>{this.props.label}</button>; }}// 使用ReactDOM.render(<Button label=\"Save\" />, mountNode);","s":"例 9：使用 JavaScript 类创建组件","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-9使用-javascript-类创建组件","p":1264},{"i":1291,"t":"我们也可以定义类的原型并且在任何我们希望的地方使用，包括在返回的 JSX 输出的内部： class Button extends React.Component { clickCounter = 0; handleClick = () => { console.log(`Clicked: ${++this.clickCounter}`); }; render() { return ( <button id={this.id} onClick={this.handleClick}> {this.props.label} </button> ); }}// 使用ReactDOM.render(<Button label=\"Save\" />, mountNode);","s":"例 10：自定义组件实例","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-10自定义组件实例","p":1264},{"i":1293,"t":"注意上述例 11 中的几件事情 handleClick 函数使用 JavaScript 新提出的 class-field syntax 语法。这仍然是 stage-2，但是这是访问组件安装实例（感谢箭头函数）最好的选择（因为很多原因）。然而，你需要使用类似 Babel 的编译器解码为 stage-2（或者仅仅是类字段语法）来让上述代码工作。 jsComplete REPL 有预编译功能。 // 错误：onClick={this.handleClick()}// 正确：onClick={this.handleClick}","s":"例 11：使用类的属性（通过单击保存按钮进行测试）","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-11使用类的属性通过单击保存按钮进行测试","p":1264},{"i":1295,"t":"当处理 React 元素中的事件时，我们与 DOM API 的处理方式有两个非常重要的区别： 所有 React 元素属性（包括事件）都使用 camelCase 命名，而不是 lowercase。例如是 onClick 而不是 onclick。 我们将实际的 JavaScript 函数引用传递给事件处理程序，而不是字符串。例如是 onClick={handleClick} 而不是 onClick=\"handleClick\"。 React 用自己的对象包装 DOM 对象事件以优化事件处理的性能，但是在事件处理程序内部，我们仍然可以访问 DOM 对象上所有可以访问的方法。React 将经过包装的事件对象传递给每个调用函数。例如，为了防止表单提交默认提交操作，你可以这样做： class Form extends React.Component { handleSubmit = (event) => { event.preventDefault(); console.log('Form submitted'); }; render() { return ( <form onSubmit={this.handleSubmit}> <button type=\"submit\">Submit</button> </form> ); }}// 使用ReactDOM.render(<Form />, mountNode);","s":"React 中的事件：两个重要的区别","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#react-中的事件两个重要的区别","p":1264},{"i":1297,"t":"以下仅适用于类组件（扩展 React.Component）。函数组件有一个稍微不同的故事。 首先，我们定义了一个模板来创建组件中的元素。 然后，我们在某处使用 React。例如，在 render 内部调用其他的组件，或者直接使用 ReactDOM.render。 然后，React 实例化一个对象然后给它设置 props 然后我们可以通过 this.props 访问。这些属性都是我们在第 2 步传入的。 因为这些全部都是 JavaScript，constructor 方法将会被调用（如果定义的话）。这是我们称之为的第一个：组件生命周期方法。 接下来 React 计算渲染之后的输出方法（虚拟 DOM 节点）。 因为这是 React 第一次渲染元素，React 将会与浏览器连通（代表我们使用 DOM API）来显示元素。这整个过程称为 mounting。 接下来 React 调用另一个生命周期函数，称为 componentDidMount。我们可以这样使用这个方法，例如：在 DOM 上做一些我们现在知道的在浏览器中存在的东西。在此生命周期方法之前，我们使用的 DOM 都是虚拟的。 一些组件的故事到此结束，其他组件得到卸载浏览器 DOM 中的各种原因。在后一种情况发生时，会调用另一个生命周期的方法，componentWillUnmount。 任何 mounted 的元素的状态都可能会改变。该元素的父级可能会重新渲染。无论哪种情况，mounted 的元素都可能接收到不同的属性集。React 的魔力就是这儿，我们实际上需要的正是 React 的这一点！在这一点之前，说实话，我们并不需要 React。 组价的故事还在继续，但是在此之前，我们需要理解我所说的这种状态。","s":"每一个 React 组件都有一个故事：第 1 部分","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#每一个-react-组件都有一个故事第-1-部分","p":1264},{"i":1299,"t":"以下只适用于类组件。我有没有提到有人叫表象而已的部件 dumb？ 状态类是任何 React 类组件中的一个特殊字段。React 检测每一个组件状态的变化，但是为了 React 更加有效，我们必须通过 React 的另一个 API 改变状态字段，这就是我们要学习的另一个 API —— this.setState： class CounterButton extends React.Component { state = { clickCounter: 0, currentTimestamp: new Date(), }; handleClick = () => { this.setState((prevState) => { return { clickCounter: prevState.clickCounter + 1 }; }); }; componentDidMount() { setInterval(() => { this.setState({ currentTimestamp: new Date() }) }, 1000); } render() { return ( <div> <button onClick={this.handleClick}>Click</button> <p>Clicked: {this.state.clickCounter}</p> <p>Time: {this.state.currentTimestamp.toLocaleString()}</p> </div> ); }}// 使用ReactDOM.render(<CounterButton />, mountNode);","s":"React 组件可以具有私有状态","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#react-组件可以具有私有状态","p":1264},{"i":1301,"t":"这可能是最重要的一个例子因为这将是你完全理解 React 基础知识的方式。这个例子之后，还有一些小事情需要学习，但从那时起主要是你和你的 JavaScript 技能。 让我们来看一下例 13，从类开始，总共有两个，一个是一个初始化的有初始值为 0 的 clickCounter 对象和一个从 new Date() 开始的 currentTimestamp。 另一个类是 handleClick 函数，在渲染方法中我们给按钮元素传入 onClick 事件。通过使用 setState 的 handleClick 方法修改了组件的实例状态。要注意到这一点。 另一个我们修改状态的地方是在一个内部的定时器，开始在内部的 componentDidMount 生命周期方法。它每秒钟调用一次并且执行另一个函数调用 this.setState。 在渲染方法中，我们使用具有正常读语法的状态上的两个属性（没有专门的 API）。 现在，注意我们更新状态使用两种不同的方式： 通过传入一个函数然后返回一个对象。我们在 handleClick 函数内部这样做。 通过传入一个正则对象，我们在在区间回调中这样做。 这两种方式都是可以接受的，但是当你同时读写状态时，第一种方法是首选的（我们这样做）。在区间回调中，我们只向状态写入而不读它。当有问题时，总是使用第一个函数作为参数语法。伴随着竞争条件这更安全，因为 setstate 实际上是一个异步方法。 我们应该怎样更新状态呢？我们返回一个有我们想要更新的值的对象。注意，在调用 setState 时，我们全部都从状态中传入一个属性或者全都不。这完全是可以的因为 setState 实际上 合并 了你通过它（返回值的函数参数）与现有的状态，所以，没有指定一个属性在调用 setState 时意味着我们不希望改变属性（但不删除它）。","s":"例 13：setState 的 API","u":"/docs/FrontEnd/React/React-in/ReactBasicuse","h":"#例-13setstate-的-api","p":1264},{"i":1304,"t":"React 是用于构建用户界面的 JavaScript 库。它具有下面的特点：","s":"定义","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#定义","p":1302},{"i":1306,"t":"React 使创建交互式 UI 变得轻而易举。为你应用的每一个状态设计简洁的视图，当数据改变时 React 能有效地更新并正确地渲染组件。 以声明式编写 UI，可以让你的代码更加可靠，且方便调试。","s":"声明式设计","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#声明式设计","p":1302},{"i":1308,"t":"创建拥有各自状态的组件，再由这些组件构成更加复杂的 UI。 组件逻辑使用 JavaScript 编写而非模版，因此你可以轻松地在应用中传递数据，并使得状态与 DOM 分离。","s":"组件化","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#组件化","p":1302},{"i":1310,"t":"无论你现在正在使用什么技术栈，你都可以随时引入 React 来开发新特性，而不需要重写现有代码。 React 还可以使用 Node 进行服务器渲染，或使用 React Native 构建原生移动应用。","s":"一次学习，随处编写","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#一次学习随处编写","p":1302},{"i":1312,"t":"React 组件使用一个名为 render() 的方法，接收输入的数据并返回需要展示的内容。在示例中这种类似 XML 的写法被称为 JSX。被传入的数据可在组件中通过 this.props 在 render() 访问。 // 导入 reactimport React from \"react\";class HelloMessage extends React.Component { render() { return <div>Hello {this.props.name}</div>; }}ReactDOM.render( <HelloMessage name=\"Taylor\" />, document.getElementById(\"hello-example\")); Res Hello Taylor 在上述代码中，我们可以把 HelloMessage 视为一个函数，它可以接受参数 props, 并返回一个 React 元素。当我们在 ReactDOM.render 中调用时，我们传入了一个具有 name 属性的对象作为参数。这个 name 会默认成为 props 的一个成员。而我们在 HelloMessage 组件中通过 this.props.name 来访问这个值。 index.jsClose fileApp.jsClose file export default function App() { return <h1>Hello World</h1> } To enter the code editing mode, press Enter. To exit the edit mode, press Escape You are editing the code. To exit the edit mode, press Escape Click to go backClick to go forwardRefresh preview Open on CodeSandbox","s":"简单组件","u":"/docs/FrontEnd/React/Reactjs/gaishu","h":"#简单组件","p":1302},{"i":1315,"t":"在本项目中，由于需要做一个异步渲染全景图的功能，也就是允许用户上传图片，再通过three.js引擎渲染出全景图显示出来。 由于没有服务器和后台，所以图片的上传和threejs引擎渲染都在前端来完成。 架构如下：","s":"前言","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#前言","p":1313},{"i":1317,"t":"需求分析：将图片从本地获取，然后将其转化为字符串数据流的形式保存到data中，方便threejs引擎调用。","s":"图片的上载和编码","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#图片的上载和编码","p":1313},{"i":1319,"t":"data() { return { ··· picurl: '', //用于存放base64数据流 ··· } }","s":"创建data存放","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#创建data存放","p":1313},{"i":1321,"t":"GetImg() { if (Pictures === null) { // 生成文件上传的控件 Pictures = document.createElement('input') Pictures.setAttribute('type', 'file') Pictures.style.display = 'none' // 更改视图 if (window.addEventListener) { Pictures.addEventListener('change', this.uploadFile, false) } else { Pictures.attachEvent('onchange', this.uploadFile) } document.body.appendChild(Pictures) } Pictures.click() },","s":"编写图片获取函数","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#编写图片获取函数","p":1313},{"i":1323,"t":"上传完图片后，判断图片的大小，并将上传的图片限制在100MB以内。 uploadFile(el) { this.$set(this.temp, 'isdisplay', false); this.$message({ duration: 9000,//设置提示时间 message: '全景图生成中，请耐心等待十秒', type: 'warning' }); if (el && el.target && el.target.files && el.target.files.length > 0) { //this.$set(this.temp, 'img', el); const files = el.target.files[0] const isLt2M = files.size / 1024 / 1024 < 100 //大小限制100MB const size = files.size / 1024 / 1024 console.log(size) // 判断上传文件的大小 if (!isLt2M) { this.$message.error('上传头像图片大小不能超过100MB!') } else if (files.type.indexOf('image') === -1) { //如果不是图片格式 // this.$dialog.toast({ mes: '请选择图片文件' }); this.$message.error('请选择图片文件'); } else { const that = this; const reader = new FileReader(); // 创建读取文件对象 reader.readAsDataURL(el.target.files[0]); // 发起异步请求，读取文件 reader.onload = function () { // 文件读取完成后 // 读取完成后，将结果赋值给img的src that.picurl = this.result; console.log(this.result); }; setTimeout(() => { this.init(); }, 7000) } }}, 下面的readAsDataURL语句会把图片读为base64编码： reader.readAsDataURL(el.target.files[0]); 然后将其作为string数据流保存到data中。 reader.onload = function () { // 文件读取完成后 // 读取完成后，将结果赋值给img的src that.picurl = this.result; console.log(this.result);};","s":"转码为base64编码","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#转码为base64编码","p":1313},{"i":1325,"t":"由于没有后台，所以不能使用正常的图片作为参数交给threejs进行处理，所以我们使用刚刚得到的base64数据流作为参数制作纹理。这个问题困扰了很久，最后到reddit上的这篇文章找到了解决方案。 //加载全景图资源const image = new Image();image.src = this.picurl; //获取前面保存的base64编码var texture1 = new THREE.Texture(); //创建材质贴图texture1.image = image; // 获取贴图图片image.onload = function () { texture1.needsUpdate = true; // 检测贴图是否变化，重新渲染};var geometry = new THREE.SphereGeometry(130, 256, 256); // 创建球体网格模型var material = new THREE.MeshLambertMaterial({ map: texture1, //使用base64贴图 side: THREE.DoubleSide, //使摄影机内部能够看到贴图,双面渲染});","s":"three.js使用base64编码制作texture纹理","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#threejs使用base64编码制作texture纹理","p":1313},{"i":1327,"t":"最开始执行上面的步骤的时候，调用 this.init() 函数之后，提示dom对象不存在。原因在于，我设置了点击 upload 按钮之后触发页面刷新，更改页面，这个渲染对象threeDom在页面刷新之后才被挂载，而在这个dom挂载之前，threejs已经开始操作dom了！！！，因此它会提示找不到这个dom，从而无法运行。 如何解决这个问题？ 答案就是设置等待,让init异步执行，使threejs等待一段时间，待threeDom挂载完成后再开始操作dom。 setTimeout(() => { this.init(); //等待一段时间后再初始化threejs}, 7000) 在upload之后等待一段时间，待页面刷新完成后再初始化threejs。","s":"异步渲染","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#异步渲染","p":1313},{"i":1329,"t":"Details","s":"实现效果","u":"/docs/FrontEnd/threejsPano/async-render-panorama","h":"#实现效果","p":1313},{"i":1332,"t":"本全景图引擎是使用知名的3d JavaScript库——three.js构建的。下面将记录创建threejs引擎的过程。","s":"前言","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#前言","p":1330},{"i":1334,"t":"渲染器可以比喻为拍戏时候的拍摄地点。 首先，创建渲染器对象。渲染器与HTML中的渲染窗口对接，包含了窗口宽度、窗口高度窗口背景颜色等尺寸。然后使用vue的dom操作将渲染区域渲染到容器中. <template><div ref='threeDom'></div>// 渲染窗口容器</template><script>rendererInit() { //初始化渲染器 var width = 1100; //窗口宽度 var height = 600; //窗口高度 this.renderer = new THREE.WebGLRenderer({ antialias: true, //抗锯齿,提高全景图质量 }); this.renderer.setClearColor(0xffffff); //添加背景颜色 this.renderer.setSize(width, height); // 设定渲染器尺寸 this.renderer.setPixelRatio(window.devicePixelRatio); //设定屏幕像素 this.$refs.threeDom.appendChild(this.renderer.domElement); // 将},</script>","s":"渲染器（renderer）","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#渲染器renderer","p":1330},{"i":1336,"t":"初始化场景时需要设定场景中的照明颜色和强度,以及设定辅助坐标系(本项目中辅助坐标系已经隐藏) sceneInit(){ this.scene = new THREE.Scene(); //初始化场景 var ambient = new THREE.AmbientLight(0x444444, 3); //添加光源颜色和光照强度 var axisHelper = new THREE.AxesHelper(0); //参数设为0用于隐藏坐标系 this.scene.add(ambient, axisHelper); //渲染到场景中 }","s":"场景（scene）","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#场景scene","p":1330},{"i":1338,"t":"将全图片资源贴到创建的球体模型上,让摄像机在球体中心向四周张望,实现全景图预览的效果.创建球体网格模型，设置THREE.DoubleSide 双面渲染，这样才可以看到全景图。 modelling(){ //开始建立模型 this.mygroup = new THREE.Group(); var textureLoader = new THREE.TextureLoader(); //创建纹理贴图加载器 var img = textureLoader.load(require('../../public/img/main.jpeg')); //使用加载器加载本地纹理 var geometry = new THREE.SphereGeometry(130, 256, 256); // 创建球体网格模型 var material = new THREE.MeshLambertMaterial({ map: img, //设置贴图属性,使用图片贴图 side: THREE.DoubleSide, //双面渲染 }); var meshSphere = new THREE.Mesh(geometry, material); //创建网格模型对象Mesh meshSphere.name = '球体容器'; this.mygroup.add(meshSphere); this.scene.add(this.mygroup);// 添加到场景},","s":"创建球体网格模型","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#创建球体网格模型","p":1330},{"i":1340,"t":"使用canvas创建场景中的提示文字,用于切换场景提示. modelling(){ //开始建立模型 ... this.mygroup = new THREE.Group(); var canvasText = this.getcanvers('切换场景'); //调用函数,创建canvas对象 var texture = new THREE.CanvasTexture(canvasText); var geometryText = new THREE.PlaneGeometry(16, 10, 60, 60); //生成一个平面模型 var materialText = new THREE.MeshPhongMaterial({ map: texture, // 设置纹理贴图 side: THREE.DoubleSide, //双面渲染 }); var meshText = new THREE.Mesh(geometryText, materialText); meshText.name = '切换场景'; meshText.position.set(40, 20, -90) this.mygroup.add(meshText); this.scene.add(this.mygroup);},getcanvers(text) { //生成canvers图案函数 var canvasText = document.createElement(\"canvas\"); var c = canvasText.getContext('2d'); // 矩形区域填充背景 c.fillStyle = \"#FFFFFF\"; //canver背景 c.fillRect(0, 0, 300, 200); //生成一个矩形 c.translate(160, 80); c.fillStyle = \"#000000\"; //文字颜色颜色 c.font = \"bold 100px 宋体\"; //字体样式 c.textBaseline = \"middle\"; c.textAlign = \"center\"; //文本居中 c.fillText(text, 0, 0); var texture = new THREE.CanvasTexture(canvasText); //Canvas纹理 var geometryText = new THREE.PlaneGeometry(16, 10, 60, 60); //矩形平面初始化 var materialText = new THREE.MeshPhongMaterial({ map: texture, // 设置纹理贴图 side: THREE.DoubleSide, //双面渲染 }); var meshText = new THREE.Mesh(geometryText, materialText); meshText.name = text; meshText.position.set(40, 20, -90); return canvasText;},","s":"创建场景切换提示文字","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#创建场景切换提示文字","p":1330},{"i":1342,"t":"场景切换模块负责在场景发生双击事件之后寻找最近的点来响应该事件。首先要在初始化中监听双击事件。three.js 提供了一个THREE.Raycaster()扫描射线。它能够检测出鼠标在3D场景中的具体位置，Raycaster射线会记录与之相交几何体，并以数组的形式从近到远返回对应模型的mesh ,只需要向射线中传入鼠标的位置和当前相机即可,这样我们就可以根据模型的名称获取当前点击的那个模型并触发对应的事件。 init(){ this.$refs.threeDom.addEventListener('dblclick', this.onMouseDblclick); //添加事件监听},onMouseDblclick(event){ // 当双击事件触发时 // raycaster返回检测到的对象，最前面的是最近的数组。 event.preventDefault(); //阻止默认的动作执行 var raycaster = new THREE.Raycaster(); //生成射线对象 // 参数： // Raycaster( origin : Vector3, direction : Vector3, near : Float, far : Float ) // origin —— 光线投射的原点向量。 // direction —— 向射线提供方向的方向向量，应当被标准化。 // near —— 返回的所有结果比near远。near不能为负值，其默认值为0。 // far —— 返回的所有结果都比far近。far不能小于near，其默认值为Infinity（正无穷。） var mouse = new THREE.Vector2(); // 创建鼠标三维向量，向射线传参 var container = this.$refs.threeDom; // 获取渲染窗口的dom let getBoundingClientRect = container.getBoundingClientRect(); // 创建客户端动作对象，获取客户做出的动作 mouse.x = ((event.clientX - getBoundingClientRect.left) / container.offsetWidth) * 2 - 1; // 计算鼠标三维向量中的x分量大小 mouse.y = -((event.clientY - getBoundingClientRect.top) / container.offsetHeight) * 2 + 1; // 计算鼠标三维向量中的y分量大小 raycaster.setFromCamera(mouse, this.camera); // 设置看向射线的摄像机 var intersects = raycaster.intersectObjects(this.scene.children[2].children); //检测所有在射线与物体之间，包括或不包括后代的相交部分。返回结果时，相交部分将按距离进行排序，最近的位于第一个。 if (intersects.length != 0) { for (var item of intersects) { if (item.object.name != '闪现'||item.object.name != '返回') { //找到标签对应的操作类型，如果在空白处点击，忽略 this.action.paused = true; //停止旋转 this.$confirm('是否切换场景?', '提示', { //调用element交互弹出通知 confirmButtonText: '切换', cancelButtonText: '取消', type: 'warning' }).then(() => { this.action.paused = false; //开启旋转 if (item.object.name == '闪现') { this.changeScene('enter'); //改变页面场景 } else if (item.object.name == '返回') { this.changeScene('back'); //改变页面场景 } }).catch(() => { this.action.paused = false; //开启旋转 }); break; } } } else { //未选中状态 console.log(\"未选中状态\"); }},","s":"场景切换","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#场景切换","p":1330},{"i":1344,"t":"把透视摄像机放在房间的中心。使用透视相机。 cameraInit() { //初始化相机 var width = 800; //窗口宽度 var height = 800; //窗口高度 this.camera = new THREE.PerspectiveCamera(90, width / height, 1, 1000); //使用透视相机 this.camera.position.set(0, 0, 10); //设置相机位置 this.camera.lookAt(new THREE.Vector3(0, 0, 0)); // 相机看向},","s":"相机位置","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#相机位置","p":1330},{"i":1346,"t":"控制器用于感知鼠标在场景中的滚动，让控制器围绕中心焦点旋转。 controlInit(){ //初始化控制器 this.controls = new OrbitControls(this.camera, this..threeDom); // 初始化 this.controls.target.set(0, 0, 0); // 设置控制器的焦点，使控制器围绕这个焦点进行旋转 this.controls.minDistance = 0; // 设置移动的最短距离（默认为零） this.controls.maxPolarAngle = Math.PI; //绕垂直轨道的距离（范围是0-Math.PI,默认为Math.PI） this.controls.maxDistance = 70; // 设置移动的最长距离（默认为无穷） this.controls.enablePan = false; //禁用右键功能 this.controls.addEventListener('change', this.refresh); //监听鼠标、键盘事件，并更新页面渲染},refresh(){ //刷新页面 this.renderer.render(this.scene, this.camera); //执行渲染操作 this.stats.update(); //更新性能监控的值 }, 自动滚动操作。 addAnimation(){ //添加并开启动画 this.clock = new THREE.Clock(); // 创建three.js 时钟对象 var times = [0, 3600]; // 帧动画序列，采用3600帧 var position_x = [0, 360]; //一周的角度，0~360 var keyframe = new THREE.KeyframeTrack('meshSphere.rotation[y]', times, position_x); var duration = 100; //持续时间 var cilp = new THREE.AnimationClip('sphereRotate', duration, [keyframe]); //剪辑 keyframe对象 this.mixer = new THREE.AnimationMixer(this.mygroup); //动画混合实例 this.action = this.mixer.clipAction(cilp); this.action.timeScale = 1; //播放速度 this.action.setLoop(THREE.LoopPingPong).play(); // 循环播放 this.animate(); //开启动画 }, animate() { //循环渲染 this.rotateAnimate = requestAnimationFrame(this.animate); this.renderer.render(this.scene, this.camera); this.update(); // 刷新页面渲染 }","s":"初始化控制器","u":"/docs/FrontEnd/threejsPano/create-pano-engine","h":"#初始化控制器","p":1330},{"i":1349,"t":"使用npm指令安装。 npm install three","s":"在vue工程中安装threejs","u":"/docs/FrontEnd/threejsPano/install-threejs-in-vue","h":"#在vue工程中安装threejs","p":1347},{"i":1351,"t":"<script>import * as THREE from \"three\";...</script>","s":"在engine.vue中声明threejs","u":"/docs/FrontEnd/threejsPano/install-threejs-in-vue","h":"#在enginevue中声明threejs","p":1347},{"i":1353,"t":"npm install three-orbit-controls 然后在vue组件中声明。 <script>import * as THREE from \"three\";const OrbitControls = require('three-orbit-controls')(THREE);...</script> 同时，安装模型材质加载插件、性能检测插件。 npm i --save three-obj-mtl-loadernpm i three-fbx-loadernpm i three-stats 然后将其配置到vue页面。 <script> import axios from 'axios'; import * as THREE from \"three\"; import * as TrackballControls from 'three-trackballcontrols' import * as ThreeStats from 'three-stats' import { OBJLoader, MTLLoader } from 'three-obj-mtl-loader'; const OrbitControls = require('three-orbit-controls')(THREE); ···</script> 到这里，threejs已经安装完成了。 参考文章 【vue+Three.js快速实现全景图】（https://www.jianshu.com/p/b31cd297d333）","s":"安装操作控制插件OrbitControls.js","u":"/docs/FrontEnd/threejsPano/install-threejs-in-vue","h":"#安装操作控制插件orbitcontrolsjs","p":1347},{"i":1356,"t":"需要编写一个展示前景图的网站，需要具有全景图展示、上传全景图并渲染结果的功能，因此选定使用vue快速构建前端界面，使用three.js搭建全景图引擎。 页面构成如下： 页面上部是logo区和github仓库链接，页面左边是导航栏，分别对应首页、场景（包含星空、拉萨、海滩日落四个子界面）、上传预览、关于四个主要功能区。","s":"前言","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#前言","p":1354},{"i":1358,"t":"vue-cli的优点 vue-cli是vue官方提供的脚手架，具有比较成熟的vue项目架构设计，而且会跟随vue版本的更迭而更新。它提供一套本地测试服务器，实现了项目代码修改的热更新。集成了一套打包方案，能够快速部署生成生产环境。","s":"使用vue-cli初始化项目","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#使用vue-cli初始化项目","p":1354},{"i":1360,"t":"在D:\\desk\\test文件夹下建立工程。 cd D:\\desk\\testvue init webpack csspano 命令行会要求填写相关信息，按照提示填写即可。","s":"初始化项目","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#初始化项目","p":1354},{"i":1362,"t":"npm run dev 就可以在浏览器中打开预览了，是vue默认的初始界面。","s":"启动项目","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#启动项目","p":1354},{"i":1364,"t":"工程结构如图： node_modules文件夹 vue项目的文件依赖存放在这个文件夹。 public文件夹 存放页面图标和内部资源 package.json文件 存放项目的依赖配置（比如引入vuex，element-UI） vue.config.js文件 vue 的配置文件 yarn.lock 用来构建依赖关系树 .gitignore git 忽略文件 src文件夹 存放 vue 项目的源代码。其文件夹下的各个文件（文件夹）分别为： ​1. assets​：资源文件，比如存放 css，图片等资源。 ​2. component​：组件文件夹，用来存放 vue 的公共组件（注册于全局，在整个项目中通过关键词便可直接输出）。 ​3. router​:用来存放 ​index.js​，这个 js 用来配置路由 ​4. views​：用来放主体页面，虽然和组件文件夹都是 vue 文件，但 views 下的 vue 文件是可以用来充当路由 view 的。 ​5. main.js​:是项目的入口文件，作用是初始化 vue 实例，并引入所需要的插件。 ​6. app.vue​:是项目的主组件，所有页面都是在该组件下进行切换的。","s":"工程结构","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#工程结构","p":1354},{"i":1366,"t":"入口组件用于放全局显示的组件，包含导航栏等公共组件。 在这个组件中编写页面的导航栏样式、LOGO样式和相关链接。 <!--app.vue--><template> <div class=\"main\" id=\"app\" oncontextmenu=\"return false\" style=\"background-color: #ffffff8a; min-height: 1100px\"> <template> <el-backtop></el-backtop> </template> <div class=\"dsr\" style=\"width: 110%; overflow: hidden\"> <a href=\"https://github.com/inannan423/csspano\" target=\"_blank\"> <div class=\"toptip\"> ❤ 如果你喜欢这个项目，请在Github上给我们一个STAR吧 ★ </div> </a> <router-link class=\"a\" to=\"/\"><img src=\"../src/assets/mylogo.png\" class=\"mylogo\" alt=\"\" /> </router-link> <!-- <a href=\"https://inannan423.github.io\"><img src=\"../src/assets/jet.png\" class=\"git1\" target=\"_blank\" alt=\"Jetzihan\" /></a> --> <a href=\"https://github.com/inannan423/csspano\" target=\"_blank\"><img src=\"../src/assets/github.png\" class=\"git\" alt=\"github\" /></a> </div> <div style=\"margin-top: 107px; background-color: #ffffff; padding: 0\"> <el-row :gutter=\"10\"> <el-col :xs=\"4\" :sm=\"4\" :md=\"4\" :lg=\"4\" style=\"width: 210px; border-right: 0\"> <el-scrollbar style=\"position:fixed;left: -10px; height:100%;width:230px\"> <el-menu default-active=\"1\" unique-opened=\"true\" class=\"el-menu-vertical-demo\" style=\" min-height: 700px;\"> <!-- <el-menu unique-opened=\"true\" class=\"el-menu-vertical-demo\" style=\"min-height: 1000px;\"> --> <router-link class=\"a\" to=\"/\"> <el-menu-item index=\"1\"><img class=\"myicon\" src=\"../src/assets/home.png\" alt=\"\" />Home </el-menu-item> </router-link> <el-submenu index=\"2\" style=\"color: black;\"> <template slot=\"title\"> <img class=\"myicon\" src=\"../src/assets/logo.png\" alt=\"\" /> <span>场景</span> </template> <router-link class=\"a\" to=\"/jisuang\"> <el-menu-item index=\"2-1\"> 极光星空 </el-menu-item> </router-link> <router-link class=\"a\" to=\"/lasa\"> <el-menu-item index=\"2-2\"> 拉萨 </el-menu-item> </router-link> <router-link class=\"a\" to=\"/haitan\"> <el-menu-item index=\"2-3\"> 海滩 </el-menu-item> </router-link> <router-link class=\"a\" to=\"/riluo\"> <el-menu-item index=\"2-4\"> 日落 </el-menu-item> </router-link> </el-submenu> <router-link class=\"a\" to=\"/upload\"> <el-menu-item index=\"3\"><img class=\"myicon\" src=\"../src/assets/media.png\" alt=\"\" />上传图片 </el-menu-item> </router-link> <router-link class=\"a\" to=\"/engine\"> <el-menu-item index=\"4\"><img class=\"myicon\" src=\"../src/assets/about.png\" alt=\"\" />关于 </el-menu-item> </router-link> </el-menu> <a href=\"https://jetzihan.netlify.app\" target=\"_blank\"> <img src=\"./assets/jet.png\" class=\"jets\" alt=\"jet\"></a> </el-scrollbar> </el-col> <el-col class=\"elcol\" :xs=\"20\" :sm=\"20\" :md=\"20\" :lg=\"20\" style=\"margin-top: 50px; margin-left: 320px\"> <!-- 组件化显示内容 --> <router-view></router-view> <!-- 模板 --> <!-- <a href=\"https://console.cloud.tencent.com/tcb/hosting/index?envId=nannan-8gceb5nt124c014d&rid=4&moduleName=&tabId=file\"><img src=\"./assets/rt.png\" class=\"rt\" alt=\"Power.\"></a> --> </el-col> </el-row> </div> </div></template> 实现效果如下：","s":"编写入口组件","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#编写入口组件","p":1354},{"i":1368,"t":"路由函数负责分配页面的跳转逻辑。通过引入view文件夹中的页面来分配页面的路径。 import Vue from 'vue'import engine from '../view/engine'import jiguang from '../view/jiguang'import haitan from '../view/haitan'import lasa from '../view/lasa'import riluo from '../view/riluo'import upload from '../view/upload'import about from '../view/about'import Main from '../view/Main'import Router from 'vue-router'Vue.use(Router)export default new Router({ routes: [ { path: '/', name: 'Main', component: Main }, { path: '/engine', name: 'engine', component: engine }, { path: '/jiguang', name: 'jiguang', component: jiguang }, { path: '/lasa', name: 'lasa', component: lasa }, { path: '/haitan', name: 'haitan', component: haitan }, { path: '/riluo', name: 'riluo', component: riluo }, { path: '/upload', name: 'upload', component: upload } ]}) 到这里，主要的项目配置就完成了。","s":"编写路由函数","u":"/docs/FrontEnd/threejsPano/vue-front-pano","h":"#编写路由函数","p":1354},{"i":1370,"t":"搬运自 Vue.js 官网 操作元素的 class 列表和内联样式是数据绑定的一个常见需求。因为它们都是 attribute，所以我们可以用 v-bind 处理它们：只需要通过表达式计算出字符串结果即可。不过，字符串拼接麻烦且易错。因此，在将 v-bind 用于 class 和 style 时，Vue.js 做了专门的增强。表达式结果的类型除了字符串之外，还可以是对象或数组。","s":"Class 与 Style 绑定","u":"/docs/FrontEnd/vue.js/classbind","h":"","p":1369},{"i":1373,"t":"我们可以传给 v-bind:class 一个对象，以动态地切换 class： <div v-bind:class=\"{ active: isActive }\"></div> 上面的语法表示 active 这个 class 存在与否将取决于数据 property isActive 的 truthiness。 你可以在对象中传入更多字段来动态切换多个 class。此外，v-bind:class 指令也可以与普通的 class attribute 共存。当有如下模板： <div class=\"static\" v-bind:class=\"{ active: isActive, 'text-danger': hasError }\"></div> 和如下 data： data: { isActive: true, hasError: false} 结果渲染为： <div class=\"static active\"></div> 当 isActive 或者 hasError 变化时，class 列表将相应地更新。例如，如果 hasError 的值为 true，class 列表将变为 \"static active text-danger\"。 绑定的数据对象不必内联定义在模板里： <div v-bind:class=\"classObject\"></div> data: { classObject: { active: true, 'text-danger': false }} 渲染的结果和上面一样。我们也可以在这里绑定一个返回对象的计算属性。这是一个常用且强大的模式： <div v-bind:class=\"classObject\"></div> data: { isActive: true, error: null},computed: { classObject: function () { return { active: this.isActive && !this.error, 'text-danger': this.error && this.error.type === 'fatal' } }}","s":"对象语法","u":"/docs/FrontEnd/vue.js/classbind","h":"#对象语法","p":1369},{"i":1375,"t":"我们可以把一个数组传给 v-bind:class，以应用一个 class 列表： <div v-bind:class=\"[activeClass, errorClass]\"></div> data: { activeClass: 'active', errorClass: 'text-danger'} 渲染为： <div class=\"active text-danger\"></div> 如果你也想根据条件切换列表中的 class，可以用三元表达式： <div v-bind:class=\"[isActive ? activeClass : '', errorClass]\"></div> 这样写将始终添加 errorClass，但是只有在 isActive 是 truthy 时才添加 activeClass。 不过，当有多个条件 class 时这样写有些繁琐。所以在数组语法中也可以使用对象语法： <div v-bind:class=\"[{ active: isActive }, errorClass]\"></div>","s":"数组语法","u":"/docs/FrontEnd/vue.js/classbind","h":"#数组语法","p":1369},{"i":1377,"t":"这个章节假设你已经对 Vue 组件 有一定的了解。当然你也可以先跳过这里，稍后再回过头来看。 当在一个自定义组件上使用 class property 时，这些 class 将被添加到该组件的根元素上面。这个元素上已经存在的 class 不会被覆盖。 例如，如果你声明了这个组件： Vue.component('my-component', { template: '<p class=\"foo bar\">Hi</p>'}) 然后在使用它的时候添加一些 class： <my-component class=\"baz boo\"></my-component> HTML 将被渲染为： <p class=\"foo bar baz boo\">Hi</p> 对于带数据绑定 class 也同样适用： <my-component v-bind:class=\"{ active: isActive }\"></my-component> 当 isActive 为 truthy 时，HTML 将被渲染成为： <p class=\"foo bar active\">Hi</p>","s":"用在组件上","u":"/docs/FrontEnd/vue.js/classbind","h":"#用在组件上","p":1369},{"i":1380,"t":"v-bind:style 的对象语法十分直观——看着非常像 CSS，但其实是一个 JavaScript 对象。CSS property 名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用引号括起来) 来命名： <div v-bind:style=\"{ color: activeColor, fontSize: fontSize + 'px' }\"></div> data: { activeColor: 'red', fontSize: 30} 直接绑定到一个样式对象通常更好，这会让模板更清晰： <div v-bind:style=\"styleObject\"></div> data: { styleObject: { color: 'red', fontSize: '13px' }} 同样的，对象语法常常结合返回对象的计算属性使用。","s":"对象语法","u":"/docs/FrontEnd/vue.js/classbind","h":"#对象语法-1","p":1369},{"i":1382,"t":"v-bind:style 的数组语法可以将多个样式对象应用到同一个元素上： <div v-bind:style=\"[baseStyles, overridingStyles]\"></div>","s":"数组语法","u":"/docs/FrontEnd/vue.js/classbind","h":"#数组语法-1","p":1369},{"i":1384,"t":"当 v-bind:style 使用需要添加浏览器引擎前缀的 CSS property 时，如 transform，Vue.js 会自动侦测并添加相应的前缀。","s":"自动添加前缀","u":"/docs/FrontEnd/vue.js/classbind","h":"#自动添加前缀","p":1369},{"i":1386,"t":"2.3.0+ 从 2.3.0 起你可以为 style 绑定中的 property 提供一个包含多个值的数组，常用于提供多个带前缀的值，例如： <div :style=\"{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }\"></div> 这样写只会渲染数组中最后一个被浏览器支持的值。在本例中，如果浏览器支持不带浏览器前缀的 flexbox，那么就只会渲染 display: flex。","s":"多重值","u":"/docs/FrontEnd/vue.js/classbind","h":"#多重值","p":1369},{"i":1389,"t":"Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。","s":"介绍","u":"/docs/FrontEnd/vue.js/guide","h":"#介绍","p":1387},{"i":1391,"t":"Vue.js 可以直接在原生 html 语法中引用。 <!-- 开发环境版本，包含了有帮助的命令行警告 --><script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script> 或者 <!-- 生产环境版本，优化了尺寸和速度 --><script src=\"https://cdn.jsdelivr.net/npm/vue@2\"></script>","s":"起步","u":"/docs/FrontEnd/vue.js/guide","h":"#起步","p":1387},{"i":1393,"t":"Vue.js 的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进 DOM 的系统： <div id=\"app\"> {{ message }}</div> var app = new Vue({ el: '#app', data: { message: 'Hello Vue!' }}) 完整代码：代码沙盒-vue.js-HelloWorld 我们已经成功创建了第一个 Vue 应用！看起来这跟渲染一个字符串模板非常类似，但是 Vue 在背后做了大量工作。现在数据和 DOM 已经被建立了关联，所有东西都是响应式的。 结果： 注意我们不再和 HTML 直接交互了。一个 Vue 应用会将其挂载到一个 DOM 元素上 (对于这个例子是 #app) 然后对其进行完全控制。那个 HTML 是我们的入口，但其余都会发生在新创建的 Vue 实例内部。 除了上面的文本插值，还可以绑定元素的属性 attribute ： <div id=\"app-2\"> <span v-bind:title=\"message\"> 鼠标悬停几秒钟查看此处动态绑定的提示信息！ </span></div> var app2 = new Vue({ el: '#app-2', data: { message: '页面加载于 ' + new Date().toLocaleString() }}) 以上代码运行后，在悬停时可以显示类似于下面的信息： 页面加载于 2022/8/6 21:36 这里我们遇到了一点新东西。你看到的 v-bind attribute 被称为指令。指令带有前缀 v-，以表示它们是 Vue 提供的特殊 attribute。可能你已经猜到了，它们会在渲染的 DOM 上应用特殊的响应式行为。在这里，该指令的意思是：“将这个元素节点的 title attribute 和 Vue 实例的 message property 保持一致”。也就是说，悬浮提示的内容由 message 决定。","s":"声明式渲染","u":"/docs/FrontEnd/vue.js/guide","h":"#声明式渲染","p":1387},{"i":1395,"t":"使用条件和循环来决定一个元素是否显示： <div id=\"app-3\"> <p v-if=\"seen\">现在你看到我了</p></div> var app3 = new Vue({ el: '#app-3', data: { seen: true }}) 这时 现在你看到我了 能够显示在你的屏幕上，但是如果你将 seen 修改为 false ，这句话就不再显示了。 这个例子演示了我们不仅可以把数据绑定到 DOM 文本或 attribute，还可以绑定到 DOM 结构。此外，Vue 也提供一个强大的过渡效果系统，可以在 Vue 插入/更新/移除元素时自动应用过渡效果。 还有其它很多指令，每个都有特殊的功能。例如，v-for 指令可以绑定数组的数据来渲染一个项目列表： <div id=\"app-4\"> <ol> <li v-for=\"todo in todos\"> {{ todo.text }} </li> </ol></div> var app4 = new Vue({ el: '#app-4', data: { todos: [ { text: '学习 JavaScript' }, { text: '学习 Vue' }, { text: '整个牛项目' } ] }}) res 1.学习 JavaScript 2.学习 Vue 3.整个牛项目","s":"条件与循环","u":"/docs/FrontEnd/vue.js/guide","h":"#条件与循环","p":1387},{"i":1397,"t":"为了让用户和你的应用进行交互，我们可以用 v-on 指令添加一个事件监听器，通过它调用在 Vue 实例中定义的方法： <div id=\"app-5\"> <p>{{ message }}</p> <button v-on:click=\"reverseMessage\">反转消息</button></div> var app5 = new Vue({ el: '#app-5', data: { message: 'Hello Vue.js!' }, methods: { reverseMessage: function () { this.message = this.message.split('').reverse().join('') } }}) 注意在 reverseMessage 方法中，我们更新了应用的状态，但没有触碰 DOM——所有的 DOM 操作都由 Vue 来处理，你编写的代码只需要关注逻辑层面即可。 Vue 还提供了 v-model 指令，它能轻松实现表单输入和应用状态之间的双向绑定。 <div id=\"app-6\"> <p>{{ message }}</p> <input v-model=\"message\"></div> var app6 = new Vue({ el: '#app-6', data: { message: 'Hello Vue!' }}) 结果如下： 当你修改下面输入框中的内容，上面的内容同时也会修改，这就是双向绑定。","s":"处理用户输入","u":"/docs/FrontEnd/vue.js/guide","h":"#处理用户输入","p":1387},{"i":1399,"t":"组件系统是 Vue 的另一个重要概念，因为它是一种抽象，允许我们使用小型、独立和通常可复用的组件构建大型应用。仔细想想，几乎任意类型的应用界面都可以抽象为一个组件树： 在 Vue 里，一个组件本质上是一个拥有预定义选项的一个 Vue 实例。在 Vue 中注册组件很简单： // 定义名为 todo-item 的新组件Vue.component('todo-item', { template: '<li>这是个待办项</li>'})var app = new Vue(...) 现在你可以用它构建另一个组件模板： <ol> <!-- 创建一个 todo-item 组件的实例 --> <todo-item></todo-item></ol> 但是这样会为每个待办项渲染同样的文本，这看起来并不炫酷。我们应该能从父作用域将数据传到子组件才对。让我们来修改一下组件的定义，使之能够接受一个 prop： Vue.component('todo-item', { // todo-item 组件现在接受一个 // \"prop\"，类似于一个自定义 attribute。 // 这个 prop 名为 todo。 props: ['todo'], template: '<li>{{ todo.text }}</li>'}) 现在，我们可以使用 v-bind 指令将待办项传到循环输出的每个组件中： <div id=\"app-7\"> <ol> <!-- 现在我们为每个 todo-item 提供 todo 对象 todo 对象是变量，即其内容可以是动态的。 我们也需要为每个组件提供一个“key”，稍后再 作详细解释。 --> <todo-item v-for=\"item in groceryList\" v-bind:todo=\"item\" v-bind:key=\"item.id\" ></todo-item> </ol></div> groceryList 如下： Vue.component('todo-item', { props: ['todo'], template: '<li>{{ todo.text }}</li>'})var app7 = new Vue({ el: '#app-7', data: { groceryList: [ { id: 0, text: '蔬菜' }, { id: 1, text: '奶酪' }, { id: 2, text: '随便其它什么人吃的东西' } ] }}) res 蔬菜 奶酪 随便其他什么人吃的东西 尽管这只是一个刻意设计的例子，但是我们已经设法将应用分割成了两个更小的单元。子单元通过 prop 接口与父单元进行了良好的解耦。我们现在可以进一步改进 <todo-item> 组件，提供更为复杂的模板和逻辑，而不会影响到父单元。 然而，在比较大型的应用中，我们就有必要将应用程序分割成不同的组件了，这有利于我们进行管理。 像下面这样，我们把这些组件组合在一起就可以构成一个完整的应用了： <div id=\"app\"> <app-nav></app-nav> <app-view> <app-sidebar></app-sidebar> <app-content></app-content> </app-view></div>","s":"创建组件化应用","u":"/docs/FrontEnd/vue.js/guide","h":"#创建组件化应用","p":1387},{"i":1402,"t":"每一个 Vue 应用都是通过一个新的Vue实例开始的。 var vm = new Vue({ // 选项}) Vue 的设计受到 MVVM 模型的启发，因此这里经常使用 vm （ViewModel，双向数据绑定） 作为 Vue 实例的名称。 当创建一个 Vue 实例时，我们传入一个选项对象。通过这些选项就可以描述我们想要的行为。在 Vue 官方的 API 列表中我们就可以浏览完整的选项列表。 一个 Vue 应用由一个通过 new Vue 创建的根 Vue 实例，以及可选的嵌套的、可复用的组件树组成。举个例子，一个 todo 应用的组件树可以是这样的： 根实例└─ TodoList ├─ TodoItem │ ├─ TodoButtonDelete │ └─ TodoButtonEdit └─ TodoListFooter ├─ TodosButtonClear └─ TodoListStatistics 这里的内容之后会在组件系统的部分展开，现在只需要明白所有的 Vue 组件都是一个实例，并接受相同的选项对象。","s":"创建一个 Vue 实例","u":"/docs/FrontEnd/vue.js/instance","h":"#创建一个-vue-实例","p":1400},{"i":1404,"t":"当一个 Vue 实例被创建时，它将 data 对象中的所有的 property 加入到 Vue 的响应式系统中。当这些 property 的值发生改变时，视图将会产生“响应”，即匹配更新为新的值。(也就是数据绑定) // 我们的数据对象var data = { a: 1 }// 该对象被加入到一个 Vue 实例中var vm = new Vue({ data: data})// 获得这个实例上的 property// 返回源数据中对应的字段vm.a == data.a // => true// 设置 property 也会影响到原始数据vm.a = 2data.a // => 2// ……反之亦然data.a = 3vm.a // => 3 当这些数据改变时，视图会进行重渲染。值得注意的是只有当实例被创建时就已经存在于 data 中的 property 才是响应式的。也就是说如果你添加一个新的 property，比如： vm.b = 'hi' 那么对 b 的改动将不会触发任何视图的更新。如果你知道你会在晚些时候需要一个 property，但是一开始它为空或不存在，那么你仅需要设置一些初始值。比如： data: { newTodoText: '', visitCount: 0, hideCompletedTodos: false, todos: [], error: null} 这里唯一的例外是使用 Object.freeze()，这会阻止修改现有的 property，也意味着响应系统无法再追踪变化。 var obj = { foo: 'bar'}Object.freeze(obj)new Vue({ el: '#app', data: obj}) 这里发生了 Object.freeze() 操作，所以下面的 foo 就不再会更新了。 <div id=\"app\"> <p>{{ foo }}</p> <!-- 这里的 `foo` 不会更新！ --> <button v-on:click=\"foo = 'baz'\">Change it</button></div> 除了数据 property，Vue 实例还暴露了一些有用的实例 property 与方法。它们都有前缀 $，以便与用户定义的 property 区分开来。例如： var data = { a: 1 }var vm = new Vue({ el: '#example', data: data})vm.$data === data // => truevm.$el === document.getElementById('example') // => true// $watch 是一个实例方法vm.$watch('a', function (newValue, oldValue) { // 这个回调将在 `vm.a` 改变后调用})","s":"数据和方法","u":"/docs/FrontEnd/vue.js/instance","h":"#数据和方法","p":1400},{"i":1406,"t":"每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等。同时在这个过程中也会运行一些叫做生命周期钩子的函数，这给了用户在不同阶段添加自己的代码的机会。 比如 created 钩子可以用来在一个实例被创建之后执行代码： new Vue({ data: { a: 1 }, created: function () { // `this` 指向 vm 实例 console.log('a is: ' + this.a) }})// => \"a is: 1\" 也有一些其它的钩子，在实例生命周期的不同阶段被调用，如 mounted、updated 和 destroyed。生命周期钩子的 this 上下文指向调用它的 Vue 实例。 caution 不要在选项 property 或回调上使用箭头函数，比如 created: () => console.log(this.a) 或 vm.$watch('a', newValue => this.myMethod())。因为箭头函数并没有 this，this 会作为变量一直向上级词法作用域查找，直至找到为止，经常导致 Uncaught TypeError: Cannot read property of undefined 或 Uncaught TypeError: this.myMethod is not a function 之类的错误。 下图展示了实例的生命周期。你不需要立马弄明白所有的东西，不过随着你的不断学习和使用，它的参考价值会越来越高。","s":"生命周期钩子","u":"/docs/FrontEnd/vue.js/instance","h":"#生命周期钩子","p":1400},{"i":1408,"t":"搬运自 Vue.js 官网","s":"计算属性和侦听器","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"","p":1407},{"i":1410,"t":"模板内的表达式非常便利，但是设计它们的初衷是用于简单运算的。在模板中放入太多的逻辑会让模板过重且难以维护。例如： <div id=\"example\"> {{ message.split('').reverse().join('') }}</div> 在这个地方，模板不再是简单的声明式逻辑。你必须看一段时间才能意识到，这里是想要显示变量 message 的翻转字符串。当你想要在模板中的多处包含此翻转字符串时，就会更加难以处理。 所以，对于任何复杂逻辑，你都应当使用计算属性。","s":"计算属性","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#计算属性","p":1407},{"i":1412,"t":"<div id=\"example\"> <p>Original message: \"{{ message }}\"</p> <p>Computed reversed message: \"{{ reversedMessage }}\"</p></div> var vm = new Vue({ el: '#example', data: { message: 'Hello' }, computed: { // 计算属性的 getter reversedMessage: function () { // `this` 指向 vm 实例 return this.message.split('').reverse().join('') } }}) 这里我们声明了一个计算属性 reversedMessage。我们提供的函数将用作 property vm.reversedMessage 的 getter 函数： console.log(vm.reversedMessage) // => 'olleH'vm.message = 'Goodbye'console.log(vm.reversedMessage) // => 'eybdooG' 你可以打开浏览器的控制台，自行修改例子中的 vm。vm.reversedMessage 的值始终取决于 vm.message 的值。 你可以像绑定普通 property 一样在模板中绑定计算属性。Vue 知道 vm.reversedMessage 依赖于 vm.message，因此当 vm.message 发生改变时，所有依赖 vm.reversedMessage 的绑定也会更新。而且最妙的是我们已经以声明的方式创建了这种依赖关系：计算属性的 getter 函数是没有副作用 (side effect) 的，这使它更易于测试和理解。","s":"基础例子","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#基础例子","p":1407},{"i":1414,"t":"你可能已经注意到我们可以通过在表达式中调用方法来达到同样的效果： <p>Reversed message: \"{{ reversedMessage() }}\"</p> // 在组件中methods: { reversedMessage: function () { return this.message.split('').reverse().join('') }} 我们可以将同一函数定义为一个方法而不是一个计算属性。两种方式的最终结果确实是完全相同的。然而，不同的是计算属性是基于它们的响应式依赖进行缓存的。只在相关响应式依赖发生改变时它们才会重新求值。这就意味着只要 message 还没有发生改变，多次访问 reversedMessage 计算属性会立即返回之前的计算结果，而不必再次执行函数。 这也同样意味着下面的计算属性将不再更新，因为 Date.now() 不是响应式依赖： computed: { now: function () { return Date.now() }} 相比之下，每当触发重新渲染时，调用方法将总会再次执行函数。 我们为什么需要缓存？假设我们有一个性能开销比较大的计算属性 A，它需要遍历一个巨大的数组并做大量的计算。然后我们可能有其他的计算属性依赖于 A。如果没有缓存，我们将不可避免的多次执行 A 的 getter！如果你不希望有缓存，请用方法来替代。","s":"计算属性缓存 vs 方法","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#计算属性缓存-vs-方法","p":1407},{"i":1416,"t":"Vue 提供了一种更通用的方式来观察和响应 Vue 实例上的数据变动：侦听属性。当你有一些数据需要随着其它数据变动而变动时，你很容易滥用 watch——特别是如果你之前使用过 AngularJS。然而，通常更好的做法是使用计算属性而不是命令式的 watch 回调。细想一下这个例子： <div id=\"demo\">{{ fullName }}</div> var vm = new Vue({ el: '#demo', data: { firstName: 'Foo', lastName: 'Bar', fullName: 'Foo Bar' }, watch: { firstName: function (val) { this.fullName = val + ' ' + this.lastName }, lastName: function (val) { this.fullName = this.firstName + ' ' + val } }}) 上面代码是命令式且重复的。将它与计算属性的版本进行比较： var vm = new Vue({ el: '#demo', data: { firstName: 'Foo', lastName: 'Bar' }, computed: { fullName: function () { return this.firstName + ' ' + this.lastName } }}) 好得多了，不是吗？","s":"计算属性 vs 侦听属性","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#计算属性-vs-侦听属性","p":1407},{"i":1418,"t":"计算属性默认只有 getter，不过在需要时你也可以提供一个 setter： // ...computed: { fullName: { // getter get: function () { return this.firstName + ' ' + this.lastName }, // setter set: function (newValue) { var names = newValue.split(' ') this.firstName = names[0] this.lastName = names[names.length - 1] } }}// ... 现在再运行 vm.fullName = 'John Doe' 时，setter 会被调用，vm.firstName 和 vm.lastName 也会相应地被更新。","s":"计算属性的 setter","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#计算属性的-setter","p":1407},{"i":1420,"t":"虽然计算属性在大多数情况下更合适，但有时也需要一个自定义的侦听器。这就是为什么 Vue 通过 watch 选项提供了一个更通用的方法，来响应数据的变化。当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的。 例如： <div id=\"watch-example\"> <p> Ask a yes/no question: <input v-model=\"question\"> </p> <p>{{ answer }}</p></div> <!-- 因为 AJAX 库和通用工具的生态已经相当丰富，Vue 核心代码没有重复 --><!-- 提供这些功能以保持精简。这也可以让你自由选择自己更熟悉的工具。 --><script src=\"https://cdn.jsdelivr.net/npm/axios@0.12.0/dist/axios.min.js\"></script><script src=\"https://cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js\"></script><script>var watchExampleVM = new Vue({ el: '#watch-example', data: { question: '', answer: 'I cannot give you an answer until you ask a question!' }, watch: { // 如果 `question` 发生改变，这个函数就会运行 question: function (newQuestion, oldQuestion) { this.answer = 'Waiting for you to stop typing...' this.debouncedGetAnswer() } }, created: function () { // `_.debounce` 是一个通过 Lodash 限制操作频率的函数。 // 在这个例子中，我们希望限制访问 yesno.wtf/api 的频率 // AJAX 请求直到用户输入完毕才会发出。想要了解更多关于 // `_.debounce` 函数 (及其近亲 `_.throttle`) 的知识， // 请参考：https://lodash.com/docs#debounce this.debouncedGetAnswer = _.debounce(this.getAnswer, 500) }, methods: { getAnswer: function () { if (this.question.indexOf('?') === -1) { this.answer = 'Questions usually contain a question mark. ;-)' return } this.answer = 'Thinking...' var vm = this axios.get('https://yesno.wtf/api') .then(function (response) { vm.answer = _.capitalize(response.data.answer) }) .catch(function (error) { vm.answer = 'Error! Could not reach the API. ' + error }) } }})</script> 在这个示例中，使用 watch 选项允许我们执行异步操作 (访问一个 API)，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。 。","s":"侦听器","u":"/docs/FrontEnd/vue.js/jisuanshuxing","h":"#侦听器","p":1407},{"i":1422,"t":"搬运自 Vue.js 官网","s":"列表渲染","u":"/docs/FrontEnd/vue.js/lvueist","h":"","p":1421},{"i":1424,"t":"我们可以用 v-for 指令基于一个数组来渲染一个列表。v-for 指令需要使用 item in items 形式的特殊语法，其中 items 是源数据数组，而 item 则是被迭代的数组元素的别名。 <ul id=\"example-1\"> <li v-for=\"item in items\" :key=\"item.message\"> {{ item.message }} </li></ul> var example1 = new Vue({ el: '#example-1', data: { items: [ { message: 'Foo' }, { message: 'Bar' } ] }}) 结果： · Foo · Bar 在 v-for 块中，我们可以访问所有父作用域的 property。v-for 还支持一个可选的第二个参数，即当前项的索引。 <ul id=\"example-2\"> <li v-for=\"(item, index) in items\"> {{ parentMessage }} - {{ index }} - {{ item.message }} </li></ul> var example2 = new Vue({ el: '#example-2', data: { parentMessage: 'Parent', items: [ { message: 'Foo' }, { message: 'Bar' } ] }}) 结果： · Parent-0-Foo · Parent-1-Bar 你也可以用 of 替代 in 作为分隔符，因为它更接近 JavaScript 迭代器的语法： <div v-for=\"item of items\"></div>","s":"用 v-for 把一个数组对应为一组元素","u":"/docs/FrontEnd/vue.js/lvueist","h":"#用-v-for-把一个数组对应为一组元素","p":1421},{"i":1426,"t":"你也可以用 v-for 来遍历一个对象的 property。 <ul id=\"v-for-object\" class=\"demo\"> <li v-for=\"value in object\"> {{ value }} </li></ul> new Vue({ el: '#v-for-object', data: { object: { title: 'How to do lists in Vue', author: 'Jane Doe', publishedAt: '2016-04-10' } }}) 结果： 你也可以提供第二个的参数为 property 名称 (也就是键名)： <div v-for=\"(value, name) in object\"> {{ name }}: {{ value }}</div> title: How to do lists in Vue author: Jane Doe publishedAt: 2016-04-10 还可以用第三个参数作为索引： <div v-for=\"(value, name, index) in object\"> {{ index }}. {{ name }}: {{ value }}</div> title: How to do lists in Vue author: Jane Doe publishedAt: 2016-04-10 tip 在遍历对象时，会按 Object.keys() 的结果遍历，但是不能保证它的结果在不同的 JavaScript 引擎下都一致。","s":"在 v-for 里使用对象","u":"/docs/FrontEnd/vue.js/lvueist","h":"#在-v-for-里使用对象","p":1421},{"i":1428,"t":"当 Vue 正在更新使用 v-for 渲染的元素列表时，它默认使用“就地更新”的策略。如果数据项的顺序被改变，Vue 将不会移动 DOM 元素来匹配数据项的顺序，而是就地更新每个元素，并且确保它们在每个索引位置正确渲染。这个类似 Vue 1.x 的 track-by=\"$index\"。 这个默认的模式是高效的，但是只适用于不依赖子组件状态或临时 DOM 状态 (例如：表单输入值) 的列表渲染输出。 为了给 Vue 一个提示，以便它能跟踪每个节点的身份，从而重用和重新排序现有元素，你需要为每项提供一个唯一 key attribute： <div v-for=\"item in items\" v-bind:key=\"item.id\"> <!-- 内容 --></div> 建议尽可能在使用 v-for 时提供 key attribute，除非遍历输出的 DOM 内容非常简单，或者是刻意依赖默认行为以获取性能上的提升。 因为它是 Vue 识别节点的一个通用机制，key 并不仅与 v-for 特别关联。后面我们将在指南中看到，它还具有其它用途。 tip 不要使用对象或数组之类的非基本类型值作为 v-for 的 key。请用字符串或数值类型的值。 更多 key attribute 的细节用法请移步至 key 的 API 文档。","s":"维护状态","u":"/docs/FrontEnd/vue.js/lvueist","h":"#维护状态","p":1421},{"i":1431,"t":"Vue 将被侦听的数组的变更方法进行了包裹，所以它们也将会触发视图更新。这些被包裹过的方法包括： push() pop() shift() unshift() splice() sort() reverse() 你可以打开控制台，然后对前面例子的 items 数组尝试调用变更方法。比如 example1.items.push({ message: 'Baz' })。","s":"变更方法","u":"/docs/FrontEnd/vue.js/lvueist","h":"#变更方法","p":1421},{"i":1433,"t":"变更方法，顾名思义，会变更调用了这些方法的原始数组。相比之下，也有非变更方法，例如 filter()、concat() 和 slice()。它们不会变更原始数组，而总是返回一个新数组。当使用非变更方法时，可以用新数组替换旧数组： example1.items = example1.items.filter(function (item) { return item.message.match(/Foo/)}) 你可能认为这将导致 Vue 丢弃现有 DOM 并重新渲染整个列表。幸运的是，事实并非如此。Vue 为了使得 DOM 元素得到最大范围的重用而实现了一些智能的启发式方法，所以用一个含有相同元素的数组去替换原来的数组是非常高效的操作。","s":"替换数组","u":"/docs/FrontEnd/vue.js/lvueist","h":"#替换数组","p":1421},{"i":1435,"t":"由于 JavaScript 的限制，Vue 不能检测数组和对象的变化。","s":"注意事项","u":"/docs/FrontEnd/vue.js/lvueist","h":"#注意事项","p":1421},{"i":1437,"t":"有时，我们想要显示一个数组经过过滤或排序后的版本，而不实际变更或重置原始数据。在这种情况下，可以创建一个计算属性，来返回过滤或排序后的数组。 例如： <li v-for=\"n in evenNumbers\">{{ n }}</li> data: { numbers: [ 1, 2, 3, 4, 5 ]},computed: { evenNumbers: function () { return this.numbers.filter(function (number) { return number % 2 === 0 }) }} 在计算属性不适用的情况下 (例如，在嵌套 v-for 循环中) 你可以使用一个方法： <ul v-for=\"set in sets\"> <li v-for=\"n in even(set)\">{{ n }}</li></ul> data: { sets: [[ 1, 2, 3, 4, 5 ], [6, 7, 8, 9, 10]]},methods: { even: function (numbers) { return numbers.filter(function (number) { return number % 2 === 0 }) }}","s":"显示过滤/排序后的结果","u":"/docs/FrontEnd/vue.js/lvueist","h":"#显示过滤排序后的结果","p":1421},{"i":1439,"t":"v-for 也可以接受整数。在这种情况下，它会把模板重复对应次数。 <div> <span v-for=\"n in 10\">{{ n }} </span></div>","s":"在 v-for 里使用值范围","u":"/docs/FrontEnd/vue.js/lvueist","h":"#在-v-for-里使用值范围","p":1421},{"i":1441,"t":"类似于 v-if，你也可以利用带有 v-for 的 <template> 来循环渲染一段包含多个元素的内容。比如： <ul> <template v-for=\"item in items\"> <li>{{ item.msg }}</li> <li class=\"divider\" role=\"presentation\"></li> </template></ul>","s":"在 <template> 上使用 v-for","u":"/docs/FrontEnd/vue.js/lvueist","h":"#在-template-上使用-v-for","p":1421},{"i":1443,"t":"tip 注意我们不推荐在同一元素上使用 v-if 和 v-for。 当它们处于同一节点，v-for 的优先级比 v-if 更高，这意味着 v-if 将分别重复运行于每个 v-for 循环中。当你只想为部分项渲染节点时，这种优先级的机制会十分有用，如下： <li v-for=\"todo in todos\" v-if=\"!todo.isComplete\"> {{ todo }}</li> 上面的代码将只渲染未完成的 todo。 而如果你的目的是有条件地跳过循环的执行，那么可以将 v-if 置于外层元素或 <template> <ul v-if=\"todos.length\"> <li v-for=\"todo in todos\"> {{ todo }} </li></ul><p v-else>No todos left!</p>","s":"v-for 与 v-if 一同使用","u":"/docs/FrontEnd/vue.js/lvueist","h":"#v-for-与-v-if-一同使用","p":1421},{"i":1445,"t":"在自定义组件上，你可以像在任何普通元素上一样使用 v-for。 <my-component v-for=\"item in items\" :key=\"item.id\"></my-component> 2.2.0+ 的版本里，当在组件上使用 v-for 时，key 现在是必须的。 然而，任何数据都不会被自动传递到组件里，因为组件有自己独立的作用域。为了把迭代数据传递到组件里，我们要使用 prop： <my-component v-for=\"(item, index) in items\" v-bind:item=\"item\" v-bind:index=\"index\" v-bind:key=\"item.id\"></my-component> 不自动将 item 注入到组件里的原因是，这会使得组件与 v-for 的运作紧密耦合。明确组件数据的来源能够使组件在其他场合重复使用。 下面是一个简单的 todo 列表的完整例子： <div id=\"todo-list-example\"> <form v-on:submit.prevent=\"addNewTodo\"> <label for=\"new-todo\">Add a todo</label> <input v-model=\"newTodoText\" id=\"new-todo\" placeholder=\"E.g. Feed the cat\" > <button>Add</button> </form> <ul> <li is=\"todo-item\" v-for=\"(todo, index) in todos\" v-bind:key=\"todo.id\" v-bind:title=\"todo.title\" v-on:remove=\"todos.splice(index, 1)\" ></li> </ul></div> tip 注意这里的 is=\"todo-item\" attribute。这种做法在使用 DOM 模板时是十分必要的，因为在 <ul> 元素内只有 <li> 元素会被看作有效内容。这样做实现的效果与 <todo-item> 相同，但是可以避开一些潜在的浏览器解析错误。 Vue.component('todo-item', { template: '\\ <li>\\ {{ title }}\\ <button v-on:click=\"$emit(\\'remove\\')\">Remove</button>\\ </li>\\ ', props: ['title']})new Vue({ el: '#todo-list-example', data: { newTodoText: '', todos: [ { id: 1, title: 'Do the dishes', }, { id: 2, title: 'Take out the trash', }, { id: 3, title: 'Mow the lawn' } ], nextTodoId: 4 }, methods: { addNewTodo: function () { this.todos.push({ id: this.nextTodoId++, title: this.newTodoText }) this.newTodoText = '' } }})","s":"在组件上使用 v-for","u":"/docs/FrontEnd/vue.js/lvueist","h":"#在组件上使用-v-for","p":1421},{"i":1449,"t":"npm install vue-cli -g","s":"控制台安装","u":"/docs/FrontEnd/vue.js/VueCli","h":"#控制台安装","p":1446},{"i":1451,"t":"vue -version","s":"检查版本","u":"/docs/FrontEnd/vue.js/VueCli","h":"#检查版本","p":1446},{"i":1453,"t":"vue init webpack ProjectName 接着按照引导配置完成设置即可。","s":"新建项目","u":"/docs/FrontEnd/vue.js/VueCli","h":"#新建项目","p":1446},{"i":1456,"t":"npm install","s":"依赖安装","u":"/docs/FrontEnd/vue.js/VueCli","h":"#依赖安装","p":1446},{"i":1458,"t":"npm start","s":"在浏览器运行","u":"/docs/FrontEnd/vue.js/VueCli","h":"#在浏览器运行","p":1446},{"i":1460,"t":"npm run build","s":"打包","u":"/docs/FrontEnd/vue.js/VueCli","h":"#打包","p":1446},{"i":1462,"t":"搬运自 Vue.js 官网","s":"条件渲染","u":"/docs/FrontEnd/vue.js/vueif","h":"","p":1461},{"i":1464,"t":"v-if 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回 truthy 值的时候被渲染。 <h1 v-if=\"awesome\">Vue is awesome!</h1> 也可以用 v-else 添加一个“else 块”： <h1 v-if=\"awesome\">Vue is awesome!</h1><h1 v-else>Oh no 😢</h1>","s":"v-if","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-if","p":1461},{"i":1466,"t":"因为 v-if 是一个指令，所以必须将它添加到一个元素上。但是如果想切换多个元素呢？此时可以把一个 <template> 元素当做不可见的包裹元素，并在上面使用 v-if。最终的渲染结果将不包含 <template> 元素。 <template v-if=\"ok\"> <h1>Title</h1> <p>Paragraph 1</p> <p>Paragraph 2</p></template>","s":"在 <template> 元素上使用 v-if 条件渲染分组","u":"/docs/FrontEnd/vue.js/vueif","h":"#在-template-元素上使用-v-if-条件渲染分组","p":1461},{"i":1468,"t":"你可以使用 v-else 指令来表示 v-if 的“else 块”： <div v-if=\"Math.random() > 0.5\"> Now you see me</div><div v-else> Now you don't</div> v-else 元素必须紧跟在带 v-if 或者 v-else-if 的元素的后面，否则它将不会被识别。","s":"v-else","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-else","p":1461},{"i":1470,"t":"2.1.0 新增 v-else-if，顾名思义，充当 v-if 的“else-if 块”，可以连续使用： <div v-if=\"type === 'A'\"> A</div><div v-else-if=\"type === 'B'\"> B</div><div v-else-if=\"type === 'C'\"> C</div><div v-else> Not A/B/C</div> 类似于 v-else，v-else-if 也必须紧跟在带 v-if 或者 v-else-if 的元素之后。","s":"v-else-if","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-else-if","p":1461},{"i":1472,"t":"Vue 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。这么做除了使 Vue 变得非常快之外，还有其它一些好处。例如，如果你允许用户在不同的登录方式之间切换： <template v-if=\"loginType === 'username'\"> <label>Username</label> <input placeholder=\"Enter your username\"></template><template v-else> <label>Email</label> <input placeholder=\"Enter your email address\"></template> 那么在上面的代码中切换 loginType 将不会清除用户已经输入的内容。因为两个模板使用了相同的元素，<input> 不会被替换掉——仅仅是替换了它的 placeholder。 自己动手试一试下面的代码，在输入框中输入一些文本，然后按下切换按钮： <div id=\"no-key-example\" class=\"demo\"> <div> <template v-if=\"loginType === 'username'\"> <label>Username</label> <input placeholder=\"Enter your username\"> </template> <template v-else> <label>Email</label> <input placeholder=\"Enter your email address\"> </template> </div> <button @click=\"toggleLoginType\">Toggle login type</button></div><script>new Vue({ el: '#no-key-example', data: { loginType: 'username' }, methods: { toggleLoginType: function () { return this.loginType = this.loginType === 'username' ? 'email' : 'username' } }})</script> 这样也不总是符合实际需求，所以 Vue 为你提供了一种方式来表达“这两个元素是完全独立的，不要复用它们”。只需添加一个具有唯一值的 key attribute 即可： <template v-if=\"loginType === 'username'\"> <label>Username</label> <input placeholder=\"Enter your username\" key=\"username-input\"></template><template v-else> <label>Email</label> <input placeholder=\"Enter your email address\" key=\"email-input\"></template> 现在，每次切换时，输入框都将被重新渲染。请看： <div id=\"key-example\" class=\"demo\"> <div> <template v-if=\"loginType === 'username'\"> <label>Username</label> <input placeholder=\"Enter your username\" key=\"username-input\"> </template> <template v-else> <label>Email</label> <input placeholder=\"Enter your email address\" key=\"email-input\"> </template> </div> <button @click=\"toggleLoginType\">Toggle login type</button></div><script>new Vue({ el: '#key-example', data: { loginType: 'username' }, methods: { toggleLoginType: function () { return this.loginType = this.loginType === 'username' ? 'email' : 'username' } }})</script> 注意，<label> 元素仍然会被高效地复用，因为它们没有添加 key attribute。","s":"用 key 管理可复用的元素","u":"/docs/FrontEnd/vue.js/vueif","h":"#用-key-管理可复用的元素","p":1461},{"i":1474,"t":"另一个用于根据条件展示元素的选项是 v-show 指令。用法大致一样： <h1 v-show=\"ok\">Hello!</h1> 不同的是带有 v-show 的元素始终会被渲染并保留在 DOM 中。v-show 只是简单地切换元素的 CSS property display。 tip 注意，v-show 不支持 <template> 元素，也不支持 v-else。","s":"v-show","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-show","p":1461},{"i":1476,"t":"v-if 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。 v-if 也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。 相比之下，v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。 一般来说，v-if 有更高的切换开销，而 v-show 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 v-show 较好；如果在运行时条件很少改变，则使用 v-if 较好。","s":"v-if vs v-show","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-if-vs-v-show","p":1461},{"i":1478,"t":"tip 不推荐同时使用 v-if 和 v-for。 当 v-if 与 v-for 一起使用时，v-for 具有比 v-if 更高的优先级。","s":"v-if 与 v-for 一起使用","u":"/docs/FrontEnd/vue.js/vueif","h":"#v-if-与-v-for-一起使用","p":1461},{"i":1481,"t":"数据绑定最常见的形式就是使用 “Mustache” 语法 (双大括号) 的文本插值： <span>Message: {{ msg }}</span> 如果你希望这个值自从初始化之后就不再改变，你可以使用 v-once 指令，之后如果发生了数据变动，这个渲染值仍然不会改变。 <span v-once>这个将不会改变: {{ msg }}</span>","s":"文本插值","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#文本插值","p":1479},{"i":1483,"t":"双大括号会将数据解释为普通文本，而非 HTML 代码。为了输出真正的 HTML，你需要使用 v-html 指令： <p>Using mustaches: {{ rawHtml }}</p><p>Using v-html directive: <span v-html=\"rawHtml\"></span></p> 上面的代码做了一下对比，上面的将 HTML 内容渲染为纯文本，下面的通过 v-html 指令输出 HTML 代码并渲染成页面。 结果： danger 你的站点上动态渲染的任意 HTML 可能会非常危险，因为它很容易导致 XSS 攻击。请只对可信内容使用 HTML 插值，绝不要对用户提供的内容使用插值。","s":"HTML 作为插值","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#html-作为插值","p":1479},{"i":1485,"t":"Mustache 语法不能作用在 HTML attribute 上，遇到这种情况应该使用 v-bind 指令： <div v-bind:id=\"dynamicId\"></div> 对于布尔 attribute (它们只要存在就意味着值为 true)，v-bind 工作起来略有不同，在这个例子中： <button v-bind:disabled=\"isButtonDisabled\">Button</button> 如果 isButtonDisabled 的值是 null、undefined 或 false，则 disabled attribute 甚至不会被包含在渲染出来的 <button> 元素中。","s":"属性绑定","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#属性绑定","p":1479},{"i":1487,"t":"迄今为止，在我们的模板中，我们一直都只绑定简单的 property 键值。但实际上，对于所有的数据绑定，Vue.js 都提供了完全的 JavaScript 表达式支持。 {{ number + 1 }}{{ ok ? 'YES' : 'NO' }}{{ message.split('').reverse().join('') }}<div v-bind:id=\"'list-' + id\"></div> 这些表达式会在所属 Vue 实例的数据作用域下作为 JavaScript 被解析。有个限制就是，每个绑定都只能包含单个表达式，所以下面的例子都不会生效。 <!-- 这是语句，不是表达式 -->{{ var a = 1 }}<!-- 流控制也不会生效，请使用三元表达式 -->{{ if (ok) { return message } }} tip 模板表达式都被放在沙盒中，只能访问 全局变量的一个白名单 ，如 Math 和 Date 。你不应该在模板表达式中试图访问用户定义的全局变量。","s":"使用 JavaScript 表达式","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#使用-javascript-表达式","p":1479},{"i":1489,"t":"指令 (Directives) 是带有 v- 前缀的特殊 attribute。指令 attribute 的值预期是单个 JavaScript 表达式 (v-for 是例外情况，稍后我们再讨论)。指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM。回顾我们在介绍中看到的例子： <p v-if=\"seen\">现在你看到我了</p> 这里，v-if 指令将根据表达式 seen 的值的真假来插入/移除 <p> 元素。","s":"指令","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#指令","p":1479},{"i":1491,"t":"一些指令能够接收一个“参数”，在指令名称之后以冒号表示。例如，v-bind 指令可以用于响应式地更新 HTML attribute： <a v-bind:href=\"url\">...</a> 在这里 href 是参数，告知 v-bind 指令将该元素的 href attribute 与表达式 url 的值绑定。 另一个例子是 v-on 指令，它用于监听 DOM 事件： <a v-on:click=\"doSomething\">...</a> 在这里参数是监听的事件名。我们也会更详细地讨论事件处理。","s":"参数","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#参数","p":1479},{"i":1493,"t":"2.6.0 新增 从 2.6.0 开始，可以用方括号括起来的 JavaScript 表达式作为一个指令的参数： <!--注意，参数表达式的写法存在一些约束，如之后的“对动态参数表达式的约束”章节所述。--><a v-bind:[attributeName]=\"url\"> ... </a> 这里的 attributeName 会被作为一个 JavaScript 表达式进行动态求值，求得的值将会作为最终的参数来使用。例如，如果你的 Vue 实例有一个 data property attributeName，其值为 \"href\"，那么这个绑定将等价于 v-bind:href。 同样地，你可以使用动态参数为一个动态的事件名绑定处理函数： <a v-on:[eventName]=\"doSomething\"> ... </a> 在这个示例中，当 eventName 的值为 \"focus\" 时，v-on:[eventName] 将等价于 v-on:focus。","s":"动态参数","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#动态参数","p":1479},{"i":1495,"t":"动态参数预期会求出一个字符串，异常情况下值为 null。这个特殊的 null 值可以被显性地用于移除绑定。任何其它非字符串类型的值都将会触发一个警告。","s":"对动态参数的值的约束","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#对动态参数的值的约束","p":1479},{"i":1497,"t":"动态参数表达式有一些语法约束，因为某些字符，如空格和引号，放在 HTML attribute 名里是无效的。例如： <!-- 这会触发一个编译警告 --><a v-bind:['foo' + bar]=\"value\"> ... </a> 变通的办法是使用没有空格或引号的表达式，或用计算属性替代这种复杂表达式。 在 DOM 中使用模板时 (直接在一个 HTML 文件里撰写模板)，还需要避免使用大写字符来命名键名，因为浏览器会把 attribute 名全部强制转为小写： <!--在 DOM 中使用模板时这段代码会被转换为 `v-bind:[someattr]`。除非在实例中有一个名为“someattr”的 property，否则代码不会工作。--><a v-bind:[someAttr]=\"value\"> ... </a>","s":"对动态参数表达式的约束","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#对动态参数表达式的约束","p":1479},{"i":1499,"t":"修饰符 (modifier) 是以半角句号 . 指明的特殊后缀，用于指出一个指令应该以特殊方式绑定。例如，.prevent 修饰符告诉 v-on 指令对于触发的事件调用 event.preventDefault()： <form v-on:submit.prevent=\"onSubmit\">...</form>","s":"修饰符","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#修饰符","p":1479},{"i":1501,"t":"v- 前缀作为一种视觉提示，用来识别模板中 Vue 特定的 attribute。当你在使用 Vue.js 为现有标签添加动态行为 (dynamic behavior) 时，v- 前缀很有帮助，然而，对于一些频繁用到的指令来说，就会感到使用繁琐。同时，在构建由 Vue 管理所有模板的单页面应用程序 (SPA - single page application) 时，v- 前缀也变得没那么重要了。因此，Vue 为 v-bind 和 v-on 这两个最常用的指令，提供了特定简写：","s":"缩写","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#缩写","p":1479},{"i":1503,"t":"<!-- 完整语法 --><a v-bind:href=\"url\">...</a><!-- 缩写 --><a :href=\"url\">...</a><!-- 动态参数的缩写 (2.6.0+) --><a :[key]=\"url\"> ... </a>","s":"v-bind 缩写","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#v-bind-缩写","p":1479},{"i":1505,"t":"<!-- 完整语法 --><a v-on:click=\"doSomething\">...</a><!-- 缩写 --><a @click=\"doSomething\">...</a><!-- 动态参数的缩写 (2.6.0+) --><a @[event]=\"doSomething\"> ... </a> 它们看起来可能与普通的 HTML 略有不同，但 : 与 @ 对于 attribute 名来说都是合法字符，在所有支持 Vue 的浏览器都能被正确地解析。而且，它们不会出现在最终渲染的标记中。缩写语法是完全可选的，但随着你更深入地了解它们的作用，你会庆幸拥有它们。","s":"v-on 缩写","u":"/docs/FrontEnd/vue.js/vuetemplate","h":"#v-on-缩写","p":1479},{"i":1507,"t":"/*动画-start*/.animated { animation-duration: 1.5s !important; -webkit-animation-duration: 1.5s !important; animation-fill-mode: both !important; -webkit-animation-fill-mode: both !important;}.animated02 { animation-duration: 1s !important; -webkit-animation-duration: 1s !important; animation-fill-mode: both !important; -webkit-animation-fill-mode: both !important;}/*逐渐显示*/.toShow { position: absolute; animation: toShow 1.5s 0.5s; animation: toShow 1.5s 0.5s; animation-fill-mode: both !important; -webkit-animation-fill-mode: both !important;}/* 放大效果*/.enlarge { animation-name: enlarge; -webkit-animation: enlarge;} /*从上到下进入*/.fadeInDown { animation-name: fadeInDown; -webkit-animation: fadeInDown;}/*从下到上进入*/.fadeInUpLeft { animation-name: fadeInUpLeft; -webkit-animation: fadeInUpLeft;}/*从右到左进入*/.fadeInRight { animation-name: fadeInRight; -webkit-animation: fadeInRight;}/*从左到右进入*/.fadeInLeft { animation-name: fadeInLeft; -webkit-animation: fadeInLeft;}/*中心旋转*/.coreRotate { animation-name: coreRotate; -webkit-animation-name: coreRotate;} @keyframes toShow { 0% {opacity: 0;} 100% {opacity: 1;}}@-webkit-keyframes toShow { 0% {opacity: 0;} 100% {opacity: 1;}} @keyframes enlarge{ from { opacity: 0; -ms-transform: scale(0.1,0.1); /* IE 9 */ -webkit-transform: scale(0.1,0.1); /* Safari */ transform: scale(0.1,0.1); /* 标准语法 */ } to { opacity:1; -webkit-transform:scale(1,1); transform:scale(1,1); }} @-webkit-keyframes enlarge /* Safari 与 Chrome */{ from { opacity:0; -ms-transform: scale(0.1,0.1); /* IE 9 */ -webkit-transform: scale(0.1,0.1); /* Safari */ transform: scale(0.1,0.1); /* 标准语法 */ } to { opacity:1; -webkit-transform:scale(1,1); transform:scale(1,1); }} /*从上到下*/@keyframes fadeInDown{ from { opacity: 0; -webkit-transform: translate(0,-1000px); /* Safari */ transform: translate(0,-1000px); /* 标准语法 */ } to { opacity:1; -webkit-transform: translate(0,10px); /* Safari */ transform: translate(0,10px); /* 标准语法 */ }} @-webkit-keyframes fadeInDown /* Safari 与 Chrome */{ from { opacity:0; -webkit-transform: translate(0,-1000px); /* Safari */ transform: translate(0,-1000px); /* 标准语法 */ } to { opacity:1; -webkit-transform: translate(0,10px); /* Safari */ transform: translate(0,10px); /* 标准语法 */ }}/*从左下到右上*/@keyframes fadeInUpLeft{ from { opacity: 0; -webkit-transform: translate(-1000px,1000px); /* Safari */ transform: translate(-1000px,1000px); /* 标准语法 */ } to { opacity:1; -webkit-transform: translate(0,10px); /* Safari */ transform: translate(0,10px); /* 标准语法 */ }} @-webkit-keyframes fadeInUpLeft /* Safari 与 Chrome */{ from { opacity:0; -webkit-transform: translate(-1000px,1000px); /* Safari */ transform: translate(-1000px,1000px); /* 标准语法 */ } to { opacity:1; -webkit-transform: translate(0,10px); /* Safari */ transform: translate(0,10px); /* 标准语法 */ }}/*从右到左进入*/@keyframes fadeInRight{ from { opacity: 0; -webkit-transform: translate(1000px,0); transform: translate(1000px,0); } to { opacity:1; -webkit-transform: translate(10px,0); transform: translate(10px,0); }} @-webkit-keyframes fadeInRight { from { opacity:0; -webkit-transform: translate(1000px,0); transform: translate(1000px,0); } to { opacity:1; -webkit-transform: translate(10px,0); transform: translate(10px,0); }}/*从左到右进入*/@keyframes fadeInLeft{ from { opacity: 0; -webkit-transform: translate(-1000px,0); transform: translate(-1000px,0); } to { opacity:1; -webkit-transform: translate(10px,0); transform: translate(10px,0); }} @-webkit-keyframes fadeInLeft { from { opacity:0; -webkit-transform: translate(-1000px,0); transform: translate(-1000px,0); } to { opacity:1; -webkit-transform: translate(10px,0); transform: translate(10px,0); }} /*绕中心旋转*/@keyframes coreRotate { 5% { transform:rotate(5deg); -ms-transform:rotate(5deg); /* IE 9 */ -webkit-transform:rotate(5deg); /* Safari and Chrome */ } 30% { transform:rotate(-5deg); -ms-transform:rotate(-5deg); -webkit-transform:rotate(-5deg); } 60% { transform:rotate(5deg); -ms-transform:rotate(5deg); -webkit-transform:rotate(5deg); } 90% { transform:rotate(-5deg); -ms-transform:rotate(-5deg); -webkit-transform:rotate(-5deg); }}@-webkit-keyframes coreRotate { 5% { transform:rotate(5deg); -ms-transform:rotate(5deg); /* IE 9 */ -webkit-transform:rotate(5deg); /* Safari and Chrome */ } 30% { transform:rotate(-5deg); -ms-transform:rotate(-5deg); -webkit-transform:rotate(-5deg); } 60% { transform:rotate(5deg); -ms-transform:rotate(5deg); -webkit-transform:rotate(5deg); } 90% { transform:rotate(-5deg); -ms-transform:rotate(-5deg); -webkit-transform:rotate(-5deg); }}/*动画-end*/ 转载 http://t.csdn.cn/RrrTK","s":"css入场动画","u":"/docs/FrontEnd/webBasis/css/css-entry-animation","h":"","p":1506},{"i":1511,"t":"<!DOCTYPE html><html><head> <meta charset=\"utf-8\"> <title>css网格遮罩</title></head><body> <div class=\"mask\"> <!-- 网格遮罩 --> </div> <div class=\"maxbox\"> <!-- 背景图片 --> </div></body><style> * { /* Reset */ margin: 0; padding: 0; } .maxbox { width: 100%; height: 100%; /*background-image: url('https://s.nmxc.ltd/random-img/pc/s11.webp');*/ /*上面的代码可以调用api随机图片*/ background-image: url('https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/20220719201318.png'); background-size: cover; background-repeat: no-repeat; position: absolute; top: 0; left: 0; z-index: -2; /*置底*/ } .mask { position: absolute; width: 100%; height: 100%; background-image: linear-gradient(0deg, rgba(33, 234, 252, 0.632) 1%, rgba(0, 0, 0, 0.563) 5%), linear-gradient(rgba(33, 234, 252, 0.579) 1%, rgba(0, 0, 0, 0.563) 5%); /* 调节深色色块颜色决定图片透明度，越白背景图越亮 浅色色块是横线颜色 */ background-size: 10px 10px; z-index: -1; /*倒数第二层*/ }</style></html>","s":"实现","u":"/docs/FrontEnd/webBasis/css/css-grid-mask","h":"#实现","p":1508},{"i":1515,"t":"<!DOCTYPE html><html lang=\"en\"><head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>css Raining</title></head><body> <div class=\"container\"> <div class=\"rain\"> <span style=\"--speed:15\"></span> <span style=\"--speed:11\"></span> <span style=\"--speed:16\"></span> <span style=\"--speed:17\"></span> <span style=\"--speed:17\"></span> <span style=\"--speed:18\"></span> <span style=\"--speed:13\"></span> <span style=\"--speed:14\"></span> <span style=\"--speed:13\"></span> <span style=\"--speed:11\"></span> <span style=\"--speed:13\"></span> <span style=\"--speed:19\"></span> <span style=\"--speed:13\"></span> <span style=\"--speed:15\"></span> <span style=\"--speed:17\"></span> <span style=\"--speed:16\"></span> </div> </div></body><style> body { background-color: midnightblue; display: flex; justify-content: center; align-items: center; width: 100%; height: 90vh; } .container { /*云的基础底部，一条圆角直线*/ position: relative; width: 110px; height: 30px; background-color: aliceblue; border-radius: 100px; } /* :before 选择器在被选元素的内容前面插入内容。使用 content 属性来指定要插入的内容。 */ /*云上的云角*/ .container::before { content: ''; position: absolute; top: -20px; left: 10px; width: 30px; height: 30px; background-color: aliceblue; border-radius: 50%; box-shadow: 40px 0 0 20px aliceblue; } .rain { position: relative; display: flex; z-index: 1; } /*雨滴*/ .rain span { position: relative; width: 3px; height: 3px; background-color: aliceblue; /*雨滴间距*/ margin: 10px 2px; border-radius: 50%; animation: rain 5s linear infinite; /*核心代码*/ animation-duration: calc(15s / var(--speed)); transform-origin: bottom; } /*雨滴动画*/ @keyframes rain { 0% { transform: translateY(0); } 70% { transform: translateY(100px) scale(1); } 100% { transform: translateY(100px) scale(0); } }</style></html>","s":"源代码","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#源代码","p":1512},{"i":1518,"t":"CSS 中，::before 创建一个伪元素，其将成为匹配选中的元素的第一个子元素。常通过 content 属性来为一个元素添加修饰性的内容。此元素默认为行内元素。 在这里，使用这个伪元素为云添加上面的弧形角。 先用普通样式绘制一条圆角矩形。 .container { /*云的基础底部，一条圆角直线*/ position: relative; width: 110px; height: 30px; background-color: aliceblue; border-radius: 100px; } 再使用伪类绘制上面的圆角。 .container::before { content: ''; position: absolute; top: -20px; left: 10px; width: 30px; height: 30px; background-color: aliceblue; border-radius: 50%; box-shadow: 40px 0 0 20px aliceblue; }","s":"伪类 before","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#伪类-before","p":1512},{"i":1520,"t":"transform-origin CSS 属性让你更改一个元素变形的原点。 在这里设置变换中心为底部。","s":"transform-origin","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#transform-origin","p":1512},{"i":1522,"t":"calc 用于计算出属性值。在 css 中可以定义一些变量，在这里我们定义了一个下落速度变量，这些雨点是通过同一个 css class 控制的，而为了使他们不同时下落，所以我们在每行 span 中重新定义这个 --speed 的值，达到不同速的效果。 .rain span { /* ... */ animation: rain 5s linear infinite; /*核心代码*/ animation-duration: calc(15s / var(--speed)); transform-origin: bottom; } <div class=\"rain\"> <span style=\"--speed:15\"></span> <span style=\"--speed:11\"></span> <span style=\"--speed:16\"></span> <span style=\"--speed:17\"></span> <span style=\"--speed:17\"></span> <span style=\"--speed:18\"></span> <span style=\"--speed:13\"></span> <span style=\"--speed:14\"></span> <span style=\"--speed:13\"></span> <span style=\"--speed:11\"></span> <span style=\"--speed:13\"></span> <span style=\"--speed:19\"></span> <span style=\"--speed:13\"></span> <span style=\"--speed:15\"></span> <span style=\"--speed:17\"></span> <span style=\"--speed:16\"></span> </div>","s":"calc 属性","u":"/docs/FrontEnd/webBasis/css/cssRaining","h":"#calc-属性","p":1512},{"i":1524,"t":"随着前端技术的发展，越来越多的样式需要呈现，但是也产生了许多的问题，因此css技术也在不断发展。这篇文档将记录现代多种CSS技术。","s":"css高阶-高级选择器","u":"/docs/FrontEnd/webBasis/css/cssSelector","h":"","p":1523},{"i":1526,"t":"对页面内所有元素生效，如果希望为页面中所有元素设置特定的边距，就需要像下面这样： *{ margin:1.5rem;} 它给每个元素一个1.5rem的边距。","s":"通用选择器","u":"/docs/FrontEnd/webBasis/css/cssSelector","h":"#通用选择器","p":1523},{"i":1528,"t":"用于那些具有相似属性但是类名不同的元素。 div[class^=\"component_\"]{ border:2px soild blue;} 这个属性选择器可以为 component_label 和 component_title 等的类似元素加上上面的属性。 tip 在这种网页快速生成器中，代码编译时会将部分的css样式加上乱码尾码。因此无法精确确定样式属性，使用上面的代码可以解决这一问题。","s":"属性选择器","u":"/docs/FrontEnd/webBasis/css/cssSelector","h":"#属性选择器","p":1523},{"i":1530,"t":"如果修改导航栏中导航的样式，但是正如上面所说的在网页快速生成的情况下，这些导航是动态生成的，具有不确定的类名，那么就可以使用子组合选择器。 .nav > ul > li > a { font-weight:bold;}","s":"子组合选择器","u":"/docs/FrontEnd/webBasis/css/cssSelector","h":"#子组合选择器","p":1523},{"i":1532,"t":"为了实现不同颜色的表格交替，可以使用伪类。 下面的代码将为奇数行添加绿色的背景颜色。 tbody tr:nth-child(odd){ background-color:green;} 除了还可以使用 odd 奇数参数以外，还可以使用 even 和 n+1 或者 n+3 的属性定位到不同的行。","s":"伪类","u":"/docs/FrontEnd/webBasis/css/cssSelector","h":"#伪类","p":1523},{"i":1535,"t":"HTML (HyperText Markup Language) 不是一门编程语言，而是一种用来告知浏览器如何组织页面的标记语言。HTML 可复杂、可简单，一切取决于开发者。它由一系列的元素（elements）组成，这些元素可以用来包围不同部分的内容，使其以某种方式呈现或者工作。一对标签（tags）可以为一段文字或者一张图片添加超链接，将文字设置为 斜体 ，改变字号，等等。","s":"什么是 HTML","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#什么是-html","p":1533},{"i":1537,"t":"这个元素的主要部分有： 开始标签（Opening tag）：包含元素的名称（本例为 p），被左、右角括号所包围。表示元素从这里开始或者开始起作用 —— 在本例中即段落由此开始。 结束标签（Closing tag）：与开始标签相似，只是其在元素名之前包含了一个斜杠。这表示着元素的结尾 —— 在本例中即段落在此结束。初学者常常会犯忘记包含结束标签的错误，这可能会产生一些奇怪的结果。 内容（Content）：元素的内容，本例中就是所输入的文本本身。 元素（Element）：开始标签、结束标签与内容相结合，便是一个完整的元素。","s":"HTML 标签结构","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#html-标签结构","p":1533},{"i":1539,"t":"在 HTML 中有两种你需要知道的重要元素类别，块级元素和内联元素。 块级元素在页面中以块的形式展现 —— 相对于其前面的内容它会出现在新的一行，其后的内容也会被挤到下一行展现。块级元素通常用于展示页面上结构化的内容，例如段落、列表、导航菜单、页脚等等。一个以 block 形式展现的块级元素不会被嵌套进内联元素中，但可以嵌套在其它块级元素中。 内联元素通常出现在块级元素中并环绕文档内容的一小部分，而不是一整个段落或者一组内容。内联元素不会导致文本换行：它通常出现在一堆文字之间例如超链接元素<a>或者强调元素<em>和 <strong>。","s":"块级元素和内联元素","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#块级元素和内联元素","p":1533},{"i":1541,"t":"不是所有元素都拥有开始标签，内容，结束标签。一些元素只有一个标签，通常用来在此元素所在位置插入/嵌入一些东西。例如：元素<img>是用来在元素<img>所在位置插入一张指定的图片。例子如下： <img src=\"https://roy-tian.github.io/learning-area/extras/getting-started-web/beginner-html-site/images/firefox-icon.png\">","s":"空元素","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#空元素","p":1533},{"i":1543,"t":"属性包含元素的额外信息，这些信息不会出现在实际的内容中。在上述例子中，这个 class 属性给元素赋了一个识别的名字（id），这个名字此后可以被用来识别此元素的样式信息和其他信息。 一个属性必须包含如下内容： 一个空格，在属性和元素名称之间。(如果已经有一个或多个属性，就与前一个属性之间有一个空格。) 属性名称，后面跟着一个等于号。 一个属性值，由一对引号“ ”引起来。","s":"元素的属性","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#元素的属性","p":1533},{"i":1545,"t":"有时你会看到没有值的属性，它是合法的。这些属性被称为布尔属性，他们只能有跟它的属性名一样的属性值。例如 disabled 属性，他们可以标记表单输入使之变为不可用 (变灰色)，此时用户不能向他们输入任何数据。 <input type=\"text\" disabled=\"disabled\"> 在上面的代码中，这个属性值等于其本身，方便起见，我们完全可以将其写成以下形式 (这里还提供了一个非禁止输入的表单元素供您参考，以作为对比)： <!-- 使用 disabled 属性来防止终端用户输入文本到输入框中 --><input type=\"text\" disabled><!-- 下面这个输入框没有 disabled 属性，所以用户可以向其中输入 --><input type=\"text\">","s":"布尔属性","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#布尔属性","p":1533},{"i":1547,"t":"现在我们来学习这些特定元素是怎么被结合起来，从而形成一个完整的 HTML 页面的： <!DOCTYPE html><html> <head> <meta charset=\"utf-8\"> <title>我的测试站点</title> </head> <body> <p>这是我的页面</p> </body></html> 分析如下： <!DOCTYPE html>: 声明文档类型。很久以前，早期的 HTML(大约 1991 年 2 月)，文档类型声明类似于链接，规定了 HTML 页面必须遵从的良好规则，能自动检测错误和其他有用的东西。使用如下： <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> 然而这种写法已经过时了，这些内容已成为历史。只需要知道 <!DOCTYPE html> 是最短有效的文档声明。 <html></html>: <html>元素。这个元素包裹了整个完整的页面，是一个根元素。 <head></head>: <head>元素。这个元素是一个容器，它包含了所有你想包含在 HTML 页面中但不想在 HTML 页面中显示的内容。这些内容包括你想在搜索结果中出现的关键字和页面描述，CSS 样式，字符集声明等等。以后的章节能学到更多关于 <head> 元素的内容。 <meta charset=\"utf-8\">: 这个元素设置文档使用 utf-8 字符集编码，utf-8 字符集包含了人类大部分的文字。基本上他能识别你放上去的所有文本内容。毫无疑问要使用它，并且它能在以后避免很多其他问题。 <title></title>: 设置页面标题，出现在浏览器标签上，当你标记/收藏页面时它可用来描述页面。 <body></body>: <body>元素。包含了你访问页面时所有显示在页面上的内容，文本，图片，音频，游戏等等。 最后更新于：2022-8-01","s":"HTML文档结构","u":"/docs/FrontEnd/webBasis/HTML/HTML-1","h":"#html文档结构","p":1533},{"i":1549,"t":"让我们来回顾一下 HTML 的文档结构： <!DOCTYPE html><html> <head> <meta charset=\"utf-8\"> <title>我的测试页面</title> </head> <body> <p>这是我的页面</p> </body></html> HTML <head> 元素与 <body> 元素不同，它的内容不会在浏览器中显示，它的作用是保存页面的一些元数据。上述示例的 head 元素非常简短： <head> <meta charset=\"utf-8\"> <title>我的测试页面</title></head>","s":"<head> 标签","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"","p":1548},{"i":1551,"t":"<title> 元素，它可以为文档添加标题。 <head> <meta charset=\"utf-8\"> <title>我的测试页面</title></head>","s":"网站标题","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#网站标题","p":1548},{"i":1553,"t":"元数据就是描述数据的数据，而 HTML 有一个“官方的”方式来为一个文档添加元数据——<meta> 元素。","s":"网站元数据","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#网站元数据","p":1548},{"i":1555,"t":"例如： <meta charset=\"utf-8\"> 这个元素简单的指定了文档的字符编码——在这个文档中被允许使用的字符集。utf-8 是一个通用的字符集，它包含了任何人类语言中的大部分的字符。意味着该 web 页面可以显示任意的语言；所以对于你的每一个页面都使用这个设置会是一个好主意！比如说，你的页面可以很好的处理英文和日文： 比如说，如果你将你的字符集设置为 ISO-8859-1，那么页面将出现乱码： info 备注： 一些浏览器（比如 Chrome）会自动修正错误的编码，所以取决于你所使用的浏览器，你或许不会看到这个问题。无论如何，你仍然应该为你的页面手动设置编码为 utf-8，来避免在其他浏览器中可能出现的潜在问题。","s":"指定你的文档中字符的编码","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#指定你的文档中字符的编码","p":1548},{"i":1557,"t":"许多 <meta> 元素包含了 name 和 content 属性: name 指定了 meta 元素的类型；说明该元素包含了什么类型的信息。 content 指定了实际的元数据内容。 这两个 meta 元素对于定义你的页面的作者和提供页面的简要描述是很有用的。让我们看一个例子： <meta name=\"author\" content=\"Chris Mills\"><meta name=\"description\" content=\"The MDN Web Docs Learning Area aims to providecomplete beginners to the Web with all they need to know to getstarted with developing web sites and applications.\"> 指定作者在某些情况下是很有用的：如果你需要联系页面的作者，问一些关于页面内容的问题。一些内容管理系统能够自动获取页面作者的信息，然后用于某些用途。 指定包含关于页面内容的关键字的页面内容的描述是很有用的，因为它可能或让你的页面在搜索引擎的相关的搜索出现得更多（这些行为在术语上被称为：搜索引擎优化，或 SEO。）","s":"添加作者和描述","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#添加作者和描述","p":1548},{"i":1559,"t":"当你在网站上查看源码时，你也会发现其它类型的元数据。你在网站上看到的许多功能都是专有创作，旨在向某些网站（如社交网站）提供可使用的特定信息。","s":"其他类型的元数据","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#其他类型的元数据","p":1548},{"i":1561,"t":"为了进一步丰富你的网站设计，你可以在元数据中添加对自定义图标（favicon，为“favorites icon”的缩写）的引用，这些将在特定的场合（浏览器的收藏，或书签列表）中显示。 这个不起眼的图标已经存在很多很多年了，16x16 像素是这种图标的第一种类型。你可以看见这些图标出现在浏览器每一个打开的标签页中以及书签页中。 页面添加图标的方式有： 将其保存在与网站的索引页面相同的目录中，以 .ico 格式保存（大多数浏览器将支持更通用的格式，如 .gif 或 .png，但使用 ICO 格式将确保它能在如 Internet Explorer 6 那样古老的浏览器显示） 将以下行添加到 HTML 的 <head> 中以引用它： <link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">","s":"在你的站点增加自定义图标","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#在你的站点增加自定义图标","p":1548},{"i":1563,"t":"如今，几乎你使用的所有网站都会使用 CSS 来让网页更加炫酷，并使用 JavaScript 来让网页有交互功能，比如视频播放器、地图、游戏以及更多功能。这些应用在网页中很常见，它们分别使用 <link> 元素以及 <script> 元素。 <link> 元素经常位于文档的头部。这个 link 元素有 2 个属性，rel=\"stylesheet\" 表明这是文档的样式表，而 href 包含了样式表文件的路径： <link rel=\"stylesheet\" href=\"my-css-file.css\"> <script> 元素没必要非要放在文档的 <head> 中，并包含 src 属性来指向需要加载的 JavaScript 文件路径，同时最好加上 defer 以告诉浏览器在解析完成 HTML 后再加载 JavaScript。这样可以确保在加载脚本之前浏览器已经解析了所有的 HTML 内容（如果脚本尝试访问某个不存在的元素，浏览器会报错）。实际上还有很多方法可用于处理加载 JavaScript 的问题，但这是现代浏览器中最可靠的一种方法。 <script src=\"my-js-file.js\" defer></script>","s":"使用外链 css 和 js","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#使用外链-css-和-js","p":1548},{"i":1565,"t":"最后，值得一提的是可以（而且有必要）为站点设定语言，这个可以通过添加 lang 属性到 HTML 开始的标签中来实现，如下所示： <html lang=\"zh-CN\"> 最后更新于：2022-8-01","s":"为文档设置主语言","u":"/docs/FrontEnd/webBasis/HTML/HTMl-2","h":"#为文档设置主语言","p":1548},{"i":1568,"t":"<p>我创建了一个指向<a href=\"https://www.mozilla.org/zh-CN/\">Mozilla 主页</a>的超链接。</p>","s":"超链接结构","u":"/docs/FrontEnd/webBasis/HTML/hyperlink","h":"#超链接结构","p":1566},{"i":1570,"t":"你可能要添加到你的链接的另一个属性是 title（标题）；这旨在包含关于链接的补充信息，例如页面包含什么样的信息或需要注意的事情。 <p>我创建了一个指向<a href=\"https://www.mozilla.org/en-US/\" title=\"了解 Mozilla 使命以及如何参与贡献的最佳站点。\">Mozilla 主页</a >的超链接。</p> 当鼠标指针悬停在链接上时，标题将作为提示信息出现。","s":"title","u":"/docs/FrontEnd/webBasis/HTML/hyperlink","h":"#title","p":1566},{"i":1572,"t":"如上所述，你可以将一些内容转换为链接，甚至是块级元素。例如你想要将一个图像转换为链接，你只需把引用了图像文件的 <img> 元素放到 <a> 标签内。 <a href=\"https://www.mozilla.org/zh-CN/\"> <img src=\"mozilla-image.png\" alt=\"链接至 Mozilla 主页的 Mozilla 标志\"></a> 最后更新于：2022-8-01","s":"块级链接","u":"/docs/FrontEnd/webBasis/HTML/hyperlink","h":"#块级链接","p":1566},{"i":1576,"t":"我们可以轻松放入一张图片： <img src=\"test.jpg\"> 在上述情况中，你的图片必须在你网页的根目录下。 如果这张图片存储在和 HTML 页面同路径的 images 文件夹下（这也是 Google 推荐的做法，利于SEO/索引），那么你可以采用如下形式： <img src=\"images/dinosaur.jpg\"> 你也可以像下面这样使用绝对路径： <img src=\"https://www.example.com/images/dinosaur.jpg\"> 但是这种方式是不被推荐的，这样做只会使浏览器做更多的工作，例如重新通过 DNS 再去寻找 IP 地址。通常我们都会把图片和 HTML 放在同一个服务器上。 caution 大多数图片是有版权的。不要在你的网页上使用一张图片，除非： 你是图片版权所有者 你有图片版权所有者明确的、书面上的使用授权 你有充分的证据证明这张图片是公共领域内的 侵犯版权是违法并且不道德的。此外，在得到授权之前永远不要把你的src属性指向其他人网站上的图片。这被称为\"盗链（hotlinking）\"。同样，盗取其他人的带宽也是违法的。而且这会降低你的页面的加载速度，而且图片可能会在不受你控制的情况下被移走或用别的令人尴尬的东西替换掉。","s":"图片引入","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#图片引入","p":1573},{"i":1578,"t":"下一个我们讨论的属性是 alt ，它的值应该是对图片的文字描述，用于在图片无法显示或不能被看到的情况。例如，上面的例子可以做如下改进： <img src=\"images/dinosaur.jpg\" alt=\"The head and torso of a dinosaur skeleton; it has a large head with long sharp teeth\"> 测试alt 属性最简单的方式就是故意拼错图片文件名，这样浏览器就无法找到该图片从而显示备选的文本。如果我们将上例的图片文件名改为 dinosooooor.jpg，浏览器就不能显示图片，而显示:","s":"备选文本","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#备选文本","p":1573},{"i":1580,"t":"<img src=\"images/dinosaur.jpg\" alt=\"一只恐龙头部和躯干的骨架，它有一个巨大的头，长着锋利的牙齿。\" width=\"400\" height=\"341\"> 在正常的情况下，这不会对显示产生很大的影响，但是如果图片没有显示（例如用户刚刚开始浏览网页，但是图片还没有加载完成），你会注意到浏览器会为要显示的图片留下一定的空间：","s":"图片的宽高","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#图片的宽高","p":1573},{"i":1582,"t":"<img src=\"images/dinosaur.jpg\" alt=\"一只恐龙头部和躯干的骨架，它有一个巨大的头，长着锋利的牙齿。\" width=\"400\" height=\"341\" title=\"A T-Rex on display in the Manchester University Museum\"> 这会给我们一个鼠标悬停提示，看起来就像链接标题:","s":"图片标题","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#图片标题","p":1573},{"i":1585,"t":"<video src=\"rabbit320.webm\" controls> <p>你的浏览器不支持 HTML5 视频。可点击<a href=\"rabbit320.mp4\">此链接</a>观看</p></video> controls 用户必须能够控制视频和音频的回放功能。你可以使用 controls 来包含浏览器提供的控件界面，同时你也可以使用合适的 JavaScript API 创建自己的界面。界面中至少要包含开始、停止以及调整音量的功能。","s":"video 元素","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#video-元素","p":1573},{"i":1587,"t":"<video controls width=\"400\" height=\"400\" autoplay loop muted poster=\"poster.png\"> <source src=\"rabbit320.mp4\" type=\"video/mp4\"> <source src=\"rabbit320.webm\" type=\"video/webm\"> <p>你的浏览器不支持 HTML5 视频。可点击<a href=\"rabbit320.mp4\">此链接</a>观看</p></video> width 和 height 你可以用属性控制视频的尺寸，也可以用 CSS 来控制视频尺寸。 无论使用哪种方式，视频都会保持它原始的长宽比 — 也叫做纵横比。如果你设置的尺寸没有保持视频原始长宽比，那么视频边框将会拉伸，而未被视频内容填充的部分，将会显示默认的背景颜色。 autoplay 这个属性会使音频和视频内容立即播放，即使页面的其他部分还没有加载完全。建议不要应用这个属性在你的网站上，因为用户们会比较反感自动播放的媒体文件。 loop 这个属性可以让音频或者视频文件循环播放。同样不建议使用，除非有必要。 muted 这个属性会导致媒体播放时，默认关闭声音。 poster 这个属性指向了一个图像的 URL，这个图像会在视频播放前显示。通常用于粗略的预览或者广告。 preload 这个属性被用来缓冲较大的文件，有 3 个值可选： \"none\" ：不缓冲 \"auto\" ：页面加载后缓存媒体文件 \"metadata\" ：仅缓冲文件的元数据","s":"video 属性","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#video-属性","p":1573},{"i":1590,"t":"<audio controls> <source src=\"viper.mp3\" type=\"audio/mp3\"> <source src=\"viper.ogg\" type=\"audio/ogg\"> <p>你的浏览器不支持 HTML5 音频，可点击<a href=\"viper.mp3\">此链接</a>收听。</p></audio>","s":"audio 标签","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#audio-标签","p":1573},{"i":1592,"t":"<iframe src=\"https://developer.mozilla.org/zh-CN/docs/Glossary\" width=\"100%\" height=\"500\" frameborder=\"0\" allowfullscreen sandbox> <p> <a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary\"> Fallback link for browsers that don't support iframes </a> </p></iframe> 此示例包括使用以下所需的 <iframe>基本要素： allowfullscreen 如果设置，<iframe>则可以通过全屏 API 设置为全屏模式（稍微超出本文的范围）。 frameborder 如果设置为 1，则会告诉浏览器在此框架和其他框架之间绘制边框，这是默认行为。0 删除边框。不推荐这样设置，因为在 CSS 中可以更好地实现相同的效果。border: none; src 该属性与 <video> 元素表示文档中的图像。<img>一样包含指向要嵌入文档的 URL 路径。 width 和 height 这些属性指定你想要的 iframe 的宽度和高度。 最后更新于：2022-8-03","s":"iframe 嵌入","u":"/docs/FrontEnd/webBasis/HTML/mediainput","h":"#iframe-嵌入","p":1573},{"i":1596,"t":"在 HTML 中，每个段落是通过 <p> 元素标签进行定义的，比如下面这样： <p>我是一个段落，千真万确。</p>","s":"<p>","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#p","p":1593},{"i":1598,"t":"每个标题（Heading）是通过“标题标签”进行定义的： <h1>我是文章的标题</h1> 这里有六个标题元素标签 —— <h1>、<h2>、<h3>、<h4>、<h5>、<h6>。每个元素代表文档中不同级别的内容; <h1> 表示主标题（the main heading），<h2> 表示二级子标题（subheadings），<h3> 表示三级子标题（sub-subheadings），等等。","s":"<h1>","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#h1","p":1593},{"i":1600,"t":"<h1>三国演义</h1><p>罗贯中</p><h2>第一回 宴桃园豪杰三结义 斩黄巾英雄首立功</h2><p>话说天下大势，分久必合，合久必分。周末七国分争，并入于秦。及秦灭之后，楚、汉分争，又并入于汉……</p><h2>第二回 张翼德怒鞭督邮 何国舅谋诛宦竖</h2><p>且说董卓字仲颖，陇西临洮人也，官拜河东太守，自来骄傲。当日怠慢了玄德，张飞性发，便欲杀之……</p><h3>却说张飞</h3><p>却说张飞饮了数杯闷酒，乘马从馆驿前过，见五六十个老人，皆在门前痛哭。飞问其故，众老人答曰：“督邮逼勒县吏，欲害刘公；我等皆来苦告，不得放入，反遭把门人赶打！”……</p>","s":"标题和段落层次结构","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#标题和段落层次结构","p":1593},{"i":1603,"t":"Unordered，无序列表用于标记列表项目顺序无关紧要的列表 — 让我们以早点清单为例。 豆浆油条豆汁焦圈 每份无序的清单从 <ul> 元素开始——需要包裹清单上所有被列出的项目： <ul>豆浆油条豆汁焦圈</ul> 然后就是用 <li> 元素把每个列出的项目单独包裹起来： <ul> <li>豆浆</li> <li>油条</li> <li>豆汁</li> <li>焦圈</li></ul>","s":"无序列表","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#无序列表","p":1593},{"i":1605,"t":"Ordered。有序列表需要按照项目的顺序列出来——让我们以一组方向为例： 沿着条路走到头右转直行穿过第一个十字路口在第三个十字路口处左转继续走 300 米，学校就在你的右手边 这个标记的结构和无序列表一样，除了需要用<ol> 元素将所有项目包裹，而不是<ul>： <ol> <li>沿着条路走到头</li> <li>右转</li> <li>直行穿过第一个十字路口</li> <li>在第三个十字路口处左转</li> <li>继续走 300 米，学校就在你的右手边</li></ol>","s":"有序列表","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#有序列表","p":1593},{"i":1607,"t":"<ol> <li>先用蛋白一个、盐半茶匙及淀粉两大匙搅拌均匀，调成“腌料”，鸡胸肉切成约一厘米见方的碎丁并用“腌料”搅拌均匀，腌渍半小时。</li> <li>用酱油一大匙、淀粉水一大匙、糖半茶匙、盐四分之一茶匙、白醋一茶匙、蒜末半茶匙调拌均匀，调成“综合调味料”。</li> <li>鸡丁腌好以后，色拉油下锅烧热，先将鸡丁倒入锅内，用大火快炸半分钟，炸到变色之后，捞出来沥干油汁备用。</li> <li>在锅里留下约两大匙油，烧热后将切好的干辣椒下锅，用小火炒香后，再放入花椒粒和葱段一起爆香。随后鸡丁重新下锅，用大火快炒片刻后，再倒入“综合调味料”继续快炒。 <ul> <li>如果你采用正宗川菜做法，最后只需加入花生米，炒拌几下就可以起锅了。</li> <li>如果你在北方，可加入黄瓜丁、胡萝卜丁和花生米，翻炒后起锅。</li> </ul> </li></ol>","s":"嵌套列表","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#嵌套列表","p":1593},{"i":1609,"t":"在 HTML 中我们用<em>（emphasis）元素来标记这样的情况。这样做既可以让文档读起来更有趣，也可以被屏幕阅读器识别出来，并以不同的语调发出。浏览器默认风格为斜体，但你不应该纯粹使用这个标签来获得斜体风格，为了获得斜体风格，你应该使用<span>元素和一些 CSS，或者是<i>元素（见下文）。","s":"突出显示","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#突出显示","p":1593},{"i":1611,"t":"<p>I am <em>glad</em> you weren't <em>late</em>.</p>","s":"强调","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#强调","p":1593},{"i":1613,"t":"在 HTML 中我们用<strong> (strong importance) 元素来标记这样的情况。这样做既可以让文档更加地有用，也可以被屏幕阅读器识别出来，并以不同的语调发出。浏览器默认风格为粗体，但你不应该纯粹使用这个标签来获得粗体风格，为了获得粗体风格，你应该使用<span>元素和一些 CSS，或者是 <b> 元素 (见下文)。 <p>This liquid is <strong>highly toxic</strong>.</p><p>I am counting on you. <strong>Do not</strong> be late!</p> 最后更新于：2022-8-01","s":"非常强调","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#非常强调","p":1593},{"i":1616,"t":"<i> 被用来传达传统上用斜体表达的意义：外国文字，分类名称，技术术语，一种思想……","s":"斜体","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#斜体","p":1593},{"i":1618,"t":"<u> 被用来传达传统上用下划线表达的意义：专有名词，拼写错误…… <!-- 学名 --><p> 红喉北蜂鸟（学名：<i>Archilocus colubris</i>） 是北美东部最常见的蜂鸟品种。</p><!-- 舶来词 --><p> 菜单上有好多舶来词汇，比如 <i lang=\"uk-latn\">vatrushka</i>（东欧乳酪面包）, <i lang=\"id\">nasi goreng</i>（印尼炒饭）以及<i lang=\"fr\">soupe à l'oignon</i>（法式洋葱汤）。</p><!-- 已知的错误书写 --><p> 总有一天我会改掉写<u style=\"text-decoration-line: underline; text-decoration-style: wavy;\">措字</u>的毛病。</p><!-- 在一组指令中突出显示关键字 --><ol> <li> <b>切</b>下两片面包， </li> <li> 在两片面包中间<b>夹入</b>一片西红柿和一片生菜叶。 </li></ol> 最后更新于：2022-8-01","s":"下划线","u":"/docs/FrontEnd/webBasis/HTML/txtconsole","h":"#下划线","p":1593},{"i":1622,"t":"var作用域为函数，如果在函数中定义，在这个函数销毁时，变量也会销毁。 function test(){ var a = 1;}console.log(a); // a is not defined 同时也可以允许不使用 var 关键字就在函数中定义变量，这样的变量会被定义为全局变量。 function test(){ a = 1;}console.log(a); // 1 var 声明提升​ function test(){ console.log(a); // undefined var a = 1;}test(); // undefined 这时 js 会自动把 var a ; 提升到函数的最前面，所以在函数中使用 var 声明变量时，变量会被提升到函数的最前面，但是不会提升赋值。相当于： function test(){ var a; console.log(a); // undefined a = 1;}test(); // undefined","s":"var","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#var","p":1619},{"i":1624,"t":"let 作用域为块级，如果在块级中定义，在这个块级销毁时，变量也会销毁。 if (true) { let a = 1;}console.log(a); // a is not defined let 关键字不允许重复定义变量，否则会报错。 let a = 1;let a = 2; // Identifier 'a' has already been declared 且 let 声明的变量不会被提升。 function test(){ console.log(a); // ReferenceError: Cannot access 'a' before initialization let a = 1;}test();","s":"let","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#let","p":1619},{"i":1626,"t":"在 let 和 var 中，for循环中的声明会有不同的表现。 for (var i = 0; i < 10; i++) { console.log(i); // 0 1 2 3 4 5 6 7 8 9}console.log(i); // 10 在 var 声明时，for循环中的声明会被提升到函数的最前面，所以在循环结束后，i 仍然存在。会渗透到循环外部。 for (let i = 0; i < 10; i++) { console.log(i); // 0 1 2 3 4 5 6 7 8 9}console.log(i); // i is not defined 在 let 声明时，for循环中的声明不会被提升，所以在循环结束后，i 销毁。 在下面的情况中； for (var i = 0; i < 10; i++) { setTimeout(function(){ console.log(i); // 10 10 10 10 10 10 10 10 10 10 }, 0);} 由于 setTimeout 是异步函数，所以会在循环结束后执行，所以会打印出 10 个 10。这是由于 for 循环完成后才执行 setTimeout，所以此时 i 已经为 10。但是在 let 中不是这样： for (let i = 0; i < 10; i++) { setTimeout(function(){ console.log(i); // 0 1 2 3 4 5 6 7 8 9 }, 0);} 这是因为 JS 引擎在后台会为每个迭代的声明生成一个新的迭代变量，所以在 setTimeout 中的 i 是一个不同的实例，所以不会渗透到循环外部。","s":"for循环中的声明","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#for循环中的声明","p":1619},{"i":1628,"t":"const 作用域为块级，如果在块级中定义，在这个块级销毁时，变量也会销毁。 const a = 2;if (true) { const a = 1;}console.log(a); // 2 const 声明的变量不允许修改，否则会报错。 const a = 1;a = 2; // Assignment to constant variable. 这也决定了我们不能在循环中使用 const 声明变量。 for (const i = 0; i < 10; i++) { console.log(i); // TypeError: Assignment to constant variable.}","s":"const","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#const","p":1619},{"i":1630,"t":"不使用 var 声明变量，使用 let 和 const。且 const 优先于 let。 // badvar a = 1;var b = 2;// goodlet a = 1;const b = 2;","s":"最佳实践","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#最佳实践","p":1619},{"i":1632,"t":"ECMAScript 6 中有 5 种简单数据类型（也称为基本数据类型）：Undefined、Null、Boolean、Number 和 String。还有一种复杂数据类型（也称为引用数据类型）：Object。分别表示的是：未定义、空、布尔值、数字和字符串。以及对象。 typeof 特殊情况 调用 typeof null 会返回 \"object\"，因为 null 实际上是一个空对象指针。 typeof null; // object","s":"数据类型","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#数据类型","p":1619},{"i":1634,"t":"undefined 和 null 都表示“没有值”，它们是两个不同的值，undefined 是一个表示“无”的原始值，而 null 是一个表示“空”的对象。但是 undefined 是由 null 派生而来的，所以它们的相等性测试会返回 true。 undefined == null; // true","s":"undefined 和 null","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#undefined-和-null","p":1619},{"i":1636,"t":"Boolean 类型只有两个值：true 和 false。 let a = true;let b = false; 且它与数值不同。可以使用 Boolean() 函数将任意值转换为布尔值。 Boolean(0); // falseBoolean(1); // trueBoolean(''); // falseBoolean('a'); // trueBoolean(null); // falseBoolean(undefined); // false 数据类型 转换为 true 的值 转换为 false 的值 Boolean true false String 任何非空字符串 \"\"（空字符串） Number 任何非零数字值（包括无穷大） 0 和 NaN Object 任何对象 null Undefined n/a（不存在） undefined","s":"Boolean","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#boolean","p":1619},{"i":1638,"t":"Number 类型除了十进制外，还可以使用八进制和十六进制。 let a = 10; // 十进制let b = 010; // 八进制let c = 0x10; // 十六进制 浮点数： let a = 0.1;let b = 0.2;let c = .3; // 可行，但不推荐 对于非常大或者非常小的数值，可以使用科学计数法。 let a = 5e2; // 500let b = 5e-2; // 0.05 浮点数的精确度可达 17 位小数。但是，由于浮点数的存储方式，会导致一些小数无法精确表示。 0.1 + 0.2; // 0.30000000000000004 这也就告诉我们，不能这样干： if (a + b === 0.3) { console.log('a + b 等于 0.3');} else { console.log('a + b 不等于 0.3');} 上面的代码可能会有不确定性的输出，如果 a =0.05 和 b = 0.25，那么 a + b 就等于 0.3。但是如果 a = 0.1 和 b = 0.2，那么 a + b 就不等于 0.3 了。 JavaScript 中的数值是有范围的，通常最大值是 2^53 - 1，最小值是 -2^53 + 1。 Number.MAX_VALUE; // 1.7976931348623157e+308Number.MIN_VALUE; // 5e-324 如果超出了这个范围，就会返回 Infinity（正无穷）或者 -Infinity（负无穷）。 Number.MAX_VALUE + 1; // InfinityNumber.MIN_VALUE - 1; // -Infinity 如果分母为 0，则会返回 Infinity 或者 -Infinity。 let a = 1 / 0; // Infinitylet b = -1 / 0; // -Infinity 还有个特殊的数值 NaN，表示“非数值”。 let a = 1 / 'a'; // NaN 涉及到 NaN 的运算，结果都是 NaN。 NaN + 1; // NaNNaN - 1; // NaNNaN * 1; // NaNNaN == NaN; // false，这一点要特别注意 为此，ES6 提供了 Number.isNaN() 函数，用来判断一个值是否为 NaN。 isNaN(NaN); // trueisNaN(1); // falseisNaN('a'); // true isNaN会先调用 ValueOf() 方法，判断能不能返回为数字，如果不能，就会调用 toString() 方法，再测试其返回值。","s":"Number","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#number","p":1619},{"i":1640,"t":"有三个函数可以将非数值转为数值：Number()、parseInt() 和 parseFloat()。Number 函数可以将任意类型的值转为数值，而 parseInt() 和 parseFloat() 只能转换字符串。 Number('123'); // 123Number('123abc'); // NaNNumber(true); // 1Number(false); // 0Number(null); // 0Number(\"\"); // 0Number(undefined); // NaNNumber({}); // NaNNumber([]); // 0Number([1, 2, 3]); // NaNparseInt('123abc'); // 123parseInt('abc123'); // NaNparseFloat('123.456abc'); // 123.456parseFloat('abc123.456'); // NaNparseFloat('123.456.789'); // 123.456","s":"数值转换","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#数值转换","p":1619},{"i":1642,"t":"String 类型表示零或多个 16 位 Unicode 字符组成的字符序列。 let a = 'abc';let b = \"abc\";let c = `abc`; 有一些字符字面量，可以直接表示特殊字符。 '\\n'; // 换行'\\t'; // 制表符'\\b'; // 退格'\\r'; // 回车'\\f'; // 换页'\\\\'; // 反斜杠'\\''; // 单引号'\\\"'; // 双引号'\\xnn'; // 16 进制，nn 为两位 16 进制数'\\unnnn'; // 16 位 Unicode 字符，nnnn 为四位 16 进制数 字符串的长度可以通过 length 属性获取。 let a = 'abc';a.length; // 3 字符串中值是不可变的，如果要改变字符串，只能重新赋值。 let a = 'abc';a = 'def'; // 'def'let b = 'abc';a+b; // 'defabc'，虽然 a 和 b 的值没有改变，但是可以通过 + 运算符连接两个字符串，实际上是生成了一个新的字符串 这有一些转换为字符串的实例。 let a = 123;a.toString(); // '123'a.toString(2); // '1111011'a.toString(8); // '173'a.toString(16); // '7b' ECMAScript 6 新增了一种模板字符串，用反引号表示。 let a = 5;let b = 10;`Fifteen is ${a + b} and not ${2 * a + b}.`; // \"Fifteen is 15 and not 20.\" 同时也可以在里面书写 HTML 代码。换行会被保留。 let a = ` <ul> <li>first</li> <li>second</li> </ul>`; 字符串中可以进行插值，用 ${} 表示。 let a = 5;let b = 10;`Fifteen is ${a + b} and not ${2 * a + b}.`; // \"Fifteen is 15 and not 20.\"","s":"String","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#string","p":1619},{"i":1644,"t":"Symbol 是 ECMAScript 6 引入的一种新的原始数据类型，表示独一无二的值。可以理解为一种记号。 let a = Symbol('a');let b = Symbol('b');a === b; // false","s":"Symbol","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#symbol","p":1619},{"i":1646,"t":"Object 是 ECMAScript 6 引入的一种新的原始数据类型，表示一组数据的集合。 let a = { name: 'a', age: 18}; 每个 Object 实例有以下的属性和方法。 属性 描述 constructor 返回对创建此对象的 Object 函数的引用 hasOwnProperty(propertyName) 用于检查给定的属性在当前对象实例中（而不是在实例的原型中）是否存在 isPrototypeOf(object) 用于检查传入的对象是否是传入对象的原型 propertyIsEnumerable(propertyName) 用于检查给定的属性是否能够使用 for-in 语句进行枚举 toLocaleString() 返回对象的字符串表示，该字符串与执行环境的地区对应 toString() 返回对象的字符串表示 valueOf() 返回对象的字符串、数值或布尔值表示","s":"Object","u":"/docs/FrontEnd/webBasis/JavaScript/03.5.basiclanguage","h":"#object","p":1619},{"i":1649,"t":"比如是一辆汽车： 属性： car.name = porsche// 汽车品牌car.model = 911// 汽车型号car.length = 4499mm// 汽车长度car.color = white// 汽车颜色 方法： car.start()// 启动car.drive()// 行驶car.brake()// 刹车car.stop()// 停车","s":"生活中的对象","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#生活中的对象","p":1647},{"i":1651,"t":"在 JavaScript 中，一个变量是这样的： var car = \"porsche\"; 然而，当某样东西有多种属性时，我们怎么处理呢？答案是使用对象。 对象也是变量。但是对象包含很多值。 这段代码把多个值（porsche, 911, white）赋给名为 car 的变量： var car = {type:\"porsche\", model:\"911\", color:\"white\"};","s":"JS 对象","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#js-对象","p":1647},{"i":1653,"t":"（JavaScript 对象中的）名称:值对被称为属性。 var person = {firstName:\"Bill\", lastName:\"Gates\", age:62, eyeColor:\"blue\"}; 属性 属性值 firstName Bill lastName Gates age 62 eyeColor blue","s":"对象属性","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#对象属性","p":1647},{"i":1655,"t":"对象也可以有方法。 方法是在对象上执行的动作。 方法以函数定义被存储在属性中。 var person = { firstName: \"Bill\", lastName : \"Gates\", id : 678, fullName : function() { // 这是一个名叫 fullName 的对象方法 return this.firstName + \" \" + this.lastName; }};","s":"对象方法","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#对象方法","p":1647},{"i":1657,"t":"在函数定义中，this 引用该函数的“拥有者”。 在上面的例子中，this 指的是“拥有” fullName 函数的 person 对象。 换言之，this.firstName 的意思是 this 对象的 firstName 属性。也就是说可以通过 this 来访问这个对象的其他属性。","s":"this 关键词","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#this-关键词","p":1647},{"i":1659,"t":"您能够以两种方式访问属性： objectName.propertyName 或者 objectName[\"propertyName\"] 例子 1 person.lastName; 例子 2 person[\"lastName\"]; 实例： <!DOCTYPE html><html><body><h1>JavaScript 对象属性</h1><p>有两种不同的方法来访问对象属性。</p><p>您可以使用 person.property 或 person[\"property\"]。</p><p id=\"demo\"></p><script>// 创建对象：var person = { firstName: \"Bill\", lastName : \"Gates\", id : 12345};// 显示对象中的数据：document.getElementById(\"demo\").innerHTML = person.firstName + \" \" + person.lastName;</script></body></html>","s":"访问对象属性","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#访问对象属性","p":1647},{"i":1661,"t":"您能够通过如下语法访问对象方法： objectName.methodName() 实例 name = person.fullName(); 进一步的例子： <!DOCTYPE html><html><body><h1>JavaScript 对象方法</h1><p>对象方法是一种函数定义，存储为属性值。</p><p id=\"demo\"></p><script>// 创建对象：var person = { firstName: \"Bill\", lastName : \"Gates\", id : 12345, fullName : function() { return this.firstName + \" \" + this.lastName; }};// 显示对象中的数据：document.getElementById(\"demo\").innerHTML = person.fullName();</script></body></html>","s":"访问对象方法","u":"/docs/FrontEnd/webBasis/JavaScript/duixiang","h":"#访问对象方法","p":1647},{"i":1665,"t":"Question Write a function that takes two values, say a and b, as arguments.Return true if the two values are equal and of the same type. // my codefunction myfunction(a,b){ let flag; if (a===b){ flag=true; } else{ flag=false; } return flag;} // Answerfunction myFunction(a, b) { return a === b;} Question Write a function that takes a string as argument（参数）.Extract the last 3 characters （返回最后三个字符） from the string.Return the result. // my codefunction myFunction(str) { let str1=str.substr(str.length-3,3); return str1;} // answerfunction myFunction(str) { return str.slice(-3);}","s":"比较字符","u":"/docs/FrontEnd/webBasis/JavaScript/JSChallenger","h":"#比较字符","p":1662},{"i":1667,"t":"Question Write a function that takes a string (a) as argument.Remove the first 3 characters of a.Return the result. Using the method slice: function myFunction(a) { return a.slice(3);} Or using the method slicesubstring: function myFunction(a) { return a.substring(3);}","s":"删除字符串的前几个字符","u":"/docs/FrontEnd/webBasis/JavaScript/JSChallenger","h":"#删除字符串的前几个字符","p":1662},{"i":1669,"t":"JavaScript 不提供任何内建打印或者显示函数。","s":"输出","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"","p":1668},{"i":1671,"t":"window.alert() 将内容写入警告框 document.write() 将内容写入 HTML 输出 innerHTML 写入 HTML 元素 console.log 控制台打印","s":"显示方案","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#显示方案","p":1668},{"i":1673,"t":"JavaScript 使用 document.getElementById(id) 来访问 HTML 元素。 实例： <!DOCTYPE html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p><p id=\"demo\"></p><script> document.getElementById(\"demo\").innerHTML = 5 + 6;</script></body></html> 在下面的示意中，我们可以看到 JS 设置的内容被 HTMl 中的 demo 元素渲染出来了。","s":"innerHTML","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#innerhtml","p":1668},{"i":1675,"t":"出于测试目的，使用 document.write() 比较方便： <!DOCTYPE html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p><script>document.write(5 + 6);</script></body></html> 会与上面产生一样的效果。 注意：在 HTML 文档完全加载后使用 document.write() 将删除所有已有的 HTML ： <!DOCTYPE html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p><button onclick=\"document.write(5 + 6)\">试一试</button></body></html> 点击上面的 试一试 可以重新渲染出内容，之前的被删除。","s":"document.write","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#documentwrite","p":1668},{"i":1677,"t":"可以使用警告框来显示数据： <!DOCTYPE html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p> <button onclick=\"window.alert(5 + 6);\">点击显示</button></body></html>","s":"window.alert","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#windowalert","p":1668},{"i":1679,"t":"最常用的是使用 console.log 来打印信息。 <!DOCTYPE html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p><script>console.log(5 + 6);</script></body></html> 在浏览器中按住 F12 即可打开控制台查看信息。","s":"console.log","u":"/docs/FrontEnd/webBasis/JavaScript/jsstart","h":"#consolelog","p":1668},{"i":1683,"t":"JavaScript 变量能够保存多种数据类型：数值、字符串值、数组、对象等等： var length = 7; // 数字var lastName = \"Gates\"; // 字符串var cars = [\"Porsche\", \"Volvo\", \"BMW\"]; // 数组var x = {firstName:\"Bill\", lastName:\"Gates\"}; // 对象","s":"基本数据类型","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#基本数据类型","p":1680},{"i":1685,"t":"在编程过程中，数据类型是重要的概念。 为了能够操作变量，了解数据类型是很重要的。 如果没有数据类型，计算机就无法安全地解决这道题： var x = 911 + \"Porsche\"; JavaScript 会这样处理上面的例子： var x = \"911\" + \"Porsche\"; 当数值和字符串相加时，JavaScript 将把数值视作字符串。","s":"数据类型的概念","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#数据类型的概念","p":1680},{"i":1687,"t":"相同的变量可以用作不同的类型： var x; // 现在 x 是 undefinedvar x = 7; // 现在 x 是数值var x = \"Bill\"; // 现在 x 是字符串值","s":"动态数据类型","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#动态数据类型","p":1680},{"i":1689,"t":"实例： var carName = \"Porsche 911\"; // 使用双引号var carName = 'Porsche 911'; // 使用单引号 您可以在字符串内使用引号，只要这些引号与包围字符串的引号不匹配： var answer = \"It's alright\"; // 双引号内的单引号var answer = \"He is called 'Bill'\"; // 双引号内的单引号var answer = 'He is called \"Bill\"'; // 单引号内的双引号","s":"字符串","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#字符串","p":1680},{"i":1691,"t":"JavaScript 只有一种数值类型。 写数值时用不用小数点均可： var x1 = 34.00; // 带小数点var x2 = 34; // 不带小数点 超大或超小的数值可以用科学计数法来写： var y = 123e5; // 12300000var z = 123e-5; // 0.00123","s":"数值","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#数值","p":1680},{"i":1693,"t":"布尔值只有两个值：true 或 false。 var x = true;var y = false;","s":"布尔值","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#布尔值","p":1680},{"i":1695,"t":"JavaScript 数组用方括号书写。 数组的项目由逗号分隔。 下面的代码声明（创建）了名为 cars 的数组，包含三个项目（汽车品牌）： var cars = [\"Porsche\", \"Volvo\", \"BMW\"]; 数组索引基于零，这意味着第一个项目是 [0]，第二个项目是 [1]，以此类推。","s":"数组","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#数组","p":1680},{"i":1697,"t":"JavaScript 对象用花括号来书写。 对象属性是 name:value 对，由逗号分隔。 var person = {firstName:\"Bill\", lastName:\"Gates\", age:62, eyeColor:\"blue\"};","s":"对象","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#对象","p":1680},{"i":1699,"t":"您可使用 JavaScript 的 typeof 来确定 JavaScript 变量的类型： typeof 运算符返回变量或表达式的类型： typeof \"\" // 返回 \"string\"typeof \"Bill\" // 返回 \"string\"typeof \"Bill Gates\" // 返回 \"string\"typeof 0 // 返回 \"number\"typeof 314 // 返回 \"number\"typeof 3.14 // 返回 \"number\"typeof (7) // 返回 \"number\"typeof (7 + 8) // 返回 \"number\" note typeof 运算符对数组返回 \"object\"，因为在 JavaScript 中数组属于对象。","s":"typeof 运算","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#typeof-运算","p":1680},{"i":1701,"t":"在 JavaScript 中，没有值的变量，其值是 undefined。typeof 也返回 undefined。 var person; // 值是 undefined，类型是 undefined。 任何变量均可通过设置值为 undefined 进行清空。其类型也将是 undefined。 person = undefined; // 值是 undefined，类型是 undefined。","s":"Undefined","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#undefined","p":1680},{"i":1703,"t":"空值与 undefined 不是一回事。 空的字符串变量既有值也有类型。 var car = \"\"; // 值是 \"\"，类型是 \"string\"","s":"空值","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#空值","p":1680},{"i":1705,"t":"在 JavaScript 中，null 是 \"nothing\"。它被看做不存在的事物。 不幸的是，在 JavaScript 中，null 的数据类型是对象。 您可以把 null 在 JavaScript 中是对象理解为一个 bug。它本应是 null。 您可以通过设置值为 null 清空对象： var person = null; // 值是 null，但是类型仍然是对象 您也可以通过设置值为 undefined 清空对象： var person = undefined; // 值是 undefined，类型是 undefined。","s":"NULL","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#null","p":1680},{"i":1707,"t":"Undefined 与 null 的值相等，但类型不相等： typeof undefined // undefinedtypeof null // objectnull === undefined // falsenull == undefined // true","s":"Undefined 与 Null 的区别","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#undefined-与-null-的区别","p":1680},{"i":1709,"t":"JavaScript 函数是被设计为执行特定任务的代码块。 JavaScript 函数会在某代码调用它时被执行。 函数存在的意义：一次书写，多次使用，易于维护。 实例： function myFunction(p1, p2) { return p1 * p2; // 该函数返回 p1 和 p2 的乘积}","s":"函数","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#函数","p":1680},{"i":1711,"t":"JS 函数通过 function 关键词进行定义，其后是函数名和括号()。 函数名可包含字母、数字、下划线和美元符号（规则与变量名相同）。 圆括号可包括由逗号分隔的参数： (参数 1, 参数 2, ...) 由函数执行的代码被放置在花括号中：{} function name(参数 1, 参数 2, 参数 3) { 要执行的代码}","s":"函数语法","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#函数语法","p":1680},{"i":1713,"t":"当 JavaScript 到达 return 语句，函数将停止执行。 如果函数被某条语句调用，JavaScript 将在调用语句之后“返回”执行代码。 函数通常会计算出返回值。这个返回值会返回给调用者： 下面的例子中将返回两个值相乘的结果： var x = myFunction(7, 8); // 调用函数，返回值被赋值给 xfunction myFunction(a, b) { return a * b; // 函数返回 a 和 b 的乘积} 实例： function toCelsius(fahrenheit) { return (5/9) * (fahrenheit-32);}document.getElementById(\"demo\").innerHTML = toCelsius(77); 这个例子中，将会把 toCelsius 函数的运算结果交给 demo 的 HTML 元素渲染。","s":"函数返回","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#函数返回","p":1680},{"i":1715,"t":"使用上面的例子，toCelsius 引用的是函数对象，而 toCelsius() 引用的是函数结果。 function toCelsius(fahrenheit) { return (5/9) * (fahrenheit-32);}document.getElementById(\"demo\").innerHTML = toCelsius; 上面的代码片段将返回 toCelsius 的定义。","s":"() 运算符调用函数","u":"/docs/FrontEnd/webBasis/JavaScript/languageJS","h":"#-运算符调用函数","p":1680},{"i":1718,"t":"书写 JavaScript 数值既可以带小数点，也可以不带： var x = 3.14; // 带小数点的数值var y = 3; // 不带小数点的数值 超大或超小的数可通过科学计数法来写： var x = 123e5; // 12300000var y = 123e-5; // 0.00123","s":"数据表示","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数据表示","p":1716},{"i":1720,"t":"NaN 属于 JavaScript 保留词，指示某个数不是合法数。 尝试用一个非数字字符串进行除法会得到 NaN（Not a Number）： var x = 100 / \"Apple\"; // x 将是 NaN（Not a Number） 不过，假如字符串包含数值，则结果将是数： var x = 100 / \"10\"; // x 将是 10 您可使用全局 JavaScript 函数 isNaN() 来确定某个值是否是数： var x = 100 / \"Apple\";isNaN(x); // 返回 true，因为 x 不是数","s":"不合法数 NaN","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#不合法数-nan","p":1716},{"i":1722,"t":"Infinity （或 -Infinity）是 JavaScript 在计算数时超出最大可能数范围时返回的值。 var myNumber = 2;while (myNumber != Infinity) { // 执行直到 Infinity myNumber = myNumber * myNumber;} 当除以 0（零）也会生成 Infinity： var x = 2 / 0; // x 将是 Infinityvar y = -2 / 0; // y 将是 -Infinity Infinity 是数：typeOf Infinity 返回 number。 typeof Infinity; // 返回 \"number\"","s":"Infinity","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#infinity","p":1716},{"i":1725,"t":"toString() 以字符串返回数值。 所有数字方法可用于任意类型的数字（字面量、变量或表达式）： var x = 123;x.toString(); // 从变量 x 返回 123(123).toString(); // 从文本 123 返回 123(100 + 23).toString(); // 从表达式 100 + 23 返回 123","s":"toString","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#tostring","p":1716},{"i":1727,"t":"toExponential() 返回字符串值，它包含已被四舍五入并使用指数计数法的数字。 参数定义小数点后的字符数： var x = 9.656;x.toExponential(2); // 返回 9.66e+0x.toExponential(4); // 返回 9.6560e+0x.toExponential(6); // 返回 9.656000e+0","s":"toExponential","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#toexponential","p":1716},{"i":1729,"t":"toFixed() 返回字符串值，它包含了指定位数小数的数字： var x = 9.656;x.toFixed(0); // 返回 10x.toFixed(2); // 返回 9.66x.toFixed(4); // 返回 9.6560x.toFixed(6); // 返回 9.656000 toFixed(2) 非常适合处理金钱。","s":"toFixed","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#tofixed","p":1716},{"i":1731,"t":"toPrecision() 返回字符串值，它包含了指定长度的数字： var x = 9.656;x.toPrecision(); // 返回 9.656x.toPrecision(2); // 返回 9.7x.toPrecision(4); // 返回 9.656x.toPrecision(6); // 返回 9.65600","s":"toPrecision","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#toprecision","p":1716},{"i":1733,"t":"valueOf() 以数值返回数值： var x = 123;x.valueOf(); // 从变量 x 返回 123(123).valueOf(); // 从文本 123 返回 123(100 + 23).valueOf(); // 从表达式 100 + 23 返回 123","s":"valueOf","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#valueof","p":1716},{"i":1735,"t":"parseInt() 解析一段字符串并返回数值。允许空格。只返回首个数字： parseInt(\"10\"); // 返回 10parseInt(\"10.33\"); // 返回 10parseInt(\"10 20 30\"); // 返回 10parseInt(\"10 years\"); // 返回 10parseInt(\"years 10\"); // 返回 NaN","s":"parseInt","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#parseint","p":1716},{"i":1737,"t":"parseFloat() 解析一段字符串并返回数值。允许空格。只返回首个数字： parseFloat(\"10\"); // 返回 10parseFloat(\"10.33\"); // 返回 10.33parseFloat(\"10 20 30\"); // 返回 10parseFloat(\"10 years\"); // 返回 10parseFloat(\"years 10\"); // 返回 NaN","s":"parseFloat","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#parsefloat","p":1716},{"i":1739,"t":"MAX_VALUE 返回 JavaScript 中可能的最大数字。 var x = Number.MAX_VALUE; MIN_VALUE 返回 JavaScript 中可能的最小数字。 var x = Number.MIN_VALUE;","s":"MIN_VALUE 和 MAX_VALUE","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#min_value-和-max_value","p":1716},{"i":1741,"t":"JavaScript 数组用于在单一变量中存储多个值。 var cars = [\"Saab\", \"Volvo\", \"BMW\"];","s":"数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组","p":1716},{"i":1743,"t":"使用数组文本是创建 JavaScript 数组最简单的方法。 var array-name = [item1, item2, ...]; 空格和折行并不重要。声明可横跨多行： var cars = [ \"Saab\", \"Volvo\", \"BMW\"]; 可以使用 new 关键字声明： var cars = new Array(\"Saab\", \"Volvo\", \"BMW\"); 但是，还是避免使用 Array 属性： var points = new Array(40, 100, 1, 5, 25, 10); // 差var points = [40, 100, 1, 5, 25, 10]; // 优","s":"创建数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#创建数组","p":1716},{"i":1745,"t":"我们通过引用索引号（下标号）来引用某个数组元素。 这条语句访问 cars 中的首个元素的值： var name = cars[0]; 这条语句修改 cars 中的首个元素： cars[0] = \"Opel\"; 应用实例： var cars = [\"Saab\", \"Volvo\", \"BMW\"];document.getElementById(\"demo\").innerHTML = cars[0];","s":"访问数组元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#访问数组元素","p":1716},{"i":1747,"t":"通过 JavaScript，可通过引用数组名来访问完整数组： var cars = [\"Saab\", \"Volvo\", \"BMW\"];document.getElementById(\"demo\").innerHTML = cars;","s":"访问完整数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#访问完整数组","p":1716},{"i":1749,"t":"数组是一种特殊类型的对象。在 JavaScript 中对数组使用 typeof 运算符会返回 \"object\"。 但是，JavaScript 数组最好以数组来描述。 数组使用数字来访问其“元素”。在本例中，person[0] 返回 Bill： var person = [\"Bill\", \"Gates\", 62]; 对象使用名称来访问其“成员”。在本例中，person.firstName 返回 Bill： var person = {firstName:\"Bill\", lastName:\"Gates\", age:19};","s":"数组是对象","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组是对象","p":1716},{"i":1751,"t":"JavaScript 变量可以是对象。数组是特殊类型的对象。 正因如此，您可以在相同数组中存放不同类型的变量。 您可以在数组保存对象。您可以在数组中保存函数。你甚至可以在数组中保存数组： myArray[0] = Date.now;myArray[1] = myFunction;myArray[2] = myCars;","s":"数组元素可以是对象","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组元素可以是对象","p":1716},{"i":1754,"t":"length 属性返回数组的长度（数组元素的数目）。 var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.length; // fruits 的长度是 4","s":"length","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#length","p":1716},{"i":1756,"t":"fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];var first = fruits[0];","s":"访问第一个元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#访问第一个元素","p":1716},{"i":1758,"t":"fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];var last = fruits[fruits.length - 1];","s":"访问最后一个数组元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#访问最后一个数组元素","p":1716},{"i":1760,"t":"遍历数组的最安全方法是使用 \"for\" 循环： var fruits, text, fLen, i;fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fLen = fruits.length;text = \"<ul>\";for (i = 0; i < fLen; i++) { text += \"<li>\" + fruits[i] + \"</li>\";} 您也可以使用 Array.foreach() 函数： var fruits, text;fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];text = \"<ul>\";fruits.forEach(myFunction);text += \"</ul>\";function myFunction(value) { text += \"<li>\" + value + \"</li>\";}","s":"遍历数组元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#遍历数组元素","p":1716},{"i":1762,"t":"向数组添加新元素的最佳方法是使用 push() 方法： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.push(\"Lemon\"); // 向 fruits 添加一个新元素 (Lemon) 也可以使用 length 属性向数组添加新元素： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits[fruits.length] = \"Lemon\"; // 向 fruits 添加一个新元素 (Lemon)","s":"添加数组元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#添加数组元素","p":1716},{"i":1765,"t":"pop() 方法从数组中删除最后一个元素： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.pop(); // 从 fruits 删除最后一个元素（\"Mango\"） pop() 方法返回“被弹出”的值： 实例 var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];var x = fruits.pop(); // x 的值是 \"Mango\"","s":"元素删除 Popping","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#元素删除-popping","p":1716},{"i":1767,"t":"push() 方法（在数组结尾处）向数组添加一个新的元素： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.push(\"Kiwi\"); // 向 fruits 添加一个新元素 push() 方法返回新数组的长度： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];var x = fruits.push(\"Kiwi\"); // x 的值是 5","s":"元素添加 Pushing","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#元素添加-pushing","p":1716},{"i":1769,"t":"位移与弹出等同，但处理首个元素而不是最后一个。 shift() 方法会删除首个数组元素，并把所有其他元素“位移”到更低的索引。 var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.shift(); // 从 fruits 删除第一个元素 \"Banana\" 并 返回 \"Banana\"","s":"删除首个元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#删除首个元素","p":1716},{"i":1771,"t":"unshift() 方法（在开头）向数组添加新元素，并“反向位移”旧元素，返回新的数组长度： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.unshift(\"Lemon\"); // 向 fruits 添加新元素 \"Lemon\" 返回 5","s":"在首部添加元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#在首部添加元素","p":1716},{"i":1773,"t":"var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits[0] = \"Kiwi\"; // 把 fruits 的第一个元素改为 \"Kiwi\"","s":"更改元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#更改元素","p":1716},{"i":1775,"t":"既然 JavaScript 数组属于对象，其中的元素就可以使用 JavaScript delete 运算符来删除： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];delete fruits[0]; // 把 fruits 中的首个元素改为 undefined 使用 delete 会在数组留下未定义的空洞。请使用 pop() 或 shift() 取而代之。","s":"删除元素","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#删除元素","p":1716},{"i":1777,"t":"splice() 方法可用于向数组添加新项： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.splice(2, 0, \"Lemon\", \"Kiwi\"); 第一个参数（2）定义了应添加新元素的位置（拼接）。 第二个参数（0）定义应删除多少元素。 其余参数（“Lemon”，“Kiwi”）定义要添加的新元素。 splice() 方法返回一个包含已删除项的数组： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.splice(2, 2, \"Lemon\", \"Kiwi\");","s":"拼接数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#拼接数组","p":1716},{"i":1779,"t":"concat() 方法通过合并（连接）现有数组来创建一个新数组： var myGirls = [\"Cecilie\", \"Lone\"];var myBoys = [\"Emil\", \"Tobias\", \"Linus\"];var myChildren = myGirls.concat(myBoys); // 连接 myGirls 和 myBoys concat() 方法不会更改现有数组。它总是返回一个新数组。 concat() 方法可以使用任意数量的数组参数： var arr1 = [\"Cecilie\", \"Lone\"];var arr2 = [\"Emil\", \"Tobias\", \"Linus\"];var arr3 = [\"Robin\", \"Morgan\"];var myChildren = arr1.concat(arr2, arr3); // 将arr1、arr2 与 arr3 连接在一起","s":"合并（连接）数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#合并连接数组","p":1716},{"i":1781,"t":"slice() 方法用数组的某个片段切出新数组。 本例从数组元素 1 （\"Orange\"）开始切出一段数组： var fruits = [\"Banana\", \"Orange\", \"Lemon\", \"Apple\", \"Mango\"];var citrus = fruits.slice(1); 结果： Orange,Lemon,Apple,Mango slice() 可接受两个参数，比如 (1, 3)。 该方法会从开始参数选取元素，直到结束参数（不包括）为止。 var fruits = [\"Banana\", \"Orange\", \"Lemon\", \"Apple\", \"Mango\"];var citrus = fruits.slice(1, 3);","s":"裁剪数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#裁剪数组","p":1716},{"i":1784,"t":"sort() 方法是最强大的数组方法之一。 sort() 方法以字母顺序对数组进行排序： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.sort(); // 对 fruits 中的元素进行排序","s":"数组排序","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数组排序","p":1716},{"i":1786,"t":"reverse() 方法反转数组中的元素。 您可以使用它以降序对数组进行排序： var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];fruits.sort(); // 对 fruits 中的元素进行排序fruits.reverse(); // 反转元素顺序","s":"反转数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#反转数组","p":1716},{"i":1788,"t":"默认地，sort() 函数按照字符串顺序对值进行排序。 该函数很适合字符串（\"Apple\" 会排在 \"Banana\" 之前）。 不过，如果数字按照字符串来排序，则 \"25\" 大于 \"100\"，因为 \"2\" 大于 \"1\"。 正因如此，sort() 方法在对数值排序时会产生不正确的结果。 我们通过一个比值函数来修正此问题： var points = [40, 100, 1, 5, 25, 10];points.sort(function(a, b){return a - b}); 使用相同的技巧对数组进行降序排序： var points = [40, 100, 1, 5, 25, 10];points.sort(function(a, b){return b - a});","s":"数字排序","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#数字排序","p":1716},{"i":1790,"t":"比较函数的目的是定义另一种排序顺序。 比较函数应该返回一个负，零或正值，这取决于参数： function(a, b){return a-b} 当 sort() 函数比较两个值时，会将值发送到比较函数，并根据所返回的值（负、零或正值）对这些值进行排序。 实例 当比较 40 和 100 时，sort() 方法会调用比较函数 function(40,100)。 该函数计算 40-100，然后返回 -60（负值）。 排序函数将把 40 排序为比 100 更低的值。 您可以使用下面的代码片段来测试数值和字母排序： <button onclick=\"myFunction1()\">以字母顺序排序</button><button onclick=\"myFunction2()\">以数字顺序排序</button><p id=\"demo\"></p><script>var points = [40, 100, 1, 5, 25, 10];document.getElementById(\"demo\").innerHTML = points;function myFunction1() { points.sort(); document.getElementById(\"demo\").innerHTML = points;}function myFunction2() { points.sort(function(a, b){return a - b}); document.getElementById(\"demo\").innerHTML = points;}</script>","s":"比值函数","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#比值函数","p":1716},{"i":1792,"t":"var points = [40, 100, 1, 5, 25, 10];points.sort(function(a, b){return 0.5 - Math.random()});","s":"以随机顺序排序数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#以随机顺序排序数组","p":1716},{"i":1794,"t":"var cars = [{type:\"Volvo\", year:2016},{type:\"Saab\", year:2001},{type:\"BMW\", year:2010}]; 我们需要对上面的年份进行排序： cars.sort(function(a, b){return a.year - b.year}); 比较字符串属性，先将其转化为小写字母： cars.sort(function(a, b){ var x = a.type.toLowerCase(); var y = b.type.toLowerCase(); if (x < y) {return -1;} if (x > y) {return 1;} return 0;});","s":"排序对象数组","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#排序对象数组","p":1716},{"i":1797,"t":"forEach() 方法为每个数组元素调用一次函数（回调函数）。 var txt = \"\";var numbers = [45, 4, 9, 16, 25];numbers.forEach(myFunction);function myFunction(value, index, array) { txt = txt + value + \"<br>\"; } txt 作为一个空字符串，实际上没有作用，只是为了让结果也成为字符串，本段代码实现了列表渲染的效果： // 结果45491625 注释：该函数接受 3 个参数： 项目值 项目索引 数组本身 上面的例子只用了 value 参数。这个例子可以重新写为： var txt = \"\";var numbers = [45, 4, 9, 16, 25];numbers.forEach(myFunction);function myFunction(value) { txt = txt + value + \"<br>\"; }","s":"Array.forEach()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayforeach","p":1716},{"i":1799,"t":"map() 方法通过对每个数组元素执行函数来创建新数组。 map() 方法不会对没有值的数组元素执行函数。 map() 方法不会更改原始数组。 这个例子将每个数组值乘以2： var numbers1 = [45, 4, 9, 16, 25];var numbers2 = numbers1.map(myFunction);function myFunction(value, index, array) { return value * 2;}// 可以省略为一个参数function myFunction(value) { return value * 2;} <!DOCTYPE html><html><body><h1>JavaScript Array.map()</h1><p>通过对每个数组元素执行函数来创建新数组。</p><p id=\"demo\"></p><script>var numbers1 = [45, 4, 9, 16, 25];var numbers2 = numbers1.map(myFunction);document.getElementById(\"demo\").innerHTML = numbers2;function myFunction(value, index, array) { return value * 2;}</script></body></html> 经历上述代码之后，会创建一个每个元素都是原来二倍的数组。 90,8,18,32,50","s":"Array.map()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arraymap","p":1716},{"i":1801,"t":"Array.filter() 是一个过滤器。 filter() 方法创建一个包含通过测试的数组元素的新数组。 这个例子用值大于 18 的元素创建一个新数组： var numbers = [45, 4, 9, 16, 25];var over18 = numbers.filter(myFunction);function myFunction(value, index, array) { return value > 18;} 请注意此函数接受 3 个参数： 项目值 项目索引 数组本身 在上面的例子中，回调函数不使用 index 和 array 参数，因此可以省略它们： var numbers = [45, 4, 9, 16, 25];var over18 = numbers.filter(myFunction);function myFunction(value) { return value > 18;}","s":"Array.filter()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayfilter","p":1716},{"i":1803,"t":"reduce() 方法在每个数组元素上运行函数，以生成（减少它）单个值。 reduce() 方法在数组中从左到右工作。另请参阅 reduceRight()。 reduce() 方法不会减少原始数组。 这个例子确定数组中所有数字的总和： var numbers1 = [45, 4, 9, 16, 25];var sum = numbers1.reduce(myFunction);function myFunction(total, value, index, array) { return total + value;} 完整代码 <!DOCTYPE html><html><body><h1>JavaScript Array.reduce()</h1><p>此例确定数组中所有数字的总和：</p><p id=\"demo\"></p><script>var numbers = [45, 4, 9, 16, 25];var sum = numbers.reduce(myFunction);document.getElementById(\"demo\").innerHTML = \"总和是：\" + sum;function myFunction(total, value, index, array) { return total + value;}</script></body></html> 结果： 总和是：99 请注意此函数接受 4 个参数： 总数（初始值/先前返回的值） 项目值 项目索引 数组本身 上例并未使用 index 和 array 参数。可以将它改写为： var numbers1 = [45, 4, 9, 16, 25];var sum = numbers1.reduce(myFunction);function myFunction(total, value) { return total + value;} reduce() 方法能够接受一个初始值： var numbers1 = [45, 4, 9, 16, 25];var sum = numbers1.reduce(myFunction, 100);function myFunction(total, value) { return total + value;} <!DOCTYPE html><html><body><h1>JavaScript Array.reduce()</h1><p>此例确定数组中所有数字的总和：</p><p id=\"demo\"></p><script>var numbers = [45, 4, 9, 16, 25];var sum = numbers.reduce(myFunction, 100);document.getElementById(\"demo\").innerHTML = \"总和是：\" + sum;function myFunction(total, value) { return total + value;}</script></body></html> 因为它已经携带了一个初始值，所以结果是 初始值 + 计算值 ，结果： 总和是：199","s":"Array.reduce()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayreduce","p":1716},{"i":1805,"t":"reduceRight() 方法在每个数组元素上运行函数，以生成（减少它）单个值。 reduceRight() 方法在数组中从右到左工作。另请参阅 reduce()。 reduceRight() 方法不会减少原始数组。 这个例子确定数组中所有数字的总和： var numbers1 = [45, 4, 9, 16, 25];var sum = numbers1.reduceRight(myFunction);function myFunction(total, value, index, array) { return total + value;} 请注意此函数接受 4 个参数： 总数（初始值/先前返回的值） 项目值 项目索引 数组本身 上例并未使用 index 和 array 参数。可以将它改写为： var numbers1 = [45, 4, 9, 16, 25];var sum = numbers1.reduceRight(myFunction);function myFunction(total, value) { return total + value;}","s":"Array.reduceRight()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayreduceright","p":1716},{"i":1807,"t":"every() 方法检查所有数组值是否通过测试。 这个例子检查所有数组值是否大于 18： var numbers = [45, 4, 9, 16, 25];var allOver18 = numbers.every(myFunction);function myFunction(value, index, array) { return value > 18;} 返回值： false 请注意此函数接受 3 个参数： 项目值 项目索引 数组本身 如果回调函数仅使用第一个参数（值）时，可以省略其他参数： var numbers = [45, 4, 9, 16, 25];var allOver18 = numbers.every(myFunction);function myFunction(value) { return value > 18;}","s":"Array.every()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayevery","p":1716},{"i":1809,"t":"some() 方法检查某些数组值是否通过了测试。 这个例子检查某些数组值是否大于 18： var numbers = [45, 4, 9, 16, 25];var someOver18 = numbers.some(myFunction);function myFunction(value, index, array) { return value > 18;}","s":"Array.some()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arraysome","p":1716},{"i":1811,"t":"find() 方法返回通过测试函数的第一个数组元素的值。 这个例子查找（返回）大于 18 的第一个元素的值： var numbers = [4, 9, 16, 25, 29];var first = numbers.find(myFunction);function myFunction(value, index, array) { return value > 18;} 返回值： 25","s":"Array.find()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayfind","p":1716},{"i":1813,"t":"findIndex() 方法返回通过测试函数的第一个数组元素的索引。 这个例子查找大于 18 的第一个元素的索引： var numbers = [4, 9, 16, 25, 29];var first = numbers.findIndex(myFunction);function myFunction(value, index, array) { return value > 18;} 返回值： 3","s":"Array.findIndex()","u":"/docs/FrontEnd/webBasis/JavaScript/numberanglist","h":"#arrayfindindex","p":1716},{"i":1816,"t":"HTML 事件可以是浏览器或用户做的某些事情。 下面是 HTML 事件的一些例子： HTML 网页完成加载 HTML 输入字段被修改 HTML 按钮被点击 通常，当事件发生时，用户会希望做某件事。 JavaScript 允许您在事件被侦测到时执行代码。 通过 JavaScript 代码，HTML 允许您向 HTML 元素添加事件处理程序。 使用单引号或者双引号： <element event='一些 JavaScript'><element event=\"一些 JavaScript\"> 在下面的例子中，onclick 属性（以及代码）被添加到 <button> 元素： <button onclick='document.getElementById(\"demo\").innerHTML=Date()'>现在的时间是？</button> 上面的例子点击后，就会显示现在的时间。","s":"HTML事件","u":"/docs/FrontEnd/webBasis/JavaScript/shijian","h":"#html事件","p":1814},{"i":1818,"t":"事件 描述 onchange HTML 元素已被改变 onclick 用户点击了 HTML 元素 onmouseover 用户把鼠标移动到 HTML 元素上 onmouseout 用户把鼠标移开 HTML 元素 onkeydown 用户按下键盘按键 onload 浏览器已经完成页面加载 DOM 事件 API 列表","s":"常见的 HTML 事件","u":"/docs/FrontEnd/webBasis/JavaScript/shijian","h":"#常见的-html-事件","p":1814},{"i":1821,"t":"JavaScript 是一种脚本，一门编程语言，它可以在网页上实现复杂的功能，网页展现给你的不再是简单的静态信息，而是实时的内容更新，交互式的地图，2D/3D 动画，滚动播放的视频等等。","s":"JavaScript 定义","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#javascript-定义","p":1819},{"i":1823,"t":"客户端（client-side）JavaScript 语言的核心包含一些普遍的编程特性，以让你可以做到如下的事情： 在变量中储存有用的值。 操作一段文本（在编程中称为“字符串”（string））。 运行代码以响应网页中发生的特定事件。比如点击事件等。 以及更多！ JavaScript 语言核心之上所构建的功能更令人兴奋。应用程序接口（Application Programming Interfaces（API））将为你的代码提供额外的超能力。 API 是已经建立好的一套代码组件，可以让开发者实现原本很难甚至无法实现的程序。就像现成的家具套件之于家居建设，用一些已经切好的木板组装一个书柜，显然比自己设计，寻找合适的木材，裁切至合适的尺寸和形状，找到正确尺寸的螺钉，再组装成书柜要简单得多。 API 通常分为两类。","s":"JavaScript 可以做些什么","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#javascript-可以做些什么","p":1819},{"i":1825,"t":"浏览器 API 内建于 web 浏览器中，它们可以将数据从周边计算机环境中筛选出来，还可以做实用的复杂工作。例如： 文档对象模型 API 🖱（DOM（Document Object Model）API） 能通过创建、移除和修改 HTML，为页面动态应用新样式等手段来操作 HTML 和 CSS。比如当某个页面出现了一个弹窗，或者显示了一些新内容，这就是 DOM 在运行。 地理位置 API🖱（Geolocation API） 获取地理信息。这就是为什么 谷歌地图 可以找到你的位置，而且标示在地图上。 画布（Canvas） 和 WebGL API 可以创建生动的 2D 和 3D 图像。人们正运用这些 web 技术制作令人惊叹的作品。参见 Chrome Experiments 以及 webglsamples。 诸如 HTMLMediaElement 和 WebRTC 等 影音类 API 让你可以利用多媒体做一些非常有趣的事，比如在网页中直接播放音乐和影片，或用自己的网络摄像头获取录像，然后在其他人的电脑上展示（试用简易版 截图 demo 以理解这个概念）。","s":"浏览器 API","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#浏览器-api","p":1819},{"i":1827,"t":"第三方 API 并没有默认嵌入浏览器中，一般要从网上取得它们的代码和信息。比如： Twitter API、新浪微博 API 可以在网站上展示最新推文之类。 谷歌地图 API、高德地图 API 可以在网站嵌入定制的地图等等。","s":"第三方 API","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#第三方-api","p":1819},{"i":1829,"t":"浏览器在读取一个网页时，代码（HTML, CSS 和 JavaScript）将在一个运行环境（浏览器标签页）中得到执行。就像一间工厂，将原材料（代码）加工为一件产品（网页）。 在 HTML 和 CSS 集合组装成一个网页后，浏览器的 JavaScript 引擎将执行 JavaScript 代码。这保证了当 JavaScript 开始运行之前，网页的结构和样式已经就位。 这样很好，因为 JavaScript 最普遍的用处是通过 DOM API（见上文）动态修改 HTML 和 CSS 来更新用户界面（user interface）。如果 JavaScript 在 HTML 和 CSS 就位之前加载运行，就会引发错误（这在异步渲染全景图中有所提及。） 最后更新于：2022-8-01","s":"JavaScript 在页面上做了什么","u":"/docs/FrontEnd/webBasis/JavaScript/whatisjs","h":"#javascript-在页面上做了什么","p":1819},{"i":1831,"t":"字符串用于存储和操作文本。","s":"字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"","p":1830},{"i":1833,"t":"由于字符串必须由引号包围，JavaScript 会误解这段字符串： var y = \"中国是瓷器的故乡，因此 china 与\"China（中国）\"同名。\" 该字符串将被切为 \"中国是瓷器的故乡，因此 china 与\"。 避免此问题的解决方法是，使用 \\ 转义字符。 反斜杠转义字符把特殊字符转换为字符串字符： var x = \"中国是瓷器的故乡，因此 china 与\\\"China（中国）\\\"同名。\" 还有一些特殊的转义： 代码 结果 \\b 退格键 \\f 换页 \\n 新行 \\r 回车 \\t 水平制表符 \\v 垂直制表符 这六个转义字符最初设计用于控制打字机、电传打字机和传真机。它们在 HTML 中没有任何意义。","s":"特殊字符转义","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#特殊字符转义","p":1830},{"i":1836,"t":"字符串的内建属性 length 可以返回字符串的长度： var txt = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";var sln = txt.length;","s":"字符串长度","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#字符串长度","p":1830},{"i":1838,"t":"indexOf() 方法返回字符串中指定文本首次出现的索引（位置）： var str = \"The full name of China is the People's Republic of China.\";var pos = str.indexOf(\"China\"); 上面的代码将返回值 17 。 lastIndexOf() 方法返回指定文本在字符串中最后一次出现的索引： var str = \"The full name of China is the People's Republic of China.\";var pos = str.lastIndexOf(\"China\"); 上面的代码将返回值 51 。 如果未找到文本， indexOf() 和 lastIndexOf() 均返回 -1。 var str = \"The full name of China is the People's Republic of China.\";var pos = str.indexOf(\"USA\"); 以上的代码将返回 -1。 两种方法都接受作为检索起始位置的第二个参数。也就是说，如果指定了这个参数，那么就会从这个指定位置开始搜索。 var str = \"The full name of China is the People's Republic of China.\";var pos = str.indexOf(\"China\", 18);","s":"查找字符串里面的字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#查找字符串里面的字符串","p":1830},{"i":1840,"t":"search() 方法搜索特定值的字符串，并返回匹配的位置： var str = \"The full name of China is the People's Republic of China.\";var pos = str.search(\"China\"); 以上的代码将返回值 17 。 注意 两种方法，indexOf() 与 search()，是相等的。 这两种方法是不相等的。区别在于： search() 方法无法设置第二个开始位置参数。 indexOf() 方法无法设置更强大的搜索值（正则表达式）。","s":"检索字符串中的字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#检索字符串中的字符串","p":1830},{"i":1842,"t":"有三种提取部分字符串的方法： slice(start, end) substring(start, end) substr(start, length) slice​ slice() 提取字符串的某个部分并在新字符串中返回被提取的部分。 该方法设置两个参数：起始索引（开始位置），终止索引（结束位置）。 这个例子裁剪字符串中位置 7 到位置 13 的片段： var str = \"Apple, Banana, Mango\";var res = str.slice(7,13); 上面的代码将返回的结果是：Banana 。 如果某个参数为负，则从字符串的结尾开始计数。 这个例子裁剪字符串中位置 -12 到位置 -6 的片段： var str = \"Apple, Banana, Mango\";var res = str.slice(-13,-7); 上面的代码将返回的结果是：Banana 。 如果省略第二个参数，则该方法将裁剪字符串的剩余部分： var res = str.slice(7); 这段代码将返回：Banana, Mango substring​ substring() 类似于 slice() ，但是无法接受负的索引。 var str = \"Apple, Banana, Mango\";var res = str.substring(7,13); substr​ substr() 类似于 slice()。不同之处在于第二个参数规定被提取部分的长度。 var str = \"Apple, Banana, Mango\";var res = str.substr(7,6); 上面的代码的意思是从第七个开始，提取 6 位。 substr 方法也可以接收负数参数。 String.match()​ match() 方法根据正则表达式在字符串中搜索匹配项，并将匹配项作为 Array 对象返回。 let text = \"The rain in SPAIN stays mainly in the plain\";text.match(/ain/g) // 返回数组 [ain,ain,ain] 在上面的代码中，text 中找到了三个 ain ，因此返回 ： 返回数组 [ain,ain,ain] 。 不区分大小写： let text = \"The rain in SPAIN stays mainly in the plain\";text.match(/ain/gi) // 返回数组 [ain,AIN,ain,ain] String.includes()​ 如果字符串包含指定值，includes() 方法返回 true。 let text = \"Hello world, welcome to the universe.\";text.includes(\"world\") // 返回 true string.includes(searchvalue, start) searchvalue | 必需。需要搜索的字符串。 start | 可选。默认为 0. 开始搜索的位置。 检查字符串是否包含 \"world\"，从位置 12 开始搜索： let text = \"Hello world, welcome to the universe.\";text.includes(\"world\", 12) // 返回 false String.startsWith()​ 如果字符串以指定值开头，则 startsWith() 方法返回 true，否则返回 false： let text = \"Hello world, welcome to the universe.\";text.startsWith(\"Hello\") // 返回 true <!DOCTYPE html><html><body><h2>JavaScript 字符串</h2><p>检查字符串是否以 \"Hello\" 开头：</p><p id=\"demo\"></p><p>Internet Explorer 不支持 startsWith() 方法。</p><script>let text = \"Hello world, welcome to the universe.\";document.getElementById(\"demo\").innerHTML = text.startsWith(\"Hello\");</script></body></html> 上面的结果将返回：true let text = \"Hello world, welcome to the universe.\";text.startsWith(\"world\", 5) // 返回 false let text = \"Hello world, welcome to the universe.\";text.startsWith(\"world\", 6) // 返回 true String.endsWith()​ 如果字符串以指定值结尾，则 endsWith() 方法返回 true，否则返回 false： 检查字符串是否以 \"Gates\" 结尾： var text = \"Bill Gates\";text.endsWith(\"Gates\") // 返回 true 检索以 \"world\" 结尾的字符串的前 11 个字符： let text = \"Hello world, welcome to the universe.\";text.endsWith(\"world\", 11) // 返回 true","s":"提取部分字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#提取部分字符串","p":1830},{"i":1844,"t":"replace() 方法用另一个值替换在字符串中指定的值： str = \"Please visit Microsoft!\";var n = str.replace(\"Microsoft\", \"Jetzihan\"); 执行上面代码后，str 的结果是 Please visit Jetzihan!。 replace() 方法不会改变调用它的字符串。它返回的是新字符串。 默认地，replace() 只替换首个匹配： str = \"Please visit Microsoft and Microsoft!\";var n = str.replace(\"Microsoft\", \"Jetzihan\"); 执行上面代码后，str 的结果是 Please visit Jetzihan and Microsoft!。 默认地，replace() 对大小写敏感。因此不对匹配 MICROSOFT： str = \"Please visit Microsoft!\";var n = str.replace(\"MICROSOFT\", \"Jetzihan\"); RES: Please visit Microsoft! 如需执行大小写不敏感的替换，请使用正则表达式 /i（大小写不敏感）： str = \"Please visit Microsoft!\";var n = str.replace(/MICROSOFT/i, \"Jetzihan\"); 请注意正则表达式不带引号。 如需替换所有匹配，请使用正则表达式的 g 标志（用于全局搜索）： str = \"Please visit Microsoft and Microsoft!\";var n = str.replace(/Microsoft/g, \"W3School\");","s":"字符串替换","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#字符串替换","p":1830},{"i":1846,"t":"通过 toUpperCase() 把字符串转换为大写： var text1 = \"Hello World!\"; // 字符串var text2 = text1.toUpperCase(); // text2 是被转换为大写的 text1 RES:HELLO WORLD!. 通过 toLowerCase() 把字符串转换为小写： var text1 = \"Hello World!\"; // 字符串var text2 = text1.toLowerCase(); // text2 是被转换为小写的 text1 RES:hello world!.","s":"转换为大写和小写","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#转换为大写和小写","p":1830},{"i":1848,"t":"concat() 连接两个或多个字符串： var text1 = \"Hello\";var text2 = \"World\";text3 = text1.concat(\" \",text2); concat() 方法可用于代替加运算符。下面两行是等效的： var text = \"Hello\" + \" \" + \"World!\";var text = \"Hello\".concat(\" \",\"World!\");","s":"链接多个字符串","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#链接多个字符串","p":1830},{"i":1850,"t":"trim() 方法删除字符串两端的空白符： var str = \" Hello World! \";alert(str.trim());","s":"删除两端空白符","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#删除两端空白符","p":1830},{"i":1852,"t":"charAt() 方法 charAt() 方法返回字符串中指定下标（位置）的字符串： var str = \"HELLO WORLD\";str.charAt(0); // 返回 H charCodeAt() 方法 charCodeAt() 方法返回字符串中指定索引的字符 unicode 编码： var str = \"HELLO WORLD\";str.charCodeAt(0); // 返回 72 属性访问 var str = \"HELLO WORLD\";str[0]; // 返回 H 使用属性访问有点不太靠谱： 不适用 Internet Explorer 7 或更早的版本 它让字符串看起来像是数组（其实并不是） 如果找不到字符，[ ] 返回 undefined，而 charAt() 返回空字符串。 它是只读的。str[0] = \"A\" 不会产生错误（但也不会工作！） var str = \"HELLO WORLD\";str[0] = \"A\"; // 不产生错误，但不会工作str[0]; // 返回 H","s":"提取字符串的字符","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#提取字符串的字符","p":1830},{"i":1854,"t":"可以通过 split() 将字符串转换为数组： var txt = \"a,b,c,d,e\"; // 字符串txt.split(\",\"); // 用逗号分隔txt.split(\" \"); // 用空格分隔txt.split(\"|\"); // 用竖线分隔 在上面的例子中应该要用 , 分割。 如果省略分隔符，被返回的数组将包含 index [0] 中的整个字符串。 如果分隔符是 \"\"，被返回的数组将是间隔单个字符的数组： var txt = \"Hello\"; // 字符串txt.split(\"\"); // 分隔为字符","s":"字符串转数组","u":"/docs/FrontEnd/webBasis/JavaScript/zifuchuan","h":"#字符串转数组","p":1830},{"i":1858,"t":"数据库顾名思义，就是数据和库，即存放数据的仓库。这里面的数据指数字、文本、图片、视频等它们被放在一起，需要使用的时候可以拿出来。在现实生活中，有很多数据库的例子： 身份证数据库​ 我们每个人都有一张身份证，身份证上的信息如姓名、生日、性别、籍贯等都是数据库（表）里面存储的内容。在国家机关中，有一个将所有人的信息集中放在一起的仓库，它存储了十四亿条数据，每条数据又包含着姓名、生日、性别、籍贯等数据内容。当你在办理某些业务时，输入身份证号，即可看到你的其他信息，这就是一个常用的数据库查询的例子。此时，每个 身份证号 是唯一存在的，就是整个数据库的索引。 QQ 数据库​ 我们常常使用 QQ ，这是一个即时通信工具，实际上，在腾讯公司的技术部门，就有一个大型的数据库，这个数据库包含很多用户的信息，每个用户的信息就是数据库的一条数据，这个数据中有 QQ号、昵称、生日、个性签名等内容。此时，每个 QQ号 是唯一存在的，就是整个数据库的索引。","s":"数据库是干什么的","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库是干什么的","p":1855},{"i":1860,"t":"传统的数据库的结构如下： 数据库（database） 数据表（table） 数据行（row） 字段（field），相当于 Excel 中的列，每个字段都有自己的数据类型。 在上面身份证例子中，整个户籍管理仓库就是一个数据库，这个数据库里面，可能有多张数据表，比如学籍表、身份证表、驾驶执照表等。以身份证表为例，这个表中存放着14亿条数据行，每个数据行标识着一个人。每一行都有一个唯一标识的字段，与其他字段区分开，这个字段就是身份证号，还有其他字段，比如姓名、民族、性别字段等。每个字段有不同的数据类型，身份证号数据类型为长数字，姓名的数据类型为字符串，出生日期的数据类型为日期。 Excel 类比数据库​","s":"数据库的结构","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库的结构","p":1855},{"i":1863,"t":"这个小程序设计的主题是送信和收信，所以仅安排了三个简单的界面，即 注册界面 写信界面 收信界面","s":"页面设计","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#页面设计","p":1855},{"i":1865,"t":"在这个简单的小程序中，我们需要存储用户信息和信件信息。因此我们的数据库中需要两个数据表，用户信息数据表中需要存储用户的头像、昵称、ID，信件信息需要存储信件的收件人、内容和发件人ID。两个数据库可以通过昵称（收件人姓名）联系起来。","s":"数据库设计","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库设计","p":1855},{"i":1868,"t":"TabBar​ app.json \"tabBar\": { \"list\": [{ \"pagePath\": \"pages/index/index\", \"text\": \"注册\" }, { \"pagePath\": \"pages/dend/index\", \"text\": \"发信\" }, { \"pagePath\": \"pages/receive/index\", \"text\": \"收信\" }] }, 注册页面​ 包含登录按钮，姓名输入框以及注册按钮。 index.wxml <!--index.wxml--><view class=\"container\"> <!-- 头像 --> <view ><image class=\"avatar\" src=\"{{avatar}}\"></image></view> <button bindtap=\"Login\">点击使用微信登录</button> <input bindinput=\"bindKeyInput\" type=\"text\" class=\"inputBox\" placeholder=\"填写你的姓名\"/> <button style=\"margin-top: 20rpx;\" bindtap=\"Yes\">注册</button></view> 写信页面​ index.wxml <!--pages/dend/index.wxml--><view class=\"container\"> <strong>发信</strong> <input bindinput=\"inputRecer\" type=\"text\" class=\"inputBox\" placeholder=\"填写收件人\"/> <input bindinput=\"inputContent\" type=\"text\" class=\"inputBox\" placeholder=\"填写内容\"/> <button bindtap=\"Sendit\">发送</button></view> 收信页面​ 这里需要使用列表渲染。 index.wxml <view class=\"container\"> <strong>收件箱</strong> <!-- 列表渲染 --> <view class=\"Mailcard\" wx:for='{{MailList}}' wx:key='index'> <view style=\"display:block\">内容：{{item.content}} </view> <view style=\"display:block\">收件人：{{item.rece}}</view> </view></view>","s":"页面实现","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#页面实现","p":1855},{"i":1870,"t":"创建集合​ 打开云开发控制台，在数据库中创建两个集合。分别取名TestBase和Mails，分别存储用户信息和信件信息。 caution 图中其他数据库集合和本例子无关，请不用理会。 设置读写权限​ 在集合页面，设置数据权限为所有用户可读，仅创建者可读写。 如此，数据库创建就完成了。","s":"数据库创建","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库创建","p":1855},{"i":1872,"t":"需求分析​ 在页面注册时，我们需要要求用户填写自己的姓名，再通过微信登录获取用户的openid作为唯一的标识。然后将拿到的信息与已存在的数据库比对，如果这个用户注册过，就提示注册过了，如果没有，就向数据库TestBase添加一条新的用户数据。 用户登录​ 使用微信提供的 API 获取用户登录，并得到其头像。 Login(e) { // 微信登录 var that = this //调用登录接口 wx.login({ success: function () { wx.getUserInfo({ success: function (res) { } }) } }) wx.getUserProfile({ desc:'获取用户信息', success: (res) => { // 获取userInfo的状态数据 console.log(res) this.setData({ // 获取头像 avatar: res.userInfo.avatarUrl, isLogin:1 }) }, }) }, 获取openid​ 由于微信直接提供的 openid 是秘密的，因此我们必须要解密之后才能使用 openid ，这里就要借助云函数进行实现了。 在 cloudfuctions 文件夹创建云函数 getOpenId ，图中其他的函数不需要理会，与本例子无关。 在 getOpenId 的 index 文件中创建 openid 解析函数，如下： // 云函数入口文件const cloud = require('wx-server-sdk')cloud.init({ // 初始化云开发环境 env: cloud.DYNAMIC_CURRENT_ENV // 当前环境的常量})const db = cloud.database()// 云函数入口函数exports.main = async (event, context) => { const wxContext = cloud.getWXContext() // 返回当前用户的身份信息，用于数据库记录和查询 return { event, openid: wxContext.OPENID, fromopenid: wxContext.FROM_OPENID, appid: wxContext.APPID, unionid: wxContext.UNIONID, }} 云函数调用​ 回到页面的 index.js 文件，在文件中调用这个云函数。 async getOpenId() { const { result: { // 创建调用结果 openid, fromopenid } } = await (await this.cloud()).callFunction({ // 声明要调用的云函数 name: 'getOpenId' }).catch(e => { let flag = e.toString() flag = flag.indexOf('FunctionName') == -1 ? flag : '请在cloudfunctions文件夹中getOpenId上右键，创建部署云端安装依赖，然后再次体验' wx.hideLoading() wx.showModal({ content: flag, // \"网络服务异常，请确认网络重新尝试！\" showCancel: false }) throw new Error(flag) }) // 返回解密结果 if (openid !== \"\") return openid return fromopenid }, 然后我们尝试登录，查看是否正常获取了 openid ： 如图，已经获取到了数据容器中。 填写姓名​ 使用 input 以及其自带的响应事件，创建输入框。 <input bindinput=\"bindKeyInput\" type=\"text\" class=\"inputBox\" placeholder=\"填写你的姓名\"/> data: { //... // 输入内容 inputValue: \"占位姓名\", //... },bindKeyInput: function (e) { this.setData({ inputValue: e.detail.value })}, 写入数据库​ 在上面的步骤中，我们已经得到了用户的 openid 以及用户填写的姓名，现在，我们要把注册信息写到数据库中。 首先，为注册按钮绑定事件。 先调用获取 openid 函数，得到 openid （上面只创建了功能，并没有调用） 。 this.getOpenId().then(async openid => { console.log(\"OpenID: \" + openid) this.setData({ UserID: openid }) }) 接着，初始化云环境： const db = wx.cloud.database({ // 在下面填写你的云开发 ID env: '' }) 然后在数据表中判断这个 ID 是否已经注册过，这就需要用到 db.where.get API。让我们看一下官方是如何解释这个方法的： Collection.where(condition: Object): Collection 指定查询条件，返回带新查询条件的新的集合引用 参数 condition: Object 查询条件 返回值 Collection 在这里，我们使用 where 去查询这个 openid 是否已经存在。 db.collection('TestBase').where({ // 筛选条件 _openid: this.data.UserID }).get().then(ress => { // 如果存在 如何处理 }) 可以通过 data.length 来判断数据行是否为空，如果已经存在，那么我们就应该要提示用户已注册： if (ress.data.length != 0) { wx.showModal({ title: '抱歉', content: '用户已存在', }) } 如果不为空，我们就要使用 db.collection('').add 方法添加数据： db.collection('TestBase').add({ // data 字段表示需新增的 JSON 数据,在这里向数据库写入数据 data: { // 让 id 标识为用户唯一的 openid _id: this.data.UserID, // 头像 Avatar:this.data.avatar, // 姓名 Name:this.data.inputValue }, success: function (res) { // res 是一个对象，其中有 _id 字段标记刚创建的记录的 id console.log(res) wx.showModal({ title: '成功', content: '上传成功', }) } }) 我们执行一下，观察数据库中是否已经添加了新的数据： 显然，这里已经增加了一条新的用户数据。","s":"注册功能","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#注册功能","p":1855},{"i":1874,"t":"经过上面的例子，我们可以总结出数据库调用的步骤： 一、初始化云环境​ cloud.init({ // 初始化云开发环境 env: cloud.DYNAMIC_CURRENT_ENV // 当前环境的常量}) 二、声明数据库​ const db = wx.cloud.database({ // 在下面填写你的云开发 ID env: '' }) 三、调用API进行处理​ 比如上面的查询和新增，实际上，数据库有增删改查等能力，这在微信小程序文档中有详细的说明，也可以参考这篇文章","s":"数据库调用步骤","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#数据库调用步骤","p":1855},{"i":1876,"t":"需求分析​ 在写信功能中，我们需要指定收件人，以及写入信的内容，这里定义了两个输入框，用于获取这两个内容。获取得到这些信息之后，我们首先要到用户数据表中判断这个收件人是否为我们的用户，如果不是，那么就提示，如果是，就把这封信写入到信件数据表中。 文本框信息获取​ data: { Content:'', Rece:'', RecrID:'' }, inputContent: function (e) { this.setData({ Content: e.detail.value }) }, inputRecer: function (e) { this.setData({ Rece: e.detail.value }) }, 判断是否填写了内容​ 在发送按钮点击事件中进行判断。 if(this.data.Content===''|this.data.Rece===''){ wx.showModal({ title: '注意', content: '请先输入完整内容', }) } 判断是否存在这个收信人​ 同样是调用 where 方法来判断数据表中是否有这个收件人数据： db.collection('TestBase').where({ // 筛选条件 Name:this.data.Rece }).get().then(ress => { }) 这里这个函数返回了一个数据 ress ,这个数据中包含了数据库中这个 Name 用户对应的所有数据，我们可以使用 ress.data[0] 得到它。我们通过 console.log 方法打印出 ress 的内容。现在我们看看控制台输出的 ress 究竟是什么： 显然，它返回了一个 Array 数组，这个数组只有一个元素，即 data[0] ，这个元素中返回了四个参数，我们需要的是这个 _openid 参数，它表示了收件人的唯一标识。因此可以通过ress.data[0] 得到它，并把它放到临时的容器中。 db.collection('TestBase').where({ // 筛选条件 Name:this.data.Rece }).get().then(ress => { // 判断返回的data长度是否为0，如果为0的话就证明数据库中没有存在该数据，然后进行添加操作 // 得到了对应姓名的 openid console.log(ress); this.setData({ RecrID:ress.data[0]._openid }) if (ress.data.length === 0) { wx.showModal({ title: '抱歉', content: '用户不存在', }) return; } else{ // 用户存在，添加信件数据,另一个数据库 } }) 写入信件数据​ 与写入用户数据十分类似，不再赘述： // 用户存在，添加信件数据,另一个数据库db.collection('Mails').add({ // data 字段表示需新增的 JSON 数据,在这里向数据库写入数据 data: { // 收件人姓名 rece: this.data.Rece, // 收件人id receID:this.data.RecrID, // 新建内容 content:this.data.Content }, success: function (res) { // res 是一个对象，其中有 _id 字段标记刚创建的记录的 id console.log(res) wx.showModal({ title: '成功', content: '上传成功', }) }})","s":"写信功能","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#写信功能","p":1855},{"i":1878,"t":"需求分析​ 收信时，我们需要拿着自己的姓名去信件数据库逐一匹配，如果是发给自己的信，就拿出来，其他的不管。然后通过微信能力列表渲染到界面。 数据库比对​ 同样是使用 where 方法进行比对，将通过比对 openid 就可以得到只属于自己的内容： onShow: function () { var that=this; const db = wx.cloud.database({ // 填写你的云开发 ID env: 'nannan-1g1q4u2i02398ecf' }) // 在数据库里面添加新表 TestBase db.collection('Mails').where({ // 筛选条件，这样查询之后只会获取发给自己的信息，空着就行，不用填参数 _openid:'' }).get().then(ress => { console.log(ress) that.setData({ MailList:ress.data }) }) }, 为什么在 onShow 函数中进行？因为我们希望，每次打开这个页面就去更新我们获得的数据信息。进行这个步骤之后，数据容器 MailList 就得到了全部属于我的信件。 列表渲染​ 我们看看 MailList 中有什么： 这与云开发数据库中的信息能够对上： 除了一条为张三的数据外，所有 aaa 的数据都获取下来了。 然后列表渲染： <view class=\"Mailcard\" wx:for='{{MailList}}' wx:key='index'> <view style=\"display:block\">内容：{{item.content}} </view> <view style=\"display:block\">收件人：{{item.rece}}</view> </view> 实现结果：","s":"收信","u":"/docs/FrontEnd/WxMini/DataBaseDemo","h":"#收信","p":1855},{"i":1881,"t":"danger 这是比较重要的内容","s":"微信小程序开发-重点：组件库","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"","p":1880},{"i":1883,"t":"虽然建议初学者都使用原生进行开发，以便于熟悉语言和架构，但是对于学习时间紧、急于拿出成果的开发者来说，组件库是一个更好的选择（也可以说它是一个框架）。程序员做的事就是让后来的程序员更加轻松，因此，诞生了许多组件库。当然，这里说的组件库只是UI组件库，必须和vue、react等js框架区分开。 怎么理解UI组件库 我们用房屋装修作为例子。你的房子里面需要一些家具。假如你前往宜家家居购买一些家具，比如沙发、床、桌子等，那么这时我们就可以把宜家比喻成一个装修组件库。你只需要把沙发从宜家里面拿出来，放到你的家里，你就完成了一个沙发的构建。但是，如果你不使用类似的组件库而只使用原生呢？就相当于如果你需要一个沙发，你就需要从锯木头、织布开始，慢慢地依靠自己造出这个沙发。 UI组件库就是这样，如果你需要一个搜索框，你只需要将它调用出来，而不是自己去写嵌套结构。因此使用UI组件库能够帮你减少很多css代码和html代码的书写。","s":"为什么要使用组件库？","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#为什么要使用组件库","p":1880},{"i":1885,"t":"小程序方面，由于其生态良好性，因此它也有很多组件库，请看这篇文章 ，它介绍了很多主流的小程序组件库。 本文选择使用Vant Weapp,请马上收藏这个文档。Vant是有赞前端团队基于有赞统一的规范实现的 Vue、React、微信小程序组件库，提供了一整套 UI 基础组件和业务组件。 选好组件库之后，建议团队里的设计人员也按照这个选定的框架进行设计，很多设计软件提供组件库原型的下载。例如即时设计-vant设计规范","s":"选择一个组件库","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#选择一个组件库","p":1880},{"i":1888,"t":"使用npm安装 tip 这个方法要求你的电脑里安装了node.js环境，如果没有请看电脑配置npm环境。这个不会的话，可以给我留个言，我来写一个文档。这个工具以后也会用到，大家可以花点时间给装上。 打开微信IDE里的终端。 输入npm指令安装。 # 通过 npm 安装npm i @vant/weapp -S --production","s":"步骤一","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#步骤一","p":1880},{"i":1890,"t":"安装后，修改 app.json，将 app.json 中的 \"style\": \"v2\" 去除，小程序的新版基础组件强行加上了许多样式，难以覆盖，不关闭将造成部分组件样式混乱。","s":"步骤二","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#步骤二","p":1880},{"i":1892,"t":"然后修改 project.config.json，需要手动在 project.config.json 内添加如下配置，使开发者工具可以正确索引到 npm 依赖的位置。 { ... \"setting\": { ... \"packNpmManually\": true, \"packNpmRelationList\": [ { \"packageJsonPath\": \"./package.json\", \"miniprogramNpmDistDir\": \"./miniprogram/\" } ] }}","s":"步骤三","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#步骤三","p":1880},{"i":1894,"t":"构建npm包 点击工具-构建npm。 tip 经过上面的操作之后，就可以快乐地进行接口调用啦！","s":"步骤四","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#步骤四","p":1880},{"i":1896,"t":"俗话说，程序员就是API调用师（bushi），那么我们就来快乐地调用API吧！ 使用如下的tabbar配置,这还没用到vant： 效果如下","s":"开始开发","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#开始开发","p":1880},{"i":1898,"t":"现在我们想要在首页上加一个日历！ 首先，我们到vant的文档找到日历所在位置，然后查看调用方式。 他告诉我们要先声明组件，好，那我们就声明组件。 在app.json或index.json中引入组件。如果在app.json中引用，就可以全局使用，如果在某个界面的index.json中引用，则只能那个页面使用，这里我们在app.json中声明组件。 这里官方文档有点问题，实际上得引入两个组件。 \"usingComponents\": { \"van-calendar\": \"@vant/weapp/calendar/index\", \"van-cell\": \"@vant/weapp/cell/index\"} 然后我们在主页,index.wxml中调用这个组件。 <van-cell title=\"选择单个日期\" value=\"{{ date }}\" bind:click=\"onDisplay\" /><van-calendar show=\"{{ show }}\" bind:close=\"onClose\" bind:confirm=\"onConfirm\" /> 然后在index.js中加入逻辑代码，这些都是从文档上直接copy的。 Page({ data: { date: '', show: false, }, onDisplay() { this.setData({ show: true }); }, onClose() { this.setData({ show: false }); }, formatDate(date) { date = new Date(date); return `${date.getMonth() + 1}/${date.getDate()}`; }, onConfirm(event) { this.setData({ show: false, date: this.formatDate(event.detail), }); },}); 实现效果如下 tip 怎么样？有没有觉得非常的简单方便，就能写一个很复杂的日历组件啦？","s":"调用一个日历选择组件","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#调用一个日历选择组件","p":1880},{"i":1900,"t":"我们再来举一个例子，调用一个开关组件。 同样，添加app.json代码。 \"usingComponents\": { \"van-switch\": \"@vant/weapp/switch/index\"} 然后在index.wxml中引用它。 <van-switch checked=\"{{ checked }}\" bind:change=\"onChange\" /> 在index.js中添加逻辑代码，注意，切不可直接复制粘贴，要将需要的代码补充到应该有的地方。 Page({ data: { checked: true, }, onChange({ detail }) { // 需要手动对 checked 状态进行更新 this.setData({ checked: detail }); },}); 前面带红色断点的是我这次添加的内容： 效果如图： 结语 好了，这就是本节的内容了，vant-ui组件库是一个非常齐全的组件库，经过上面两个例子相信你已经能够触类旁通，使用组件库里的组件，构造出你想要的页面了.","s":"调用一个开关组件","u":"/docs/FrontEnd/WxMini/wxmini-component","h":"#调用一个开关组件","p":1880},{"i":1903,"t":"首先，将图片文件放入 miniprogram\\images 文件夹中。 然后在小程序代码编辑窗书写wxml代码,注意图片路径。 <image src=\"../../images/1.jpg\"></image> caution 注意，小程序中没有<img>标签，因此请使用<image>标签。","s":"插入本地图片","u":"/docs/FrontEnd/WxMini/wxmini-example","h":"#插入本地图片","p":1901},{"i":1905,"t":"小程序对程序包的限制 微信小程序要求在没有分包的情况下，小程序的包大小不超过 2M,因此这就意味着，你不能在小程序文件夹中放过多图片。那么必要的图片都放在哪呢？你可以使用微信的云开发云存储，将文件放到云存储中进行调用(会产生相关费用），或者使用别的图床工具，例如 微博图床 （完全免费）。 在这里，比如我要将图片放入云存储中（云存储的开通合使用将在之后讲解）。 这里有张待添加的图片。我们复制中间的连接，以相同的方式把将其写进wxml代码中。 <image src=\"cloud://nannan-1g1q4u2i02398ecf.6e61-nannan-1g1q4u2i02398ecf-1311679880/iPhone 13 Pro Max 1.png\"></image> 如果使用微博图床。首先将图片上传到图床窗口： 然后复制图片连接，以同样的方式插入wxml代码中。 <image src=\"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3p8r4lj5ej30r20iuwm8.jpg\"></image>","s":"插入云图片","u":"/docs/FrontEnd/WxMini/wxmini-example","h":"#插入云图片","p":1901},{"i":1909,"t":"上一篇章我们讲解了微信小程序开发的准备工作，但是在日常开发中，我们肯定不是一个人单独开发，而是团队合作开发。但是问题是，当我们多个人共同开发一个项目时，怎么把大家的合起来呢？ 是这样吗？ 串行工作：每个人负责一个模块，在这个人书写自己的模块时，其他人闲着，在这个人写好代码后，把代码打包，压缩包发送给下一个人。 并行工作：多人同时进行编码，写好之后进行合并。 你平时是怎么操作的呢？实际上，显然是并行工作的效率高，但是怎么达到这个目的呢？答案就是，代码托管。我们将代码放在某个平台的仓库里上，每个协作者在仓库中创建一个属于自己的分支（branch），并将代码拷贝一份副本在本地，在本地进行自己部分的编码和测试工作，在编码完成后，把这个工程推送（Push）到仓库中自己的分支里，并向主分支（main）发起合并请求（pull request），在管理员审核过后，就可以自动比较二者不一样的地方，进行合并（Merge）。 举个栗子 比如，老师新出了一张试卷，但是老师不想自己得到答案，因此她安排A、B、C三位学霸来做这套试卷。分别将这三个同学的试卷记为a、b、c。假设老师那里有一张空白试卷m。那么老师就是一个仓库。这张试卷m就是主分支（branch main），试卷a、b、c就是另外三个子分支。老师安排A同学做选择题，B同学做填空题，C做大题，在A做完选择题后，他将卷子交给老师（这叫提交合并请求），老师看了之后觉得没问题，就把A的答案誊抄到空白卷m上（这叫合并），B做完填空题后，手比较痒，就另外做了选择题，他也把卷子交给老师，老师看了之后，发现B的选择题答案和A的不一样（这叫产生了冲突），老师经过仔细判断之后发现A写的是对的，就保留A的选择题答案，忽略B的选择题答案（这叫解决冲突），然后将B的填空题合并上去。C做完大题之后交给老师，老师经过审核发现没有冲突的地方，因此也把C的试卷合并到m中。 我们可以得出以下结论： 总有人来扮演老师的角色，负责审核和解决冲突。 做题时A、B、C三位协作者可以同时做试卷，不受其他人影响。 tip 建议好好掌握这一技能，版本管理是程序员必备的技能之一。","s":"前言","u":"/docs/FrontEnd/WxMini/wxmini-git","h":"#前言","p":1907},{"i":1911,"t":"进入微信开发者代码管理,使用微信登入。 点击-创建项目。 为小程序命名。可以先设置为私有。 创建成功。 复制上面那一串HTTPS URL。 在微信开发工具右上角点击版本管理。 初始化Git仓库。 点击设置-添加远程仓库。 在网络与认证中选择添加用户名和密码。 在微信代码管理平台中设置密码和用户名。 填到IDE中。 然后，选择push，将现在的代码上传到代码管理平台。 上传成功后，代码管理平台出现了已经上传的代码。","s":"微信开发者代码管理","u":"/docs/FrontEnd/WxMini/wxmini-git","h":"#微信开发者代码管理","p":1907},{"i":1913,"t":"除项目管理员以外，其他开发者均不允许直接推送到主要分支，而应该推送到另外的分支，然后提交合并。这里建议所有成员均建一个自己的分支，每次自己的代码编写好后将代码推送到自己的分支，然后再提交合并请求。 下面将讲解团队成员推送代码和提交合并的过程。 先拉取。 这样有利于把别人的修改拉到自己本地的代码中。 勾选修改，查看这些修改的状态。 如果这些修改前面并没有出现Conflict（黄色的C），冲突的字样，那么表示可以正常提交合并，否则，请先处理冲突。 在下面添加修改评论，然后提交。 然后推送代码。 第一次推送，请新建一个分支，之后的提交就提交到这个分支即可。 可以看到，已经出现了我们新的分支及其代码。","s":"不同成员创建不同分支","u":"/docs/FrontEnd/WxMini/wxmini-git","h":"#不同成员创建不同分支","p":1907},{"i":1915,"t":"在上面把自己的代码上传后，就可以添加合并请求了。 选择将自己的分支合并到master分支。 然后比较两个分支。 填写相关信息，将代码分配给管理员审核。 然后选择提交，合并会被阻止，因为管理员还没同意。 管理员添加评审意见。 就可以正常合并啦！ 至此，这一章节也结束了。 注意 冲突往往难以避免，但是先记得一个准则，写之前先拉取再推送。","s":"提交合并请求","u":"/docs/FrontEnd/WxMini/wxmini-git","h":"#提交合并请求","p":1907},{"i":1918,"t":"为了微信小程序能够正常运行在微信环境中，小程序研发出了小程序框架。整个小程序框架系统分为两部分：逻辑层（App Service）和 视图层（View）。小程序提供了自己的视图层描述语言 WXML 和 WXSS，以及基于 JavaScript 的逻辑层框架，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。简单来说，视图层就是渲染你看得到的东西，逻辑层提供了数据绑定。 这里同样是用上一章的例子： <!-- This is our View --><view> Hello {{name}}! </view><!-- 插值语法 --><button bindtap=\"changeName\"> Click me! </button><!-- 按钮 --> // This is our App Service.// This is our data.var helloData = { name: 'Weixin'}// Register a Page.Page({ data: helloData, changeName: function(e) { // sent data change to view this.setData({ name: 'MINA' }) }}) 点击可预览上述代码的效果 开发者通过框架将逻辑层数据中的 name 与视图层的 name 进行了绑定，所以在页面一打开的时候会显示 Hello Weixin!； 当点击按钮的时候，视图层会发送 changeName 的事件给逻辑层，逻辑层找到并执行对应的事件处理函数； 回调函数触发后，逻辑层执行 setData 的操作，将 data 中的 name 从 Weixin 变为 MINA，因为该数据和视图层已经绑定了，从而视图层会自动改变为 Hello MINA。","s":"什么是小程序框架","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#什么是小程序框架","p":1916},{"i":1920,"t":"逻辑层主要是JavaScript在发挥作用。","s":"逻辑层","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#逻辑层","p":1916},{"i":1922,"t":"tip 这里的注册是不同于前面提到的去小程序网站注册小程序，而是在一个生命周期中去声明这个小程序的存在。 每个小程序都需要在 app.js 中调用 App 方法注册小程序实例，绑定生命周期回调函数、错误监听和页面不存在监听函数等。 // app.jsApp({ onLaunch (options) { // 在加载小程序时运行这段逻辑. }, onShow (options) { // 当页面渲染时运行这段逻辑. }, onHide () { // 当小程序隐藏运行这段逻辑. }, onError (msg) { // 当错误发生时运行这段逻辑 console.log(msg) }, globalData: 'I am global data' // 全局公共数据，某些数据很多页面都要使用，就可以将它放在这里}) note 例如计协小程序中上一个页面的数据转存到下一个页面就可以借助这个方法。 在单个页面中，可以像下面这样调用全局的数据。 // xxx.jsconst appInstance = getApp()console.log(appInstance.globalData) // I am global data","s":"“注册”小程序","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#注册小程序","p":1916},{"i":1924,"t":"指在小程序的生命周期中注册一个页面，发生于跳转到这一页面时。 //index.jsPage({ data: { text: \"This is page data.\" //页面数据 }, onLoad: function(options) { // 页面创建时执行 }, onShow: function() { // 页面出现在前台时执行 }, onReady: function() { // 页面首次渲染完毕时执行 }, onHide: function() { // 页面从前台变为后台时执行 }, onUnload: function() { // 页面销毁时执行 }, onPullDownRefresh: function() { // 触发下拉刷新时执行 }, onReachBottom: function() { // 页面触底时执行 }, onShareAppMessage: function () { // 页面被用户分享时执行 }, onPageScroll: function() { // 页面滚动时执行 }, onResize: function() { // 页面尺寸变化时执行 }, onTabItemTap(item) { // tab 点击时执行（自定义函数） console.log(item.index) console.log(item.pagePath) console.log(item.text) }, // 事件响应函数，自定义函数 viewTap: function() { this.setData({ text: 'Set some data for updating view.' // 给text变量赋值 }, function() { // this is setData callback }) }})","s":"注册页面","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#注册页面","p":1916},{"i":1926,"t":"比较复杂，知道有这个东西即可。","s":"页面生命周期","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#页面生命周期","p":1916},{"i":1928,"t":"微信小程序框架使用数据结构中栈的方式维护每个页面的路由。 什么是栈 栈（stack）又名堆栈，它是一种运算受限的线性表。限定仅在表尾进行插入和删除操作的线性表。这一端被称为栈顶，相对地，把另一端称为栈底。向一个栈插入新元素又称作进栈、入栈或压栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素；从一个栈删除元素又称作出栈或退栈，它是把栈顶元素删除掉，使其相邻的元素成为新的栈顶元素。一句话概括就是，一个竖着的容器，先进后出。 小程序路由栈的表现： 几种小程序路由方式： 初始化-小程序打开的第一个页面-路由后：onLoad, onShow 打开新页面-调用API-wx.navigateTo 使用组件-<navigator open-type=\"navigateTo\"/> 路由前：onHide 路由后：onLoad, onShow 页面重定向-调用API-wx.redirectTo 使用组件-<navigator open-type=\"redirectTo\"/> 路由前：onUnload 路由后：onLoad, onShow 页面返回-调用API-wx.navigateBack 使用组件-<navigator open-type=\"navigateBack\"> 用户按左上角返回按钮-路由前：onUnload 路由后：onShow Tab切换-调用API wx.switchTab 使用组件<navigator open-type=\"switchTab\"/> 用户切换-Tab 重启动-调用API wx.reLaunch 使用组件 <navigator open-type=\"reLaunch\"/> 路由前：onUnload 路由后：onLoad, onShow Tab 切换对应的生命周期（以 A、B 页面为 Tabbar 页面，C 是从 A 页面打开的页面，D 页面是从 C 页面打开的页面为例）： 注意事项： navigateTo, redirectTo 只能打开非 tabBar 页面。 switchTab 只能打开 tabBar 页面。 reLaunch 可以打开任意页面。 页面底部的 tabBar 由页面决定，即只要是定义为 tabBar 的页面，底部都有 tabBar。 调用页面路由带的参数可以在目标页面的onLoad中获取。","s":"页面路由","u":"/docs/FrontEnd/WxMini/wxmini-logic-architecture","h":"#页面路由","p":1916},{"i":1931,"t":"上一节我们讲了如何利用微信git进行代码管理。这一节我们来讲讲基本的界面配置。 前面说过，小程序实质上就是web网页，一个web网页需要什么东西构成呢？ 我们以下面这个web网页为例： 我们把这个网站分解为Head、Tabbar、内容三个部分，这个是一般的网站的构成之一。 然后我们再拿出一张小程序图。 我们可以发现，也可以将其划分为相同的三个部分。 那么我们快开始配置吧！","s":"前言","u":"/docs/FrontEnd/WxMini/wxmini-page-config","h":"#前言","p":1929},{"i":1933,"t":"Tabbar是小程序底部的切换按钮，用于主界面之间的切换。 在 app.json 文件中配置tabbar。 \"tabBar\": { \"color\": \"#ff0000\", //字体颜色 \"selectedColor\": \"#ffff00\", //选中时字体的颜色 \"backgroundColor\": \"#1697eb\", //tab背景色 \"borderStyle\": \"black\", //tabBar盒子上面的border颜色，只支持black 与 white \"list\": [ { \"pagePath\": \"pages/tabOne/tabOne\", //此处路径要写不带 ‘/’的，比如Helloworld文件，我们要写的路径就是 pages/helloworld/helloworld \"text\": \"首页\", //tab名字 \"iconPath\": \"image/icon_API.png\", //tab图标 \"selectedIconPath\": \"image/icon_API_HL.png\" //选中时的tab图标 }, { \"pagePath\": \"pages/tabTwo/tabTwo\", \"text\": \"中间页面\", \"iconPath\": \"image/icon_API.png\", \"selectedIconPath\": \"image/icon_API_HL.png\" }, { \"pagePath\": \"pages/tabThree/tabThree\", \"text\": \"第三个页面\", \"iconPath\": \"image/icon_API.png\", \"selectedIconPath\": \"image/icon_API_HL.png\" } ], \"position\": \"bottom\", //tabBar的位置 top 或 bottom \"custom\": false //自定义tabBar时为true } 效果如下：","s":"Tabbar","u":"/docs/FrontEnd/WxMini/wxmini-page-config","h":"#tabbar","p":1929},{"i":1935,"t":"在 app.json 中设置顶部title。 //统一配置Title \"window\": { \"backgroundTextStyle\": \"light\",//浅色模式 \"navigationBarBackgroundColor\": \"#fff\", \"navigationBarTitleText\": \"首页\",//这里是你要修改的文字 \"navigationBarTextStyle\": \"black\" } 或者在单独页面的 xxx.json 中设置单独页面的title。 \"navigationBarTitleText\": \"首页\", \"navigationBarBackgroundColor\": \"white\", \"navigationBarTextStyle\": \"black\"","s":"设置顶部文字","u":"/docs/FrontEnd/WxMini/wxmini-page-config","h":"#设置顶部文字","p":1929},{"i":1938,"t":"你需要具备的基础能力 这不是0基础教程，你需要首先具备html、css和一些JavaScript知识","s":"知识储备","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#知识储备","p":1936},{"i":1940,"t":"微信是中国使用量最大的手机 App 之一，市场极大。2017年，微信正式推出了小程序，允许外部开发者在微信内部运行自己的代码，开展业务，截止2020年6月，小程序数量已经超过了550万个。 小程序可以视为只能用微信打开和浏览的网站。 小程序和网页的技术架构是几乎一样的，用到的 JavaScript脚本语言和 CSS 样式表也是一样的，只是网页的 HTML 标签被稍微修改成了 WXML 标签。所以，小程序页面本质上就是网页。","s":"小程序是什么","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#小程序是什么","p":1936},{"i":1942,"t":"​网页开发渲染线程和脚本线程是互斥的，这也是为什么长时间的脚本运行可能会导致页面失去响应，而在小程序中，二者是分开的，分别运行在不同的线程中。网页开发者可以使用到各种浏览器暴露出来的 DOM API，进行 DOM 选中和操作。而如上文所述，小程序的逻辑层和渲染层是分开的，逻辑层运行在 JSCore 中，并没有一个完整浏览器对象，因而缺少相关的DOM API和BOM API。这一区别导致了前端开发非常熟悉的一些库，例如 jQuery、 Zepto 等，在小程序中是无法运行的。同时 JSCore 的环境同 NodeJS 环境也是不尽相同，所以一些 NPM 的包在小程序中也是无法运行的。 tip 总结来说，小程序和WEB开发在语言上相通，但是内核不相通。","s":"小程序和h5的区别","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#小程序和h5的区别","p":1936},{"i":1944,"t":"前往微信公众平台，注册小程序。 点击“小程序”进入注册。 填写一个尚未在公众平台注册过的邮箱，完成如下设置后，点击注册。 此时，腾讯会给你的这个邮箱发一条验证码，点击链接验证即可。 填写主体信息，选择“个人”。 填写管理员信息，进行身份验证（很快！） 您也可以用已经存在的公众号注册小程序 完成注册后，进入管理界面。 点击设置，拉到最下边，获取AppID（重要）并记录下来。 在基本设置中完善小程序信息，类别随意选择。 caution 您不需要进行微信验证，这是花钱的。是商业性App需要的东西。 进入微信开发工具下载界面下载微信开发工具。选择Stable版即可。 不出意外的话，您的电脑应该是64位。 🔔 建议不要安装在C盘。 安装完成后，打开。","s":"注册微信小程序","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#注册微信小程序","p":1936},{"i":1946,"t":"在微信小程序管理平台上，选择添加协同开发者。 为所有人添加权限。","s":"添加开发者","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#添加开发者","p":1936},{"i":1948,"t":"如图，打开微信开发者工具，新建一个小程序，确定好小程序的工程名、路径，填写刚刚记录下来的AppID，后端服务不用管，一般刚注册时是没有云开发的。选择下面的空白模板。 注意，一定要使用空白模板！ 如下，工程就建立好了：","s":"创建小程序","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#创建小程序","p":1936},{"i":1950,"t":"小程序包含一个描述整体程序的 app 和多个描述各自页面的 page。 一个小程序主体部分由三个文件组成，必须放在项目的根目录，如下： app.js : 小程序逻辑 app.json : 小程序公共配置 app.wxss : 小程序公共样式表，所有的页面都要遵循这个里面的css配置 一个小程序页面由四个文件组成，分别是： js :页面逻辑 wxml :页面结构 json :页面配置 wxss :页面样式表","s":"小程序的结构","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#小程序的结构","p":1936},{"i":1954,"t":"下面将通过实际操作，帮助你写一个Hello World Demo！ 先在Pages文件夹上右键-新建文件夹。 然后在这个文件夹上新建页面，命名为Hello World。 如此，系统就自动生成了一个页面的四个必须文件。","s":"新建页面","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#新建页面","p":1936},{"i":1956,"t":"找到app.json。 app.json的pages配置项集合的第一条就是默认的主页。 我们把刚刚自动生成的helloworld页面配置移到最前面。 注意，配置项的最后一条末尾必须没有逗号。 按住ctrl+s，保存工程，自动编译，左边的模拟器就会将刚刚设置的页面渲染出来。","s":"将页面设置为主页","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#将页面设置为主页","p":1936},{"i":1958,"t":"删掉原有的代码。将右边的编辑区清空。 让我们把原有的div想象成view，编写下面的嵌套盒子。 <view> <p>Hello World!</p></view> Ctrl+s保存，在左边的渲染器中可以看到新写的代码。","s":"编写wxml代码","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#编写wxml代码","p":1936},{"i":1960,"t":"简单的代码wxml代码似乎有点空洞，那我们开始写css（wxss）吧！ 修改wxml代码，为盒子添加class类。 <view class=\"text_box\"> <p class=\"p1\">Hello World!</p></view> 打开helloworld.wxss文件，编写样式代码。 .text_box{ width: 100%; height: 300rpx; display: flex; justify-content: center; margin-top: 100rpx;}.p1{ font-size: 70rpx; color: aqua;} 保存文件之后左边的模拟器刷新渲染，可以看到新的样式。 注意单位rpx 为了更好的适配不同的屏幕大小，所以小程序使用相对单位 rpx ，小程序的屏幕宽固定为750rpx（即750个物理像素），在所有设备上都是如此，无论在iPhone13pro上还是iPhone 13 Mini上都是如此。1rpx=（screenWidth / 750）px，其中screenWidth为手机屏幕的实际的宽度（单位px），例如iphone6的screenWidth=375px，则在iphone6中1rpx=0.5px。在后面的开发中，请广泛使用rpx。 到这里，准备操作就做完了。","s":"编写wxss代码","u":"/docs/FrontEnd/WxMini/wxmini-pre","h":"#编写wxss代码","p":1936},{"i":1962,"t":"在本章节中，我们将了解微信小程序如何去拿后端数据库的数据，一般而言，小程序后端有下面两种方式： 微信云开发，接口丰富、便捷，易上手，缺点是要付费，数据掌握在别人手中。 自己的后端。技术难度高，但是可控。 本章节先介绍小程序与后端服务器交互的办法。","s":"微信小程序开发-服务器数据交互","u":"/docs/FrontEnd/WxMini/wxmini-server","h":"","p":1961},{"i":1964,"t":"这里使用小程序提供的HTTP请求来和服务器建立连接并传递数据。 POST方法详见HTTP报文格式。 使用POST方法发起请求，在页面js中的代码如下： wx.request({ url : \"https://www.\", // 服务器地址 method: \"POST\", data: { name: this.data.name, phone: this.data.phone, brand: this.data.brand, modelnumber: this.data.modelnumber, description: this.data.description, isStudent: JSON.stringify(this.data.isStudent), //将布尔类型转为json字符串 id: this.data.id, class: this.data.class, fileList: this.data.fileList, }, header: { \"Content-Type\": \"application/x-www-form-urlencoded\" }, success: function (res) { console.log(res.data); wx.navigateBack({ delta: 1 //小程序关闭当前页面返回上一页面 }) wx.showToast({ title: '提交完成！', icon: 'success', duration: 2000 }) }, })","s":"向服务器推送数据","u":"/docs/FrontEnd/WxMini/wxmini-server","h":"#向服务器推送数据","p":1961},{"i":1966,"t":"Page({ data: { // 创建数据容器 list: [] }, onLoad: function (options) { wx.request({ url: 'https://test.com', // 服务器地址 header: { 'content-type': 'application/json' }, success: res => { console.log(res.data) // 控制台打印 this.setData({ list: res.data // 赋值 }) } }) },}) 然后通过列表渲染到wxml界面： <view wx:for=\"{{list}}\" wx:key=\"index\"> <view class=\"item\"> <view class=\"number-wrapper\"> <text class=\"name\">{{item.name}}</text> <view class=\"count-wrapper\"> <text class=\"count\">{{item.des}}</text> </view> </view> </view></view> 如此，非常简洁地完成了前后端数据的交互。","s":"向服务端请求数据","u":"/docs/FrontEnd/WxMini/wxmini-server","h":"#向服务端请求数据","p":1961},{"i":1970,"t":"全局静态配置文件。 { \"usingComponents\": { //小程序全局使用的组件 \"van-steps\": \"@vant/weapp/steps/index\" // vant进度条组件声明 }, \"pages\": [ //小程序的页面信息 \"pages/QA/QA\", // 第一条默认为首页 \"pages/form/form\", \"pages/choose/choose\", \"pages/success/success\", \"pages/Feedback/Feedback\" ], \"window\": { // 全局窗口和导航栏的样式信息 \"backgroundTextStyle\": \"light\", // 下拉刷新文字颜色 \"navigationBarBackgroundColor\": \"#fff\", // 导航栏背景颜色 \"navigationBarTitleText\": \"北林计协\", // 导航栏文字 \"navigationBarTextStyle\": \"black\" // 导航栏文字颜色 }, \"tabBar\": { //底部导航设置 \"list\": [ { \"pagePath\": \"pages/QA/QA\", // 第一个页面为QA，也就是问答页面 \"text\": \"常见问题\", // Tabbar下面的描述文字 \"iconPath\": \"pages/images/QA-click.png\", //设置当前导航的Icon地址 \"selectedIconPath\": \"pages/images/QA-noclick.png\" // 选中后的Icon地址 }, { \"pagePath\": \"pages/choose/choose\", \"text\": \"维修申请\", \"iconPath\": \"pages/images/form-click.png\", \"selectedIconPath\": \"pages/images/form-noclick.png\" } ] }, \"sitemapLocation\": \"sitemap.json\" // 微信索引文件，用于在微信内搜索小程序}","s":"app.json","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#appjson","p":1967},{"i":1972,"t":"微信搜索索引。用于配置在微信中搜索小程序时展示的内容(不重要)： { \"desc\": \"关于本文件的更多信息，请参考文档 https://developers.weixin.qq.com/miniprogram/dev/framework/sitemap.html\", \"rules\": [{ \"action\": \"allow\", \"page\": \"*\" }]}","s":"sitemap.json","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#sitemapjson","p":1967},{"i":1974,"t":"全局的逻辑函数。 // app.jsApp({ onLaunch() { // 展示本地存储能力 const logs = wx.getStorageSync('logs') || [] logs.unshift(Date.now()) wx.setStorageSync('logs', logs) // 登录 wx.login({ success: res => { // 发送 res.code 到后台换取 openId, sessionKey, unionId } }) }, globalData: { userInfo: null }}) 在上面的代码中，决定了小程序在加载时反馈本地存储能力，已经登陆成功后获取用户的ID。","s":"app.js","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#appjs","p":1967},{"i":1976,"t":"全局样式，全局公用的样式可以放在这里，对每个页面都生效。 /**app.wxss**/.container { height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: space-between; padding: 200rpx 0; box-sizing: border-box;}","s":"app.wxss","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#appwxss","p":1967},{"i":1979,"t":"QA.json​ 指出在这一界面中用到的vant组件： { \"usingComponents\": { \"van-collapse\": \"@vant/weapp/collapse/index\", \"van-collapse-item\": \"@vant/weapp/collapse-item/index\", \"van-tab\": \"@vant/weapp/tab/index\", \"van-tabs\": \"@vant/weapp/tabs/index\", \"van-icon\": \"@vant/weapp/icon/index\" }} QA.wxml​ 页面的h5代码，创建元素。 <view class=\"part1\"><van-icon class=\"icon0\" name=\"question-o\" /><view class=\"part0\">常见问题</view> <van-collapse accordion value=\"{{ activeName }}\" bind:change=\"onChange\" > <van-collapse-item title=\"我的电脑C盘快满了，该怎么办？\" name=\"1\"> <text>···</text> </van-collapse-item> <van-collapse-item title=\"笔记本玩游戏掉帧卡顿怎么办？\" name=\"2\"> <text>···</text> </van-collapse-item> <van-collapse-item title=\"我的电脑连不上校园网了，该怎么办？\" name=\"3\"> <text>···</text> </van-collapse-item> <van-collapse-item title=\"电脑内存占用过高\" name=\"4\"> <text>···</text> </van-collapse-item></van-collapse></view><view class=\"box2\"><van-icon class=\"icon0\" name=\"label-o\" /><view class=\"part0\">问题导航</view><view class=\"part2\"> <van-tabs class=\"tab\" color=\"rgb(130, 240, 216)\" swipeable> <van-tab color=\"#f2826a\" title=\"分类1\"class=\"tab-content\"><van-collapse value=\"{{ activeNames }}\" bind:change=\"onChange2\"> <van-collapse-item title=\"电脑经常蓝屏，该怎么解决？\" name=\"1\"> <text> ···</text> </van-collapse-item> <van-collapse-item title=\"死机、系统自动重启\" name=\"2\"> <text>···</text> </van-collapse-item></van-collapse> </van-tab> <van-tab title=\"分类2\" class=\"tab-content\"><van-collapse value=\"{{ activeNames2 }}\" bind:change=\"onChange3\"> <van-collapse-item title=\"触控板故障\" name=\"1\"> <text> ··· </text> </van-collapse-item> <van-collapse-item title=\"电脑键盘失灵怎么办？\" name=\"2\"> <text>···</text> </van-collapse-item></van-collapse> </van-tab> <van-tab title=\"分类3\" class=\"tab-content\"><van-collapse value=\"{{ activeNames3 }}\" bind:change=\"onChange4\"> <van-collapse-item title=\"开机速度慢怎么办？\" name=\"1\"> <text> ···</text> </van-collapse-item> <van-collapse-item title=\"电脑很卡怎么办？\" name=\"2\"> <text>···</text> </van-collapse-item></van-collapse> </van-tab> </van-tabs></view></view> 在上述代码中，将页面分成两个部分，分别是上半部分的折叠面板和下半部分的标签面板+折叠面板。 参考：Vant折叠面板、VantTab面板 QA.wxss​ 规定该页面的样式，各个组件的颜色等： .part0{ margin:30rpx; margin-left:38rpx; margin-top:32rpx; font-size:40rpx; font-weight:400; float:left;}.icon0{ width:40rpx; height:40rpx; float:left; transform: scale(1.8); margin-left: 40rpx; margin-top: 40rpx;}.part1{ height:auto; margin:15rpx; width:auto; clear:both; margin-bottom: 100rpx; background-color: rgb(130, 240, 216); border-radius: 20rpx;}.van-cell{ background-color: rgb(224, 250, 244) !important;}.part2{ height:auto; margin:50rpx; clear:both;}.tab-content{ margin:30rpx;}.van-collapse-item__content{ background-color: rgb(239, 253, 250) !important;}.box2{ /* background-color: rgb(130, 240, 216); */ margin: 15rpx; border-radius: 20rpx;}.van-tabs{ width: 100%; }.titlebox{ width: 100%; display: block;}.tab{ padding: 0 !important;} QA.js​ 编写了本页面的逻辑： Page({ /** * 页面的初始数据 */ data: { activeName: '0', // 初始化names activeNames: ['0'], activeNames2: ['0'], activeNames3: ['0'], }, onChange(event) { //点击第一个便签时将折叠面板切换到这个标签的位置 this.setData({ activeName: event.detail, }); }, onChange2(event) { this.setData({ activeNames: event.detail, }); }, onChange3(event) { this.setData({ activeNames2: event.detail, }); }, onChange4(event) { this.setData({ activeNames3: event.detail, }); }})","s":"主页-QA","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#主页-qa","p":1967},{"i":1981,"t":"form.wxml​ <van-steps steps=\"{{ steps }}\" active=\"{{ active }}\" /><!-- 填写进度 --><van-divider contentPosition=\"left\" fontSize=\"16\" textColor=\"#1989fa\">基本信息</van-divider><!-- 分割线 --><van-cell-group> <!-- 单元格组1，基本信息 --> <van-field required value=\"{{ username }}\" label=\"姓名\" /> <!-- Field 输入框 --> <van-field required value=\"{{ phone }}\" label=\"手机号\" /> <view wx:if=\"{{isStudent}}\"> <van-field required value=\"{{ id }}\" label=\"学号\" /> <van-field required value=\"{{ class }}\" label=\"班级\" /> </view></van-cell-group><van-divider contentPosition=\"left\" fontSize=\"16\" textColor=\"#1989fa\">维修信息</van-divider><van-cell-group> <!-- 单元格组2-维修信息 --> <van-field value=\"{{ brand }}\" label=\"电脑品牌\" /> <van-field value=\"{{ modelnumber }}\" label=\"电脑型号\" /> <van-field required type = \"textarea\" maxlength =\"400\" show-word-limit autosize value=\"{{ description }}\" label=\"故障描述\" /></van-cell-group><van-divider contentPosition=\"left\" fontSize=\"16\" textColor=\"#1989fa\">上传故障照片</van-divider><van-uploader style=\"margin: 10px;\" file-list=\"{{ fileList }}\" bind:after-read=\"afterRead\" max-count=\"2\" /><view style=\"display:flex; flex-direction:row; min-height: 50px; padding: 10px; margin: 10px;\"> <view style=\"flex: 4;\"></view> <van-button type=\"primary\" size=\"normal\" style=\" flex: 2;\" bind:click =\"goSuccess\">提交</van-button></view> 参考：Field输入框、Cell单元格 form.js​ Page({ data: { name: '', //初始化姓名 phone: '', //初始化电话号码 brand: '', //初始化电脑品牌 modelnumber: '', //初始化电脑型号 description: '', //初始化故障描述 isStudent:false, //初始化，是否是学生，否则是老师 id: '', //初始化学号 class: '', //初始化班级 fileList: [], //初始化文件列表 steps: [ { text: '选择身份', //进度0 desc: '', }, { text: '填写信息', //进度1 desc: '', }, { text: '申请成功', //进度2 desc: '', }, ], active: ['1'],// 表明当前的进度条进度为1（从0开始） }, onChange(event) { this.setData({ radio: event.detail, }); }, afterRead(event) { //读取上传的图片 const { file } = event.detail; // 当设置 mutiple 为 true 时, file 为数组格式，否则为对象格式 wx.uploadFile({ url: 'https://example.weixin.qq.com/upload', // 仅为示例，非真实的接口地址 filePath: file.url, name: 'file', formData: { user: 'test' }, success(res) { // 上传完成需要更新 fileList const { fileList = [] } = this.data; fileList.push({ ...file, url: res.data }); this.setData({ fileList }); }, }); }, /** * 生命周期函数--监听页面加载 */ onLoad: function (options) { }, goSuccess() { wx.navigateTo({ url: '../success/success' //填写完毕后跳转到成功界面 }) },}) tip 其他页面都很相似，不再赘述。","s":"表单提交页面","u":"/docs/FrontEnd/WxMini/wxmini-source-code","h":"#表单提交页面","p":1967},{"i":1983,"t":"​在上一章中，我们开始了一个Hello World项目。你可能留意到了这个项目里边生成了不同类型的文件: json 后缀的 JSON 配置文件 wxml 后缀的 WXML 模板文件 wxss 后缀的 WXSS 样式文件 js 后缀的 JS 脚本逻辑文件接下来我们分别看看这4种文件的作用。","s":"微信小程序开发-代码结构及语法","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"","p":1982},{"i":1985,"t":"Json全称JavaScript Object Notation(JavaScript对象表示法)。 JSON 是一种数据格式，并不是编程语言，在小程序中，JSON扮演的静态配置的角色。 我们可以看到在项目的根目录有一个 app.json 和 project.config.json，此外在 pages/logs 目录下还有一个 logs.json，我们依次来说明一下它们的用途。","s":"JSON","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#json","p":1982},{"i":1987,"t":"JSON文件都是被包裹在一个大括号中 {}，通过 key-value 的方式来表达数据。JSON的 Key 必须包裹在一个双引号中，在实践中，编写 JSON 的时候，忘了给 Key 值加双引号或者是把双引号写成单引号是常见错误。 JSON的值只能是以下几种数据格式，其他任何格式都会触发报错，例如 JavaScript 中的 undefined。 数字，包含浮点数和整数 字符串，需要包裹在双引号中 Bool值，true 或者 false 数组，需要包裹在方括号中 [] 对象，需要包裹在大括号中 {} Null 还需要注意的是 JSON 文件中无法使用注释，试图添加注释将会引发报错。","s":"Json语法","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#json语法","p":1982},{"i":1989,"t":"danger 重要内容 app.json 是当前小程序的全局配置，包括了小程序的所有页面路径、界面表现、底部 tab 等。一个示例 app.json 配置内容如下： { \"pages\": [ //配置小程序的配置信息 \"pages/index/index\", //主页，第一条是主页 \"pages/logs/index\" //其他页面 ··· ], \"window\": { //配置小程序的顶部栏样式和底部栏样式 \"navigationBarTitleText\": \"Demo\", }, \"tabBar\": { // 配置底部导航栏的跳转关系 \"list\": [{ \"pagePath\": \"pages/index/index\", \"text\": \"首页\" }, { \"pagePath\": \"pages/logs/index\", \"text\": \"日志\" }] }, \"networkTimeout\": { // 延时信息，不重要 \"request\": 10000, \"downloadFile\": 10000 },} 我们简单说一下这个配置各个项的含义: pages字段 —— 用于描述当前小程序所有页面路径，这是为了让微信客户端知道当前你的小程序页面定义在哪个目录。 window字段 —— 定义小程序所有页面的顶部背景颜色，文字颜色定义等。 tabbar字段 —— 底部栏的跳转关系","s":"全局配置 app.json","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#全局配置-appjson","p":1982},{"i":1991,"t":"如果你整个小程序的风格是蓝色调，那么你可以在 app.json 里边声明顶部颜色是蓝色即可。实际情况可能不是这样，可能你小程序里边的每个页面都有不一样的色调来区分不同功能模块，因此我们提供了 page.json，让开发者可以独立定义每个页面的一些属性，例如刚刚说的顶部颜色、是否允许下拉刷新等等。 单个页面的json在每个页面中决定当前页面的配置信息，详细配置信息参考这里。 示例： xxx.json { \"navigationBarBackgroundColor\": \"#ffffff\", \"navigationBarTextStyle\": \"black\", \"navigationBarTitleText\": \"微信接口功能演示\", \"backgroundColor\": \"#eeeeee\", \"backgroundTextStyle\": \"light\"} 以上这些配置中有冲突的地方会覆盖app.json的配置项。也就是说，对于单个页面，页面的json优先级大于全局json。","s":"单个页面xxx.json","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#单个页面xxxjson","p":1982},{"i":1993,"t":"主要是记录微信开发工具的配置情况，对实际小程序没有意义，忽略。","s":"工具配置 project.config.json","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#工具配置-projectconfigjson","p":1982},{"i":1995,"t":"在WEB开发中，网页编程采用的是 HTML + CSS + JS 这样的组合，其中 HTML 是用来描述当前这个页面的结构，CSS 用来描述页面的样式，JS 通常是用来处理这个页面和用户的交互。 同样道理，在小程序中也有同样的角色，其中 WXML 充当的就是类似 HTML 的角色。打开 pages/index/index.wxml，你会看到以下的内容: <view class=\"container\"> <view class=\"userinfo\"> <button wx:if=\"{{!hasUserInfo && canIUse}}\"> 获取头像昵称 </button> <block wx:else> <image src=\"{{userInfo.avatarUrl}}\" background-size=\"cover\"></image> <text class=\"userinfo-nickname\">{{userInfo.nickName}}</text> </block> </view> <view class=\"usermotto\"> <text class=\"user-motto\">{{motto}}</text> </view></view> WXML和 HTML 非常相似，WXML 由标签、属性等等构成。下面是二者不同的地方： 标签名字有点不一样 往往写 HTML 的时候，经常会用到的标签是 div, p, span，开发者在写一个页面的时候可以根据这些基础的标签组合出不一样的组件，例如日历、弹窗等等。换个思路，既然大家都需要这些组件，为什么我们不能把这些常用的组件包装起来，大大提高我们的开发效率。 从上边的例子可以看到，小程序的 WXML 用的标签是 view, button, text 等等，这些标签就是小程序给开发者包装好的基本能力，我们还提供了地图、视频、音频等等组件能力。 多了一些 wx:if 这样的属性以及 {{ }} 这样的表达式 在网页的一般开发流程中，我们通常会通过 JS 操作 DOM (对应 HTML 的描述产生的树)，以引起界面的一些变化响应用户的行为。例如，用户点击某个按钮的时候，JS 会记录一些状态到 JS 变量里边，同时通过 DOM API 操控 DOM 的属性或者行为，进而引起界面一些变化。当项目越来越大的时候，你的代码会充斥着非常多的界面交互逻辑和程序的各种状态变量，显然这不是一个很好的开发模式，因此就有了 MVVM 的开发模式（例如 React, Vue），提倡把渲染和逻辑分离。简单来说就是不要再让 JS 直接操控 DOM，JS 只需要管理状态即可，然后再通过一种模板语法来描述状态和界面结构的关系即可。","s":"wxml模板文件","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#wxml模板文件","p":1982},{"i":1997,"t":"小程序的框架也是用到了上述这个思路，如果你需要把一个 Hello World 的字符串显示在界面上。 WXML 是这么写 : <text>{{msg}}</text> 在js中管理msg对应的数据： this.setData({ msg: \"Hello World\" }) 当某个函数功能中需要修改页面显示的东西，执行下面的语句： this.setData({ msg: \"nihao\" }) 此时Hello World会变为nihao。 这种{{}}方法被称为插值语法，它广泛应用于vue等MVVM框架中。","s":"数据绑定","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#数据绑定","p":1982},{"i":1999,"t":"当有多条数据的时候，实现类似C语言中的for循环功能。 <!--wxml--><view wx:for=\"{{array}}\"> {{item}} </view> // page.jsPage({ data: { array: [1, 2, 3, 4, 5] }}) 以上的代码将实现类似于下面的功能： for (int i=0;i<5;i++){ cout<<i+1;}","s":"列表渲染","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#列表渲染","p":1982},{"i":2001,"t":"通过对变量的控制，来决定是否渲染某些内容。 <!--wxml--><view wx:if=\"{{view == 'WEBVIEW'}}\"> WEBVIEW </view><view wx:elif=\"{{view == 'APP'}}\"> APP </view><view wx:else=\"{{view == 'MINA'}}\"> bingo </view> // page.jsPage({ data: { view: 'MINA' }}) 在上述的代码中，将会显示bingo。 同样用C++做比方： if (strcmp(view,\"MINA\")==0){ cout<<\"bingo\";}","s":"条件渲染","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#条件渲染","p":1982},{"i":2003,"t":"帮助你复杂的代码只写一次，下次调用只用传数据即可。 <!--wxml--><template name=\"staffName\"> <view> FirstName: {{firstName}}, LastName: {{lastName}} </view></template><template is=\"staffName\" data=\"{{...staffA}}\"></template><template is=\"staffName\" data=\"{{...staffB}}\"></template><template is=\"staffName\" data=\"{{...staffC}}\"></template> // page.jsPage({ data: { staffA: {firstName: 'Hulk', lastName: 'Hu'}, staffB: {firstName: 'Shang', lastName: 'You'}, staffC: {firstName: 'Gideon', lastName: 'Lin'} }}) 用C++打比方，就是将操作封装在函数中了： void Template(string firstname,string lastname){ cout<<\"FirstName\"<<firstname<<endl; cout<<\"LastName\" <<lastName<<endl;}int main(){ Template(\"Shang\",\"You\"); return 0;}","s":"模板","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#模板","p":1982},{"i":2005,"t":"相当于css，用于定制样式。 WXSS 具有 CSS 大部分的特性，小程序在 WXSS 也做了一些扩充和修改。 danger 重要内容 新增了尺寸单位。在写 CSS 样式时，开发者需要考虑到手机设备的屏幕会有不同的宽度和设备像素比，采用一些技巧来换算一些像素单位。WXSS 在底层支持新的尺寸单位 rpx ，开发者可以免去换算的烦恼，只要交给小程序底层来换算即可，由于换算采用的浮点数运算，所以运算结果会和预期结果有一点点偏差。 提供了全局的样式和局部样式。和前边 app.json, page.json 的概念相同，你可以写一个 app.wxss 作为全局样式，会作用于当前小程序的所有页面，局部页面样式 page.wxss 仅对当前页面生效。 此外 WXSS 仅支持部分 CSS 选择器。","s":"wxss","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#wxss","p":1982},{"i":2007,"t":"一个服务仅仅只有界面展示是不够的，还需要和用户做交互：响应用户的点击、获取用户的位置等等。在小程序里边，我们就通过编写 JS 脚本文件来处理用户的操作。 <view>{{ msg }}</view><button bindtap=\"clickMe\">点击我</button> 点击 button 按钮的时候，我们希望把界面上 msg 显示成 \"Hello World\"，于是我们在 button 上声明一个属性: bindtap ，在 JS 文件里边声明了 clickMe 方法来响应这次点击操作： Page({ clickMe: function() { this.setData({ msg: \"Hello World\" }) }})","s":"Javascript","u":"/docs/FrontEnd/WxMini/wxmini-structure","h":"#javascript","p":1982},{"i":2010,"t":"function LifeScript(){ while (alive){ eat(); sleep(); code(); study(); haveFun(); repeat(); }} 我在这里存放了我前端学习和日常学习的笔记，本文档将不断更新。","s":"Hi，this is Jetzihan","u":"/docs/intro","h":"#hithis-is-jetzihan","p":2008},{"i":2012,"t":"Github协同和代码托管 Netlify网页托管 Threejs全景图网站部署 微信小程序简明教程 借助Docu恐龙🦖搭建个人博客 Vue.js（待完善） React初步学习（待完善） css技巧（待完善） JS基础（待完善） 其他前端技巧","s":"目前已有的前端笔记内容","u":"/docs/intro","h":"#目前已有的前端笔记内容","p":2008},{"i":2014,"t":"数字媒体技术基础 计算机网路","s":"目前已有的学习内容","u":"/docs/intro","h":"#目前已有的学习内容","p":2008},{"i":2016,"t":"Java (待完善) MySql (待完善) Nodejs (进行时)","s":"目前已有的后端学习内容","u":"/docs/intro","h":"#目前已有的后端学习内容","p":2008},{"i":2018,"t":"2022/06/07 使用 VuePress 建站 2022/06/03 发布第一篇文章 2022/06/03 创建笔记 数字媒体技术基础 2022/06/06 创建笔记 计算机网络 2022/07/04 迁移图床到阿里云 OSS 2022/07/11 🌄 从 VuePress 迁移到 Docusaurus 🎉 2022/07/13 创建笔记 微信小程序 2022/07/13 创建笔记 threejs全景图 2022/07/14 创建笔记 借助Docu恐龙搭建博客 2022/07/22 创建笔记 Java 2022/08/03 创建笔记 React.js 2022/08/06 创建笔记 Vue.js 2022/08/08 创建笔记 Web基础 2022/08/11 创建笔记 Nodejs 2022/08/16 创建笔记 MySql 2022/08/20 创建笔记 Express","s":"TimeLine","u":"/docs/intro","h":"#timeline","p":2008},{"i":2020,"t":"Mail czhorange@foxmail.com","s":"Contact Me","u":"/docs/intro","h":"#contact-me","p":2008},{"i":2022,"t":"StarMe Star Me On Github.","s":"Support Me","u":"/docs/intro","h":"#support-me","p":2008},{"i":2026,"t":"应用层协议只能在应用层工作，这种限制提高了开发效率 🔔 网络核心没用应用层功能 网络应用只在端系统上存在，快速网络应用开发和部署","s":"应用层协议原理","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#应用层协议原理","p":2024},{"i":2029,"t":"🔔 特点 服务器： 一直运行 IP固定 在数据中心，但是拓展性差【?】 客户端： 主动联系服务器 可以间歇性联网 可以是动态IP 不直接与其他客户端通信（经过服务器）","s":"客户-服务器结构 （C/S）","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#客户-服务器结构-cs","p":2024},{"i":2031,"t":"🔔 特点 对位于数据中心的专用服务器有最小的（或者没有）依赖。 没有一直运行的服务器 任意端系统之间可以直接通信 每一个节点既是客户端也是服务器 因此有较强的拓展性（Self-scalability） 参与的主机可以间歇性连接且可以改变IP地址 例如：迅雷","s":"对等体系结构 （P2P）","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#对等体系结构-p2p","p":2024},{"i":2033,"t":"进程是在主机上运行的程序 🔔 进程通信的特点 在同一个主机上，使用进程通信机制进行通信（操作系统定义的） 在不同主机上使用报文（message）通信（借助传输层） 客户端进程：发起通信的进程 服务器进程：等待连接的进程 注意: 在P2P文件共享中，当对等方A请求对等方B送一个特定的文件时，在这个特定的通信会话中对等方A是客户，而对等方B是服务器。(P2P架构的应用也有客户端和服务器进程之分) ⚠ 进程寻址 在两个主机之间通信时，需要定义两种数据信息：一种是主机的地址，二是主机中指定接收进程的标识符。在Internet中，主机由IP地址进行标识，接收进程由端口号（Port Number）进行标识。例如，Web服务器使用端口号80，邮件服务器（SMTP）使用端口号25.","s":"进程通信","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#进程通信","p":2024},{"i":2035,"t":"数据丢失率：传输可靠的文件。 吞吐：完成进程交付比特的速率。 延迟：传输层提供的服务的延迟。 安全性：保证机密性和完整性。","s":"传输层为应用层提供的服务","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#传输层为应用层提供的服务","p":2024},{"i":2037,"t":"应用 数据丢失 带宽 时间敏感 应用层协议 支撑的传输层协议 文件传输 不能丢失 弹性 不 FTP* TCP 电子邮件 不能丢失 弹性 不 SMTP TCP Web文档 不能丢失 弹性(几kbps) 不 HTTP TCP 因特网电话 容忍丢失 音频(几kbps~1Mbps) 是，100ms SIP、RTP UDP或TCP 视频会议 容忍丢失 视频(10kbps~5Mbps) 是，100ms SIP UDP或TCP 交互式游戏 容忍丢失 几kbps~10kbps 是，100ms \\ \\ 智能手机讯息 不能丢失 弹性 是或不是(看具体) \\ \\","s":"常见的应用","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#常见的应用","p":2024},{"i":2039,"t":"应用层协议: 定义了运行在不同端系统上的应用程序进程如何相互交换报文，特别是应用层协议定义了： 交换的报文类型: 请求和应答报文 各种报文类型的语法: 报文中的各个字段及其描述 字段的 语义：即字段取值的含义 进程何时、如何发送报文及对报文进行响应的规则","s":"应用层协议","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#应用层协议","p":2024},{"i":2041,"t":"可靠的传输服务 流量控制：发送方不会淹没接受方 拥塞控制：当网络出现拥塞时，能抑制发送方 不能提供的服务：时间保证、最小吞吐保证和安全 面向连接：要求在客户端进程和服务器进程之间建立连接","s":"TCP服务","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#tcp服务","p":2024},{"i":2043,"t":"不可靠的数据传输 不提供服务：可靠，流量控制、拥塞控制、时间、带宽保证、建立连接 ⚠ UDP为什么存在 能够区分不同的进程，而IP服务不能.在IP提供的主机到主机端到端功能的基础上，区分了主机的应用进程.无需建立连接，省去了建立连接时间，适合事务性的应用。不做可靠性的工作，例如检错重发，适合那些对实时性要求比较高而正确性要求不高的应用。因为为了实现可靠性(准确性、保序等），必须付出时间代价 没有拥塞控制和流量控制，能够按照设定的速度发送数据.而在TCP上面的应用，应用发送数据的速度和主机向网络发送的实际速度是不一致的，因为有流量控制和拥塞控制。 因此，使用UDP服务可以减少大量不必要的时间开支。现在，UDP服务正有取代TCP的趋势。","s":"UDP服务","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#udp服务","p":2024},{"i":2045,"t":"在客户/服务器模式中： 客户：请求、接收和显示Web对象的流量器 服务器：对请求进行响应，发送对象的Web请求 🔔 HTTP采用TCP服务 客户发起一个与服务器的TCP连接(建立套接字), 端口号为80 服务器接受客户的TCP连接 在浏览器(HTTP客户端)与Web服务器(HTTP服务器server)交换HTTP报文(应用层协议报文) TCP连接关闭 HTTP是无状态的 服务器并不维护关于客户的任何信息 ⚠ 什么是无状态协议 常见的许多七层协议实际上是有状态的,例如SMTP协议,它的第一条消息必须是HELO,用来握手,在HELO发送之前其他任何命令都是不能发送的;接下来一般要进行AUTH阶段,用来验证用户名和密码;接下来可以发送邮件数据;最后,通过QUT命令退出。可以看到,在整个传输层上,通信的双方是必须要时刻记住当前连接的状态的,因为不同的状态下能接受的命令是不同的;另外,之前的命令传输的某些数据也必须要记住,可能会对后面的命令产生影响。这种就叫做有状态的协议。 相反,为什么说HTTP是无状态的协议呢?因为它的每个请求都是完全独立的,每个请求包含了处理这个请求所需的完整的数据,发送请求不涉及到状态变更. 非持久HTTP连接​ 每个相应对是经一个单独的TCP连接发送，最多只有一个对象在TCP连接上发送，下载多个对象需要多个TCP连接 HTTP/1.0使用非持久连接 上图是一个HTTP/1.0的非持久连接，客户端向服务端请求一个对象（someDepartment/home.index），封装成请求报文传给客户端，客户端收到后，检索需要的对象，并将其封装成响应报文，并返回客户端。即刻Http关闭TCP连接。客户端检查收到的响应报文后找到n处应用对象，再次发起TCP连接进行请求。 持久HTTP连接​ 所有请求及响应经相同的TCP连接发送 多个对象可以在一个(在客户端和服务器之间的)TCP连接上传输 HTTP/1.1默认使用持久连接 持久连接中的流水和非流水 非流水线方式： 客户在收到前一个响应后才能发出下 一个请求。这比非持续连接的两倍 RTT 的开销节省了 建立 TCP 连接所需的一个 RTT时间。但服务器在发 送完一个对象后，其 TCP 连接就处于空闲状态，浪费 了服务器资源。 流水线方式： 客户在收到 HTTP的响应报文之前就能够接着发送新的请求报文。一个接一个的请求报文到 达服务器后，服务器就可连续发回响应报文。使用流水线方式时，客户访问所有的对象只需花费一个 RTT 时间，使 TCP 连接中的空闲时间减少，提高了下载文档效率。 （详见后面的习题） 响应时间模型​ 往返时间RTT（Round-Trip-Time）：一个小的分组从客户端到服务器，在回到客户端的时间 响应时间： 一个RTT用来发起TCP连接=>一个RTT用来HTTP请求并等待HTTP响应=>文件传输时间 总共时间: 2RTT+传输时间","s":"HTTP:超文本传输协议","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#http超文本传输协议","p":2024},{"i":2047,"t":"请求报文 GET /somedir/page.html HTTP/1.1Host: www.someschool.eduUser-agent: Mozila/4.0Connection: closeAccept-language: fr 下图是wireshark捕获的HTTP报文： 响应报文 🔔 Method请求方法 请求行由三部分组成：请求方法，请求URL（不包括域名），HTTP协议版本 请求方法比较多：GET、POST、HEAD、PUT、DELETE、OPTIONS、TRACE、CONNECT GET:传递参数长度受限制，因为传递的参数是直接表示在地址栏中，而特定浏览器和服务器对url的长度是有限制的。因此，GET不适合用来传递私密数据，也不适合拿来传递大量数据。一般的HTTP请求大多都是GET。 在做web编程时，为了页面跳转携带数据，我们会将数据加在URL后面，比如：http://www.someschool.edu/somedir/page.html?name=jim&age=18，问号后面就是数据部分。 POST：POST把传递的数据封装在HTTP请求数据中，以名称/值的形式出现，可以传输大量数据，对数据量没有限制，也不会显示在URL中。表单的提交用的是POST。 HEAD：HEAD跟GET相似，不过服务端接收到HEAD请求时只返回响应头，不发送响应内容。所以，如果只需要查看某个页面的状态时，用HEAD更高效，因为省去了传输页面内容的时间。用于页面状态的查询。 其他方法解析","s":"HTTP报文格式","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#http报文格式","p":2024},{"i":2049,"t":"位于服务器->客户端的响应报文中的首行 一些状态码的例子： 200 OK 请求成功，请求对象包含在响应报文的后续部分 301 Moved Permanently 请求的对象已经被永久转移了；新的URL在响应报文的Location：首部行中指定 客户端软件自动用新的URL去获取对象 400 Bad Request 一个通用的差错代码，表示该请求不能被服务器解读 404 Not Found 请求的文档在该服务上没有找到 505 HTTP Version Not Supported","s":"HTTP响应状态码","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#http响应状态码","p":2024},{"i":2051,"t":"大多数主要的门户网站使用cookie 1.在HTTP响应报文中有一个cookie的首部行 2.在HTTP请求报文含有一个cookie的首部行 3.在用户端系统中保留有一个cookie文件，由用户的浏览器管理 4.在Web站点有一个后端数据库 🔔 cookie的作用例子 Susan总是用同一个PC使用Internet Explore上网,她第一次访问了一个使用了Cookie的电子商务网站,当最初的HTTP请求到达服务器时，该Web站点产生一个唯一的ID，并以此作为索引在它的后端数据库中产生一个表项.","s":"cookie","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#cookie","p":2024},{"i":2053,"t":"目标：不访问原始服务器，就满足客户的请求 用户设置浏览器： 通过缓存访问Web 浏览器将所有的HTTP请求发给缓存 在缓存中的对象：缓存直接返回对象 如对象不在缓存，缓存请求原始服务器，然后再将对象返回给客户端 实际上，缓存既是客户端也是服务器。","s":"WEB缓存 （代理服务器）","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#web缓存-代理服务器","p":2024},{"i":2055,"t":"🌳 尽管高速缓存能减少响应时间，但是也引入了一个新的问题：缓存器中的对象副本可能是陈旧的。幸运的是，HTTP协议有一种机制，让缓存器证实它的对象是最新的。这种机制就是条件GET方法。 目标： 如果缓存器中的对象拷贝是最新的，就不要发送对象 缓存器： 在HTTP请求中指定缓存拷贝的日期 if-modified-since: 服务器： 如果缓存拷贝陈旧，则响应报文没包含对象：HTTP/1.0 304 Not Modified 步骤 代理服务器代表请求浏览器发送一条请求报文给web server GET /fruit/kiwi.gif HTTP/1.1 Host: www.exotiquecuisine.com Web 服务器将带有请求对象的响应报文发送给cache HTTP/1.1 200 OKDate: Sat, 8 Oct 2011 15:39:29Server: Apache/1.3.0 (Unix)Last-Modified: Wed, 7 Sep 2011 09:23:24Content-Type: image/gif(data data data ...) cache将这个对象转发给请求的浏览器并且将这个对象缓存到自己的本地存储。重要的是，cache将这个对象上次修改的时间也存储了起来。 一周之后，另一个浏览器通过cache请求了相同的对象，并且这个对象仍然在cache里。由于这个对象可能在过去的一周里被修改过，cache就发起一个conditional GET来做一个更新检查。 具体的报文如下: GET /fruit/kiwi.gif HTTP/1.1Host: www.exotiquecuisine.comIf-modified-since: Wed, 7 Sep 2011 09:23:24 注意If-modified-since的值就是一周前Last-Modified的值。这个条件GET告诉服务器仅在对象在这个时间之后被修改的情况下才发送这个对象给我。 假定这个对象自从一周前没有被修改过，那么第4步： Web服务器就会发送一个响应报文 HTTP/1.1 304 Not ModifiedDate: Sat, 15 Oct 2011 15:39:29Server: Apache/1.3.0 (Unix)(empty entity body) 我们可以看到，在回复条件GET时，web server依然发送 了一个响应报文但是并没有在响应消息中包含请求的对象。包含请求的对象会浪费带宽，增加用户感知响应时间。 注意，最后一条响应报文有一个304的状态码，意思是Not Modified。这也就告知了缓存它可以继续了，将这个对象的cached copy发送给请求的browser. 但是如果发生了修改，服务器将资源发给请求端。","s":"条件GET（The Conditional GET）","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#条件getthe-conditional-get","p":2024},{"i":2057,"t":"简单邮件传输协议 Simple Mail Transfer Protocol ，尽管邮件服务器可以用SMTP发送、接收邮件，但是邮件客户端只能用SMTP发送邮件，接收邮件一般用IMAP 或者 POP3 。邮件客户端使用TCP的25号端口与服务器通信。 3个主要组成部分: 🔔 用户代理 又名“邮件阅读器” 撰写、编辑和阅读邮件 如Outlook、Foxmail 输出和输入邮件保存在服务器上 🔔 邮件服务器 邮件中管理和维护发送给用户 输出报文队列保持待发送邮件报文 邮件服务器之间的SMTP协议:发送email报文 客户：发送方邮件服务器 服务器：接收端邮件服务器 🔔 简单邮件传输协议: SMTP 使用TCP在客户端和服务器之间传送报文，端口号为25 直接传输：从发送方服务器到接收方服务器 传输的3个阶段 握手 传输报文 关闭 命令/响应交互 命令:ascii文本 响应：状态码和状态信息 报文必须为7位ASCII码 举例： 🔔 1、发送方Alice调用用户代理并提供接收方Bob的邮箱地址，在用户代理上撰写待发送的报文，接着指示用户代理发送报文。 2、用户代理将Alice撰写的报文发送到Alice的邮件服务器，报文到达邮件服务器后将被分发到报文队列中。 3、运行在Alice的邮件服务器的SMTP客户端发现报文队列中的这个报文后将会创建一个到运行在Bob邮件服务器的SMTP服务器的TCP连接。 4、经过SMTP握手后，SMTP客户端通过TCP连接把报文发送出去。 5、在Bob的邮件服务器上，SMTP服务器接收到报文后，邮件服务器将报文放入Bob的邮箱里。 6、Bob有空时看到邮箱消息便调用用户代理查阅报文。 SMTP总结 SMTP使用持久连接 SMTP要求报文(首部和主体)为7位ASCII编码 SMTP服务器使用 CRLF.CRLF决定报文的尾部 🔔 SMTP和HTTP比较 HTTP: 拉(pull) SMTP: 推(push) 二者都是ASCII形式的命令/响应交互、状态码 HTTP：每个对象封装在各自的响应报文中 SMTP：多个对象包含在一个报文中 常见SMTP命令 指令 | 说明 :-----:|:-----: HELO | 与服务器确认，通知其客户端使用的机器名称，一般邮件服务器不做限定 AUTH | 使用AUTH LOGIN与服务器进行登录验证 MAIL | FROM 发件人信息，填写与认证信息不同往往被定位为垃圾邮件或恶意邮件 RCPT TO | 收信人地址 DATA | 输入邮件基本信息 FROM | 邮件基本信息：发信人显示信息（此处可以伪造身份，但是非常容易被识别） TO | 邮件基本信息：服务器收件人显示信息 SUBJECT | 邮件基本信息：邮件标题，不填写也往往容易被定位为垃圾邮件 QUIT | 断开链接 常见SMTP返回码 返回码 | 说明 :-----:|:-----: 220 | 服务就绪 250 | 请求动作成功完成 235 | 认证通过 221 | 处理中 354 |发送开始，往往与data指令结合 500 |指令错误 550 |命令无法执行 邮件报文格式","s":"电子邮件应用SMTP","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#电子邮件应用smtp","p":2024},{"i":2059,"t":"由于SMTP是一个PUSH（推）协议，所以接收方如何将邮件从位于ISP的邮件服务器上将邮件拉下来呢？ 所以就产生了邮件访问协议，该协议将Bob的邮件服务器上的报文传给本地的PC。 常见的邮件访问协议： POP：邮局访问协议-用户身份确认(代理<–>服务器)并下载 IMAP：Internet 邮件访问协议-更多特性(更复杂)并在服务器上处理存储的报文 HTTP：Hotmail, yahoo! Mail等比较方便 POP3 第三版邮局协议​ 当用户代理打开邮件服务器（服务器）端口110上的TCP连接后，POP3开始工作。POP3按照三个阶段工作，分别是：特许、事务处理、更新。 如果改变客户机，Bob不能阅读邮件 POP3在会话中是无状态的 🔔 一、特许阶段 用户代理以明文形式发送用户名和口令来鉴别用户。 有两个主要的命令，user-username和pass-password。 客户端命令： user：申明用户名 pass: 口令 服务器响应: +OK -ERR 🔔 二、事务处理 用户代理取回报文并对报文做删除标记。 list: 报文号列表 retr:根据报文号检索报文 dele:删除 quit 🔔 三、更新阶段 客户发出quit命令后，结束POP3绘画，邮件服务器删除那些被标记删除的报文。 IMAP 因特网邮件访问协议​ 与IMAP服务器将每个报文与一个文件夹联系起来 允许用户用目录来组织报文 允许用户读取报文组件 IMAP在会话过程中保留用户状态： 目录名、报文ID与目录名之间映射","s":"邮件访问协议","u":"/docs/Notes/ComputerNetwork/application-layer","h":"#邮件访问协议","p":2024},{"i":2062,"t":"因特网上的主机需要一个身份标识，一种标识方法是使用主机名进行标识，比如域名：www.bjfu.edu.com。但是对于网络中的设备来说（比如路由器），解析这些名字是困难的。所以可以用IP地址来标识主机。比如：202.204.121.124，从这个信息中我们可以得到主机在因特网中的位置信息。 为了协调好域名和IP的关系，我们就需要一个网络服务器来解析域名，并将IP地址和域名进行绑定，这就是DNS服务器，中文为域名解析服务器。英文全称为Domain Name System。","s":"问题产生背景","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#问题产生背景","p":2060},{"i":2064,"t":"DNS由两部分组成。 一、由分层的DNS服务器实现的分布式数据库。 二、一个使主机能够查询分布式数据库的应用层协议。 DNS服务器的特点是： 1.运行BIND软件的UNIX机器。 2.DNS跑在UDP之上，使用53号端口。 🔔 服务一、主机名到IP地址的转换 当浏览器请求一个URL如www.orangeioczh.com/index.html时，浏览器从中抽取出主机名**www.orangeioczh.com**，并将这个主机名传给DNS客户端（也运行在这台主机上）。接着，这个客户端发送一个包含这个主机名www.orangeioczh.com的请求到DNS服务器，然后DNS查询这个主机名，并将这个主机的IP地址发送回来（回答报文），这样浏览器知道IP地址后就可以发起一个TCP连接。 🔔 服务二、主机别名 有些主机拥有多个别名，假设tsinghua.edu.cn还拥有qinghua.com这个别名，那么DNS就可以将每一个别名都对应到一个IP地址上或者规范名称上。 🔔 服务三、邮件服务器别名 如主机别名为yahoo. com更好记，但其主机名的规范服务器主机名可能更为复杂，DNS可以对主机别名进行解析从而得到规范主机名。 🔔 服务四、负载分配 DNS可以负责负载分配，比如baidu.com这个站点非常繁忙，它背冗余分布在多台服务器上，具有多个IP地址，如当客户对映射到某地址集合的名字发出一个DNS请求时，该服务器用IP地址的整个集合进行响应，但在每次回答中循环这些地址次序。因为客户通常总是向IP地址排在最前面的服务器发送HTTP请求报文，所以DNS就在所有这些冗余的web服务器之间循环分配了负载。 简单理解就是，DNS让每个服务器都能均衡地工作。","s":"DNS提供的服务","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#dns提供的服务","p":2060},{"i":2066,"t":"为了有效管理整个互联网的DNS域名解析工作，DNS系统开发者设计了一个与分层dns域名结构类似的层次化的dns名称服务器结构。把所有dns名称服务器自高到低分为4个级别：根名称服务器、顶级名称服务器、权威名称服务器和本地域名服务器。 1、根服务器。 根名称服务器是由互联网管理机构配置建立的，是最高层次的名称服务器，负责对互联网所有顶级名称服务器进行管理，有全部顶级名称服务器的IP地址和域名映射。 全球共有13套，每套都只有一个主根名称服务器。其中10台在美国，2台在欧洲，一台在日本。根名称服务器并不直接用于名称解析，因为其没有保存全部互联网域名记录，只是负责顶级名称服务器相关内容。 2.顶级名称服务器。 顶级名称服务器是各顶级域名自己的名称服务器，负责他们各自管理的二级域名解析。比如.com、.cn、.edu、.net、.org等，每个顶级域名都有一个顶级名称服务器。 3.权威名称服务器。 权威名称服务器是针对dns区域提供名称解析服务而专门配置、建立的名称服务器，可为用户提供最权威的dns域名解析。每个域名在互联网上都可以找到一台权威服务器，一台权威服务器可以为很多域名提供域名解析。 4.本地域名服务器。 一般是指ISP提供的名称服务器（也就是本地DNS服务器），例如我们使用的114.114.114.114，Google的8.8.8.8，这些都可以是。","s":"域名服务器分类","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#域名服务器分类","p":2060},{"i":2068,"t":"没有一台DNS服务器拥有因特网上所有主机的映射，这些映射分布在所有的DNS服务器上。DNS查询方式有迭代查询和递归查询两种。 ⚠ 递归查询 Recursive Query 一般发生在 Client 请求 DNS Server。Client 发出一个域名解析的请求，DNS Server 必须返回对应的 IP 地址，或者返回\"找不到\"的报错。 ⚠ 迭代查询 Iterative Query 迭代查询一般发生在 DNS Server 之间，当 Client 发出域名解析的请求后，DNS Server 需要给予最佳答案，这个最佳答案可能是\"距离最近\"的顶级域名服务器，也能是权威域名服务器。无论如何，Client 需要对返回结果再次发起请求，知道获得最终结果。 🌳 实例 小明在 Laptop 的浏览器输入了 example.com，在没有任何缓存的情况下，laptop 作为 Client 向 Router(路由器) 发出 DNS 递归查询请求，要求 Router 必须返回这个域名的 IP。Router 在什么都不知道的情况下，继续向 ISP（如，中国电信） 发起对 example.com 的递归查询，ISP 的 DNS server 在收到请求后，会依次对 Root Name Server（根域名服务器.com)，TLD Name Server(顶级域名服务器example.com)，Authoritative Name Server(权威域名服务器) 等发起迭代查询，最终返回我们要的结果。 区别就是迭代查询是通过一个一个的域名服务器来查询，而递归查询是通过一个域名服务器来查询，然后再通过这个域名服务器来查询，直到找到结果。 迭代查询root、TLD、Authoritative Name Server都是查到后就立刻返回local DNS Server，而递归查询则是逐级往上查询，待查到之后再层层返回，参考下面的课本配图。 Details DNS查询-参考文章地址 [来自稀土掘金](https://juejin.cn/post/6844903900982558734),大佬写得太好了 Details 课本图示 *迭代查询：**递归查询：* Details 详解图示","s":"DNS查询过程","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#dns查询过程","p":2060},{"i":2070,"t":"DNS查询的过程耗时非常长，但由于DNS缓存的存在，通常使得查询路径比理论中的短。因为在一个请求链中，当某DNS服务器接受一个DNS回答时，它能将映射缓存在本地存储器中，当下次有另一个对相同主机名的查询到达该DNS服务器时，该DNS服务器就能够提供所需要的IP地址，即使它不是该主机名的权威服务器。 图示见上面。","s":"DNS缓存","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#dns缓存","p":2060},{"i":2072,"t":"上图中显示了 DNS 的报文格式。其中，事务 ID、标志、问题计数、回答资源记录数、权威名称服务器计数、附加资源记录数这 6 个字段是DNS的报文首部，共 12 个字节。 整个 DNS 格式主要分为 3 部分内容，即基础结构部分、问题部分、资源记录部分。 DNS报文格式详解","s":"DNS报文","u":"/docs/Notes/ComputerNetwork/application-layer-dns","h":"#dns报文","p":2060},{"i":2075,"t":"网络是由节点和边组成的，节点代表各种物质，边代表就是关系，比如人与人之间的朋友关系，神经元之间的神经元关系。 网络包括端系统和把它们连接起来的通信链路和分组交换机组成。","s":"什么是网络","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#什么是网络","p":2073},{"i":2077,"t":"与因特网相连的计算机和其他设备位于因特网的边缘，故而被称为网络边缘，又称端系统(End system)。 接入网：把端系统连接到边缘路由器的网络。 接入方式： 接入方式 | 详情 :---: | :---: 数字用户线DSL | 把数字信号转为模拟信号用电话线的高频段传输，服务来自电话公司 电缆 | 用电缆接入因特网，服务来自有线电视公司 光纤到户FTTH | 直接从本地中心局到每户或比较少数量的用户设置一根光纤，速度最快 局域接入 | 以太网、WIFI 广域无线接入 | 直接从本地中心局到每户或比较少数量的用户设置一根光纤，速度最快","s":"网络边缘","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#网络边缘","p":2073},{"i":2079,"t":"网络核心 ：是端系统的分组交换机和链路构成的网状网络 🔔 网络核心中的分组交换 分组：源端向目的端发送的报文会被划分为较小的数据块，这个数据块就称为分组。它以链路的最大速率通过链路。 分组交换机在链路的输入端使用存储-转发传输，交换机在开始向输出传输该分组时必须完全接收。 如果该链路正在传输其他分组，那么该分组必须在输出缓存等待，这叫排队时延，一个到达的分组可能发现输出缓存已经满了的情况，此时将出现分组丢包的情况。 🔔 网络核心中的电路交换 在这个发送者可以发送信息之前，电话网络要先在发送者和接受者之间建立一条连接。这是条真正的连接，在发送者和接受者之间的交换机都是维持着的。当网络把这个电路建立好之后，在这个网络中的链路的传输速率也是维持好的。所以发送者可以以稳定的速率传输数据给接收者 三个步骤： 建立连接（分配通信资源） 通话（一直占用通信资源） 释放连接（归还通信资源） 频分复用FDM 链路的频谱由跨越链路创建的所有连接共享。在连接期间链路为每条连结专用一个频率。在电话网络中，这个频宽通常是4kHz，该频段的宽度称为带宽 时分复用TDM 对于TDM，时间被划分为固定的帧，每个帧又被划分为固定数量的时隙 🔔 网络核心中的报文交换 一个应用发送信息的整体就是一个报文。在数据交换过程中，要以整个信息作为一个整体，一次性转发到下一个邻接路由器上，路由器再把整个报文接收到，再决定这个报文怎么转发，从哪个接口转发出去，直至目的主机。 🔔 例题 试在下列条件下比较电路交换和分组交换。要传送的报文共x（bit）。从源点到终点共经过k段链路，每段链路的传播时延为d（s），数据率为b(b/s)。在电路交换时电路的建立时间为s(s)。在分组交换时分组长度为p(bit)，且各结点的排队等待时间可忽略不计。问在怎样的条件下，分组交换的时延比电路交换的要小？（提示：画一下草图观察k段链路共有几个结点。） Details 查看答案 在电路交换中，电路的建立时延是s,报文的发送时延是x/b,报文的传播时延是：kd,故总时延为：x/b+kd+s;在分组交换中,报文的发送时延是(x/p)×(p/b); K段传输中，有(k-1)次的储存转发延迟,(p/b)* (k-1);传播时延是kd;故总时延是：（x/p）×(p/b)+ (p/b)×(k-1)+kd=x/b+kd+(p/b)×(k-1);当s>(k-1)×(p/b)时，电路交换的时延比分组交换的时延大，当x>>p,相反。","s":"网络核心","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#网络核心","p":2073},{"i":2082,"t":"⚠ 吞吐量的概念 表示在单位时间内通过某个网络（或信道、接口）的数据量","s":"什么是吞吐量","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#什么是吞吐量","p":2073},{"i":2084,"t":"🔔 各种时延 当一个分组从一个节点到另一个节点，该分组在沿途的每个节点经受了不同的时延：节点处理时延，排队时延，传输时延，传播时延，这些时延累加就是节点总时延。 节点处理时延： 检查分组首部和决定将该分组导向何处需要的时间 排队时延： 在队列中，当分组在链路上等待传输时，经受排队时延 传输时延： 路由器推出整个分组需要的时间 传播时延： 将分组传播到另一个节点需要的时间 时延实例​ ::: theorem 传输时延 发送时延=数据帧长度(b) /信道带宽(b/s) [信道带宽就是数据率] ::: ::: theorem 传播时延 传播时延=信道长度(m)/电磁波在信道上的传播速率(m/s) ::: ::: theorem 排队时延 分组在输入队列中排队等待处理，在输出队列中等待转发，就形成了排队时延。 :::","s":"各种时延的理解","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#各种时延的理解","p":2073},{"i":2086,"t":"到达分组时发现队列满了。由于没有地方存储这个分组，路由器将丢弃该分组，形成丢包","s":"什么是丢包","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#什么是丢包","p":2073},{"i":2088,"t":"互联网上的信息不仅仅单方向传输，而是双向交互的。因此，有时很需要知道双向交互一次所需的时间。往返时间 RTT (round-trip time)表示从发送方发送数据开始，到发送方收到来自接收方的确认，总共经历的时间。在互联网中，往返时间还包括各中间结点的处理时延、排队时延以及转发数据时的发送时延。当使用卫星通信时，往返时间 RTT 相对较长，是很重要的一个性能指标。","s":"往返时间 RTT","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#往返时间-rtt","p":2073},{"i":2090,"t":"因特网的协议栈由顶至下分为5层： 分层 | 作用 | 数据 :---: | :---: | :---: 应用层|网络应用程序和应用层协议存在的地方|分组称为报文。 运输层|在应用程序之间传送报文|分组被成为报文段。 网络层|运输层协议向网络层递交报文段的目的地址|分组到这被称为数据报。 链路层|网络层通过一系列路由器传送数据报|分组称为帧 物理层|与实际传输媒体相关。|\\","s":"协议分层","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#协议分层","p":2073},{"i":2092,"t":"⚠ 网络攻击 坏家伙把有害程序通过网络放到你的电脑里，例如病毒和蠕虫。 坏家伙攻击服务器，例如DoS。 坏家伙能够嗅探到信息，把信息拷贝过来，例如分组嗅探器。 坏家伙伪装成你信任的人，例如IP哄骗。","s":"网络攻击","u":"/docs/Notes/ComputerNetwork/basic-knowledge","h":"#网络攻击","p":2073},{"i":2102,"t":"某旅行社指定旅游方案，目标是从北京市海淀区学院路的某大学到绍兴市鲁迅故里。那么旅行社首先决定使用地铁将游客运动到首都国际机场，然后乘坐飞机运送到杭州萧山国际机场，然后在萧山机场乘坐大巴到达杭州市滨江区，从滨江区搭乘杭绍地铁到达柯桥大阪湖，最后通过乌篷船到达鲁迅故里。 将游客比作网络层数据报。将每个运输区段（地铁、飞机、大巴）比作一条链路。那么选择道路的旅行社就是一个路由协议。","s":"1.1 链路层是如何与网络层关联的","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#11-链路层是如何与网络层关联的","p":2099},{"i":2104,"t":"成帧（framing），将数据包用帧封装起来。 链路接入。媒体访问控制（Media Access Control，MAC）。协调多个节点的帧传输。 可靠交付。提供差错检验和纠正。","s":"1.2 链路层提供的服务","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#12-链路层提供的服务","p":2099},{"i":2106,"t":"链路层主要是在网络适配器中实现（network adapter）。网络适配器又是又称网卡（Network Interface Card，NIC）。","s":"1.3 链路层在何处实现","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#13-链路层在何处实现","p":2099},{"i":2109,"t":"增加一个奇偶校验位。 奇校验。增加一个校验位，使整个数据的1的数量为奇数。 偶校验。增加一个校验位，使整个数据的1的数量为偶数。 但是这种普通的奇偶校验只能检验出现奇数个或者偶数个错误的情况，未检测出差错的概率为50%。","s":"2.1 奇偶校验","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#21-奇偶校验","p":2099},{"i":2111,"t":"数据D中的d个bit被划分为i行j列，对于每行、每列计算奇偶值，产生的i + j + 1奇偶比特构成了链路层帧的差错检测比特。 上图中能够通过行列的联动奇偶性检测出错误的比特位。","s":"2.2 二维奇偶校验","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#22-二维奇偶校验","p":2099},{"i":2113,"t":"原理： 在发送端，先把数据划分为组（即：一帧）。假定每组 k 个比特。 在每组后面，添加供差错检测用的 n 位冗余码一起发送。即：实际发送长度为：k+n 比特。 发送前双方协商n+1位的除数P，方便接收方收到后校验。 给K比特的数据添加除数减一个0（P-1）作为被除数，与第三步确定的除数做“模2除法”。得出的余数即FCS校验序列，它的位数也必须是（P-1）。 将FCS校验序列添加至K个比特位的后面发送出去。 接收方对接收到的每一帧进行校验，若得出的余数 R = 0，则判定这个帧没有差错，就接受(accept)。若余数 R ≠ 0，则判定这个帧有差错，就丢弃。 对“模2除法”进行说明： “模2除法”与“算术除法”类似，但它既不向上位借位，也不比较除数和被除数的相同位数值的大小，只要以相同位数进行相除即可。模2加法运算为：1+1=0，0+1=1，0+0=0，无进位，也无借位；模2减法运算为：1-1=0，0-1=1，1-0=1，0-0=0，也无进位，无借位。相当于二进制中的逻辑异或运算。 CRC校验的性能分析 能够检测出所有的1bit差错。 能够检测出所有的2bit差错。 能够检测出所有长度=r或小于r位的错误（r标识FCS位数）。 出现长度为r+1的错误，检测不出的概率是1/(2^(r-1))。 出现长度大于r+1的错误时，检查不出的概率是1/(2^r)。","s":"2.3 循环冗余校验","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#23-循环冗余校验","p":2099},{"i":2115,"t":"目的：为了协调发送和接收节点对共享信道的使用权利。","s":"三、多路访问和链路协议","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#三多路访问和链路协议","p":2099},{"i":2117,"t":"信道划分协议可以分为时分多路复用（TDM）、频分多路复用（FDM）、码分多址（Code Division Multiple Access。CDMA）。信道划分协议主要是为所有在同一个共享信道上的节点划分广播信道带宽。 TDM时分复用​ TDM将时间划分为时间帧，并进一步划分每个时间帧的N个间隙（这里的时间帧和链路层中的帧不是一个概念，时间帧是将一段时间划分为不同的时段，称为时间帧）。 TDM性能分析 TDM虽然消除了碰撞，且给每个节点在每个帧时间内分配了专用的传输速率R/N bps，但是它存在着主要缺陷：节点的传输速率被限制为R/N bps；节点必须在它的时隙内传输分组。对于特殊情况下，TDM的效果是很糟糕的。 FDM频分复用​ FDM将R bps的信道划分为不同的频段（每个频段具有R/N的带宽），不同的节点对应着不同的频段。如图： FDM和TDM有着类似的弊端。 CDMA，码分多址​ 码分多址协议为每个节点分配一个编码，然后发送方通过这个特殊的编码对要发送的数据进行编码，如此这些数据可以同时的在信道上进行传输且接收方能够根据这些编码准确地收到信息，抗干扰能力强。 一个比喻 可以做下面的一个比喻：假设甲乙丙在河流的上游给下游的A、B、C运送木材。 TDM：他们三组人约定好在下面的半小时内，前十分钟由甲运送木材A接收，中间十分钟乙运送木材B接收，最后十分钟，丙运送木材C接收。 FDM：他们约定将河道分成三个部分，河道左边属于甲和A，中间属于乙和B，右边属于丙和C，进行木材运输。 码分多址：甲乙丙在运送前都在木头上写上自己的名字，这样木材可以同时在河流之中传输，A看到是甲送过来的，就接住，其他的木材就不管了，BC同理。","s":"3.1 信道划分协议","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#31-信道划分协议","p":2099},{"i":2119,"t":"在随机接入协议中，每个结点总是以全部的速率（R）发送帧，如果发生碰撞，那么就不断重发这些帧，直到这些帧无碰撞地通过为止。但是这个结点在经历碰撞之后，并不是立即重发，而是等待一个时延。 3.2.1时隙Aloha​ 时隙Aloha是随机接入协议的一种，是最简单的时隙接入协议。 它规定所有帧都由L比特组成，时间被划分为L/R的时隙，也就是说每个时隙是传输一帧的时间。节点只在时隙开始的时候进行传输，并且每个节点都知道时隙是何时开始的。如果在一个时隙中有两个或者多个帧发生了碰撞，那么在所有时隙结束之前检测到该事件。 时隙Aloha的传输机理： 如果某个节点需要传输一个帧，那么他将在下一个时隙开始时将这个准备好的帧传送到信道上去，这时就产生了两种情况： 这个帧在信道上没有遇到任何别的帧（即没有产生碰撞），那么这个帧就成功以R的速率全速得到传输。 如果这个帧遇到了其他结点发出的帧，那么就发生了碰撞，因此发送节点检测到了碰撞事件，准备重新传输这一帧。但是这个结点并不会马上重传这一帧，它将“置一次硬币”，如果以p的概率掷出了硬币的正面，那么就在下个时隙的开始重新发送此帧，但是如果以1-p的概率掷到了反面，那么就等待，下一个时隙再掷一次硬币。 时隙Aloha的性能分析 时隙Aloha最大的优点是如果某个时隙只有一个节点是活跃的，那么他的帧将全速送出。但是，如果发生碰撞，就会有很多的时隙失效。时隙Aloha的效率为： 当有大量节点活跃时，长期运行中成功时隙的份额。即 成功时隙/全部时隙 。 N个结点任意一个传送成功的效率为： Np(1-p)^(N-1) [这也是时隙Aloha的效率] 3.2.3 纯Aloha​ 想发就发。思想：不监听信道，不按时间槽发送，随机重发。 冲突检测、处理 : ① 出现冲突 : 如果发送时 ,出现了冲突 , 数据被丢弃 , 或部分出错 , 发送失败 ; ② 接收方处理 : 接收方没有收到数据 , 或收到错误数据 , 那么向发送方发送错误信息 , 或者干脆不回送确认信息 ; ③ 发送方处理 : 如果发送方在超时时间内没有收到接收方的确认信息 , 那么就重传之前的数据 ; 纯 ALOHA 协议 与 时隙 ALOHA 协议 对比 : ① 吞吐量对比 : 纯 ALOHA 协议 比 时隙 ALOHA 协议 吞吐量低 ; ② 发送时机对比 : 纯 ALOHA 协议 想发就发 , 时隙 ALOHA 协议 只有在时间片 开始时 , 才能发 ; 3.2.4 带有碰撞检测的载波侦听多路访问（CSMA/CD）​ CSMA(载波监听多路访问)是在ALOHA协议上面做了更多改进并且应用于现实中MAC层截止访问控制（MAC）的协议。所谓载波监听，就是“讲前先听”。网络站点监听载波（别的用户的数据）是否存在并随之采取相应的行动。 载波侦听：也就是说，先听听别人有没有在说话，如果别人没有在说话，那么就说话，如果别人正在说话没那么就闭嘴。 碰撞检测：如果和别人同时开口说话，那么也马上闭嘴，随即等待一个时间内，过会再说。 带碰撞和不带碰撞的差别 如果不带碰撞检测，那么虽然碰撞了仍然完整传输，造成浪费，如果带碰撞检测就可以立即停止传输。 二进制指数后退算法 以太网使用截断二进制指数退避算法来确定碰撞后重传的时机。这种算法让发生碰撞的站在停止发送数据后，不是等待信道变为空闲后立即再发送数据，而是退避一个随机的时间。一以减小再次发生碰撞的概率。具体算法如下： 协议规定了基本退避时间为2t，具体的争用期时间通常取51.2us,对于10Mb/s的以太网，在争用期内可发送512bit，即64字节。 从离散的整数集合【0，1，……（2^k-1）】中随机取一个数，记为r，重传应推后的时间就是r倍的争用期。 当重传次数不超过10时，参数k等于重传次数；当重传次数超过10时，k就不再增大一直等于10。 当重传16次仍然不能成功时（这表明同时打算发送数据的站太多，以致连续发生冲突），则丢弃该帧，并向高层报告（例如上图）。 CSMA/CD效率 d1表示信号在任意两个适配器之间传播的最大时间，d2表示传输一个最大长度的以太帧的时间。则效率： 1/（1+5*d1/d2）","s":"3.2 随机接入协议","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#32-随机接入协议","p":2099},{"i":2121,"t":"轮询协议（polling protocol）让某个节点成为主节点，主节点以循环的方式轮询每个节点，主节点会发送报文给每一个节点，告诉他它能够发送的最大的帧数，在某节点传输一些帧后，主节点会告诉下一个结点能够传输的最大帧数。这个协议消除了困扰随机接入协议的碰撞和空时隙。 令牌传递协议（token-passing protocol）。有一个令牌在结点之间互相传递，当某节点需要发送帧时，它拥有令牌即可发送，如果他不需要发送时，立即将令牌传送给下一个结点。令牌是分散的，效率很高，但是当某一结点产生问题可能导致整个信道的崩溃。","s":"3.3 轮流协议","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#33-轮流协议","p":2099},{"i":2123,"t":"下图是交换局域网的一个示例：","s":"四、交换局域网","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#四交换局域网","p":2099},{"i":2125,"t":"4.1.1 MAC地址​ 主机或者路由器的适配器（网络接口）有链路层地址。链路层地址也称LAN地址、物理地址、MAC地址。 MAC地址的格式 MAC地址有48位（6字节），前三字节（高位24位）由IEEE的注册管理机构RA向厂家分配，后三字节（低24位）由厂家自行指派，必须保证生产出的适配器没有重复地址。这种48位地址称为MAC-48。MAC地址不可更改，但是可以更改通信时的MAC地址，也相当于“更改”了MAC地址。 MAC地址具有扁平结构，IP地址是分层的。就像人一样，可以将IP地址比作人的家庭住址，那么MAC地址就是身份证号，当人搬家时，家庭住址会发生改变，但是身份证号不会发生改变。 当某个适配器要向其他适配器发送某些帧时，发送适配器会将接收适配器的MAC地址插入这些帧中，并将这些帧广播到局域网上，当某个适配器接收到这个帧时，对比这个帧内的MAC地址是不是自己的MAC地址，如果是，则解封装这个帧，并向上层传递，如果不是，那么久丢弃这个帧。我们注意到，适配器实际上是能够接收到寻址地址不是它的帧。 有时候适配器需要局域网内所有适配器都接收并处理某些帧，那么他就会规定一个广播地址。广播地址一般是48个1组成的字符串，换算成十六进制是“ffffffffffff”。 4.1.2 地址解析协议​ 作用：将网络层地址（IP）与链路层地址（MAC）之间进行转换。 假设IP地址为222.222.222.220的主机要向222.222.222.222的主机发送IP数据，在上图中，他们位于同一个子网中。为了发送数据报，该源必须要向它的适配器提供IP数据报和目的主机222.222.222.222的MAC地址。然后发送适配器将构造一个包含目的地MAC地址的链路层帧，并把该帧发送进局域网。 那么发送端是怎么确定接收端的MAC地址的呢？实际上，它使用了ARP，发送端将222.222.222.222的IP地址作为参数送入ARP中，它将返回一个对应的MAC地址49-BD-D2-C7-56-2A。 但是值得注意的是，ARP只为在同一个子网上的IP提供地址解析服务，如果发送端的IP地址和接收端的IP地址不在同一个子网中（例如使用北京海淀的节点去查询浙江绍兴的一个节点），那么ARP将返回一个错误。 ARP和DNS的对比 DNS为因特网中任何地方的主机解析主机名，而ARP只为在同一个子网上的主机和路由器接口解析IP地址。如果一个节点试图用ARP为另一个子网中的节点解析MAC地址，那么ARP将返回一个错误。 ARP是如何工作的 每台主机或路由器在内存中存有一个ARP表，该表用于解析IP地址与MAC地址之间的映射关系。这个ARP表也包含一个寿命值（TTL），它指出从表中删除每个映射的时间。 但是如果主机上没有存这个IP的地址呢？那么它将构造一个ARP分组，这个分组包含了发送和接收IP地址和MAC地址，ARP查询分组和响应分组有相同的格式，这个分组将询问子网上所有的主机和路由器（使用广播的方式FFFFFFFFFFFF），以确定找出要解析的IP分组的MAC地址。一次ARP查询等价于一个人在教室里面大喊：“家住清华东路35号的那个人的身份证号是多少？！”。 4.1.3 发送数据报到子网之外​ 现在考虑当子网中的某主机要向子网之外（也就是跨越路由器的另一个子网）的主机发送网络层数据报，如下图所示，显示了一个由一台路由器互联两个子网所组成的简单网络： 在上图中需要注意几点：每台主机仅有一个IP地址和一个适配器，一台路由器对它的每个接口都有一个IP地址。对路由器的每个接口，（在路由器中）也有一个ARP模块和一个适配器。上图的路由器有两个接口，所以它有两个IP地址，两个ARP模块和两个适配器，当然，网络中的每个适配器都有自己的MAC地址。 tip 我们定义子网1的网络地址为111.111.111/24，子网2的网络地址为222.222.222/24。假如子网1上的一台主机将向子网2上的一台主机发送数据报。特别是，假设主机111.111.111.111要向主机222.222.222.222发送一个IP数据报。和往常一样，发送主机向它的适配器传递数据报。但是，发送主机还必须向它的适配器指示一个适当的目的MAC地址。仔细观察上图，我们可以发现，为了使一个数据报从111.111.111.111到子网2上的主机，这个数据报必须首先发送给路由器接口111.11.111.110，它是通往最终目的路径上的第一跳路由器的IP地址。因此，对于该帧来说，适当的MAC地址是路由器接口111.111.111.110的适配器地址，即E6-E9-00-17-BB-4B。发送主机通过ARP获取111.111.111.110的MAC地址。一旦发送适配器有了这个MAC地址，它创建一个帧（包含了寻址到222.222.222.222的数据报），并把该帧发送到子网1中。在子网1上的路由器适配器看到该链路层帧是向它寻址的，因此把这个帧传递给路由器的网络层。路由器现在必须决定该数据报要被转发的正确接口。这是通过查询路由器中的转发表来完成的。转发表告诉这台路由器该数据报要通过路由器接口222.222.222.220转发。然后该接口把这个数据报传递给它的适配器，适配器把该数据报封装到一个新的帧中，并且将帧发送进子网2中。这时，该帧的目的MAC地址确实是最终目的地MAC地址。路由器接下来通过ARP获取这个MAC地址。","s":"4.1 链路层寻址和ARP（地址解析协议）","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#41-链路层寻址和arp地址解析协议","p":2099},{"i":2127,"t":"以太网帧结构如下所示： 考虑从一台主机向另一台主机发送一个IP数据报，且这两台主机在相同的以太局域网上。设发送适配器（即适配器A）的MAC地址是AA-AA-AA-AA-AA-AA，接收适配器（即适配器B）的MAC地址是BB-BB-BB-BB-BB-BB。发送适配器在一个以太网帧中封装了一个IP数据报，并把该帧传递到物理层。接收适配器从物理层收到这个帧，提取出IP数据报，并将该IP数据报传递给网络层。在这个场景下，我们解释下上图所示的以太网帧的6个字段： 数据字段（46-1500字节）： 这个字段承载了IP数据报。以太网的最大传输单元（MTU）是1500字节。这意味着如果IP数据报超过了1500字节，则主机必须将该数据报分片。数据字段的最小长度是46字节。这意味着如果IP数据报小于46字节，数据报必须被填充到46字节。当采用填充时，传递到网络层的数据报括IP数据报和填充部分。网络层使用IP数据报首部中的长度字段来去除填充部分。 目的地址（6字节）： 这个字段包含了传该帧到局域网上的适配器的MAC地址，在本例中为AA-AA-AA-AA-AA-AA。 类型字段（2字节）： 类型字段允许以太网复用多种网络层协议。为了理解这点，我们需要记住主机能够使用除了IP以外的其他网络层协议。事实上，一台给定的主机可以支持多种网络层协议，以对不同的应用采用不同的协议。因此，当以太网帧到达适配器B，适配器B需要知道它应该将数据字段的内容传递给哪个网络层协议（即分解）。IP和其他链路层协议都有它们各自的、标准化的类型编号。此外，ARP协议有自己的类型编号，并且如果到达的帧包含ARP分组（即类型字段的值为十六进制的0806），则该ARP分组将被多路分解给ARP协议。注意类型字段和网络层数据报中的协议字段、运输层报文段的端口号字段相类似；所有这些字段都是为了把上一层中的某协议与上一层的某协议结合起来。 CRC（4字节）： CRC（循环冗余检测）字段的目的是使得接收适配器（适配器B）检测帧中是否引入了差错。 前同步码（8字节）： 以太网帧以一个8字节的前同步码字段开始。该前同步码的前7字节的值都是10101010；最后一个字节是10101011。前同步码字段的前7字节用于“唤醒”接收适配器，并且将它们的时钟和发送方的时钟同步。为什么这些时钟会不同步呢？记住适配器A的目的是根据以太局域网类型的不同，分别以10Mbps、100Mbps或者1Gbps的速率传输帧。但是适配器A不会以精确的额定速率传输帧；相对于额定速率总有一些漂移，局域网上的其他适配器不会预先知道这种漂移。接收适配器只需通过锁定前同步码的前7字节的比特，就能够锁定适配器A的时钟。前同步码的第8个字节的最后两个比特（第一个出现的是两个连续的1）警告适配器B：“重要的内容”就要到来了。 所有的以太网技术都向网络层提供无连接服务。以太网技术都向网络层提供不可靠服务。特别是，当适配器B收到一个来自适配器A的帧，它对该帧执行CRC校验，但是当该帧通过CRC校验时它不发送确认帧，而当该帧没有通过CRC校验时它也不发送确认帧。当某帧没有通过CRC校验，适配器B只是丢弃该帧。因此，适配器A根本不知道它传输的帧是否到达了B并通过了CRC校验。 以太网最大帧和最小帧 据RFC894的说明，以太网封装IP数据包的最大长度是1500字节，也就是说以太网最大帧长应该是以太网首部加上1500，再加上7字节的前导同步码和1字节的帧开始定界符，具体就是：7字节前导同步吗＋1字节帧开始定界符＋6字节的目的MAC＋6字节的源MAC＋2字节的帧类型＋1500＋4字节的FCS。 按照上述，最大帧应该是1526字节，但是实际上我们抓包得到的最大帧是1514字节，为什么不是1526字节呢？ 原因是当数据帧到达网卡时，在物理层上网卡要先去掉前导同步码和帧开始定界符，然后对帧进行CRC检验，如果帧校验和错，就丢弃此帧。如果校验和正确，就判断帧的目的硬件地址是否符合自己的接收条件（目的地址是自己的物理硬件地址、广播地址、可接收的多播硬件地址等），如果符合，就将帧交“设备驱动程序”做进一步处理。这时我们的抓包软件才能抓到数据， 因此，抓包软件抓到的是去掉前导同步码、帧开始分界符、FCS之外的数据，其最大值是6＋6＋2＋1500＝1514。 以太网规定，以太网帧数据域部分最小为46字节，也就是以太网帧最小是6＋6＋2＋46＋4＝64。除去4个字节的FCS，因此，抓包时就是60字节。当数据字段的长度小于46字节时，MAC子层就会在数据字段的后面填充以满足数据帧长不小于64字节。由于填充数据是由MAC子层负责，也就是设备驱动程序。","s":"4.2 以太网","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#42-以太网","p":2099},{"i":2129,"t":"交换机的任务是接收入链路层帧并将它们转发到出链路，它自身对子网中的主机和路由器是透明的。这就是说，某主机/路由器向另一个主机/路由器寻址一个帧（而不是向交换机寻址该帧），顺利地将该帧发送进局域网，并不知道某交换机将会接收该帧并将它转发到另一个结点。这些帧到达该交换机的任何输出接口之一的速率可能暂时会超过该接口的链路容量。为了解决这个问题，交换机输出接口设有缓存，这非常类似于路由器接口为数据报设有缓存，接下来考察下交换机运行的原理。 4.3.1 交换机转发和过滤​ 过滤是决定一个帧应该转发到某个接口还是应当将其丢弃的交换机功能。转发是决定一个帧应该被导向哪个接口，并把该帧移动到那些接口的交换机功能。交换机的过滤和转发借助于交换机表完成。该交换机表包含某局域网上某些主机和路由器的表项。交换机表中的一个表项包括： 一个MAC地址 通向该MAC地址的交换机接口 表项放置在表中的时间 帧的转发和数据转发之间有相似点，但它们之间的差距也是很大的，例如交换机转发分组基于MAC地址而不是基于IP地址，交换机表与路由器的转发表的构造方式也有很大差别。 为了理解交换机过滤和转发的工作过程，假定目的地址为DD-DD-DD-DD-DD-DD的帧从交换机接口x到达，交换机用MAC地址DD-DD-DD-DD-DD-DD索引它的表。有三种可能的情况： 表中没有对于DD-DD-DD-DD-DD-DD的表项。在这种情况下，交换机向除接口x外的所有接口前面的输出缓存转发该帧的副本。换言之，如果没有对于目的地址的表项，交换机广播该帧。 表中有一个表项将DD-DD-DD-DD-DD-DD与接口x联系起来。在这种情况下，该帧从包括适配器DD-DD-DD-DD-DD-DD的局域网网段到来。无需将该帧转发到任何其他接口，交换机通过丢弃该帧执行过滤功能即可。 表中有一个表项将DD-DD-DD-DD-DD-DD与接口y!=x联系起来。在这种情况下，该帧需要被转发到与接口y相连的局域网段。交换机通过将该帧放到接口y前面的输出缓存完成转发功能。","s":"4.3 链路层交换机","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#43-链路层交换机","p":2099},{"i":2131,"t":"WIFI属于数据链路层和物理层。Wi-Fi是基于IEEE 802.11标准的WLAN。WLAN（Wireless Local Area Network，无线局域网）有许多标准协议，如IEEE 802.11协议族、HiperLAN协议族等。","s":"五、WIFI","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#五wifi","p":2099},{"i":2133,"t":"【工作频段】将频率划分成多段，如2.4GHz频段（2.412GHz-2.484GHz） 【无线信道】将频段划分成多个信道，信道是用于传输无线电波信号的通道，一个信道在同一时间内只有一台设备能发送信号。 【信道带宽】模拟信道的带宽W=f2-f1，f2信道能通过的最高频率，f1为信道能通过的最低频率。带宽越大，数据传输速率越大。","s":"5.1 频段、信道、带宽","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#51-频段信道带宽","p":2099},{"i":2136,"t":"在以太网中CSMA-CD协议可以通过线缆的电压变化完成全面的碰撞检测，但是在无线局域网CSMA-CD无法做到360°全面检测碰撞。当A和C都检测不到信号，认为信道空闲时， 同时向终端B发送数据帧，就会导致冲突.（设A在B的电磁波范围，C在B电磁波范围内，而A不在C电磁波范围，此时AB可以相互传输数据，BC可以相互传输数据） 若此时C正在与B通信发送数据，而A无法知道BC在通信；若直接发送可能会导致冲突。即 C是A的隐蔽站,因此需要碰撞避免协议。 CSMA/CA碰撞避免的原理 发送数据前，先检测信道是否空闲。 空闲则发出RTS (request to send)，RTS包括发射端的地址、接收端的地址、下一份数据将持续发送的时间等信息 信道忙则等待 接收端收到RTS后，将响应CTS (clear to send)。 发送端收到CTS后，开始发送数据帧(同时预约信道:发送方告知其他站点自己要传多久数据)。 接收端收到数据帧后，将用CRC来检验数据是否正确，正确则响应ACK帧。 发送方收到ACK就可以进行下一个数据帧的发送，若没有则一直重传至规定重发次数为止(采用二进制指数退避算法来确定随机的推迟时间)。 总结一下就是三个手段避免冲突: 1.预约信道 2.ACK帧 3.RTS/CTS帧(可选)（主要是为了解决隐蔽站问题） CSMA/CA和CSMA/CD的异同 相同点: CSMA/CD与CSMA/CA机制都从属于CSMA的思路，其核心是先听再说。换言之，两个在接入信道之前都须要进行监听。当发现信道空闲后，才能进行接入。 不同点: 传输介质不同: CSMA/CD 用于总线式以太网[有线]，而CSMA/CA用于无线局域网[无线]。 载波检测方式不同:因传输介质不同，CSMA/CD 与CSMA/CA的检测方式也不同。CSMA/CD通过电缆中电压的变化来检测，当数据发生碰撞时，电缆中的电压就会随着发生变化;而CSMA/CA采用 能量检测(ED)、载波检测(CS)和能量载波混合检测三种检测信道空闲的方式。 CSMA/CD检测冲突，CSMA/CA避免冲突，二者出现冲突后都会进行有上限的重传。 CSMA/CD超有礼貌！讲之前不仅要听，在自己说话前还要先等一下 来自这里","s":"5.3 CSMA/CA碰撞避免","u":"/docs/Notes/ComputerNetwork/data-link-layer-ethernet","h":"#53-csmaca碰撞避免","p":2099},{"i":2138,"t":"推荐习题1 电路交换和时分复用​ 在电路交换网络上，从主机A到B发送一个640，000比特的文件需要多长时间？ 设所有链路的速率为1.536Mbps，每条链路采用时隙数为24的TDM，建立端到端的电路需要500ms。 Details 1.535Mbps/24=64kbps 传输时间：640kb/64kps=10s T=10s+500ms=10.5s 端到端平均吞吐量​ 是当前链路上所有传输结点间最小的速率值。 延迟计算​ 题目：如下图所示网络。A在t=0时刻开始向C发送一个2Mbits的文件；B在t=0.1+e秒（e为无限趋近于0的小正实数）向D发送一个1Mbits的文件。忽略传播延迟和结点处理延迟。（14分） 请回答下列问题： a. 如果图中网络采用存储-转发方式的报文交换，则A将2Mbits的文件交付给C需要多长时间？B将1Mbits的文件交付给D需要多长时间？ b. 如果图中网络采用存储-转发方式的分组交换，分组长度为等长的1kbits，且忽略分组头开销以及报文的拆装开销，则A将2Mbits的文件交付给C需要大约多长时间？B将1Mbits的文件交付给D需要大约多长时间？ c. 报文交换与分组交换相比，哪种交换方式更公平？（即传输数据量小用时少，传输数据量大用时长） (注：1k=10^3, 1M=10^6) Details 参考答案 a. 由于A先发报文所以，A的报文在路由器的队列中排在B的报文前面，所以A交付2Mbits报文需要时间为：2/10+2/20+2/10=0.5s=500ms；（3分） B将1Mbits的文件交付给D需要时间为：1/10+2/20(排队时间)+1/20+1/10=0.35s=350ms。（3分） b. 从t=0时刻到t=0.1s，A发送了1000个分组，用时：1000×1000/10000000=0.1s， 从t=0.1s时刻起与B共享连接路由器的链路，平均各共享到带宽10Mbps，A大约再用时：1/10+2×1000/10000000=0.1002s交付剩余的1000个分组，故A向C交付2Mbits文件大约需要(0.1+0.1002)s≈0.2s；（3分） c. B向D交付1Mbits文件需要时间大约为：1/10+2×1000/10000000=0.1002s≈0.1s。（3分） 分组交换比报文交换更公平。（2分） 传播延迟（时延）dp； 传输延迟dt； 若忽略结点处理延迟和排队延迟，则端到端延迟de是多少？ 若dp>dt，则t=dt时刻，分组的第一个比特在哪里？ 若V=250000km/s，L=512比特，R=100 Mbps，则使带宽时延积刚好为一个分组长度（即512比特）的链路长度M是多少？ Details 参考答案 ![d9deac31df566efd2909647e20c4031.png](https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3k9gyh0g2j310f12wdtm.jpg) 带宽时延积=传播延迟×带宽 题目：假设主机A向主机B以存储-转发的分组交换方式发送一个大文件。主机A到达主机B的路径上有3段链路，其速率分别是R1=500kbps，R2=2Mbps，R3=1Mbps。试求： 假设网络没有其他流量，则传送该文件的吞吐量是多少？ 假设文件大小为4MB，则传输该文件到主机B大约需要多少时间？ Details 参考答案 传送该文件的吞吐量(最小传输速率）：TH=500kbps；（3分） 传送该文件到主机B大约需要时间：T=4×8×106/(500×103)=64s。（3分） 应用层​ 题目：假设你在浏览某网页时点击了一个超链接，URL为“https://www.kicker.com.cn/index.html ”，且该URL对应的IP地址在你的计算机上没有缓存；文件index.html引用了8个小图像。域名解析过程中，无等待的一次DNS解析请求与响应时间记为RTTd，HTTP请求传输Web对象过程的一次往返时间记为RTTh。请回答下列问题： 1）你的浏览器解析到URL对应的IP地址的最短时间是多少？最长时间是多少？ 2）若浏览器没有配置并行TCP连接，则基于HTTP1.0获取URL链接Web页完整内容（包括引用的图像，下同）需要多长时间（不包括域名解析时间，下同）？ 3 ) 若浏览器配置5个并行TCP连接，则基于HTTP1.0获取URL链接Web页完整内容需要多长时间？ 4 ) 若浏览器没有配置并行TCP连接，则基于非流水模式的HTTP1.1获取URL链接Web页完整内容需要多长时间？基于流水模式的HTTP1.1获取URL链接Web页完整内容需要多长时间？ Details 参考答案 1）若DNS缓存中有，那么最短时间是一次查询是本地查询即为RTTd，若没有，就需要本地查询、根查询、.cn查询、.com查询、kicker查询共有5RTTd。 2)HTTP1.0使用非持续式的链接，一次对象的请求是2RTTh，那么1+8即9次，就是18RTTh。 3)HTTP1.0使用非持续式的链接，最开始的链接和index需要2个RTTh，在第二轮并行RTT中，5个一组同时进行，只需要2个RTTh，后面剩余3张图并行，也是2个RTTh，所以总共需要6个RTTh。 4)HTTP1.1使用持续式链接，即不需要断开。建立和返回index需要2个RTTh，剩余8个各1个RTTh，所以需要10个RTTh。如果是流水式的，则一遇到引用就全部同时发送并全部返回。共需要3个。 传输层​ 题目：假设主机A向主机B发送5个连续的报文段，主机B对每个报文段进行确认，其中第二个报文段丢失，其余报文段以及重传的第二个报文段均被主机B正确接收，主机A正确接收所有ACK报文段；报文段从1开始依次连续编号（即1、2、3……），主机A的超时时间足够长。请回答下列问题： 1).如果分别采用GBN、SR和TCP协议，则对应这三个协议，主机A分别总共发了多少个报文段？主机B分别总共发送了多少个ACK？它们的序号是什么？(针对3个协议分别给出解答） 2).如果对上述三个协议，超时时间比5RTT长得多，那么哪个协议将在最短的时间间隔内成功交付5个报文段？ Details 参考答案 （1） 当采用GBN协议时，由GBN协议可得： 主机A共发送了9个报文段，首先发送报文段1,2,3,4,5，当报文2丢失后，重发报文段2,3,4,5**共9个**； 主机B共**发送8个ACK**，首先发送ACK1,2丢失，因此对于3,4,5都发送ACK1共4个ACK1，后对于重传的2,3,4,5，则发送ACK2，ACK3，ACK4，ACK5，一共8个ACK。 当采用SR协议时，由SR协议可得： 主机A共发送了6个报文段，首先发送报文段1,2,3,4,5，当报文2丢失后，重发报文段2共6个报文段； 主机B共发送5个ACK，首先发送ACK1，ACK3，ACK4，ACK5，对于重发的报文段2，则发送ACK2共5个ACK。 当采用TCP协议时，由TCP协议可得： 主机A共发送了6个报文段，首先发送报文段1,2,3,4,5，当报文2丢失后，重发报文段2共6个报文段； 主机B共发送5个ACK，首先发送4个ACK2（因为接收方会确认下一个期待的序号），重传后发送一个ACK6一共5个ACK。 （2）采用TCP协议可在最短的时间间隔内成功交付5个报文段，因为TCP有快速重传机制，即在未超时情况下就开始重传丢失的2号报文段。 有关子网掩码的计算​ 题型1 利用子网数目计算子网掩码 把B类地址172.16.0.0划分成30个子网络，它的子网掩码是多少？ Details 解释 首先将30转为二进制表示为11110，这个数据有5位，也就是说需要借用5位来标识子网号。 注意：在转化为二进制之后，如果只有最高位为1，那么实际上只用统计为n-1位。例如10000要统计位四位，因为0000~1111刚好有10000个数字。 将B类地址的主机部分的前五位变成全1，得到新的子网掩码：（11111111.11111111.11111000.00000000），255.255.248.0 。 题型2 利用主机数目计算子网掩码 把B类地址172.16.0.0划分成若干子网络，每个子网络能容纳500台主机，它的子网掩码是多少？ Details 解释 将500表示为2进制。111110100。 统计该数字的位数为9 。将255.255.255.255的后9位全部变为0，即255.255.254.0 。 题型3 利用子网掩码计算最大有效子网数 A类IP地址，子网掩码为255.224.0.0，它所能划分的最大有效子网数是多少？ Details 解释 因为是A类地址，所以前8位为1，因此224就是子网号，224为11100000，所以主机号的最高位为111，那么就最多能分配8个子网。 Details 解释 ①将子网掩码转换成二进制表示11111111.11111100.00000000.00000000 ②统计一下它的主机位共有18位 ③最大可用主机数就是2的18次方减2（**除去全是0的网络地址和全是1广播地址**），即每个子网络最多有262142台主机可用。 Details 解释 B类地址，子网掩码为11111111.11111111.11000000.00000000，因此子网号为2位，子网号有四位，将IP地址转换为二进制，10101100.00010000.00000000.00000000 。所以划分如下： 10101100.00010000.**00**000000.00000000~ 10101100.00010000.**00**111111.11111111 *** 10101100.00010000.**01**000000.00000000~ 10101100.00010000.**01**111111.11111111 *** 10101100.00010000.**10**000000.00000000~ 10101100.00010000.**10**111111.11111111 *** 10101100.00010000.**11**000000.00000000~ 10101100.00010000.**11**111111.11111111","s":"习题","u":"/docs/Notes/ComputerNetwork/exercise-cn","h":"","p":2137},{"i":2141,"t":"1.按地理范围划分：个人区域网、局域网、城域网、广域网​ 🔔 按地理范围划分的网络分类 个人区域网：PAN (Personal Area Network)，范围很小，大约在 10 米左右。通常包含一台计算机、一个手机或者一个手持计算设备。 广域网 WAN (Wide Area Network)，作用范围通常为几十到几千公里。作用范围较大，通常指国家或者更大的区域 城域网：MAN (Metropolitan Area Network)，作用距离约为 5 ~ 50 公里。作用范围次大，通常指一个城市或者多个城市之间。 局域网：LAN (Local Area Network)，局限在较小的范围（如 1 公里左右）。局域网是指局限于一个地点、一栋建筑或一组建筑的网络。 2.按网络拓扑结构划分：总线型拓扑、星型拓扑、树形拓扑和网状拓扑​ 🔔 总线型拓扑 总线拓扑结构所有设备连接到一条连接介质上。总线结构所需要的电缆数量少，线缆长度短，易于布线和维护。多个结点共用 一条 传输信道，信道利用率高。但不容易诊断故障。所有入网设备共用一条物理传输线路，所有的数据发往同一条线路，并能够由附接在线路上的所有设备感知。入网设备通过专用的分接头接入线路。 总线网拓扑是局域网的一种组成形式。 特点： 多台机器共用一条传输信道，信道利用率较高； 同一时刻只能由两台计算机通信； 某个结点的故障不影响网络的工作； 网络的延伸距离有限，结点数有限。 🔔 星型拓扑 星型拓扑结构是一个中心，多个分节点。它结构简单，连接方便，管理和维护都相对容易，而且扩展性强。网络延迟时间较小，传输误差低。中心无故障，一般网络没问题。中心故障，网络就出问题，同时共享能力差，通信线路利用率不高。以一台中心处理机(通信设备)为主而构成的网络，其它入网机器仅与该中心处理机之间有直接的物理链路，中心处理机采用分时或轮询的方法为入网机器服务，所有的数据必须经过中心处理机。 适用场合：局域网、广域网。 特点： 网络结构简单，便于管理(集中式)； 每台入网机均需物理线路与处理机互连，线路利用率低； 处理机负载重(需处理所有的服务)，因为任何两台入网机之间交换信息，都必须通过中心处理机； 入网主机故障不影响整个网络的正常工作，中心处理机的故障将导致网络的瘫痪。 🔔 树形拓扑 树形拓扑结构从总线拓扑演变而来。形状像一棵倒置的树,顶端是树根，树根以下带分支，每个分支还可再带子分支，树根接收各站点发送的数据，然后再广播发送到全网。好扩展，容易诊断错误，但对根部要求高。 🔔 环形拓扑 环形拓扑结构是节点形成一个闭合环。工作站少，节约设备。当然，这样就导致一个节点出问题，网络就会出问题，而且不好诊断故障。入网设备通过转发器接入网络，每个转发器仅与两个相邻的转发器有直接的物理线路。环形网的数据传输具有单向性，一个转发器发出的数据只能被另一个转发器接收并转发。所有的转发器及其物理线路构成了一个环状的网络系统。 适用场合：局域网以及实时性要求高的环境。 特点： 实时性较好(信息在网中传输的最大时间固定)； 每个结点只与相邻两个结点有物理链路； 传输控制机制比较简单； 某个结点的故障将导致物理瘫痪； 单个环网的结点数有限。 🔔 网状拓扑 网形拓扑结构是应用最广泛的，它的优点是不受瓶颈问题和失效问题的影响，一旦线路出问题，可以做其他线路，但太复杂，成本高。利用专门负责数据通信和传输的结点机构成的网状网络，入网设备直接接入结点机进行通信。网状网络通常利用冗余的设备和线路来提高网络的可靠性，因此，结点机可以根据当前的网络信息流量有选择地将数据发往不同的线路。 适用场合：主要用于地域范围大、入网主机多(机型多)的环境，常用于构造广域网络。 资料参考来源 3.按服务提供划分：共有网络和私有网络​ 🌳 公网与私网 公网：顾名思义，就是公共网络，也叫做外网，没有限制，只要能上网的用户，都可以访问，比如类似百度，新浪这样的网站，只要你有网络，不管你是宽带，光纤，还是5G，WIFI，都可以访问打开。 私网：相当于是一个局域网，也叫做私网，只有属于局域网内部的成员，才可以访问。比如公司内部服务器上搭建的FTP文件系统，你只能使用公司内部的电脑才可以访问，脱离了内网环境，你就不能访问服务器上的任何文件了。","s":"一、网络分类","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#一网络分类","p":2139},{"i":2144,"t":"🔔 ISO/OSI模型 OSI(Open System Interconnection)，全称OSI/RM(Open System Interconnection Reference Model)，意为开放系统互联参考模型。这个模型把网络通信的工作分为7层，它们由低到高分别是物理层(Physical Layer)，数据链路层(Data Link Layer)，网络层(Network Layer)，传输层(Transport Layer)，会话层(Session Layer)，表示层(Presentation Layer)和应用层(Application Layer)。Physical Layer到Network Layer为OSI/RM的低三层，负责创建网络通信连接的链路；Transport Layer到Application Layer为OSI/RM的高四层，具体负责端到端的数据通信。 层次 名称 主要功能 主要设备及协议 7 应用层 实现具体的应用功能 DHCP、FTP、HTTP、SMTP、POP3、TELNET、DNS、NTP 6 表示层 数据的格式与表达、加密、压缩 HTTP、HTML、FTP、Telnet、ASN 5 会话层 建立、管理和终止对话 ADSP·ASP·H.245·ISO-SP·iSNS·NetBIOS·PAP·RPC等 4 传输层 端到端的连接 TCP、UDP、TLS 3 网络层 分组传输和路由选择 三层交换机、路由器 2 数据链路层 传输以帧为单位的信息 网桥、交换机、网卡,PPTP、L2TP、SLIP、PPP、WIFI 1 物理层 二进制传输 中继器、集线器、网卡、光纤、双绞线、同轴电缆","s":"1.ISO/OSI RM模型","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#1isoosi-rm模型","p":2139},{"i":2146,"t":"⚠ TCP/IP协议栈 TCP/IP协议并不是指某一个具体的协议，它是指代一系列的协议栈，因此也叫TCP/IP协议栈或者TCP/IP协议簇，下图将对比TCP/IP协议栈和OSI模型的区别：","s":"2.TCP/IP协议栈","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#2tcpip协议栈","p":2139},{"i":2148,"t":"序号 层 传输对象 地址 1 应用层 报文（Message） / 2 传输层 （1）TCP 报文段（Segment）（2）UDP 数据报（Segment） 端口号 3 网络层 分组 / 数据包（Packet）、IP数据报（Datagram） IP地址 4 数据链路层 帧（Frame） MAC地址 5 物理层 bit流 /","s":"3.每层的通信标识（地址）是什么？传输的数据单元名称是什么？","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#3每层的通信标识地址是什么传输的数据单元名称是什么","p":2139},{"i":2150,"t":"🌳 封装、解封装 封装：在数据变成比特流（物理层）的过程中，从上到下每层往数据增加头部的操作叫做封装。 解封装：从物理层接收到的比特流从下到上每层去除头部的操作叫做解封装。 图片来源 TCP/IP协议栈的封装解封装过程：","s":"4.封装、解封装","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#4封装解封装","p":2139},{"i":2152,"t":"多个用户使用一个IO资源 发送消息 时，我们称之为“复用”。 🌳 复用举例 在应用层：操作系统的 多个线程 利用一个端口 在运输层：操作系统的 多个进程（这里一个端口表示一个进程） 利用一个运输层协议（或者称为运输层接口）发送数据称为复用 在网络层：局域网内多个主机利用一个路由网关发送消息给互联网的其他主机。这也是复用技术。 相反，接收就是分用","s":"5.复用的概念","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#5复用的概念","p":2139},{"i":2154,"t":"物理层设备​ 🔔 中继器的作用 信号放大器，信号在传输的过程中是要衰减的，中继器的作用就是将信号放大，使信号能传的更远. 🔔 集线器的作用 它是多端口的中继器，把每个输入端口的信号放大再发到别的端口去，可以实现多台计算机之间的互联，因为它有很多的端口，每个口都能连计算机。 链路层设备​ 🔔 交换机的作用 常用来连接独立的计算机，端口较网桥多，有虚拟局域网的建立功能。现代交换机是这样处理数据帧的：一旦目标头域（目标地址）已经进来了，尽管帧的其他部分还没有到达，则只要输出线路可以使用，交换机就开始转发该帧，而不需理会帧后面的内容，也即是说交换机并没有使用“存储—转发”交换方式【?】。 网络层设备​ 🔔 路由器的作用 提供网络层的协议转换，并在不同网络之间存储和转发分组。把数据（IP报文）传送到正确的网络。IP路由器的主要功能分为IP数据包的转发、路由的计算和更新、ICMP消息的处理、网络管理以及安全服务五个方面。","s":"6.每层使用的网络物理设备","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#6每层使用的网络物理设备","p":2139},{"i":2156,"t":"上层利用下层提供的服务，以完成本层数据单元的传输","s":"7.分层的基本概念","u":"/docs/Notes/ComputerNetwork/network-classification-and-layered-architecture","h":"#7分层的基本概念","p":2139},{"i":2159,"t":"🔔 网络层的作用简述 网络层介于传输层和数据链路层之间，主要作用是实现两个不同网络系统之间的数据透明传送，具体包括路由选择，拥塞控制和网际互连等。网络层负责在不同的网络之间(基于数据包的IP地址)尽力转发数据包，不负责丢包重传和接收顺序。 网络层是网络与网络之间通信的最底层，在数据从数据链路层向传输层进行数据传输的通信中，起到构建一个中间通信子网的作用。不同网络有不同的网络层协议和地址规范，如果一个网络中的用户不能识别其他网络的通信协议和地址规范，那么这两个网络之间就不能进行数据通信。 🔔 就好比不同国家有着不同的交通法规，属于不同的交警系统管理，不允许他国车辆随便出入一样。不同网络也有不同的设计规范，属于不同的组织来管理，必须通过授权，并由专门的协议来负责网络间的通信。 🔔 如果只是同一局域网内的各个计算机之间的通信，单靠物理层和数据链路层就可以建立通信链路完成用户间的数据通信，但要扩大应用范围，连接不同的局域子网，就需要借助网络层处理各个网络子网的协议，从而进行计算机的网络互连，所以网络层在 TCP/IP 协议体系中叫网际互连层。","s":"一、网络层简介","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#一网络层简介","p":2157},{"i":2162,"t":"（1）物理层使用的中间设备叫转发器（repeater） （2）数据链路层使用的中间设备叫做网桥或者桥接器（bridge） （3）网络层使用的中间设备叫做路由器（router） （4）在网络层以上使用的中间设备叫做网关（gateway）。用网关连接两个不兼容的系统需要在高层进行协议转换。","s":"1.2 网络互连使用的设备","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#12-网络互连使用的设备","p":2157},{"i":2164,"t":"🌳 简单来说，网络层的功能就是让我们的计算机在成千上万的计算机中，能够找到另一台计算机在哪里，是否属于同一个子网等。 它的主要作用表现在下面的几个方面： （1）屏蔽网络差异，提供透明传输 网络层就是为了解决不同网络有不同的规范要求的差异问题，寻找一个不同网络间都能共同遵守的网络通信规范，以便不同网络间能相互识别，并接受对方的网络请求。也就是一个中转站的作用，两个毫无交集的网络通过这个中转站来建立交集。 （2）为网络间通信提供路由选择 路由选择是根据一定的原则和路由选择算法在多个结点的通信子网中选择一条到达目的节点的最佳路径的过程。确定路由选择的策略称为路由算法。在无连接的数据包服务中，网络节点要为每个数据包做出路由选择，即选择到达目的节点的最佳路线，而在面向连接的虚电路服务中，存在一条专门的逻辑线路，在建立连接时就已经确定了路有路径，无需额外选择。 （3）拥塞控制 拥塞控制是为了避免网络传输路径中数据的传输延迟或死锁。数据链路层中的流量控制功能，是针对数据链路中点对点传输速率的控制，这里的拥塞控制是针对在网络层传输路径中的端到端传输效率的控制。主要采用预约缓冲区、许可证和分组丢弃等方式。","s":"1.3 网络层的作用","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#13-网络层的作用","p":2157},{"i":2167,"t":"IP协议提供的服务为数据报服务，尽力而为的服务，数据单元为IP数据报. 4位版本号。标识当前的协议版本，比如ipv4. 4位首部长度。用于标识数据报首部的长度。 caution 注意，由于IP协议共有5行，每行是32位，也就是4个字节，因此首部长度至少是20字节，4位的首部长度最高能标识的长度为15，显然是不够的，因此这里计算出的首部长度必须乘以4才是真正的首部长度。 8位服务类型（TOS），前三位标识优先级（已经弃用），接下来四位是最小延迟、最大吞吐、最高可能性、最小成本。剩下一位是保留位。1998年改为“区分服务”。只有当网络提供区分服务时才有效。 16位总长度，标识ip数据包的最大长度位2^16，单位为字节。包含了ip的头部和ip数据报的有效负荷。 tip 可以计算得出IP分组的最大总长度为65535B（2^16-1)。最小的IP分组首部20B，IP可以封装的最大数据：65535-20=65515B。 16位标识。标识那些数据报是同一条数据。用于分片。 3位标志，用于分片，见下方解释。 第一位是保留位。 第二位标识禁止分片。 第三位标识分片是否结束。1表示后面还有分片，0表示后面没有分片。 13位的片位移。表述这个数据报在同一个数据的哪个位置。 8位生存时间，路由器经过的最大跳数。也就是说路由器能够转发这条数据的最大次数。 每经历一个路由器转发TTL减一。TTL>0表示还可以转发，TTL=0表示已经超时，丢弃这个ip数据。一般这个TTL是64. 8位协议。记录上层协议这条数据需要交付给传输层哪个协议。它实现了IP协议的复用和分用。 16位首部校验和。检测这个数据在传输过程中是否失真。对头部计算校验和时该字段全部置0，和的反码作为首部校验字段。首部校验和在每次转发的时候都需要重新计算。 32位源IP地址和32位目的IP地址（网络层地址）。 长度可变的选项字段（0~40B之间），可以携带安全信息、源选路径、时间戳等，实际上很少使用。 填充域：长度可变（0~3B）目的是补齐整个首部，符合32位对齐，保证首部长度是4的倍数。 tip 以上1-13部分称为IP分组的头部。 数据部分。","s":"2.1 IP协议格式","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#21-ip协议格式","p":2157},{"i":2169,"t":"最大传输单元，MTU：链路层数据帧可以封装的数据上限。 链路层帧：Head+Data+Tail，其中的Data就是封装的IP分组，MTU=Max（Data）。不同链路的MTU不一样。 MTU带来的问题 如果数据报是从链路A传输到链路B，但是MTU-A>MTU-B，很可能引发一个问题，也就是在A链路中数据报可以完整封装进链路层帧，但是B链路就不行了，所以就有了IP分片。 如果这个IP分组是不允许分片的，那么这个IP分组将被丢弃。 IP分片到达目的地时由主机再进行重组，因此路由器只负责分片，不负责组装。 如果到达主机之后，分片没到全，那么全部分片将被丢弃。 怎么标识一个IP分组呢？ 使用首部的标识ID、标识位、片偏移进行分辨。 标识位占三位： DF:Dont Fragment。 //=1表示禁止分片（丢掉，并告诉发送方太大）、=0表示允许分片MF:More Fragment。//=1表示这不是最后一片，=0表示这一片就是最后一片（也可能是根本没有分片） 片偏移 占13位，一个IP分组片封装原IP分组的相对偏移量。它封装原Ip分组数据的相对偏移量。片偏移用来指定当前这个片应该被放置在原数据报的哪个位置，从而确保了组装的正确顺序。 片偏移量以8字节为单位。 IP分片的过程 设原IP分组长度为L，待转发的链路MTU=M； 若L>M，且ＤＦ＝０，那么就要进行分片； 分片时所有分片的标识位均复制原数据报的标识位。 除了最后一个分片，前面的分片均分为MTU允许的最大分片。一个最大的分片可封装的数据是8的倍数，那么一个最大的分片可以封装的数据为： d=下取整[(M-20)/8]×8。 这里的M表示最大允许，20表示首部长度。 那么需要的总片数为上取整[(L-20)/d] 每段的片偏移值为：Fi=(d/8)×(i-1),1<=i<=n,n为片数，可以看出第1片的偏移数为0。 每片的总长度字段：最后一片为L-(n-1)d，其他片为d+20。 MF取值除了最后一位取0外其他全部取0. 图中，如果1500改为1504或1503呢？实际上，也是一样的。","s":"2.2 IP数据报的分片（Fragmented）","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#22-ip数据报的分片fragmented","p":2157},{"i":2171,"t":"源地址和目的地址用于表明编址。 接口（interface）：主机/路由器与物理链路的链接。用于实现网络层功能，路由器通常有多个接口。主机通常有两个接口。 交换器、WIFI等都在数据链路层，因此不用对其编址。 2.3.1 IP子网​ 使用32比特的二进制编号。 例如：11011111 00000001 00000001 00000001=223.1.1.1（为方便识别而转化为点分十进制） IP地址和每个接口关联。 采取IP子网策略（Subnets） 将IP地址分为网络号（NetID）和主机号（HostID）。在同一个区域网络中的IP地址的网络号一定相同，主机号一定不同。这个区域的网络叫IP子网。在这个网络中，所有的设备都不跨越路由器。 Details 下图有几个子网 查看图中有几个不同的XXX.XXX.XXX，或者看被路由器分成几个部分，因此下图中有**六个**。中间三个IP子网可以分IP地址也可以不用。","s":"2.3 IP编址","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#23-ip编址","p":2157},{"i":2173,"t":"IP地址根据网络号和主机号来分，分为A、B、C三类及特殊地址D、E。全0和全1的都保留不用。 类别 作用 比例 A (0.0.0.0-127.255.255.255)（默认子网掩码：255.0.0.0或 0xFF000000）第一个字节为网络号，后三个字节为主机号。该类IP地址的最前面为“0”，所以地址的网络号取值于1~126之间。一般用于大型网络。 50% B (128.0.0.0-191.255.255.255)（默认子网掩码：255.255.0.0或0xFFFF0000）前两个字节为网络号，后两个字节为主机号。该类IP地址的最前面为“10”，所以地址的网络号取值于128~191之间。一般用于中等规模网络。 25% C (192.0.0.0-223.255.255.255)（子网掩码：255.255.255.0或 0xFFFFFF00）前三个字节为网络号，最后一个字节为主机号。该类IP地址的最前面为“110”，所以地址的网络号取值于192~223之间。一般用于小型网络。 12.5% D 是多播地址。不再区分网络号主机号。该类IP地址的最前面为“1110”，所以地址的网络号取值于224~239之间。一般用于多路广播用户[1] 。 6.25% E 是保留地址。不再区分网络号主机号。该类IP地址的最前面为“1111”，所以地址的网络号取值于240~255之间。 6.25% A类地址：网络位8位，主机位24位。可容纳主机数：2的24次方减2个，可以划分的子网数：为2的22次方，由于每个网络都存在两个不可用的地址（网络地址和广播地址），所以要想划分的子网可用，最小的子网应该留2味主机位，在此最小的网络中的可用地址数十2个，2的2次方减2，这种网络是现在多数小型企业用的联网方式（点到点网络），一个地址在自己的外网，另一个地址是运营上设备上的。 B类地址:按上述说法，网络位和主机位都是16位，所以可容纳主机数是2的16次方减2，子网数为2的14次方。 C类地址：网络位24位主机位8位，容纳主机数位2的8次方减2=254（这就是为什么咱们使用C类地址，比如192.168.1.网络地址的设置范围是从1到254了，因为网络地址1.0和广播地址1.255不可用），子网数位2的6次方。 tip 在一个网段中都会有一个网络号的和广播号，即 192.0.0.0 ~ 192.0.0.255 网络号：主机号全为0的ip地址，就为该网段中的网络号 广播号：主机号中全为1的ip地址，就为该网段中的广播号 127.0.0.1 ：本地回环网卡地址（通常用来测试自己机器的网络连通性） 0.0.0.0：代表本地所有的网卡地址","s":"2.4 IP地址分类","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#24-ip地址分类","p":2157},{"i":2175,"t":"tip 本网内广播地址：255.255.255.255 直接网络地址：网络号为特定值，主机号为全0. 本地测试环回地址：网络号为127，主机号不为全0或者全1的的任何数。 私有地址： C类，例如我们学校的某些网站。是企业私有地址。","s":"2.5 特殊地址（广播地址、环回地址）","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#25-特殊地址广播地址环回地址","p":2157},{"i":2177,"t":"实际上，上述的有类地址，并不灵活。所以将IP地址划分为网络号（NetID）、子网号（SubID）、主机号（HostID）。 这些子网（上述四个）将用浏览器联系起来。 如何确定是否划分了子网？使用子网掩码。 2.6.1 子网掩码​ 子网掩码形如IP地址，占32位，使用点分十进制表示。 NetID、SubID全部取1。 HostID全部取0。 例如： A网络默认子网掩码： 255.0.0.0 B网络默认子网掩码： 255.255.0.0 C网络默认子网掩码： 255.255.255.0 借用了主机3比特划分子网的子网B的子网掩码： 255.255.224.0 （11111111.11111111.11100000.00000000） 子网地址+子网掩码-》确定子网大小 例子 子网201.2.3.0，子网掩码为255.255.255.0，被划分为4个等长的子网（等长，256/4=64）： 201.2.3.0，255.255.255.192（借用主机8位中最高位的两个比特，因为要分成四个子网，0~3==00~11） 201.2.3.64，255.255.255.192 201.2.3.128，255.255.255.192 201.2.3.192，255.255.255.192 路由器如何确定应该将IP分组转发到哪个子网上去呢？ 🌳 将IP分组的目的IP地址与子网掩码按位与运算，提取子网地址。 地址范围为什么是~172.32.1.255？因为子网掩码借走了前面254.去掉主机域全0的和主机域全1的地址称为可分配地址范围。广播地址：主机域全1.","s":"2.6 子网划分","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#26-子网划分","p":2157},{"i":2179,"t":"帮助我们进行本地测试，既做客户端也做服务端。例如vue环境的run dev，就是在本机环回地址下做测试，进行热重载。 环回地址是一类特殊的IP地址， 127.0.0.1 —> 127.255.255.254（去掉0和255） 的范围都是本地环回地址。环回地址(loopback)不离开主机的数据包(也就是说，这些数据包不会通过外部网络接口)。例如:127.0.0.1。需要注意的是，它是一个虚拟地址。是 IP地址中内部的一种。 有一特殊的A类IP地址，网络地址是127，这类地址称作环回地址。但是我们经常使用的是127.0.0.1这个地址，且赋给它一个名字：localhost。","s":"2.7 环回地址","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#27-环回地址","p":2157},{"i":2181,"t":"IPv6数据报格式 固定40B基本首部 有拓展首部 版本：总是6，指明了协议版本 优先级：区分数据报的类别和优先级 流标签：所有同属一个流的数据报有同样的流标签 下一个首部：标示下一个拓展首部或上层协议首部 跳数限制：相当于IPv4的TTL IPv6表示形式 不能用IPv4的点分十进制，改用冒号十六进制记法。 其实就是’.‘号变成’:'号，十进制变成十六进制。 压缩形式：全0的一组字节，直接用一个0即可。 零压缩：一连串的全0字节组，可以直接用一对冒号代替。见图例 FF05:【0:0:0:0:0:0】:B3 => FF05: :B3 v4过渡到v6的方法","s":"2.8 IPv6","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#28-ipv6","p":2157},{"i":2183,"t":"v4使用32位格式，v6使用128位","s":"2.9 IPv4（32位）和IPv6（128位）对比","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#29-ipv432位和ipv6128位对比","p":2157},{"i":2186,"t":"解决的问题：在专用网内部的一些主机本身就分配到了IP地址（专用IP地址），但是又想和互联网上的主机通信。 NAT路由器：专网和互联网中间的安装了NAT软件的桥梁路由器。它实现了本地主机在和外界通信时，使用NAT将本地地址全部转换为IP地址。","s":"3.1 网络地址转换的含义","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#31-网络地址转换的含义","p":2157},{"i":2188,"t":"在图中，专用网192.168.0.0内所有主机的IP地址都是本地IP地址192.168.x.x。NAT路由器至少要有一个全球IP地址，才能和互联网相连。图中表示出NAT路由器有一个全球IP地址172.38.1.5（当然，NAT路由器可以有多个全球IP地址）。 发送：NAT路由器收到从专用网内部的主机A发往互联网上主机B的IP数据报：源IP地址是192.168.0.3，而目的IP地址是213.18.2.4。NAT路由器把IP数据报的源IP地址192.168.0.3，转换为新的源IP地址（即NAT路由器的全球IP地址）172.38.1.5，然后转发出去。因此，主机B收到这个IP数据报时，以为A的IP地址是172.38.1.5。 接收：当B给A发送应答时，IP数据报的目的IP地址是NAT路由器的IP地址172.38.1.5。B并不知道A的专用地址192.168.0.3.实际上，即使知道了，也不能使用，因为互联网上的路由器都不转发目的地址是专用网本地IP地址的IP数据报。当NAT路由器收到互联网上的主机B发来的IP数据报时，还要进行一次IP地址的转换。通过NAT地址转换表，就可把IP数据报上的旧的目的P地址172.38.1.5，转换为新的目的P地址192.168.0.3（主机A真正的本地IP地址）。 tip 由此可见，当NAT路由器具有n个全球IP地址时，专用网内最多可以同时有n台主机接入到互联网。这样就可以使专用网内较多数量的主机，轮流使用NAT路由器有限数量的全球IP地址。 但是，这种机制有明显的弊端，显然，也就是必须要内网主动发起才可以，但是如果外网希望主动和内网某个主机通信，这样NAT就不知道找谁了。 为了更加有效地利用NAT路由器上的全球IP地址，现在常用的NAT转换表把运输层的端口号也利用上。这样，就可以使多个拥有本地地址的主机，共用一个NAT路由器上的全球IP地址，因而可以同时和互联网上的不同主机进行通信。使用端口号的NAT也叫做网络地址与端口号转换NAPT，而不使用端口号的NAT就叫做传统的NAT。但在许多文献中并没有这样区分，而是不加区分地都使用NAT这个更加简洁的缩写词。下表说明了NAPT的地址转换机制。 从上表可以看出，在专用网内主机192.168.0.3向互联网发送IP数据报，其TCP端口号选择为30000。NAPT把源IP地址和TCP端口号都进行转换（如果使用UDP，则对UDP的端口号进行转换。原理是一样的）。另一台主机192.68.0.4也选择了同样的TCP端口号30000这纯属巧合（端口号仅在本主机中才有意义）。现在NAPT把专用网内不同的源IP地址都转换为同样的全球IP地址。但对源主机所采用的TCP端口号（不管相同或不同），则转换为不同的新的端口号。因此，当NAPT路由器收到从互联网发来的应答时，就可以从IP数据报的数据部分找出运输层的端口号，然后根据不同的目的端口号，从NAPT转换表中找到正确的目的主机。 NAT存在的意义 它可以有效解决公网的地址不足的问题。","s":"3.2 NAT工作原理","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#32-nat工作原理","p":2157},{"i":2191,"t":"无类域间路由（Classless InterDomain Routing，CIDR） 消除A、B、C类的地址界限。 NetID+SubID->Network Prefix网络前缀，可以任意长度。 它融合了子网地址和子网掩码，方便子网划分。 格式：{<网络前缀>，<主机号>}/前缀位数 无类地址格式：a.b.c.d/x，其中x为前缀的长度。 tip 按照有类IP地址，这是一个典型的C类地址，但是C类地址是前24为为网络号，这里是23位。 优点： 提高了IPv4地址空间效率。 提高路由效率。解决了路由表项目过多过大的问题。","s":"4.1 CIDR简介","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#41-cidr简介","p":2157},{"i":2193,"t":"CIDR给出任何一个IP地址就相当于给出了一个CIDR地址块。这是由连续的IP地址组成的，所以CIDR实现了超网，实现了路由聚合。 实例 例如：一个IP地址：128.14.35.7/20 将其转化为2进制。蓝色部分是网络前缀。 128.14.35.7/20=10000000 0000110 00100011 00000111 后面12位是主机号，因此，可以得到地址范围： 10000000 0000110 00100000 00000000~ 10000000 0000110 00101111 11111111 子网掩码是（前20位全1）：11111111 11111111 11110000 00000000 在CIDR表示法中也可以进行进一步的子网划分。 例如：将128.14.35.0/20划分四个子网 转换成二进制 128.14.35.0/20 = 10000000 00001110 00100011 00000000 从主机位借走两位： 10000000 00001110 00100011 00000000 = 128.14.35.0/22 10000000 00001110 00100111 00000000 = 128.14.39.0/22 10000000 00001110 00101011 00000000 = 128.14.43.0/22 10000000 00001110 00101111 00000000 = 128.14.47.0/22","s":"4.2 CIDR计算","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#42-cidr计算","p":2157},{"i":2195,"t":"概念：DHCP的全称是Dynamic Host Configuration Protocol, 即动态主机配置协议， 它的特点是能够自动设置IP地址，并实行统一的管理。 我们有两种为主机设置IP地址的方式： 管理员手动设置主机的IP地址 通过DHCP自动设置IP地址 DHCP是一种即插即用的协议（plug-and-play protocol）。实际上，我们在生活中经常享受着DHCP带来的便利：我们有时会携带笔记本电脑或手机到公共场所里例如图书馆，并且通过WiFi连上一个陌生的子网，但是我们并没有做重新为主机配置IP地址的工作！ 在没有DCHP下，管理员来设置分配IP地址。 在DHCP支持下，自动分配IP地址。 DHCP工作流程 DHCP服务器管理着一个包含一系列IP地址的地址池,每当一台新的主机加入时，DHCP服务器就从其当前可用地址池中分配一个任意的地址给它 每当一台主机离开的时候，其IP地址就被回收到地址池中 DHCP两个租约表 静态租约表：对应一个静态租约存储文件，server运行时从文件中读取静态租约表。 动态租约表：对应一个周期存储文件，server周期性将租约表存进该文件，在程序开始时将会读取上次存放的租约表。（租约表记录了当前所有分配的租约，包括静态链接的。 DHCP的三种IP分配机制 1) 自动分配方式（Automatic Allocation），DHCP服务器为主机指定一个永久性的IP地址，一旦DHCP客户端第一次成功从DHCP服务器端租用到IP地址后，就可以永久性的使用该地址。 2) 动态分配方式（Dynamic Allocation），DHCP服务器给主机指定一个具有时间限制的IP地址，时间到期或主机明确表示放弃该地址时，该地址可以被其他主机使用。 3) 手工分配方式（Manual Allocation），客户端的IP地址是由网络管理员指定的，DHCP服务器只是将指定的IP地址告诉客户端主机。 三种地址分配方式中，只有动态分配可以重复使用客户端不再需要的地址。 DHCP封包在传输层（Transport Layer）是采用UDP协议，而当 Client传送封包给 Server时，采用的是UDP 67 Port，从 Server传送给 Client则是使用UDP 68 Port。","s":"五、DHCP协议（动态主机配置）","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#五dhcp协议动态主机配置","p":2157},{"i":2197,"t":"1、DHCP Client以广播的方式（封包的源地址为0.0.0.0目的地址为255.255.255.255）发出DHCP Discover（在UDP 67端口）报文。 2、所有的DHCP Server都能够接收到DHCP Client发送的DHCP Discover报文（也就是说子网内的DHCP服务器不止一个），所有的DHCP Server都会给出响应，向DHCP Client发送一个DHCP Offer报文。 DHCP Offer报文中“Your(Client) IP Address”字段就是DHCP Server能够提供给DHCP Client使用的IP地址，且DHCP Server会将自己的IP地址放在“option”字段中以便DHCP Client区分不同的DHCP Server。DHCP Server在发出此报文后会存在一个已分配IP地址的纪录。 3、DHCP Client只能处理其中的一个DHCP Offer报文，一般的原则是DHCP Client处理最先收到的DHCP Offer报文。DHCP Client会发出一个广播的DHCP Request报文，在选项字段中会加入选中的DHCP Server的IP地址和需要的IP地址。 4、DHCP Server收到DHCP Request报文后，判断选项字段中的IP地址是否与自己的地址相同。如果不相同，DHCP Server不做任何处理只清除相应IP地址分配记录；如果相同，DHCP Server就会向DHCP Client响应一个DHCP ACK报文，并在选项字段中增加IP地址的使用租期信息。 5、DHCP Client接收到DHCP ACK报文后，检查DHCP Server分配的IP地址是否能够使用。如果可以使用，则DHCP Client成功获得IP地址并根据IP地址使用租期自动启动续延过程；如果DHCP Client发现分配的IP地址已经被使用，则DHCP Client向DHCPServer发出DHCP Decline报文，通知DHCP Server禁用这个IP地址，然后DHCP Client开始新的地址申请过程。 6、DHCP Client在成功获取IP地址后，随时可以通过发送DHCP Release报文释放自己的IP地址，DHCP Server收到DHCP Release报文后，会回收相应的IP地址并重新分配。 在使用租期超过50%时刻处，DHCP Client会以单播形式向DHCP Server发送DHCPRequest报文来续租IP地址。如果DHCP Client成功收到DHCP Server发送的DHCP ACK报文，则按相应时间延长IP地址租期；如果没有收到DHCP Server发送的DHCP ACK报文，则DHCP Client继续使用这个IP地址。 在使用租期超过87.5%时刻处，DHCP Client会以广播形式向DHCP Server发送DHCPRequest报文来续租IP地址。如果DHCP Client成功收到DHCP Server发送的DHCP ACK报文，则按相应时间延长IP地址租期；如果没有收到DHCP Server发送的DHCP ACK报文，则DHCP Client继续使用这个IP地址，直到IP地址使用租期到期时，DHCP Client才会向DHCP Server发送DHCP Release报文来释放这个IP地址，并开始新的IP地址申请过程。 一个类比 当小明来到一个餐厅吃饭，小明必须寻找一个合适的座位。因此他就大喊（广播，UDP67）“大爷我来了！给我找个座位（IP）！”在现场那的所有的服务生（DHCP服务器）都会收到这个信息。服务生A告诉小明，请坐这个1号座位，服务生B告诉小明，请坐这个2号座位，服务生C让其坐3号座位，同时ABC三人这时都认为自己的座位有人坐了，但是小明只能选一个座位坐下，因此他选了最先听到的服务生A的话，选了1号座位，这时小明再次大喊“我坐了1号座位！”，服务生ABC都听到了这个消息，BC发现并不是自己的位子，那么就又认为这个2、3是空位了。A听到客人坐了自己的位置，那么他就在小明的耳边告诉小明：“好的（ACK）！你可以坐1 小时！”，小明听到后检查这个座位是不是真是空的，如果是，他就坐下来喝茶了，如果不是，他会把服务生A叫过来，大声斥责他说：“这已经有人坐了！”，然后小明重新大喊找座位。这里假定1确实是空的，小明坐了半小时后，小明把服务生叫过来说：“这个座位半小时后到期，我一会还要坐！”，如果服务生说：“好的！”，那就延长租期，如果小明耳聋没听到或者服务生嗓子哑了没说清楚，小明就不做理会，继续坐着，等到87.5%的时间之后，小明在餐厅里大喊，“这个座位快到期了！我要续租！”如果服务生说：“好的！”，那就延长租期，如果小明耳聋没听到或者服务生嗓子哑了没说清楚，小明就不做理会，继续坐着，直到时间快到了，他就叫服务生过来“我不坐了！”，然后重新大喊找座位。","s":"DHCP详细流程","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#dhcp详细流程","p":2157},{"i":2200,"t":"Internet控制报文协议(Internet Control Message Protocol） CMP协议主要用来检测网络通信故障和实现链路追踪，最典型的应用就是PING和tracerooute。 PING： 通过发送回送请求报文和回送回答报文来检测源主机到目的主机的链路是否有问题，目的地是否可达，以及通信的延迟情况。 traceroute： 通过发送探测报文来获取链路地址信息。 具体操作 第一个探测报文TTL为1，到达第一个路由器时，TTL减1为0所以丢掉这个探测包，同时向源主机发回ICMP时间超过报文，这时源主机就获得了第一个路由器的IP地址。 接着源主机发送第二个探测报文，TTL增1为2，到达第一个路由器TTL减1为1并转发探测包到第二个路由器，这时TTL减1为0，丢掉这个探测包并向源主机发回ICMP时间超过报文，源主机就获得了第二个路由器的IP地址。 以此类推，直到探测报文到达traceroute的目的地，这时源主机就获得了到目的地的每一跳路由的IP地址。","s":"6.1 ICMP协议的作用是什么","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#61-icmp协议的作用是什么","p":2157},{"i":2202,"t":"路由器主要有路由和转发两大主要功能。 路由器偶尔也称为网关。 路由器有以下几种功能： 第一，网络互连，路由器支持各种 局域网和 广域网接口，主要用于互连局域网和广域网，实现不同网络互相通信； 第二，数据处理，提供包括分组过滤、分组转发、优先级、复用、加密、压缩和 防火墙等功能； 第三，网络管理，路由器提供包括配置管理、性能管理、容错管理和流量控制等功能。","s":"七、路由","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#七路由","p":2157},{"i":2204,"t":"确定去往目的地的最佳路径。 将网络抽象成图：每个节点是路由器，节点之间的连接线是链路。链路上的权值是通过链路的代价（费用）。当然，费用是越小越好的。 路由算法的目的是计算最小费用的路径是什么，也就是最短路径算法。","s":"7.1 路由算法是什么","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#71-路由算法是什么","p":2157},{"i":2206,"t":"基于迪杰斯特拉算法。 链路状态路由算法要求每个路由器构造一个链路状态分组并广播给其他的路由器，每个路由器都会收到邻居路由器的信息。 C(x,y)标识结点x到结点y的链路的费用，如果不直接相连则初始化为正无穷。 D（v）标识从原目的到v结点路径的费用值。 p（v）沿着源到v的前序结点。 N标识已经找到最小费用路径的结点集合。 Details 迪杰斯特拉算法步骤演示 迪杰斯特拉算法出现的问题","s":"7.2 链路状态路由算法","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#72-链路状态路由算法","p":2157},{"i":2208,"t":"基于Bellman-Ford方程（动态规划） d(xy)为x到y的最小开销（距离） d(xy)=min{c(x,v)+d(vy)}，由邻居告知我它到达y的开销。 举例： 显然，可以从图中得到u的邻居到z的距离：d(vz)=5,d(xz)=3,d(wz)=3 那么根据B-F方程： d(uz)=min{c(uv)+d(vz),c(ux)+d(xz),c(uw)+d(wz)}=min{2+5,1+3,5+3}=4；故而使用x作为下一跳。 因此u并不需要直到整个拓扑分组就能进行规划。 算法过程 对每个节点x： （1）在每个节点建立自己的距离向量表并初始化。 （2）在每个节点将自己维护的距离向量表向其邻居节点转发。 （3）每个节点收到邻居节点发送的距离向量表以后基于新的信息采用方程来更新自己的距离向量表。 （4）当自己的距离向量表发生变化时，将新的距离向量表发送给自己的邻居节点，如果与以前的向量表相同则不向其邻居节点转发，直到每个节点的距离向量表达到稳定为止。 假设图中只有三个节点，它们两两相连： 上图为x节点的选路表。 节点x选路表中： 行：该节点的距离向量Dx和其邻居的距离向量Dv； 列：所有目的节点。 在初始化时由于每个节点只知道本路由器相连的链路费用，因此只有到相邻节点的最低路径费用有值，其余全部为无穷大，为对应的链路费用值。如下图 当每个节点完成自己的距离向量表后，会不断的向自己的邻居节点发送这个距离向量表。 每个节点收到邻居新的距离向量表后，会使用B-F公式更新自己的距离向量。若距离向量发生变化将新的距离向量通知给邻居。 当距离向量不在变化，则算法终止。 图解 x、y、z三个节点向其邻居发送了自己的向量表之后，x节点收到了来自y节点和z节点的距离向量分别是2、0、1和7、1、0。分别将这两个向量放在第二行和第三行的第一列中。然后利用收到的新的信息来更新自己的距离向量。首先更新x节点到y节点的最低路径费用。根据B-F方程可是x节点到y节点最低路径费用为2，因此保持不变，x节点到z节点的最低路径费用可进一步减小为3即x节点先到y节点再到z节点。经过上述修改后x的向量表如第一行第二列所示。x节点新的距离向量与以前的发生了变化，因此x节点会将新的距离向量向其邻居节点y和z发送。依次类推，每个节点都不断更新自己的距离向量，直到不在发送变化为止。例如第二行第二列这里的y节点重新计算距离向量后发现这里的距离向量没有发生变化仍然是201，因此不再向其邻居节点发送。 我们观察到多次从邻居接受更新距离向量、重新计算选路表项、并向邻居发送更新通知的过程，一直持续到没有更新报文发出为止；算法进入静止状态，直到某个链路费用发生改变为止。","s":"7.3 距离向量路由算法","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#73-距离向量路由算法","p":2157},{"i":2210,"t":"消息复杂度 链路状态路由算法（LS）：需要知道每条链路的费用，需发送O（nE）个报文；当一条链路的费用发生变化时，必须通知所有节点。 距离向量路由算法（DV）：迭代时，仅在两个直接相连邻居之间交换报文；当链路费用改变时，只有该链路相连的节点的最低费用路径发生改变时，才传播已经、改变的链路费用。 收敛速度 LS：需要O（nE）个报文和O（n^2）的搜寻。 DV：收敛较慢。可能会遇到选路回环，或计数到无穷的问题。 健壮性：当一台路由器发生故障、操作错误或受到破坏时 LS：路由器向其连接的一条链路广播不正确费用，路由计算基本独立（仅计算自己的转发表），有一定健壮性。 DV：一个节点可向任意或所有目的节点发布其不正确的最低费用路径，一个节点的计算值会传递给它的邻居，并间接地传递给邻居的邻居，好消息传得快，坏消息传得慢！。 参考文章：https://blog.csdn.net/weixin_42374938/article/details/119349738","s":"7.4 链路状态路由算法和向量路由算法对比","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#74-链路状态路由算法和向量路由算法对比","p":2157},{"i":2212,"t":"网络层协议不再是端到端的服务了，而是一个在路由器间都需要的服务。 转发（forwarding）：将分组从路由器的输入端口转移到合适的输出端口。 使用转发表。","s":"八、路由器的转发","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#八路由器的转发","p":2157},{"i":2214,"t":"最长前缀匹配机制（Longest Prefix Match Algorithm）是目前行业内几乎所有的路由器都缺省采用的一种路由查询机制。 当路由器收到一个IP数据包时，它会将数据包的目的IP地址与自己本地路由表中的所有路由表进行逐位（Bit-By-Bit）对比，直到找到匹配度最长的条目，这就是最长前缀匹配机制。 在使用 CIDR 时，路由表的每个项目的组成 ，<网络前缀，下一跳地址>。在查找路由的时候可能会得到不止一个匹配的结果。此时应当从匹配结果中选择具有最长网络前缀的路由。因为网络前缀越长，其地址块就越小，路由就越具体。 举例 已知： 收到的分组的目的地址 D = 206.0.71.128 路由表中的项目： 206.0.68.0/22 206.0.71.128/25 问：分组发往哪个地址？ 求解思路 将子网掩码与目的地址相与，确定该目的地址是否属于该子网内部。如果两者都属于，则选择网络前缀（掩码）最长的。 求解过程 先用 D 和第一个(206.0.68.0/22)下一跳地址的子网掩码相与 206.0.71.128 and 11111111.11111111.11111100.00000000(22位1的子网掩码) 结果: 206.0.01000100.0 也就是 206.0.68.0 说明匹配。 再用 D 和第二个下一跳地址的子网掩码相与 206.0.71.128 and 11111111.11111111.11111111.10000000 结果是 也是206.0.71.128 也匹配。 这个时候由于两个子网都匹配，选择最长的网络前缀匹配，也就是 206.0.71.128","s":"8.1 最长前缀匹配简述","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#81-最长前缀匹配简述","p":2157},{"i":2216,"t":"背景：将大规模的网络构成图的形式过于理想化，通过链路状态路由等算法进行计算的路由表几乎无法存储。 将某个区域内的路由器聚合在一起，称为自治系统（AS，autonomous system），在同一个自治系统内可以采取某种路由算法，对于上层自治系统之间也可以进行某种路由算法。 网关路由器（Gateway Router）：位于自治系统边缘，与其他自治系统交换信息。 下图展示一个互联的自治系统： 如果AS3有信息需要交给AS2，在上图中，就必须由AS1进行转交！ AS1必须学习哪些网络可以通过AS2到达，哪些可以通过AS1到达。这些学习到的东西必须传播给AS1内部的路由器。","s":"8.2 层次化路由","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#82-层次化路由","p":2157},{"i":2218,"t":"路由信息协议基本概述 RIP（Routing Information Protocol）路由信息协议，服务于内部网关协议IGP。 使用的是距离矢量路由算法（DV算法） 使用传输层用户数据报UDP协议进行传送，端口520 按固定的时间间隔交换路由信息，时间默认30s RIP协议中“距离”定义为“跳数”，每经过一个路由，跳数加1. 为了防止无穷计数问题，最大跳数是15，16相当于不可达。 RIP详细描述 简单，适用于小型同类网络 通过广播UDP报文来交换路由信息，是传输层封装的协议，应当属于应用层，但是本质属于网络层。 RIP简单的将网络的距离定义为“跳数”。路由器与路由器直连的距离都是1，每经过一个路由器，跳数就加1，RIP认为一个好的路由就是它通过的路由器的数目少。RIP限定了无穷大等于16跳。所以实际上RIP能支持的网络规模很小，在一条路由上若超过了15台路由器，那么RIP就认为不可达。 RIP每30秒发送一次路由信息更新。这样作的目的是防止路由器出现故障后无法通告给邻居导致无法保证路由的有效性。 由于RIP协议是基于距离向量算法的协议，所以RIP具有好消息传的快，坏消息传的慢的特点。可能导致路由回路。","s":"8.3 RIP路由信息协议","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#83-rip路由信息协议","p":2157},{"i":2220,"t":"OSPF协议 全称：Open Shortest Path First，开放最短路径优先 采用链路状态路由算法，迪杰斯特拉。 LS分组扩散，每个路由器构造完整的AS拓扑图。 OSPF通告中每个入口对应一个邻居。 OSPF通告在整个AS范围进行泛红：OSPF报文直接封装到IP数据报之中。 IS-IS协议和OSPF协议很像。 OSPF协议的优势 安全：所有OSPF报文可以被认证（预防恶意入侵）。 允许使用多条相同费用的路径（RIP只能一条），实现负载均衡。 支持单播路由与多播路由。 OSPF可以划分两层区域分为主干区和局部区。引入了区边界路由器实现了区域之间的通信，它既是主干区的路由器也是其他区的路由器。","s":"8.4 OSPF开放最短路径优先","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#84-ospf开放最短路径优先","p":2157},{"i":2222,"t":"前面介绍了RIP协议、OSPF协议，它们是内部网关协议，本文介绍外部网关协议，Border Gateway Protocol，即AS之间使用协议即BGP协议。 由于互联网规模太过庞大，所以AS之间进行路由十分困难，因此，外部网关协议BGP 只能是力求寻找一条能够达到目的网络且比较好的路由，而并非最佳路由。BGP采用了路径向量路由选择协议。 BGP协议的特点 主要和边界路由器进行通信，也就是AS边界的BDP发言人。 用于交换可达性信息。 每次发生变化时就要更新有变化的部分。 BGP支持无分类域间路由选择CIDR，因此BGP路由表中包括目的网络前缀，下一跳路由器，以及达到该目的网络所要经过的自治系统序列。 一个BGP发言人与其他自治系统中的BGP发言人要交换信息，首先需要建立TCP连接（端口号179），然后在此连接上交换BGP报文以建立BGP会话，利用BGP会话交换路由信息。所以，BGP协议是应用层协议，借助TCP传送。 BGP协议总结：","s":"8.5 BGP外部网关协议","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#85-bgp外部网关协议","p":2157},{"i":2224,"t":"RIP和OSPF还有ISIS协议属于域内路由协议，BGP属于域间路由协议。 感谢路由协议原作者","s":"8.6 三种路由协议比较","u":"/docs/Notes/ComputerNetwork/network-layer","h":"#86-三种路由协议比较","p":2157},{"i":2227,"t":"脉冲编码调制就是数模转换，主要经过3个过程：抽样、量化和编码。抽样过程将连续时间模拟信号变为离散时间、连续幅度的抽样信号，量化过程将抽样信号变为离散时间、离散幅度的数字信号，编码过程将量化后的信号编码成为一个二进制码组输出。 😩 没讲过，写不下来，看这篇文章吧","s":"常见传输介质的比较","u":"/docs/Notes/ComputerNetwork/physical-layer","h":"#常见传输介质的比较","p":2225},{"i":2230,"t":"🔔 浅显理解 a—>b:第一次握手，a问b你能听到吗(a发起，b等待) b—>a:第二次握手，b回答能听到，并反问a能听到吗 a—>b:第三次握手，a回答b，能听到，连接建立 Details 动图 目的：保证收发双方都在线。","s":"三次握手","u":"/docs/Notes/ComputerNetwork/tcp-connection-establishment-process","h":"#三次握手","p":2228},{"i":2232,"t":"最开始时，客户端和服务器都在CLOSED可用状态，开始建立TCP连接之前，服务器端的一个端口已经被被动打开（Passive open），用于监听来自客户端的请求。客户端的端口可以主动打开（Active open），用于发起TCP连接。 🔔 第一次握手 客户端向服务器端发送SYN报文段，不携带任何数据，SYN标志位（Flag）置1，包的序号为客户端的ISN（Initial Sequence Number），包发出后，客户端进入SYN_SEND状态，客户端知晓客户端的发包能力正常； 🔔 第二次握手 第二次握手服务端接收客户端发来的连接请求，以SYN+ACK报文段做出回应，包的SYN标志位置1，ACK标志位置1，序号为服务端的ISN（与客户端的ISN不同），确认码为客户端的ISN加1，包发出后，服务端进入SYN_RCVD状态，服务端知晓客户端的发包能力正常、服务端的发包能力正常，服务器的收包能力正常； 🔔 第三次握手 第三次握手客户端接收服务端发来的响应，以ACK报文段做出回应，这个报文段里可能包含数据，包的ACK置1，序号为客户端的ISN+1，确认码为服务端的ISN+1，此包发出后，客户端转为ESTABLISHED状态，客户端知晓服务端的发包能力正常，服务端的收包能力正常、客户端的收包能力正常。服务器接收到这个包后，也进入ESTABLISHED状态，服务端知晓客户端的收包能力正常，至此TCP连接被成功建立，可以进行数据传输。 ⚠ 为什么使用三次握手 为了实现可靠传输，发送方和接收方始终需要同步( SYNchronize )序号。需要注意的是，序号并不是从 0 开始的，而是由发送方随机选择的初始序列号 ( Initial Sequence Number, ISN )开始 。由于 TCP 是一个双向通信协议， 通信双方都有能力发送信息， 并接收响应。因此，通信双方都需要随机产生一个初始的序列号，并且把这个起始值告诉对方。在这个过程中需要三次握手。","s":"三次握手的主要过程","u":"/docs/Notes/ComputerNetwork/tcp-connection-establishment-process","h":"#三次握手的主要过程","p":2228},{"i":2234,"t":"⚠ 客户端和服务器均可以发起挥手，但是一般是客户端发起。 STEP1：客户端向服务器发送TCP FIN控制报文段（segment） STEP2：服务器接收到客户端的FIN报文段，确认并发送ACK报文段，关闭连接发送FIN STEP3：客户端接收到服务器的FIN报文段，确认并发送ACK报文段 进入等待状态，如果再收到FIN则重新发送ACK，确保能够正常关闭连接。 STEP4：服务器接收到客户端的ACK报文段，关闭连接 🔔 第四次挥手浅显理解 把客户端比作男孩，服务器比作女孩。通过他们的分手来说明“四次挥手”过程(举例而已）。 “第一次挥手”：日久见人心，男孩发现女孩变成了自己讨厌的样子，忍无可忍，于是决定分手，随即写了一封信告诉女孩。 “第二次挥手”：女孩收到信之后，知道了男孩要和自己分手，怒火中烧，心中暗骂：你算什么东西，当初你可不是这个样子的！于是立马给男孩写了一封回信：分手就分手，给我点时间，我要把你的东西整理好，全部还给你！ 男孩收到女孩的第一封信之后，明白了女孩知道自己要和她分手。随后等待女孩把自己的东西收拾好。 “第三次挥手”：过了几天，女孩把男孩送的东西都整理好了，于是再次写信给男孩：你的东西我整理好了，快把它们拿走，从此你我恩断义绝！ “第四次挥手”：男孩收到女孩第二封信之后，知道了女孩收拾好东西了，可以正式分手了，于是再次写信告诉女孩：我知道了，这就去拿回来！ 这里双方都有各自的坚持。 女孩自发出第二封信开始，限定一天内收不到男孩回信，就会再发一封信催促男孩来取东西！ 男孩自发出第二封信开始，限定两天内没有再次收到女孩的信就认为，女孩收到了自己的第二封信； 若两天内再次收到女孩的来信，就认为自己的第二封信女孩没收到，需要再写一封信，再等两天。 来自：https://blog.csdn.net/spade_Kwo/article/details/119464901","s":"四次挥手过程","u":"/docs/Notes/ComputerNetwork/tcp-connection-establishment-process","h":"#四次挥手过程","p":2228},{"i":2236,"t":"拥塞：对某一资源的需求超过了该资源所能提供的部分。太多主机发送了太多数据或者发送速度太快了。 表现：分组丢失（路由器缓存溢出）、分组延迟过大（在路由器缓存中排队） 当输入的负载到达一定程度 吞吐量不会增加，即一部分网络资源会丢失掉，网络的吞吐量维持在其所能控制的最大值，转发节点的缓存不够大这造成分组的丢失是拥塞的征兆。 做以下假设： 数据是单方向输入传送的，而另一个方向只传送确认。 接收方总是有足够大的缓存空间，因此发送方只需要考虑网络的拥塞程度。 以TCP最大报文段的个数为讨论的单位，而不是字节。 Details 湖南科技大学MOOC拥塞控制详解 🔔 示例如下 传输轮次：发送方给接收方发送数据报文段后，接收方给发送方发回相应的确认报文段，一个传输轮次所经历的时间就是往返时间RTT(RTT并非是恒定的数值），使用传输轮次是为了强调，把拥塞窗口cwnd所允许发送的报文段都连续发送出去，并收到了对已发送的最后一个报文段的确认，拥塞窗口cwnd会随着网络拥塞程度以及所使用的拥塞控制算法动态变化。 在tcp双方建立逻辑链接关系时， 拥塞窗口cwnd的值被设置为1，还需设置慢开始门限ssthresh,在执行慢开始算法时，发送方每收到一个对新报文段的确认时，就把拥塞窗口cwnd的值加一，然后开始下一轮的传输，当拥塞窗口cwnd增长到慢开始门限值时，就使用拥塞避免算法。 🔔 慢开始 假设当前发送方拥塞窗口cwnd的值为1，而发送窗口swnd等于拥塞窗口cwnd，因此发送方当前只能发送一个数据报文段（拥塞窗口cwnd的值是几，就能发送几个数据报文段），接收方收到该数据报文段后，给发送方回复一个确认报文段，发送方收到该确认报文后，将拥塞窗口的值变为2. 发送方此时可以连续发送两个数据报文段，接收方收到该数据报文段后，给发送方一次发回2个确认报文段，发送方收到这两个确认报文后，将拥塞窗口的值加2变为4，发送方此时可连续发送4个报文段，接收方收到4个报文段后，给发送方依次回复4个确认报文，发送方收到确认报文后，将拥塞窗口加4，置为8，发送方此时可以连续发送8个数据报文段，接收方收到该8个数据报文段后，给发送方一次发回8个确认报文段，发送方收到这8个确认报文后，将拥塞窗口的值加8变为16. 当前的拥塞窗口cwnd的值已经等于慢开始门限值，之后改用拥塞避免算法。 🔔 拥塞避免算法 也就是每个传输轮次，拥塞窗口cwnd只能线性加一，而不是像慢开始算法时，每个传输轮次，拥塞窗口cwnd按指数增长。同理，16+1……直至到达24，假设24个报文段在传输过程中丢失4个，接收方只收到20个报文段，给发送方依次回复20个确认报文段，一段时间后，丢失的4个报文段的重传计时器超时了，发送发判断可能出现拥塞，更改cwnd和ssthresh.并重新开始慢开始算法，如图所示： 🔔 快速重传 发送方发送1号数据报文段，接收方收到1号报文段后给发送方发回对1号报文段的确认，在1号报文段到达发送方之前，发送方还可以将发送窗口内的2号数据报文段发送出去，接收方收到2号报文段后给发送方发回对2号报文段的确认，在2号报文段到达发送方之前，发送方还可以将发送窗口内的3号数据报文段发送出去， 假设该报文丢失，发送方便不会发送针对该报文的确认报文给发送方，发送方还可以将发送窗口内的4号数据报文段发送出去，接收方收到后，发现这不是按序到达的报文段，因此给发送方发送针对2号报文段的重复确认，表明我现在希望收到的是3号报文段，但是我没有收到3号报文段，而收到了未按序到达的报文段，发送方还可以将发送窗口中的5号报文段发送出去,接收方收到后，发现这不是按序到达的报文段，因此给发送方发送针对2号报文段的重复确认，表明我现在希望收到的是3号报文段，但是我没有收到3号报文段，而收到了未按序到达的报文段,，发送方还可以将发送窗口内的最后一个数据段即6号数据报文段发送出去，接收方收到后，发现这不是按序到达的报文段，因此给发送方发送针对2号报文段的重复确认，表明我现在希望收到的是3号报文段，但是我没有收到3号报文段，而收到了未按序到达的报文段， 此时，发送方收到了累计3个连续的针对2号报文段的重复确认，立即重传3号报文段，接收方收到后，给发送方发回针对6号报文的确认，表明，序号到6为至的报文都收到了，这样就不会造成发送方对3号报文的超时重传，而是提早收到了重传。 ⚠ 拥塞控制部分搬运来自 CSDN博主「程序媛_婷」，原文链接：https://blog.csdn.net/qq_41431406/article/details/97926927 TCP拥塞控制推荐好文 https://www.cnblogs.com/tuyang1129/p/12439862.html","s":"TCP拥塞（Congestion）控制","u":"/docs/Notes/ComputerNetwork/tcp-connection-establishment-process","h":"#tcp拥塞congestion控制","p":2228},{"i":2240,"t":"做下面的比喻： 应用层报文——发信信封上的字符 进程——收信方和发信方 主机——两个家庭 传输层协议——两个家庭专门负责收发信的人 网络成协议——邮政服务（逻辑通信提供者）","s":"前言 传输层和应用层的关系","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#前言-传输层和应用层的关系","p":2238},{"i":2242,"t":"传输层为运行在不同主机的应用提供逻辑通信。对网络层的服务进行增强（如数据排序，加密等，有些服务是不可增强的，如带宽、延迟） 🔔 传输层协议运行在端系统 发送方：将应用层的报文分成报文段，然后传递给网络层。 接受方：将报文段重组为报文，然后传递给应用层。","s":"一、传输层的功能","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#一传输层的功能","p":2238},{"i":2244,"t":"应用 端口号 HTTP 80/8080/3128/8081/9098 FTP 21/22 Telent（远程登录） 23 HTTPS 443（TCP） 443（UDP） SMTP 25（TCP） POP3 110（TCP） SSH（安全登录） 22（TCP） SOCKS（代理服务器） 1080（TCP）","s":"二、常见的应用使用的端口号总结","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#二常见的应用使用的端口号总结","p":2238},{"i":2247,"t":"3.1.1 TCP简介​ TCP全称：传输控制协议-Transmission Control Protocol，是一种面向连接的协议，它是一个面向连接的通信协议。TCP协议是基于IP协议的。 面向连接：两个应用程序相互发数据之前必须先握手。 提供可靠的数据传输、拥塞控制、流量控制。 🔔 全双工 TCP提供全双工服务（Full-duplex service) ，当两个进程A和B建立起TCP连接后，那么应用层数据在从A流向B的同时也从B流向A。 点对点：TCP是单个发送方和单个接收方的协议。多播（即一次发送多个点接收）是无法实现的。 ⚠ 两个常见的名词 ①最大报文段长度（Maximum Segment Size,MSS）:该术语很容易被混淆，它其实指的是报文段里应用数据的最大长度，而不是包括TCP首部的TCP报文段的最大长度。 ②最大传输单元（Maximun Transmission Unit,MTU）:指的是最大链路层帧长度，即应用数据+TCP首部+IP首部。 🌳 TCP连接的组成 TCP连接的组成包括：两台主机上的缓存、变量和与进程相连的套接字而两台主机之间的网络元素（路由器、交换机和中继器）没有为该连接分配任何变量。 3.1.2 TCP的报文结构​ 结构名称 大小 作用 源端口号 16比特 存储发送方端口号 目标端口号 16比特 存储接收方端口号 序号Seq 32比特 报文段的首字节在字节流的编号 确认号Ack 32比特 期望从另一方收到的下一个字节的序号 接收窗口 16比特 愿意接收的字节数量 校验和 16比特 校验传输的数据的准确性 应用层数据 长度不确定 传输的数据 源端口号和目标端口号 被用于多路复用来自上层应用的数据/多路分解送到上层应用 32比特的序号字段和32比特的确认字段 这些字段被TCP发送方和接收方用来实现可靠数据传输服务。 序号字段的作用 序号是可靠传输的关键因素。TCP将要传输的每个字节都进行了编号，序号是本报文段发送的数据组的第一个字节的编号，序号可以保证传输信息的有效性。比如：一个报文段的序号为300，此报文段数据部分共有100字节，则下一个报文段的序号为401。 确认号字段的作用 每一个ACK对应这一个确认号，它指明下一个期待收到的字节序号，表明该序号之前的所有数据已经正确无误的收到。确认号只有当ACK标志为1时才有效。比如建立连接时，SYN报文的ACK标志位为0。 16比特接收窗口字段 该字段用于指示接收方愿意接收的字节数量，用于流量控制 4比特的首部长度字段 指示以32比特的字为单位的TCP首部长度，表示该TCP头部有多少个32位bit(有多少个4字节)，所以TCP头部大长度是15 * 4 = 60。根据该部分可以将TCP报头和有效载荷分离。TCP报文默认大小为20个字节。 可选与变长的选项字段 该字段用于发送方与接收方协调最大报文长度（MSS）时，或在高速网络环境下用作窗口调节因子时使用。 6比特的标志字段 ACK（确认反馈），RST、SYN、FIN（用于连接的建立和拆除），【PSH（指示接收方应立即将数据交给上层），URG（报文里存在着被发送端上层设为紧急的数据，紧急数据的最后一个字节由一个16比特的紧急数据指针指出）】在实践中，PSH和URG并没有使用。 tip URG:它为了标志紧急指针是否有效。 ACK：标识确认号是否有效。 PSH:提示接收端应用程序立即将接收缓冲区的数据拿走。 RST：它是为了处理异常连接的， 告诉连接不一致的一方，我们的连接还没有建立好， 要求对方重新建立连接。我们把携带RST标识的称为复位报文段。 SYN: 请求建立连接; 我们把携带SYN标识的称为同步报文段。 FIN:通知对方, 本端要关闭连接了, 我们称携带FIN标识的为结束报文段。 16位的紧急指针 按序到达是TCP协议保证可靠性的一种机制，但是也存在一些报文想优先被处理，这时就可以设置紧急指针，指向该报文即可，同时将紧急指针有效位置位1。 16位校验和 发送端填充，CRC校验。如果接收端校验不通过， 则认为数据有问题(此处的检验和不光包含TCP首部也包含TCP数据部分)。 Details 英文详图 3.1.3 TCP特性解读​ 1.可靠数据传输 TCP在IP提供的不可靠服务的基础上建立了rdt。提供了累计确认和超时重传机制。允许乱序接收。 2.流量控制 缓冲区：TCP往里面写数据，app从里面读数据。接收方控制发送方，不让发送方发送的太多、太快，以致于让接收方的缓冲区溢出。接收方在其向发送方的TCP报文段头部的rwnd字段“通告”其空闲缓存区大小。发送方根据rwnd字段控制发送数据的大小，保证接收方不会被淹没。 3.连接控制 三次握手建立连接。详见下一篇文章。","s":"3.1 TCP协议","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#31-tcp协议","p":2238},{"i":2250,"t":"全称：用户数据报协议-User Datagram Protocol，简称UDP，是一种无连接的数据传输协议。 无连接：UDP发送端和接收端没有握手；每个UDP报文段都被独立的处理。 优点：传输速度快（无需握手、无拥塞和流量控制）、开销小（报文段的头部很小） 缺点：可能丢失、可能乱序 应用：流媒体（要求速率，对丢失不敏感）、DNS","s":"3.2.1 UDP协议简介","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#321-udp协议简介","p":2238},{"i":2252,"t":"UDP首部由8个字节构成，每个字段都是两个字节 1、源端口：源端口号，需要对方回信时选用，不需要时置0； 2、目标端口：目的端口号，在终点交付报文时需要用到； 3、头部长度：UDP的数据报长度（包含首部和数据），最小值为8字节（只有首部）； 4、校验和：检测UDP数据在传输中是否出错，有错则丢弃。 🔔 UDP校验 该字段可选，当源主机不想计算校验和，则置0，当传输层从IP层收到UDP数据报时，根据首部中的目标端口，把UDP数据通过相应的端口交给应用进程。若接收方UDP发现收到的报文中目的端口号不正确，就丢弃该报文，由ICMP发送“端口不可达”报错给发送方。 在计算校验和时，在UDP数据报前加12字节的伪首部，并不是UDP真正的首部。只是在计算校验和时临时添加在UDP数据报的前面得到的临时数据报，后校验临时数据报。伪首部既不向下传送，也不向上递交，仅仅为了计算校验和。这样，即检查了UDP的数据报，又对IP数据报源IP地址和目标地址进行了校验。 Details UDP数据报格式和伪首部图解","s":"3.2.2 UDP报文格式","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#322-udp报文格式","p":2238},{"i":2254,"t":"拥塞：大多数数据需要传输，超过了网络的处理能力。 拥塞的表现：分组丢失（路由器缓冲区溢出）、分组延迟（在路由器中的排队延迟）","s":"四、拥塞控制","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#四拥塞控制","p":2238},{"i":2256,"t":"🌳 基本原理 路由器不向主机发送拥塞相关的反馈信息（路由器的负担较轻、符合网络核心简单的TCP/IP架构原则） 端系统根据自身得到的消息，判断是否发生拥塞，从而采取动作 拥塞监测的方式 某个段超时了（丢失事件）：拥塞 超时时间到，某个段的确认没有来。 原因1：网络拥塞（某个路由器缓冲区没空间了，被丢弃）大概率 原因2：出错被丢弃了（各级错误，没有通过校验，被丢弃）小概率 一旦超时，就认为发生了拥塞，有一定误判，但是总体控制方向是对的","s":"4.1 TCP拥塞控制","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#41-tcp拥塞控制","p":2238},{"i":2258,"t":"相同点：TCP和UDP都是在网络层，都是传输层协议，都能都是保护网络层的传输，双方的通信都需要开放端口。 不同点: \\ | TCP | UDP :---: | :---: | :---: 1 | TCP的传输是可靠传输。 | UDP的传输是不可靠传输。 2 | TCP是基于连接的协议，在正式收发数据前，必须和对方建立可靠的连接。 | UDP是和TCP相对应的协议，它是面向非连接的协议，它不与对方建立连接，而是直接把数据包发送出去 3 | TCP是一种可靠的通信服务，负载相对而言比较大，TCP采用套接字（socket）或者端口（port）来建立通信。 | UDP是一种不可靠的网络服务，负载比较小。 4 | TCP和UDP结构不同，TCP包括序号、确认信号、数据偏移、控制标志（通常说的URG、ACK、PSH、RST、SYN、FIN）、窗口、校验和、紧急指针、选项等信息。 | UDP包含长度和校验和信息。 5 | TCP提供超时重发，丢弃重复数据，检验数据，流量控制等功能，保证数据能从一端传到另一端。 | UDP不提供可靠性，它只是把应用程序传给IP层的数据报发送出去，但是并不能保证它们能到达目的地。 6 | TCP在发送数据包前在通信双方有一个三次握手机制，确保双方准备好，在传输数据包期间，TCP会根据链路中数据流量的大小来调节传送的速率，传输时如果发现有丢包，会有严格的重传机制，故而传输速度很慢。 | UDP在传输数据报前不用在客户和服务器之间建立一个连接，且没有超时重发等机制，故而传输速度很快。 7 | TCP支持全双工和并发的TCP连接，提供确认、重传与拥塞控制。 | UDP适用于哪些系统对性能的要求高于数据完整性的要求，需要“简短快捷”的数据交换、需要多播和广播的应用环境。","s":"五、TCP和UDP的异同","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#五tcp和udp的异同","p":2238},{"i":2260,"t":"由于一个主机上有多个进程，因此要进行多路复用和分用。如果某层的一个协议对应上层的多个协议/实体，就需要进行服用/分用。 🔔 接收端进行多路分用 传输层根据头部信息将收到的报文交给正确的Socket（即不同的进程）。 🔔 发送端进行多路复用 从多个Socket接收数据，为每个数据封装头部信息，生成报文，交给网络层。 分用： 主机接收到IP数据报(datagram) 每个数据报携带源IP地址、目的IP地址 每个数据报携带一个传输层的段(Segment） 每个段携带源端口号和目的端口号 主机收到Segment之后，传输层协议提取IP地址和端口号信息，将Segment导向相应的Socket TCP做更多处理 复用和分用","s":"六、多路复用和分用","u":"/docs/Notes/ComputerNetwork/transport-layer","h":"#六多路复用和分用","p":2238},{"i":2263,"t":"可靠数据传输（Reliable Data Transfer，RDT）是一种可靠的数据传输协议，它在传输层、应用层和数据链路层都很重要。 特点：不出错、不重复、不失序、不丢失，是计算机网络Top10的问题之一。 TCP实现了可靠数据传输。 rdt的使命：在下层依赖提供的服务不可靠的情况下，为上层提供可靠的服务。 其中涉及了一个封装和解封装的过程。 上半部分是应用层，下面是rdt提供的可靠的信道（尽管下层是不可靠的）。 ⚠ 图解 在上图中，rdt_send和deliver_data()都是单向的通道，但是udt_send和rdt_rec是双向的通道。我们只考虑单向的信息传输（发送方发给接收方），其实两个相反的单向就是双向的。 我们常用有限状态机（Finite State Machine，FSM）来描述rdt协议。箭头上的文字，横线上方是引起状态变迁的事件，下方是活动。 🔔 rdt协议的研究方式 使用渐进式的方式进行研究，因此从rdt1.0开始，从完全可信到逐渐不可信（接近真实情况）进行研究。","s":"rdt协议简介","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt协议简介","p":2261},{"i":2265,"t":"可靠信道上的可靠数据传输 1.0假定底层信道完全可靠，不会丢弃分组。但是不可能存在这种信道。 🌳 rdt1.0图解 在rdt1。0中，由于我们认为下层信道完全可信，因此我们的rdt信道只需要进行封装和解封装操作，如左边的图，当调用时，创建一个rdt_send状态，这个状态包含下面的活动：将数据封装打包，然后通过udt发送出去（实际上，这个时候的udt我们认为是可信的），接着就等待下次的调用。在右边的接收端，由于我们认为数据完全不会丢失，所以我们只创建一个rcv状态，进行数据包的解封装，然后把数据传给应用层，再等待下次数据送达。","s":"rdt1.0","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt10","p":2261},{"i":2267,"t":"产生位错误的信道上的可靠数据传输 此时的下层信道就不再可信了，但是它只可能产生位错误，即0变1、1变0，它不可能产生乱序和丢包。 如何从错误中恢复？ 🔔 ARQ协议（Automatic Repeat Request，ARQ） 确认机制（Acknowledgement，ACK），接收方显式地告知发送方分组已经接收。 NAK：接收方显式地告知发送方分组有错误。 发送方收到NAK后重传分组。 Pardon！（没听清！请再说一遍）就是现实生活中的一种重传机制。 ⚠ 2.0的新机制 差错检验（校验和）、序列号、控制消息的反馈（ACK）、重传 ::: theorem 2.0的缺陷 2.0致命的缺陷是并没有考虑到如果ACK和NAK出错了怎么办，这样的话，就会导致整个传输过程的错误，进入死锁。 方法：可以给ACK和NAK增加校验和，检错并纠错（难度高），添加额外的控制消息（但是控制消息也可能会坏），一旦ACK和NAK错了就重传（比较简单，但是如果本身被正确接收那么再重传会接收重复分组）。这个问题将在下面得到解决. :::","s":"rdt2.0","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt20","p":2261},{"i":2269,"t":"给每个分组增加序列号(SYN)，解决上面的2.0缺陷 在rdt下，状态数量翻倍。 接收方需要记住当前状态。 🔔 实例 在rdt2.0的基础之上，发送方在打包数据包时添加了0或者1编号，同样ACK,NAK字段上也添加了0，1字段，表示0.1号字段的确认或者否定。发送方就有了2种状态发送0号数据包，1号数据包，接收方也有了2种状态等待0号数据包和等待1号数据包。现在假设情景发送方向接收方发送0号数据包，如果接收方接收到0号数据包，返回ACK，但是ACK出现翻转，接收方处于等待1号数据状态，发送方重复发送0号数据，接收方会拒绝0号数据，避免重复。如果接收方接收到0号数据包出现错误，返回NAK，但是NAK出现翻转，接收方处于等待0号数据状态，发送方继续发送1号数据，接收方会拒绝1号数据，避免错序。","s":"rdt2.1","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt21","p":2261},{"i":2271,"t":"取消NAK消息，只使用ACK消息进行确认。在ACK消息中显式加入被确认的分组的序列号。发送方在收到重复ACK之后，采取与NAK消息一样的操作，重传当前分组。 🔔 实例 我们在ACK的信息上加上了期望的顺序号，现在假设情景发送方向接收方发送0号数据包，如果接收方接收到0号数据包，返回（ACK，1），发送方接着发送1号数据包。如果接收方接收到0号数据包出现错误，返回（ACK，0），发送方重传0号数据包。 也就是说，如果我发送为0，你接收正确，那么你必须发送1，之后我开始发下一个数据包（1），如果你发送0给我，那么我就要把0号数据包重传给你。 ⚠ rdt2.x的缺陷 rdt2.x实际上只考虑了错位的发生，却没有考虑丢包。这个问题留给rdt3.0去解决。","s":"rdt2.2","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt22","p":2261},{"i":2273,"t":"如果A发送了一个分组，但是中途丢失，那么B就不会有任何反应，A也会一直等下去，那么就会崩溃。 解决方法：等待合理的时间之后没有收到ACK就重传。但是出现了这样的问题：在合理时间之后才到达，那么会发生重复，不过可以使用序列号解决。 Details 丢包实例★ ![1654844180475.png](https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h335lwrwwdj30re0fgn33.jpg) ![1654844603717.png](https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h335t8vku1j30qt0fm114.jpg) rdt3.0能正常工作但是性能很差 🔔 实例 1Gbps的链路，15ms的端到端传播延迟，1KB的分组。 Details 计算 T（传播延迟）=L(包大小`bit)/R(速率`bit/s)=(8kb/pkt)/(10^9 b/sec)=8ms 则发送方利用率： U=(L/R)/(RTT+L/R)=0.008/30.009=0.00027，RTT是延迟时间 也就是说1Gbps的链路上每30ms才能发送一个分组=33KB/s 性能很差，*本质原因在于“停等”操作*。","s":"rdt3.0","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#rdt30","p":2261},{"i":2275,"t":"为了解决rdt3.0的缺陷，我们需要一个滑动窗口机制。利用流水线机制，我们连续发多个分组（例如三个），然后再进入等待状态。这样上面的利用率U=0.00027乘以3就会变成0.0008.在这种情况下，我们需要更大的序列号范围。发送方和接收方需要更大的存储空间来缓存分组。 Details 平等协议和流水线协议的对比","s":"流水线和滑动窗口机制","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#流水线和滑动窗口机制","p":2261},{"i":2277,"t":"窗口：允许使用的序列号范围。 窗口尺寸N：最多有N个待确认的分组。 在图中，窗口尺寸为14，即最多有14个待确认的分组。窗口不断往右边挪动进行确认。 滑动窗口协议GBN和SR","s":"滑动窗口协议（Sliding-Window Protocol）","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#滑动窗口协议sliding-window-protocol","p":2261},{"i":2279,"t":"🌳GBN协议内容 1.分组头部包含k-bit序列号。 2.窗口尺寸为N，即最多允许N个待确认的分组。 send-base:最小的序列号 nextsequence:下一个待确认的分组序列号 3.累计确认ACK（n），确认到序列号n（包含n）的分组均被正确接收。可以收到重复ACK。（接收者仅仅发送累计的确认，如果中间有数据损失则不予确认。 4.为传输分组设置计时器（timer），若超时Timeout事件：如果n这个序列号发生了超时事件那么就要重传序列号大于等于n且还未收到ACK的所有分组(n+1、n+2、n+3····),可能会造成资源浪费。 发送方扩展FSM： 接收方扩展FSM： ⚠ 接收方的机制 接收方发送拥有最高序列号的、已经被正确接收的分组ACK。GBN的接收方不存在缓存，它只需要记住唯一的expectedSequnce。可能产生重复的ACK。对于乱序的分组，全部丢弃并重新确认序列号最大的、按序到达的分组。如果我期望的分组的序列号是5，但是此时收到了7，则确认序列号4，将5、7丢弃。 Details 举例：窗口大小为4时 窗口大小为4，发送方发送数据包0，1，2，3，然后进入等待状态，其中数据包2丢失，接收方返回Ack0，1，窗口滑动继续发送包4，5，此时包2计时超时，默认数据包2没有收到，按照GBN，发送方重新发送数据包2，3，4，5。这里可以看出数据包重复了。 🔔 练习题 数据链路层采用后退N帧（GBN）协议，发送方已经发送了编号为0～7的帧。当计时器超时时，若发送方只收到0、2、3号帧的确认，则发送方需要重发的帧数是多少？分别是那几个帧？ Details 答案 由于采用累计确认，只管收到的最大的ACK，因为收到了ACK3，那么说明帧2也正常发送到了（虽然ACK2丢失了），也就是说，发送方认为正确传送了0、1、2、3帧，所以超时之后，就重传3之后的所有帧，为4、5、6、7帧。","s":"GBN协议（回退重传协议，Go-Back-N Protocol）","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#gbn协议回退重传协议go-back-n-protocol","p":2261},{"i":2281,"t":"🔔 GBN的缺陷 GBN使用累计确认机制，重传时导致很多重传，造成资源浪费，因此SR协议使用单独确认机制，设置了缓存机制，缓存乱序到达的分组，为每一个分组设置单独的计时器。此时，发送方和接收方均使用滑动窗口了。 🌳 发送方 从上层接收的数据： 如果窗口有空位，发送数据包。 如果第n帧超时： 重发n数据包，重启n的定时器。 如果收到n的ACK： 标记n帧为已完成。如果n为最小的没被接收的帧，那么在接收到ACKn后，窗口向前滑动。 🌳 接收方 收到分组n： 如果在（recevbase，recevbase+N-1）内，那么表示n是期望收到的，发送确认ACK，如果收到的是乱序的分组，那么缓存下来（buffer），如果是正常按序到达的，那么交付给上层并滑动窗口。 如果收到的分组在(recevbase-N,recevbase-1)范围内： 这说明之前正确接收分组时发送的ACK丢失了，没有正确到达发送端，因此要再次确认ACK（n）。 其他时候： 忽略。 上图发完5之后不发了，是因为必须要等2交付。 ⚠ SR困境 因为接收方不能“看见发送方”采取的动作。接收方所能观察到的是它从信道中收到的以及它向信道中发出的报文序列。就其关注而言，上图的情况时等同的。显然，窗口长度比序列号空间小1时协议无法工作。序列号空间大小与窗口尺寸要满足： Ns+Nr<=2^k，Ns表示发送方的窗口大小，Nr表示接收方的窗口大小，k表示序列号位数。","s":"SR协议(选择重传协议，Selective Repeat)","u":"/docs/Notes/ComputerNetwork/transport-layer-reliable-data-transfer","h":"#sr协议选择重传协议selective-repeat","p":2261},{"i":2284,"t":"文末附PDF","s":"分组嗅探和WireShark","u":"/docs/Notes/ComputerNetwork/WireShark","h":"","p":2283},{"i":2287,"t":"1.访问北京林业大学网站www.bjfu.edu.cn ，根据捕获到的分组回答下列问题​ 抓包北京林业大学网站。 打开cmd控制台，输入ping www.bjfu.edu.cn ，获取返回的IP地址。 获得学校官网的Ipv6的地址。2001:da8:211:d112:1602:ecff:fe04:ac50。 在wireshark中选择“捕获-选项”选中wlan网卡，在过滤图标选择捕获ipv6地址，输入地址。 在浏览器访问站点并开始捕获： HTTP协议的版本号是多少？找到对应的分组数据加以说明： 在过滤栏中输入HTTP，打开捕获的分组，对照HTTP报文格式，在分组中即可查询到HTTP版本号为HTTP/1.1,如红色下划线所示。 2.HTTP协议采用的是持久连接还是非持久连接，如果是持久连接，是流线型还是非流水线型，请依据分组数据说明； 查看Connection字段，可看到HTTP报文采用keep-alive链接，即持久性链接。由下图分析，HTTP客户每碰到一个引用就立即发出一个请求，链接不会关闭，因而HTTP客户可以一个接一个紧挨着发出各个引用对象的请求，服务器收到这些请求后，也可以一个接一个紧挨着发出各个对象。所以使用的是流水线机制。 3.找出访问www.bjfu.edu.cn的第一个TCP连接的三次握手报文，你是如何判断这是此次访问的第一个TCP连接的三次握手报文；请问在三次握手中有捎带数据事件发生吗？ 为方便起见，访问ipv4地址：202.204.112.10 由于采用持久连接，在连接建立后，这个tcp连接会一直保持连接状态。 因此在第一个HTTP报文之前的三次握手过程为访问www.bjfu.edu.cn的第一个TCP连接的三次握手报文，它们是连续的。 重新捕获，报文如下，如图可获得三次握手的报文： 第一次握手： 客户端向服务器发送连接请求包，标志位SYN为1，SEQ=0。 第二次握手： 第三次握手： TCP协议建立连接的三次握手过程中的第三次握手允许携带数据，但是由于Len=0，本次握手中均没有捎带数据发生。 4.找出此次访问的四次挥手报文，说明是谁先发起的挥手过程？ 四次挥手如图。由服务器先发起的挥手过程。 第一次，Fin+Ack: 第二次挥手，Ack: 第三次，Fin+Ack： 第四次，ACK： 5.任选一个TCP报文段，说明它是对哪个TCP报文段的确认，为什么？ 在下面的报文段中，可以看出是对第31帧的确认，由报文分析字段可知： 6.选一个由你的主机发送给服务器的TCP报文，分析其链路层、网络层、传输层的源地址和目的端地址分别是哪台机器的地址？ 如图蓝色的报文： 链路层： 源地址是chongqin_47:93:85(重庆路由),目的地址是ChinaMob_9f:ba:58(中国移动路由) 网络层，源地址：自己的主机地址；目的地址：站点服务器 传输层，源地址：主机端口52582，服务器端口：80 7.在此次访问中，除了HTTP协议消息和TCP报文端，还有其它协议消息产生吗？如有，给出具体的例子，并解释为什么会有这些协议消息产生。 答：没有其他协议产生。但可能出现TLS等协议，用于网络安全。 8.比较http请求报文和响应报文。 请求报文： 由请求行、首部行、空行和实体体组成。 A响应报文： 9.利用统计工具中的流量图，绘制分组流量图","s":"学校官网捕获","u":"/docs/Notes/ComputerNetwork/WireShark","h":"#学校官网捕获","p":2283},{"i":2289,"t":"访问https://cn.bing.com/ ，根据捕获到的分组回答https访问和http访问两者之间的区别是什么？​ Ping操作获取https://cn.bing.com/的ip地址：202.89.233.100 相较于HTTP协议，HTTPS协议的报文出现了很多TLS协议，原因在于HTTP 是明文传输，数据都是未加密的，安全性较差，HTTPS协议数据传输过程是加密的，也就是HTTP＋TLS，安全性较好。HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议。另外，端口号也不一样，HTTPS标准端口443，HTTP标准端口为80。","s":"Bing 捕获","u":"/docs/Notes/ComputerNetwork/WireShark","h":"#bing-捕获","p":2283},{"i":2291,"t":"使用命令窗工具访问一台FTP服务器，执行浏览目录、上传文件和下载文件操作，根据捕获分组回答​ 使用本地电脑配置一台服务器。 打开“此电脑-管理-服务和应用程序-网络-添加FTP站点”添加。 记录地址：192.168.1.9:21: 使用wireshark抓包本地（loopback）。 访问站点： 捕获: 所有的操作都是在同一个TCP连接上进行的吗？如果不是，根据捕获的分组数据加以说明，并给出不同TCP连接的三次握手和四次挥手报文；不同的连接使用的端口号是一样的吗？ 不是，会建立多个连接，一个是在21端口上的命令通道，其他是客户端和服务器每次需要传输数据时建立的数据传输通道。不同的连接使用的是不同的端口号，命令通道采用的是21号端口，数据传输通道采用的是每次连接时决定的端口号。 命令通道三次握手： 第一次： 第二次： 第三次： 四次挥手： 第一次： 第二次： 第三次： 第四次： 数据传输通道三次握手和四次挥手： FTP协议的消息类型有哪些？其报文格式是如何定义的； 分为request报文和response报文。 Request报文： Response报文：","s":"FTP协议","u":"/docs/Notes/ComputerNetwork/WireShark","h":"#ftp协议","p":2283},{"i":2293,"t":"下载源PDF","s":"下载PDF","u":"/docs/Notes/ComputerNetwork/WireShark","h":"#下载pdf","p":2283},{"i":2297,"t":"数据是信息的载体，是描述客观事物属性的数、字符以及所有能输入到计算机中并被程序识别和处理的符号的集合。","s":"数据","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据","p":2294},{"i":2299,"t":"数据元素是数据的基本单位，通常作为一个整体进行考虑和处理。一个数据元素可由若干数据项组成，数据项是构成数据元素的不可分割的最小单位。 例如，学生记录就是一个数据元素，它由学号、姓名、性别等数据项组成。","s":"数据元素","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据元素","p":2294},{"i":2301,"t":"数据对象是具有相同性值的数据元素的集合，是数据的一个子集。","s":"数据对象","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据对象","p":2294},{"i":2303,"t":"数据类型是一个值的集合和定义再此集合上的一组操作的总称。 原子类型。其值不可再分的数据类型。如bool 和int 类型。 结构类型。其值可以再分解为若干成分（分量）的数据类型。 抽象数据类型。抽象数据组织及与之相关的操作。","s":"数据类型","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据类型","p":2294},{"i":2305,"t":"数据结构是相互之间存在一种或多种特定关系的数据元素的集合。","s":"数据结构","u":"/docs/Notes/DataStruct/DSBasic","h":"#数据结构","p":2294},{"i":2308,"t":"逻辑结构是指数据元素之间的逻辑关系，即从逻辑关系上描述数据。 集合结构：结构中的数据元素之间除“同属一个集合”外，别无其它关系。 线性结构：结构中的数据元素之间只存在一对一的关系，除了第一个元素，所有元素都有唯一前驱；除了最后一个元素，所有元素都有唯一后继。 树形结构：结构中数据元素之间存在一对多的关系。 图状结构：数据元素之间是多对多的关系。","s":"逻辑结构","u":"/docs/Notes/DataStruct/DSBasic","h":"#逻辑结构","p":2294},{"i":2310,"t":"存储结构是指数据结构在计算机中的表示（又称映像），也称物理结构。 存储结构包括： 顺序存储：把逻辑上相邻的元素存储在物理位置也相邻的存储单元中，元素之间的关系由存储单元的邻接关系来体现。 链式存储：逻辑上相邻的元素在物理位置上可以不相邻，借助指示元素存储地址的指针来表示元素之间的逻辑关系。 索引存储：在存储元素信息的同时，还建立附加的索引表，索引表中的每项称为索引项，索引项的一般形式是（关键字，地址） 散列存储：根据元素的关键字直接计算出该元素的存储地址，又称哈希（Hash）存储。","s":"物理结构","u":"/docs/Notes/DataStruct/DSBasic","h":"#物理结构","p":2294},{"i":2313,"t":"算法（ algorithm )是对特定问题求解步骤的一种描述，它是指令的有限序列，其中的每条指令表示一个或多个操作。","s":"算法定义","u":"/docs/Notes/DataStruct/DSBasic","h":"#算法定义","p":2294},{"i":2315,"t":"有穷性：一个算法必须总在执行有穷步之后结束，且每一步都可在有穷时间内完成。 确定性：算法中每条指令必须有确定的含义，对于相同的输入只能得到相同的输出。 可行性：算法中描述的操作都可以通过已经实现的基本运算执行有限次来实现。 输入：一个算法有零个或多个输入，这些输入取自于某个特定的对象的集合。 输出：一个算法有一个多个输出，这些输出是与输入有着某种特定关系的量。 好的算法的目标： 正确性：算法应能够正确的求接问题。 可读性：算法应具有良好的可读性，以帮助人们理解。 健壮性：输入非法数据时，算法能适当地做出反应或进行处理，而不会产生莫名奇妙地输出结果。 效率与低存储量：效率是指算法执行的时间，存储量需求是指算法执行过程中所需要的最大存储空间，这两者都与问题的规模有关。","s":"算法的特点","u":"/docs/Notes/DataStruct/DSBasic","h":"#算法的特点","p":2294},{"i":2317,"t":"一般情况下，算法中基本操作重复执行的次数是问题规模 n 的某个函数f(n)，算法的时间量度记作 T（n)=O(n) ，它表示随问题规模n的增大而增大，算法执行时间的增长率和 f(n) 的增长率相同，称作算法的渐近时间复杂度，简称时间复杂度。","s":"时间复杂度","u":"/docs/Notes/DataStruct/DSBasic","h":"#时间复杂度","p":2294},{"i":2319,"t":"算法的空间复杂度S(n)定义为该算法所耗费的存储空间，它是问题规模n的函数。记为S(n)=O(g(n))。 最后更新于：2022-08-05","s":"空间复杂度","u":"/docs/Notes/DataStruct/DSBasic","h":"#空间复杂度","p":2294},{"i":2322,"t":"传递信息的载体和存储信息的载体。","s":"传播范畴中的媒体","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#传播范畴中的媒体","p":2320},{"i":2324,"t":"人类信息的载体和表现形式。分为感觉媒体（作用于人的感觉，语言、音乐、图形等）、表示媒体（电报码、条形码等）、显示媒体（扬声器、打印机）、存储媒体（光盘、硬盘）、传输媒体（光缆等）。","s":"技术范畴的媒体","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#技术范畴的媒体","p":2320},{"i":2326,"t":"多种媒体元素的交互式系统。","s":"多媒体","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#多媒体","p":2320},{"i":2328,"t":"以二进制形式通过计算机产生、记录、处理的信息媒体。主要包含数字化手段、媒体两个方面。","s":"数字媒体的定义","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体的定义","p":2320},{"i":2330,"t":"按时间：静止(still)媒体、连续(continues)媒体 按来源：自然（natural）媒体、合成（synthetic）媒体 按组成元素：单一媒体（single media）、多媒体（multimedia）","s":"数字媒体的分类","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体的分类","p":2320},{"i":2332,"t":"是连续的、模拟信号","s":"人处理信息的过程","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#人处理信息的过程","p":2320},{"i":2334,"t":"是连续的、模拟信号 计算机处理信息的过程，离散的、数字信号。","s":"电子计算机处理信息的过程","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#电子计算机处理信息的过程","p":2320},{"i":2339,"t":"磁存储（硬盘、磁带）、光存储（CD、蓝光存储）、半导体存储（RAM、ROM）。","s":"数字信息的存储技术","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字信息的存储技术","p":2320},{"i":2341,"t":"来自生活（录音等）、来自数字（直接计算机合成）。","s":"数字信息的来源","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字信息的来源","p":2320},{"i":2344,"t":"阶段：取样、量化、编码。 人耳音域：20Hz-20KHz的物理波。 人声音域：300—3400Hz。","s":"数字音频的处理和生成","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字音频的处理和生成","p":2320},{"i":2351,"t":"预处理-分割/特征提取-判决分类","s":"图像识别的过程","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#图像识别的过程","p":2320},{"i":2355,"t":"采样、量化、编码。","s":"视频获取","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#视频获取","p":2320},{"i":2357,"t":"摄像机感光元件将光信号转为电流，再将模拟电信号转为数字信号。","s":"视频数字化","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#视频数字化","p":2320},{"i":2359,"t":"MIDI 乐器数字接口。","s":"计算机合成音乐","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#计算机合成音乐","p":2320},{"i":2361,"t":"用计算机进行数据和图像之间的相互交换。","s":"计算机图形学","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#计算机图形学","p":2320},{"i":2363,"t":"计算机图形+图形运动。","s":"动画处理","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#动画处理","p":2320},{"i":2365,"t":"在线媒体传输，以流（stream）进行传输。","s":"数字传播技术","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字传播技术","p":2320},{"i":2367,"t":"🔔 扩充关系的数据库： 一种：用数据库存放媒体路径，进行文件管理。 二种：存入大型二进制数据。 面向对象的数据库：采用对象、方法、属性、消息、类的层次结构和继承特点描述多媒体数据模型。","s":"数字信息管理：多媒体数据库技术","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字信息管理多媒体数据库技术","p":2320},{"i":2369,"t":"基于文本的检索，用文本描述数字媒体的特征。 基于内容的检索，对于媒体的特征进行检索。","s":"数字媒体信息检索","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体信息检索","p":2320},{"i":2371,"t":"安全传递、访问控制、版权保护。","s":"数字信息安全","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字信息安全","p":2320},{"i":2373,"t":"note a) 数字声音处理。 b) 数字图像处理。 c) 数字视频处理。 d) 数字动画设计。 e) 数字视频压缩。 f) 数字媒体存储。 g) 媒体管理与保护。 h) 媒体传输技术。","s":"数字媒体技术的内涵","u":"/docs/Notes/digitalMediaBasis/introduction-smjc","h":"#数字媒体技术的内涵","p":2320},{"i":2376,"t":"可见光属于电磁波","s":"可见光的类型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#可见光的类型","p":2374},{"i":2378,"t":"模拟图像：二维空间和亮度值都是连续的图像。 数字图像：二维空间和像素值都是离散（有限数字数值）表示的图像。","s":"模拟图像和数字图像","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#模拟图像和数字图像","p":2374},{"i":2380,"t":"对图像信息加工，满足人的视觉或者应用需求。 数字图像处理指用计算机对数字图像进行处理。","s":"图像处理的概念","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像处理的概念","p":2374},{"i":2382,"t":"图像1->图像处理系统->图像2。","s":"图像处理的基本流程","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像处理的基本流程","p":2374},{"i":2384,"t":"🔔 通过对图像中不同对象进行分割，来对图像中的目标进行分类和识别的技术。 图像1->图像分析系统->对图像描述的信息 图像分析的困难：图像的多义性、环境因素的影响、知识引导、大量数据。 （这是人脸还是蜡烛？）","s":"图像分析","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像分析","p":2374},{"i":2387,"t":"图像的获取和表示、图像增强图像恢复、图像压缩编码、图像的基本运算、图像特征提取、小波图像处理、图像表示和描述、彩色图像处理、视频图像处理、图像分割、图像变换、频率域图像处理、形态学图像处理。","s":"图像处理技术的研究内容","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像处理技术的研究内容","p":2374},{"i":2389,"t":"生物医学、遥感技术、工业生产、军事技术、 通信技术、侦缉破案、气象预报、宇宙探索、考古 等，已经遍布国民经济的各个领域。","s":"图像处理的应用领域","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像处理的应用领域","p":2374},{"i":2391,"t":"一幅图像可以定义为二位函数f(x,y)。f值实质为图象源的辐射量。 🔔 图像的f（x，y）可以用照射到物体上所有光的总量和物体反射或折射的所有光的总量来表征。 设i(x,y)表示照射到观察景物表面(x,y)处的白光强度，r(x,y)表示观察景物表面(x,y)处的平均反射(或透射)系数，则有： f(x,y)=i(x,y)r(x,y) 0 < i(x,y) < A1，0 ≤ r(x,y) ≤ 1 对于消色光图像（单色光），f(x,y)表示图像在坐标点(x,y)处的灰度值I。 I=f(x,y) :::","s":"简单图象成像模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#简单图象成像模型","p":2374},{"i":2393,"t":"一个连续的图像在采样点进行数字化，这些点是在平面上排列的，他们的关系叫做栅格（grid）。 数字图像是一个数据结构，通常是矩阵。栅格一般是方的或者正六边形。 一个无限小的采样点，称为像素，或者图像元素。实际上像素只是一个纯理论的概念，没有形状也没有尺寸，只存在于理论的计算之中。","s":"图像数字化——采样","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像数字化采样","p":2374},{"i":2395,"t":"将采样的图像数值用一个数字表示。对一幅二维连续图像f(x,y)的幅值f的均匀量化，实质上就是将图像的灰度取值范围[0，Lmax]划分成L个等级（L为正整数，Lmax=L-1），并将二维图像平面上 M×N个网格的中心点的灰度值分别量化成与L个等级中最接近的那个等级的值。 矩阵是计算机处理图像的合理的数据结构。采样和量化越精细，矩阵长宽越大。","s":"图像数字化——量化","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像数字化量化","p":2374},{"i":2397,"t":"屏幕分辨率：显示器屏幕上的最大显示区域，即水平与垂直方向的像素个数（heightwidth）。图像分辨率：数字化图像的大小，即该图像的水平与垂直方向的像素总数（heightwidth）。 🌳 显示分辨率是指显示屏上能够显示的数字图像的最大像素行数和最大像素列数，取决于显示器上所能够显示的像素点之间的距离。 图像分辨率反映了数字化图像中可分辨的最小细节，也即图像的空间分辨率。在这里将图像分辨率看成是图像阵列的大小（M×N）。 具有不同空间分辨率的数字图像在同一显示器上的显示分辨率相同。 当同一幅图像（或者空间分辨率相同的不同图像）在两个不同的显示器上显示的外观与尺寸与显示器的显示分辨率有关，显示分辨率越高，图像的外观尺寸越小，显示分辨率越低，外观尺寸越大。这个比较好理解，就是说相同的图像在越清楚的显示器上反而显得不那么清楚。","s":"分辨率","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#分辨率","p":2374},{"i":2399,"t":"空间分辨率是图像中 可分辨 的最小细节，主要由采样间隔值决定。对于一个同样大小的景物来说，对其进行采样的空间分辨率越高，采样间隔就越小，景物中的细节越能更好地在数字化后的图像中反映出来，也即反应该景物的图像的质量就越高 灰度分辨率（gray level resolution）是灰度分辨率是指在灰度级中可分辨的最小变化，通常把灰度级级数成为图像的灰度级分辨率，常有256、128、···、16、8、2。 🔔 一幅数字图像的阵列大小（简称为图像大小）通常用M×N表示。 在景物大小不变的情况下，采样的空间分辨率越高，获得的图像阵列M×N就越大；反之，采样的空间分辨率越低，获得的图像阵列M×N就越小。 在空间分辨率不变的情况下，图像阵列M×N越大，图像的尺寸就越大；反之，图像阵列M×N越小，图像的尺寸就越小。 举例：实际中的空间分辨率实例： 🌳 由图中可看出，从现实景物到图像经历了一个从真实世界->矢量数据->栅格数据（像素点矩阵）的过程，真实世界中的10m*10m的格子被划分成一个像素。那么图像的分辨率就为10m。","s":"空间分辨率和灰度分辨率","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#空间分辨率和灰度分辨率","p":2374},{"i":2401,"t":"🔔 图(a)给出了一幅灰度级分辨率为256，空间分辨率为512×512的图像。 图(b)是从图(a)的512 ×512的图像中，每隔一行删去一行和每隔一列删去一列而得到的256×256的图像。图(c）、(d)、(e)、(f)的获得与上述方法类似。 原图对应的景物大小没有变化，对原图采样的“线对”宽度也没有变化，只是对同一景物图像的采样数目减少了。 由此说明： 在图像的空间分辨率不变(这里指线对宽度不变)的情况下，采样数越少，图像越小。 在景物大小不变的情况下，图像阵列M×N越小，图像的尺寸就越小。","s":"采样数变化对图像视觉效果的影响","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#采样数变化对图像视觉效果的影响","p":2374},{"i":2403,"t":"🔔 图a给出了一幅灰度级分辨率为256，空间分辨率为512×512的图像。 图b、c、d、e、f 的灰度级分辨率仍为256,但空间分辨率依次降低为:256×256, 128×128,64×64,32×32,16×16（线对宽度宽了） 。 由此可见，随着空间分辨率的降低，图像中的细节信息在逐渐损失，棋盘格似的粗颗粒像素点变得越来越明显。由此也说明，图像的空间分辨率越低，图像的视觉效果越差。","s":"空间分辨率对图像视觉效果的影响","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#空间分辨率对图像视觉效果的影响","p":2374},{"i":2405,"t":"🔔 图a给出了一幅灰度级分辨率为256，空间分辨率为512×512的图像。 图b、c、d、e、f 的空间分辨率与图a相同,但空间分辨率依次降低为:32、16、8、4、2。 由上图可见，随着灰度分辨率的降低，图像的细节信息在逐渐损失，伪轮廓信息在逐渐增加。图中由于伪轮廓信息的积累，图像已显现出了木刻画的效果。由此也说明：灰度分辨率越低，图像的视觉效果越差. 更多有关空间分辨率和灰度分辨率的知识，请参考：空间分辨率和灰度分辨率","s":"灰度级分辨率对图像视觉效果的影响","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#灰度级分辨率对图像视觉效果的影响","p":2374},{"i":2407,"t":"图像深度：（也称图像灰度、颜色深度）表示数字位图图像中每个像素上用于表示灰度或颜色的二进制数字位数。 显示深度：（也称显示灰度、显示颜色深度）表示图像在显示器上显示时，每个像素上用于表示灰度或颜色的二进制数字位数。 🔔 若显示器的显示深度小于数字图像的深度，就会使数字图像颜色的显示失真。也就是说，显示器的深度不足以显示这幅图片，因此产生了失真。","s":"图像深度与显示深度","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像深度与显示深度","p":2374},{"i":2409,"t":"用字节表示图像文件大小时，一幅未经压缩的数字图像的数据量大小计算如下： ::: center 图像数据量大小 = 像素总数×图像深度÷8 ::: 练习1 一张分辨率为800×600的黑白图像需要多少的存储空间？（.bmp） Details 首先bmp位图是没有压缩的图片，适用上述公式。 **黑白位图颜色深度为1** ，因此： 800✖600✖1/8=60000byte≈60kb （存储量=像素点的个数 × 每像素占用空间） 练习2 一张分辨率为800*600的256级灰度的图象要多少存储空间？（256级灰度.bmp） Details 首先bmp位图是没有压缩的图片，适用上述公式。 256级灰度占用2进制位数为8，因此： 800✖600✖8/8=480000Byte （存储量=像素点的个数 × 每像素占用空间） 练习3 一张分辨率为800*600的24位图象要多少存储空间？（24位真彩色.bmp） Details 首先bmp位图是没有压缩的图片，适用上述公式。 800✖600✖24/8=800✖600✖3字节 （存储量=像素点的个数 × 每像素占用空间）","s":"图像的文件大小","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像的文件大小","p":2374},{"i":2412,"t":"为了描述上的方便,我们仍用f(x,y)表示数字图像。设x∈[0，M-1]，y∈[0，N-1]，f∈[0，L-1]，则数字图像可表示成下式形式的一个M×N的二维数字阵列。 其中:每个(x,y)对应数字图像中的一个基本单元，称其为图像元素(picture element)，简称为像素（pixel）；且一般取M、N和的灰度级L为2的整次幂(M\\N作为高宽不一定这样取值)，即： ::: center M= 2^m N= 2^n L= 2^k (m\\n\\k为正整数) ::: 因此，存储一副M×N的图像，需要的存储位数为b=M×N×K 由于数字图像的灰度级取值范围为[0，L-1]，所以: 1. K=1 （2的一次）表示黑白图像 只能表示两种情况，即每个像素非黑即白。 ⚠注意 黑白图像一定是2值图像，但2值图像不一定是0-黑和1-白两种值。 2. K=4，16灰度级图像 是指图像中每个像素的信息是一个量化了的灰度级的值，没有彩色信息；其值可以是{0,1,2,…,15}中的任一值。 3. K=256 图像中每个像素的灰度级值可以取{0,1,2,…,255}中的任一值。","s":"数字图像二维矩阵表示","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#数字图像二维矩阵表示","p":2374},{"i":2416,"t":"彩色空间有多种不同的表示形式，常用的有红、绿、蓝（RGB）三基色模型、色度、饱和度、亮度（HSI）模型、欧洲定义的PAL制使用的YUV模型，以演播室质量标准为目标的彩色图象压缩方案中采用的YCbCr颜色模型和印刷业常用的CMY,CMYK颜色模型。 人眼的视觉过程是一个复杂的过程，可用亮度（灰度）、色调和饱和度这三个基本特征量来区分颜色。 色度、饱和度、亮度（HSI）彩色系统格式的设计反映了人类观察彩色的方式。如：红色又分为浅红和深红色等等。 ⚠ HSI空间中的三个分量分别是色调（Hue）、饱和度（Saturation）、亮度（Intensity）.","s":"图像数字化——颜色模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像数字化颜色模型","p":2374},{"i":2418,"t":"是指图像的相对明暗程度，在彩色图像上表现为颜色。色调是物体反射的光线中以哪种波长占优势来决定的，不同波长产生不同颜色的感觉，色调是颜色的重要特征，它决定了颜色本质的根本特征； 由角度表示。反映了该颜色最接近什么样的光谱波长（既彩虹中的那种颜色）0度为红色，120°为绿色，240°为蓝色。0°到240°覆盖了所有可见光谱的颜色，240°到300°是人眼可见的非光谱色（紫色）。","s":"色调(Hue)","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#色调hue","p":2374},{"i":2420,"t":"为彩度除以明度，是指色彩的鲜艳程度；饱和度与色调的纯度有关； 表示颜色的深浅程度. 饱和度参数是色环的原点到彩色点的半径长度。在环的外围圆周是纯的或称饱和的颜色，其饱和度值为1。在中心是中性（灰）影调，即饱和度为0。","s":"饱和度(Saturation)","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#饱和度saturation","p":2374},{"i":2422,"t":"是指发光体（反光体）表面发光（反光）强弱的物理量；亮度与物体的反射率（或透射率）成正比；关心整体亮度，不关心颜色.","s":"亮度(Intensity)","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#亮度intensity","p":2374},{"i":2424,"t":"国际照明委员会（CIE） 规定以700nm(红)、546.1nm (绿)、435.8nm (蓝)三个色光为三基色。又称为物理三基色。自然界的所有颜色都可以通过选用这三基色按不同比例混合而成。 彩色图像:彩色图像是指每个像素的信息由RGB三原色构成图像，其中RBG又是由不同亮度值来描述的。 在多媒体计算机中常用红、绿、蓝（RGB)彩色空间表示，计算机显示器的输入需要红、绿、蓝（RGB)三个彩色分量，通过这三个分量不同比例的组合, 在显示器屏幕上可以得到任意的颜色。 ⚠ 在多媒体系统中，不管采用什么形式的彩色空间表示，最后要求输出的都是用RGB彩色空间来表示的. 由于HSI格式反映了人类观察彩色的方式,较之RGB格式更接近人对彩色的认识和解释，因此采用HSI彩色空间表示图像的颜色能够减少彩色图象处理的复杂性，在图象处理中用HSI表示和处理图象的工作量比用RGB彩色空间要方便和简单. 🌳 HSI与RGB空间转换: :::","s":"RGB颜色模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#rgb颜色模型","p":2374},{"i":2426,"t":"青、品红、黄（CMY）彩色模型是彩色图象印刷行业使用的彩色空间，在CMY模型中，颜色是从白光中减去一定成分得到的，青、品红、黄是红、绿、蓝的补色，称为减色基，而红、绿、蓝称为加色基。","s":"CMY颜色模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#cmy颜色模型","p":2374},{"i":2429,"t":"电视信号在发射时，转换成YUV形式，接受时再还原成RGB三基色信号，由显像管显示。在这种表色系统中 ::: center Y：亮度 U，V：色差信号 ::: 目的是为了彩色电视与黑白电视兼容，YUV适用于PAL制式的模拟电视图像的表示。 🌳 YUV与RGB空间转换: :::","s":"YUV颜色模型","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#yuv颜色模型","p":2374},{"i":2432,"t":"1.真彩色：图像深度为24，RGB各占用8位来表示各自基色分量的强度 2.伪彩色：图像每个像素值实际上是一个索引值或代码","s":"真彩和伪彩","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#真彩和伪彩","p":2374},{"i":2434,"t":"是指在16色或256色显示系统中，将图像中出现最频繁的16 种或256种颜色组成一个颜色表，并将它们分别编号为0至 15或0至255，这样就使每一个4位或8位的颜色编号与颜色 表中的24位颜色值（对应一种颜色的R、G、B值）相对应。 这种4位或8位的颜色编号称为颜色的索引号，由颜色索引 号及其对应的24位颜色值组成的表称为颜色查找表(look up table,简称LUT),也称为调色板.","s":"调色板","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#调色板","p":2374},{"i":2437,"t":"一幅数字图像由有限大小的像素组成，像素反映图 像特定位置处的亮度信息。通常，我们假设像素按 照矩形采样的栅格布置。我们用二维矩阵来表示这 样的数字图像，矩阵元素是自然数，对应于亮度范 围的量化级别。","s":"数字图像的性质——数字图像的度量和拓扑性质","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#数字图像的性质数字图像的度量和拓扑性质","p":2374},{"i":2439,"t":"对于在图像显示坐标系中坐标分别位于(x，y)，(u，v)和(w，z)处的像素p、q和r，如果： ::: center (1）D(p,q)≥0（D(p,q)=0，当且仅当p=q，即p和q是指同一像素）； (2）D(p,q)=D(q, p)； (3）D(p,r) ≤D(p,q)+D(q,r)。 ::: 则D是距离度量函数。 距离的度量方式: 1.欧氏距离 经典几何学和日常经验中的欧氏距离（Euclidean distance） 2.街区距离 像素p和q之间的D4距离，也即街区（city-block）距离，定义为： 也可以表示为在数字栅格上从起点移动到终点所需的最少基本步数. 比如，那些与点(x,y)的街区距离小于2或等于2的像素组成了如下图所示的等距离轮廓。 3.棋盘距离 在数字栅格中如果允许对角线方向的移动，我们就得到了距离𝑫𝟖, 常称为“棋盘”距离，棋盘距离等于国王在棋盘上从一处移动到另一处所需的步数。 ::: center 𝐷8[( i,𝑗) , (ℎ, 𝑘)] = max{|𝑖 − ℎ|，|j − 𝑘|} :::","s":"一 距离度量函数","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#一-距离度量函数","p":2374},{"i":2441,"t":"D8:棋盘距离 D4:街区距离 DE:欧氏距离 🔔 如图,街区距离为 |4-0|+|2-0|=6 欧式距离为 根号[(4-0)^2+(4-2)^2] 棋盘距离为 max(4-2，4-0）=4 各种距离对比","s":"各种距离的对比","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#各种距离的对比","p":2374},{"i":2443,"t":"概念 灰度直方图（histogram）是灰度级的函数，描述的是图像中每种灰度级像素的个数，反映图像中每种灰度出现的频率。其中，横坐标是灰度级，纵坐标是灰度级出现的频率。 🌳 1.统计灰度级中每个像素在整幅图像中的个数 2.计算每个灰度级占图像中的概率分布 3.计算累计分布概率 4.计算均衡化之后的灰度值 5.映射回原来像素的坐标的像素值 下面是使用python实现的灰度直方图计算 Details import cv2 as cvimport matplotlib.pyplot as pltimport pandas as pdfrom matplotlib.ticker import MultipleLocator # 设置坐标系img = cv.imread('1.jpg', 0) # 读取图片,第二个参数为0表示灰度图像，为1表示原图def my_histogram(img): imgwh = img.shape width = imgwh[0] # 图像的宽 height = imgwh[1] # 图像的高 print(width) print(height) print(img.size) # 打印图片信息 img_pixel = [0] * 256 # 存储像素出现次数的list for i in range(width): for j in range(height): img_pixel[img[i, j]] += 1 # 统计某个灰度值出现的次数 x_distance = MultipleLocator(50) # 把x轴的刻度间隔设置为50 dataframe = pd.DataFrame({'freq': img_pixel}) # 告知绘图器数据 # print(dataframe) #打印表格中的数据 axis = dataframe.plot.bar(width=1.1, rot=0) # width:每根柱子宽度 rot:x轴标签旋转角度 axis.xaxis.set_major_locator(x_distance) # 把x轴的主刻度设置为50的倍数 plt.xlim((0, 260)) # 设置坐标系范围 plt.suptitle('Image histogram') # 设置图像名称 plt.show() # 显示图像my_histogram(img) # 调用函数 🔔 灰度直方图的性质: 1.反应图像的数理统计信息 2.不表示图像的空间信息 3.任一特定图像都有唯一直方图，反之不成立(无法通过直方图描述的信息来判断两幅图像是否相同) 🔔 灰度直方图的应用: 1.边界阈值选择 2.图像质量获取与评价 直方图距离 1.较暗的直方图 2.较亮的直方图 3.对比度较低(直方图较集中) 4.对比度较高(直方图较均衡)","s":"灰度直方图","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#灰度直方图","p":2374},{"i":2445,"t":"对在图像中像素个数多的灰度级进行展宽，而对像素个数少的灰度级进行缩减，从而达到清晰图像的目的。 1.设f和g分别是源图像和处理后的图像,求f的直方图h. 2.计算某个灰度级的像素在整个图像中所占的百分比 hs(i). 3.计算图像各灰度级的累积分布hp. 4.求出新图形g的灰度值. 处理结果:","s":"直方图均衡化","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#直方图均衡化","p":2374},{"i":2448,"t":"点阵图,栅格图像 使用彩色网格及像素来表现图像；每个像素都有特定的位置和颜色值 可操作性每个像素，超过其最佳分辨率时，容易出现锯齿 常用处理软件：PS、美图秀秀","s":"位图","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#位图","p":2374},{"i":2450,"t":"绘图图像、矢量图 以数学向量方式记录图像，内容以线条和色块为主 轮廓的形状更容易修改和控制，和分辨率无关； 需要用专业软件进行处理：Adobe Illustrator、CorelDRAW 矢量图可以比较方便地转换为位图","s":"矢量图","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#矢量图","p":2374},{"i":2452,"t":"图像文件的格式有很多种，如：bmp、jpg、png、gif等，这些格式都是图像文件的一种，但是他们的特点不同，如下： • BMP格式：位图文件（Bitmap File）是一种Windows采用的点阵式图像文件格式。 • GIF格式：图形交换格式（Graphics Interchange Format）,以数据块为单位来存储图像的相关信息. • PNG格式：便携网络图形（Protable Network Graphic） • JPEG格式：由联合图像专家组(Joint Photographic Experts Group)开发，后缀为.jpg或.jpeg • TIFF格式：标签图像文件格式（Tag Image File Format，TIFF）是一种灵活的位图格式，主要用来存储包括照片和艺术图在内的图像，扩展名为.tif","s":"图像文件的格式","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#图像文件的格式","p":2374},{"i":2454,"t":"BMP图像的文件主要由: 位图文件的组成部分 各部分的标识名称 各部分的作用与用途 位图文件头 BITMAPFILEHEADER 说明文件的类型和位图数据的起始位置等，共14个字节。 位图信息头 BITMAPINFORMATION 说明位图文件的大小、位图的高度和宽度、位图的颜色格式和压缩类型等信息。共40个字节。 位图调色板 RGBQUAD 由位图的颜色格式字段所确定的调色板数组，数组中的每个元素是一个RGBQUAD结构，占4个字节。 位图数据 BYTE 位图数据，位图的压缩格式确定了该数据阵列是压缩数据或是非压缩数据。 1. 位图文件头（Bitmap File Header) BITMAPFILEHEADER 说明文件的类型和位图数据的起始位置等，共14个字节。 typedef struct{WORD bfType； //文件类型DWORD bfSize； //文件大小WORD bfReserved1； //保留字1，约定0WORD bfReserved2； //保留字2，约定0DWORD bfoffBits； //位图阵列偏移量}BITMAPFILEHEADER； 图2.21给出了256×256的256灰度级lena图像的位图文件头中14个字节的排列情况及含义。 其中：⑴ 2个字节构成1个字。每个字的前一个字节是低位字节，后一个字节高位字节。 ⑵ 4个字节的是32位的双字。每个双字的前一个字是该双字的低16位，后一个字是该字的高16位。 比如，对于双字36 04 01 00来说，4个字节从高到低依次为00 01 04 36，其十进制值应为： 2. 位图信息头（Bitmap Information Header）BITMAPINFORMATION 说明位图文件的大小、位图的高度和宽度、位图的颜色格式和压缩类型等信息。共40个字节。 typedef struct{ DWORD biSize; //信息头大小 DWORD biWidth; //位图宽度 DWORD biHeight; //位图高度 WORD biPlane; //图像平面数，约定1 WORD biBitCount; //指定每个象素的位数 DWORD biCompression; //指定压缩格式，0,1,2 DWORD biSizeImage; //位图数据占用字节数 DWORD biXPelsPerMeter; //目标设备水平分辨率 DWORD biYPelsPerMeter; //目标设备垂直分辨率 DWORD biClrUsed; //位图中实际用到的颜色数 DWORD biClrImportant; //位图中重要的颜色数}BITMAPINFOHEADER; biBitCount用于指定表示每个像素所需的比特位数，其值是1、4、8或24之一。 为1时，说明位图文件表示的是一幅二色黑白图像。 为4时，说明位图文件表示的是一幅16色图像。 为8时，说明位图文件表示的是一幅256色图像。 为24时，说明位图文件表示的是一幅最多有2^24=16777216种颜色的图像。位图数据阵列中的每3个字节表示一个像素. biSizeImage用于指定实际的位图数据占用的字节数。 由于要求对应于位图阵列的每行的字节数必须是4的倍数， 所以其值也可由下式求得： 且：是为了使图像的宽度biWidth的值占用的字节数为大于 且最接近于biWidth的4 的整倍数，从而满足位图阵列的每 行的字节数必须是4 的倍数的要求。 biClrUsed用于指定位图中实际用到的颜色数。当 biClrUsed的值不为0时，其值即是调色板中的颜色数；当 biClrUsed的值为0时，调色板中的颜色数由式（2.16）确 定。 3. 位图调色板（Bitmap Palette）RGBQUAD 由位图的颜色格式字段所确定的调色板数组，数组中的每个元素是一个RGBQUAD结构，占4个字节。 typedef struct{ BYTE rgbBlue； 蓝色分量 BYTE rgbGreen； 绿色分量 BYTE rgbRed； 红色分量 BYTE rgbReserved；保留字，约定为0}RGBQUAD； 4. 位图数据（Bitmap Data）BYTE 位图数据，位图的压缩格式确定了该数据阵列是压缩数据或是非压缩数据。 BMP位图文件的第4部分是实际的图像数据。 对于具有调色板的位图，图像数据就是该像素在 调色板中的索引值。 对于2色黑白图像，每个字节可以表示8个像素； 对于16色图像，每个字节可以表示2个像素； 对于256色图像，每个字节可以表示一个像素。 对于没有调色板部分的真彩色图像，图像数据就 是实际的B、G、R值，也即3个字节表示一个像素。 图像的位图数据表示的图像共有 biWidth×biHeight个像素。 更多BMP结构 😴","s":"bmp格式","u":"/docs/Notes/digitalMediaBasis/smjc-2","h":"#bmp格式","p":2374},{"i":2458,"t":"声音是通过一定介质（如空气、水等）传播的一种连续振动的波。 声音必须通过空气或其他的媒质进行传播，形成声波，因此声音具有波形的基本属性，可以用波形图来表示。","s":"1.1 声音的产生","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#11-声音的产生","p":2455},{"i":2460,"t":"频率，振幅，周期——物理学上描述 音调，响度，音色——生理学上描述 ::: theorem 傅里叶定律 在有限频谱内，无论多么复杂的波形，都是由非常多的不同频率振幅的正弦波叠加而成。 ::: 🔔 声波的频率-决定音调 声波的频率就是声源振动的频率，即每秒钟内来回往复振动的次数。 频率的单位通常用Hz（赫兹）来表示，简称赫。一般来说，物体振动越快，频率就越高，人感受到的音调也就越高，反之亦然。 声波的频率对人耳的听觉感受影响很明显。按照声波的频率不同，声音可以分为次声波、超声波、人耳可听声三种。 次声波：频率低于20Hz，叫做次声波。 超声波：高于20kHz之间，叫做超声波。 人耳可听声：频率在20Hz到20kHz之间，叫做人耳可听声。 🔔 声波的振幅-决定响度 指的是发声物体在振动时偏离中心位置的幅度，代表发声物体振动时的动能、势能的大小。它是由物体振动时产生声音的能量（声能）或声波压力（声压）大小所决定的。 声能或声压越大，引起人耳主观感觉到的响度也也越大。 分贝（decibel）：指声音的振幅，即声音的响度，是振幅的量度单位。 分贝的定义：声源功率与基准声功率比值的对数乘以10的数值. ::: center 分贝值(dB)=10*lg（声源功率/基准声功率） ::: 🌳 一些规定 零分贝的设定，是根据听力正常的年轻人所能听到的最小声音所得到 的。每增加10分贝等于强度增加10倍，增加20分贝增加100倍，30分贝则增加1000倍。 相对于0分贝的，一般的耳语大约是20分贝，极安静的住宅区40分贝， 一般公共场所50分贝，交谈约60分贝，交通繁忙地区85分贝，飞机场 跑道120分贝 🔔 声波的周期 一个声波完成一次振动所需要的时间称为周期，用符号T表示，单 位通常为秒（s）。周期与频率是互为倒数关系. 🔔 声波的波长 声波的波长是指声波在一个周期的时间内传播的距离。 语音中的低频部分，由于其波长较长，能向各个方向均匀地传播。 语音中的高频部分仅向前直射。 声波遇到障碍物时存在衍射现象。 🔔 声波的心理特征 声波的心理特征是指声波在人耳中的感受，是指声波在人耳中的感受。 （1）音量（也称响度）：人耳对声音强弱的主观感觉称为响度。——与声波的振幅有关 （2）音调：人耳对声音高低的感觉称为音调。——与声波的频率有关 （3）音色：音色是人们区别具有同样响度、同样音调的两个声音之所以不同的特性,或者说是人耳对各种频率、各种强度的声波的综合反应。——与声波的频谱结构有关。音色所涉及的声音特性包括圆润度、饱满度、清晰度、共鸣效果等。这些特性的不同使我们能够区别各种声音.","s":"1.2 声音的特性","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#12-声音的特性","p":2455},{"i":2462,"t":"🔔 音频处理设备 有源音箱：又称为“主动式音箱”，其扬声器箱体内已经内置有功率放大器，用户不必考虑它与放大器匹配的问题。 无源音箱：又称为“被动式音箱”，需要连接功放才能使用。 耳机的分类： 开放式耳机：外壳是开放的，耳机质量轻，声音自然，无压迫感。 外界声音不会完全隔绝，佩带舒适，但声音有外泄。 半开放式耳机：耳机的开放与频率或方向相关，即只对某些频率开放，或是在一定方向上是开放的。 封闭式耳机：耳机的外壳是封闭的，通过软音垫包裹，外界声音隔绝，声音几乎无外泄，长时间佩带有不适感，在专业监听中使用较多。 麦克风的分类： 电动式麦克风：利用磁场中的导体产生电动势而工作。中频特性好，抗震强，多用于卡拉OK。但是灵敏度低，频响不够宽。 电容式麦克风：应用静电感应原理，靠声波振动来使电容一端移动，造成电容两极间距离变化，从而产生电压差，形成声音的电信号。灵敏度高，频响范围宽，音质好。对环境要求高，受潮或长时间受热会不稳定。 MIDI键盘：（Music Instrument Digital Interface）键盘外观上与电子琴很相似，本身不能发声，一般与电脑相连接使用。 调音台：调音台又称调音控制台，它将多路输入信号进行放大、混合、分配、音质修饰和音响效果加工，具有电平控制、音色调整、音质均衡与补偿的功能。它负责计算机与话筒、音箱、音源和合成器等音频设备之间声音信号的传递，拥有各种辅助输出、监听输出、左右立体声输出和混合输出等输出方式，因此它在音频系统中占有核心地位，是音频制作与编辑、信号处理的中心。","s":"二、音频处理设备","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#二音频处理设备","p":2455},{"i":2465,"t":"通过各种拾音器，如话筒，将物体振动所产生的声音录制下来，存储在磁带、磁盘等电磁存储介质上，这种声音是以电信号存在的，称为模拟音频。模拟音频技术中以模拟电压的幅度表示声音强弱，模拟声音在时间上是连续的；","s":"3.1 模拟音频","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#31-模拟音频","p":2455},{"i":2467,"t":"通过计算机设备及相关音频软件将模拟音频转换为计算机可以识别的以二进制存在的声音信号，就形成了数字音频。而数字音频是一个数据序列，在时间上是断续的。","s":"3.2 数字音频","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#32-数字音频","p":2455},{"i":2469,"t":"数字音频是通过采样和量化，把模拟量表示的音频信号转换成由许多二进制数1和0组成的数字音频信号。 🌳 三个步骤 采样：在时间轴上对信号数字化； 量化：在幅度轴上对信号数字化； 编码：按一定格式记录采样和量化后的数字数据。 首先我们考虑声音经过麦克风，转换成一连串电压变化的信号， 如下图所示。这张图的横座标为秒，纵座标为电压大小。对连 续信号按一定的时间间隔在模拟声波上截取一个振幅值。 我们把分割线与信号图形交叉处的座标位置记录下来，可以得 到如下资料，(0.01,11.65) (0.02,14.00) 、 (0.03,16.00) 、 (0.04,17.74) …(0.18,15.94) 、 (0.19 ,17.7) (0.20,20) 。我们现在已经把这个 波形以数字记录下来了。由于我们已经知道时间间隔是固定的 0.01 秒，因此我们只要把纵座标记录下来就可以了，得到的结果是 11.65 14.00 16.00 …… 这一数列。这一串数字就是将以上信号数字化的结果。 采样： 每间隔一个时间段采集一次声音信号的幅度样本的过程。 采样频率：指每秒钟所采集的声波幅度样本的次数。(单位是Hz)采样频率越高，声音的保真度就越高，但用于存储音频的数据量也越大。 ::: theorem 奈奎斯特定理 在进行模拟/数字信号的转换过程中，当采样频率fs.max大于信号中最高频率fmax的2倍时，即：fs.max>=2fmax,则采样之后的数字信号完整地保留了原始信号中的信息。 ::: 常用采样率 ➢ 11,025 Hz AM 广播质量 可用于长的音乐,高质量的语音,音效 ➢ 22,050 Hz FM 广播质量 可用于短的高质量音乐 ➢ 32,000 Hz 接近CD 质量 可用于专业或业余数字产品 ➢ 44,100 Hz CD 质量 可用于高保真声音和音乐 ➢ 48,000 Hz 数字音频磁带音质(DAT 质量) ➢ 96,000 Hz DVD 质量 ➢ 192000Hz DVD 质量 量化： 就是把采样得到的每一个样本值从模拟量转换为二进制的数字值的过程。通常，把对声波波形幅度的数字化表示称为量化（Quantization）。 量化位数：又称作量化精度或采样位数，简单地说就是描述声音波形的数据是多少位的二进制数据。 量化位数也是衡量数字声音质量的重要指标，在相同的采样频率下，量化位数越高，声音的质量越好。 量化方法:均匀量化与非均匀量化 常用的量化位数： 24 bit DVD 质量 16 bit CD 质量 可用于高保真声音和音乐 12 bit 接近CD 质量 可用于专业或业余数字产品 8 bit FM 广播质量 可用于短的高质量音乐 4 bit AM 广播质量 可用于长的音乐,高质量的语音,音效 ⚠ 音频数字化的两个重要指标 采样频率：即采样点之间的时间间隔。 量化深度（或称为量化分辨率）：单位电压值的可分等级数； 两者与音质还原的关系是：采样频率越高，量化深度越大， 声音质量越好。 当频率越小（时间间隔越短），量化深度（量化分辨率） 越大，二者的轮廓越吻合，这也说明数字化的信号能更好 的保持模拟音频信号的形状，有利于保持原始声音的真实 情况。 编码 编码 将经过采样和量化后的数字化声音信号（脉冲数字信号）按一定的数 据格式以二进制形式表示，这个过程称为编码。 波形编码 基于音频数据的统计特性进行编码。经波形编码的音频质量好， 但压缩比不大，且为有损压缩，主要适用于高保真度语音和音乐的压缩技术。 参数编码 基于音频的声学特性进行的编码，其方法是将音频信息以某种模 型表示，再抽出合适的模型参数和参数激劢信息进行编码，声音重放时再根 据这些参数重建还原声音即可。该编码方式压缩比高，但还原信息的质量较 差，自然度低，计算量大，而且保真度不高。 感知编码 基于人的听觉特性进行的编码。从人的听觉系统出发，设计心理 声学模型，从而实现更高效的数字音频的压缩。它是有损压缩，但人耳基本 上分辨不出声音的失真。 🔔 通道的概念 声音通道的个数称为声道数，是指一次采样所记录产生的声音 波形的个数。 记录声音时，如果每次生成一个声波数据，称为单声道；每次 生成两个声波数据，称为双声道，也称为立体声。 随着声道数的增加，所占用的存储容量也成倍增加。 ⚠ 事关声音质量和存储量的三个重要因素 采样频率、每个采样值的量化位数以及声音信息的声道数目，是影响数字化声音信息质量和存储量的三个重要因素。 采样频率越高、量化位数越大、声道数目越多，声音的质量就越 高，但存储量就越大。","s":"3.3 音频数字化","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#33-音频数字化","p":2455},{"i":2471,"t":"对于未经压缩的数字音频，每秒存储量为原始音频的采样频率和量化位数的乘积/8。 若使用双声道再*2，还要乘以时间. 例如，数字激光唱盘（CD-DA）的标准采样频率为44.1 kHz，量化位数为16位，立体声。一分钟 CD-DA 音乐所需的存储量为 Details 44100×16/8×60×2=10584kb 🔔 衡量音频质量好坏的三个方面 采样频率：即采样点之间的时间间隔，采样间隔时间越短，音质越好。 量化深度(量化分辨率)：是指单位电压值和电流值之间的可分等级数， 可分等级越多，音质越好。 音频流码率：数字化后，单位时间内音频数据的比特容量，流码率越大 音质越好。（相对指标）","s":"3.4 数字音频的存储量","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#34-数字音频的存储量","p":2455},{"i":2473,"t":"有WAV格式、MIDI格式、MP3格式、RM格式等。 🌳 WAV格式 WAV格式是Windows使用的标准数字音频格式，也称为波 形文件，文件的扩展名为.wav。 利用声音卡和相应的软件可以通过录音创建波形文件，需要 时可以方便地将它播放出来，也可以通过适当的软件对文件 中数字化的音频信号进行编辑处理。 WAV波形文件比较大，实际使用时常常要将它进行压缩处理。 🌳 MIDI格式 MIDI文件的扩展名为“.MID”。MIDI是(乐器数字接口)的缩 写。它是一个通信标准，规定计算机音乐程序、电子合成器 和其他电子设备之间交换信息与控制信号的。 MIDI文件占用存储空间小，但文件的录制比较复杂．需使 用专业设备录制，如键盘合成器等。 与WAV文件不同，MIDI文件记录的不是声音本身，而是将 每个音符记录为一个数字，因此比较节省空间，可以满足长 时间音乐的需要。 🌳 MP3格式 MP3格式采用MPEG Layer 3标准对WAVE音频文 件进行压缩而成，以达到CD唱盘的音质。 RM格式采用音频/视频流和同步回放技术来实现在 互联网上提供优质的多媒体信息。","s":"四、音频文件的格式","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#四音频文件的格式","p":2455},{"i":2476,"t":"人的发声器官 (1) 肺和气管组成声源； (2) 喉和声带称为声门； (3) 由咽腔、口腔、鼻腔组成声道（共鸣腔体） 肺：压缩气体，通过气管传送到声音生成系统 喉：控制声带运动的复杂系统。主要包括：环状软骨、甲状软骨、杓状软骨、声带。 声门：声带之间的间隙称为声门。主要功能：产生激励。 声道：声门之间的间隙称为声道。主要功能：传输调制声波。 声道的形状变换由舌、软腭、唇、牙决定。 口腔的结构 🌳 5.2 语音生成模型 空气由肺部排入喉部，经过声带进入声道，最后由嘴辐射出声波，这就形成了语音。在声门（声带）以左，称为“声门子系统”，它负责产生激励振动；右边是“声道系统”和“辐射系统”。 肺->声带->声道->嘴 ::: 🔔 浊音 空气流经过声带时，如果声带是崩紧的，则声带将产生张弛振动，即声带将周期性地启开和闭合。声带启开时，空气流从声门喷射出来，形成一个脉冲，声带闭合时相应于脉冲序列的间隙期。这种情况下在声门处产生出一个准周期脉冲状的空气流。该空气流经过声道后最终从嘴唇辐射出声波，这便是浊音语音。这个准周期脉冲的周期即为基音周期。 基音频率是由声带张开闭合的周期所决定的： 男性的基音频率一般为50～250Hz； 女性的基音频率一般为100～500Hz。 🔔 清音、爆破音 空气流经过声带时，如果声带是完全舒展开来的，则肺部 发出的空气流将不受影响地通过声门。空气流通过声门后， 会遇到两种不同情况。 一种情况是，如果声道的某个部位 发生收缩形成了一个狭窄的通道，当空气流到达此处时被 迫以高速冲过收缩区，并在附近产生出空气湍流，这种湍 流空气通过声道后便形成所谓摩擦音或清音。 另一种情况是，如果声道的某个部位完全闭合在一起，当 空气流到达时便在此处建立起空气压力，闭合点突然开启 便会让气压快速释放，经过声道后便形成所谓爆破音。 ::: theorem 共振峰率或者共振峰 声音进入声道后，其频谱必定会受到声道的共振特性 的影响，一部分频率被显著增大，这部分频率称为共 振频率。声道所具有的这一组共振频率，称为共振峰 频率或共振峰。 共振峰及其带宽取决于声道的形状和尺寸，因而不同 的语音对应于一组不同的共振峰参数。 每一个元音都有对应的一个共振峰，而且这个共振峰不随音高的改变而改变。 :::","s":"5.1 人的发声器官","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#51-人的发声器官","p":2455},{"i":2478,"t":"语音生成模型：激励、调制、辐射 ::: center 激励（声门）=>调制（声道）=>辐射语音（嘴唇） :::","s":"5.3 激励和调制","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#53-激励和调制","p":2455},{"i":2480,"t":"听觉器官：外耳、中耳和内耳 🔔 几个概念 听域与听阈：听域是指人能感知声音的范围；听阈是指人 耳能听到的最低声压级。 人耳听觉界限的频率范围大约为20Hz-20kHz；语音感知的强度范围是0－130dB声压级 响度：这是频率和强度级的函数。通常用响度(单位为宋) 和响度级(单位为方)来表示。此时响度级定为零方。测量 表明听阈值是随频率变化的。通常，人们把1kHz纯音听阈 值定为零方。 ::: theorem 掩蔽效应 掩蔽效应：一个声音的听阈因另外一个声音的出现而升高 的现象成为掩蔽效应。 此时前者称为被掩蔽音，后者称为掩蔽音。在掩蔽情 况下，被隐蔽音的听阈会提高，即加大被掩蔽音的强 度才能听到。此时听阈称为掩蔽听阈。 ::: 🔔 函数化的语音生成模型 声门产生的激励模型G(z) 声道产生的调制模型V(z) 嘴唇产生的辐射模型R(z) 语音信号的传递函数由这三个模型函数级联 而成,即： H(z)=G(z)V(z)R(z)","s":"六、语音的听觉机理","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#六语音的听觉机理","p":2455},{"i":2482,"t":"发浊音时，产生的脉冲类似于斜三角形的脉冲。激励波是一个以基音周期为周期的斜三角脉冲串。清音可以模拟成随机白噪声。","s":"6.1 激励模型","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#61-激励模型","p":2455},{"i":2484,"t":"典型的声道调制模型有两种：无损声管模型和共振峰模型 ::: theorem 共振峰模型 把声道视为一个谐振腔。共振峰就是这个腔体的谐振频率。一般来说，一个元音用前三个共振峰来表示就足够了；而对于较复杂的辅音或鼻音，大概要用到前五个以上的共振峰才行。 ::: 调制模型","s":"6.2 调制模型","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#62-调制模型","p":2455},{"i":2486,"t":"从声道模型输出的是速度波，而语音信号是声压波。 二者倒比称为辐射阻抗，它表征口唇的辐射效应。 🌳 由辐射引起的能量损耗正比于辐射阻抗的实部R(z)， 其频响曲线表现出一阶高通滤波器的特性。在实际信 号分析时，常用所谓预加重技术。这样，模型只剩下 声道部分，对参数分析就方便了。在语音合成时再进 行解加重处理。","s":"6.3 辐射模型","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#63-辐射模型","p":2455},{"i":2488,"t":"激励源分浊音和清音两个分支，按照浊音/清音开关所处的位置来决定产生的语音是浊音还是清音。 🔔 如果激励源是浊音 激励信号由一个周期脉冲发生器产生。所产生的序列是一个周期为T的冲激序列,T的倒数即为基音频率。为了使浊音的激励信号具有声门气流 脉冲的实际波形，还需要使上述的冲激序列通过一个 声门脉冲模型滤波器。 🔔 如果激励源是清音 在清音的情况下，激励信号由一个随机噪声发生器产 生。设其均值为0，方差为常数，幅度具有高斯概率分 布。乘系数的作用是调节清音信号的幅度。 ⚠ 数字模型的局限性 数字模型的基本思想是认为任何语音都是由一 个适当的激励源作用于声道而产生的，这意味 着激励源与声道系统是互相独立的。上述假定 对于大多数语音是合适的，但在有些情况下，例如某些瞬变音，实际上声门和声道是互相耦合的，这便形成了这些语音的非线性特性。","s":"6.4 语音信号的数字模型","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#64-语音信号的数字模型","p":2455},{"i":2490,"t":"6.5.1 短时时域分析​ 🌳 短时时域分析 时域分析方法是最简单、最直观的方法，直接对语音信号的时域波形进行分析，提 取的特征参数主要有: 短时能量 平均幅度 短时平均过零率 短时自相关函数 短时平均幅度差 需要经历下面的步骤： 语音信号数字化：语音信号的频率范围通常是300Hz~3400Hz， 一般情况下取采样率为8kHz即可。我们讨论的 数字语音处理对象为语音数据文件，是已经数 字化了的语音。 有了语音数据文件后，对语音的预处理包括： 预加重、加窗分帧等。 预加重 预加重目的：为了对语音的高频部分进行加重，去除口唇辐射的影响，增加语音的高频分辨率。 预加重前后对比： 可以看到，在预加重之后高频部分的分辨率得到了有效的提高。 分帧 由于发音器官的惯性运动，可以认为在一小段时间里（一般为10ms~30ms）语音信号近似不变，即语音信号具有短时平稳性。 分帧就是把不定长的音频分为定长的小段：将语音信号分段来分析其特征参数，其中每一段称为一“帧”，帧长一般取为10ms~30ms。 采用可移动的有限长度窗口进行加权的方法来实 现的。一般每秒的帧数约为33～100帧。 分帧一般采用交叠分段的方法，这是为了使帧 与帧之间平滑过渡，保持其连续性。前一帧和后 一帧的交叠部分称为帧移，帧移与帧长的比值一 般取为0~1/2。 加窗 加窗是对帧进行加权的过程。 矩形窗，窗函数： 汉明窗，窗函数： 短时平均能量 短时能量序列反映了声音的振幅和能量随时间缓慢变化的规律。 短时平均能量 En 窗的长短对于能否由短时能量反映语音信号的幅度变 化，起着决定性影响。 如果窗选得很长， En不能反映语音信号幅度变化。窗选得太窄， En将不够平滑。 通常，当取样频率为10kHz时，选择窗宽度N=100~200是比较合适的。 短时平均能量的主要用途如下： 1）可以作为区分清音和浊音的特征参数。 2）在信噪比较高的情况下，短时能量还可以作为区 分有声和无声的依据。 3）可以作为辅助的特征参数用于语音识别中。 短时平均过零率 在离散时间语音信号情况下，如果相邻的采样具有不 同的代数符号就称为发生了过零。单位时间内过零的 次数就称为过零率。 分析： 清音过零率高，浊音过零率低。 端点检测： 端点检测目的：从包含语音的一段信号中确定出语音的起点及结束点。 有效的端点检测不仅能使处理时间减到最少，而且能抑制无 声段的噪声干扰，提高语音处理的质量。 将短时能量与短时过零率结合进行检测。 短时频域分析​ 使用短时频域分析可以观察语音信号的共振峰特性、基音频率和谐波频率。","s":"6.5 语音信号分析","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#65-语音信号分析","p":2455},{"i":2492,"t":"语谱图怎么得来？ 通过时域分析+频域分析=语谱图 在语谱图中，纵轴表示频率，横轴表示时间，颜色的深浅表示能量。 语谱图的生成过程：采样、预加重、分帧、加窗、变换、拼接。 变换 窄带：在长窗条件下画出的语谱图，带宽小，时宽大短时窗长。 宽带：与窄带相反。 窄带的优点 窄带语谱图的带宽窄，那么在频率上就“分得开”，即能将语音各次谐波“看得很清楚”，即表现为“横线”。“横”就体现出了频率分辨率高。分辨率可以直观的看做“分开能力”。“频率分辨率”高就是在频率上将各次谐波分开的能力高，表现为能分辨出各次谐波的能力高，频率分辨率越高，越容易分辨各次谐波。 宽带的优点 宽带语谱图的时宽窄，那么在时间上就“分得开”，即能将语音在时间上重复的部分“看得很清楚”，即表现为“竖线”。“竖”就体现出了时间分辨率高。时间分辨率越高，谱图上的竖线看得越清楚。 下面是一个窄带语谱图的例子 下面是一个宽带语谱图的例子","s":"6.6 语谱图","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#66-语谱图","p":2455},{"i":2495,"t":"语音的波形编码合成也称录音编辑合成，其基本思路是：以语句、 短语、词和音节为合成单元，这些单元被分别录音后，直接进行 数字编码，经适当的数据压缩，组成一个合成语音库；重放时， 根据待输出的信息，在语音库中取出相应单元的波形数据，串接或编辑在一起，经解码还原出语音。","s":"7.1 波形编码合成","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#71-波形编码合成","p":2455},{"i":2497,"t":"语音的参数式分析合成是以音节、半音节或音素为合成单元，其 基本思路是：首先，按照语音理论，对所有合成单元的语音进行 分析，一帧一帧地提取有关语音参数，这些参数经编码后组成一 个合成语音库；输出时，根据待合成的语音信息，从语音库中取 出相应的合成参数，经编辑和连接，顺序送入语音合成器。在合 成器中，在合成参数的控制下，再一帧一帧重新还原语音波形。 语音合成的应用 文字-语音转换系统","s":"7.2 参数式分析语音合成","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#72-参数式分析语音合成","p":2455},{"i":2499,"t":"语音增强主要有两方面的目的：一是改进语音质量，消除背景噪声，使听者乐于接收不觉疲劳，这是一种主观度量；二是提高语 音可懂度，这是一种客观度量。 语音增强方法大体可分为四大类：噪声对消法、谐波增强法、基 于参数估计的语音再合成法和基于语音短时谱估计的增强算法。 噪声对消法 噪声对消法的原理很简单，就是从带噪声语音中减去噪声。 谐波增强法 语音信号的浊音段有明显的周期性，利用这一特点，可采用自适应梳状滤波器来提取语 音分量，抑制噪声。 基于参数估计的语音再合成法 语音的发生过程可以模型化为激励源作用于一个线性时变滤波器，激励 源可以分为浊音和清音两类，浊音由气流通过声带产生。 基于语音短时谱估计的增强算法 语音是非平衡随机过程，但在10ms～30ms的分析帧内可以近似看成是 平稳的，若能从带噪声语音的短时谱中估计出纯净语音的短时谱，则可达到增强的目的。","s":"7.3 语音增强","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#73-语音增强","p":2455},{"i":2501,"t":"是一个模式匹配的过程。","s":"7.4 语音识别","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#74-语音识别","p":2455},{"i":2503,"t":"为什么语音信号的时域分析要采用短时分析技术？ 语音分析有一个重要假设：短时不变。假设在极短的时间，如20ms内，声音信号不发生变化，这个时间片段称为语音的帧。从而我们可以将语音信号离散化，利用这一帧附近信号在时域、频域的分布提取语音在这个时刻的特征。通过短时分析，可以得出音频很多特征点。 在语音信号参数分析之前为什么要进行预处理，有哪些预处理过程？ 预处理的目的是消除因为人类发声器官本身和由于采集语音信号的设备所带来的混叠、高次谐波失真、高频等等因素对语音信号质量的影响。尽可能保证后续语音处理得到的信号更均匀、平滑，为信号参数提取提供优质的参数，提高语音处理质量。 预处理一般包括预加重、加窗和分帧等 语音信号的短时平均能量和短时平均过零率分析的主要用途是什么？ 短时平均能量 a. 可以作为区分清音和浊音的主要参数。 b. 在信噪比比较高的情况下，可以作为区分有声和无声的依据。 c .可以作为辅助的特征参数用于语音识别之中。 短时平均过零率 区分清音和浊音。 端点检测的意义？ 从语音信号中确定出起点和结束点，使处理时间有效减少，抑制无声段噪声的干扰，提升语音质量。","s":"问题","u":"/docs/Notes/digitalMediaBasis/smjc-3","h":"#问题","p":2455},{"i":2507,"t":"视频（Video）就是其内容随时间变化的一组动态图像，所以又叫运动图像或活动图像。 🔔 视觉暂留原理 每秒超过24帧连续变化的图像人眼无法分别，所以形成视频。某个物体消失之后，依旧可以在视网膜上停留0.1-0.4s。","s":"1.1 什么是视频","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#11-什么是视频","p":2504},{"i":2509,"t":"普通广播电视是一种模拟视频信号。电视摄像机通过电子扫描将时间、空间函数所描述的景物进行光电转换后，得到单一的时间函数的电信号，其电平的高低对应于景物亮度的大小，即用一个电信号来表征景物。 由于光是连续的，投影后的图像在空间上是连续的，也即原始视频在空 间上是连续的。 🌳 扫描方式 分为隔行扫描和逐行扫描： 视频在获取或显示时，每秒钟按逐行扫描处理的图像数称为帧率（FPS），每秒钟按隔行扫描处理的图像数称为场率，例如每秒25帧或50场(60场/s)。 一幅图像的像素按行排列可以分为偶数行和奇数行 如果偶数行和奇数行的像素是在相同时间点采样得到的，则称该帧为逐行帧 如果偶数行和奇数行的像素是在不同的时间点采样得到的，则称该帧为隔行帧 隔行帧中所有偶数行构成该图像的顶场，所有奇数行构成该图像的底场 由逐行帧构成的视频序列称为逐行视频，由隔行帧构成的视频序列称为隔行视频 在隔行视频与逐行视频具有相同数据量的情况下，采用隔行采样的方法能够增加时间采样率，使时域上的运动更加平滑，从而增强视频的数据质量 模拟视频的制式 制式 | 水平扫描 | 隔行扫描 | 常见国家 :--: | :--: | :--: | :--: NTSC (National Television Standards Committee) | 水平扫描525行、帧率30帧/秒 | 隔行扫描、60场/s | 北美、日本、中国台湾地区、加勒比和南美部分区域 PAL (Phase Alternating Line) | 水平扫描625行、帧率25帧/秒 | 隔行扫描、50场/s | 中国、英国、德国、澳大利亚、亚洲国家、非洲和南美 SECAM (Sequential Color Memory) | 水平扫描625行、帧率25帧/秒 | 隔行扫描、50场/s | 东欧和法国","s":"1.2 模拟视频","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#12-模拟视频","p":2504},{"i":2511,"t":"🔔 数字视频的起源和定义 1990年，美国通用仪器公司研制出高清晰度电视HDTV（High Definition Television），提出信源的视频信号及伴音信号用数字 压缩编码，传输信道采用数字通信的调制和纠错技术，从此出现了信源和传输通道全数字化的真正数字电视DTV（Digital Television） 数字视频（Digital Video，DV） 是指用二进制数字表示的视频信号。 数字视频既可直接来源于数字摄像机(例如CCD摄像机等)，也可将模拟 视频信号经过数字化处理变成数字视频信号。 模拟视频信号经过采样、量化和编码数字化处理后，就变成由—帧帧数 字图像组成的图像序列，即数字视频信号。 *单位时间内采集到的视频图像的帧数称为帧率*，常用的单位为“帧/秒”（fps）。 帧率的倒数就是时间采样的间隔或两帧间的时间间隔。视频=空域（图像）+时域","s":"1.3 数字视频","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#13-数字视频","p":2504},{"i":2514,"t":"🌳 数字视频采集工具 视频采集卡：输入模拟信号，输出数字流视频信号。 摄像机：由镜头、CCD器件、数字信号处理（DSP）芯片、存储器和LCD显示器件组成。","s":"2.1 数字视频采集工具","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#21-数字视频采集工具","p":2504},{"i":2516,"t":"主观质量评估：由人进行质量评估。 客观质量评估：有三种度量方式，分别是FR(Full Reference)、 RR (Reduced Reference)和NR(No Reference)三种度量方式。 峰值信噪比（Peak signal noise ratio, PSNR） 结构相似度(Structure similarity Index, SSIM) 多尺度结构相似度(Multi Scale Structural Similarity Index, MS-SSIM) 均方误差越小，峰值信噪比越大，视频的失真就越小 🔔 峰值信噪比（Peak signal noise ratio, PSNR） 计算最大信号功率与均方 差（MSE）之间的对数 均方误差","s":"2.2 数字视频质量评估","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#22-数字视频质量评估","p":2504},{"i":2519,"t":"光流是由对象或相机的移动引起的两个连续帧之间的图像对象的明显运动模式。 是由场景中前景目标移动或相机的运动，单独或者共同产生的。简单来说，所谓光流就是瞬时速率，在时间间隔很小（比如视频的连续前后两帧之间）时，也等同于目标点的位移。 🌳 光流的计算 光流计算依赖于三个假设： 亮度恒定：场景中目标图像的像素看起来在帧到帧移动是不发生改变。对于灰度图像（对于彩色图像同适用）这意味着像素的灰度值不会随着帧的跟踪改变。 时间持续性（微小移动）：图像上相机的移动随时间变化缓慢。实际上，这意味着时间的变化不会引起像素位置的剧烈变化，这样像素的灰度值才能对位置求对应的偏导数。 空间一致性：场景中相同表面的相邻点具有相似的运动，并且其投影到图像平面上的距离也比较近。 假设第一帧图像中的像素 I(x, y, t) 在时间 dt 后移动到第二帧图像的 (x+dx, y+dy) 处。 根据上述第一条假设：灰度值不变，我们可以得到 按照理论基础与数学方法的区别把它们分成四种：基于梯度（微分）的方法、基于匹 配的方法、基于能量（频率）的方法、基于相位的方法和神经动力学方法。 其中基于梯度的方法又称为微分法，利用时变图像灰度的时空微分（时空梯度函数） 来计算像素的速度矢量典型的代表是Lucas-Kanade法，L-K光流法。 L_K补充资料","s":"3.1 光流","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#31-光流","p":2504},{"i":2521,"t":"摄像机采集的视频序列具有连续性的特点。如果场景内没有运动目标，则连续帧的变化很微弱，如果存在运动目标，则连续的帧和帧之间会有明显地变化。 由于场景中的目标在运动，目标的影像在不同图像帧中的位置不同。该类算法对时间上连续的两帧或三帧图像进行差分运算，不同帧对应的像素点相减，判断灰度差的绝对值，当绝对值超过一定阈值时，即可判断为运动目标，从而实现目标的检测功能。 实例：","s":"3.2 帧差法","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#32-帧差法","p":2504},{"i":2523,"t":"空间中的运动场转移到图像上就表示为光流场（optical flow field）；光流场是一个二维矢量场，它反映了图像上每一点灰度的变化趋势，可看成是带有灰度的像素点在图像平面上运动而产生的瞬时速度场。","s":"3.3 光流场","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#33-光流场","p":2504},{"i":2525,"t":"基于一些距离准侧，在（过去和/或未来）参考帧中搜索与当前帧中固定大小块最匹配的相同尺寸块的位置。 块匹配是通过穷举搜索所有候选位移矢量而完成的。","s":"3.4 块匹配","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#34-块匹配","p":2504},{"i":2527,"t":"文件格式 详情 AVI格式 AVI文件格式是Video For Windows所使用的文件格式，其扩展名为AVI。 MOV格式 MOV文件格式是QuickTime For Windows所使用的视频文件格式。 MPG格式 MPG文件是最新的数字视频标准文件，也称为系统文件或隔行数据流，是采用MPEG 方法进行压缩的全运动视频图像。 DAT格式 DAT文件是VCD专用的视频文件格式，也是基于MPEG压缩/解压缩技术的视频文件格式。","s":"四、视频编码标准","u":"/docs/Notes/digitalMediaBasis/smjc-4","h":"#四视频编码标准","p":2504},{"i":2530,"t":"从媒体数据中提取特定的信息进行检索，再根据这些线索从存储在数据库中的大量媒体进行查找，检索出具有相似特征的媒体数据。 基于内容的检索 基于内容的检索（Content-based Retrieval,CBR），根据媒体的语义和上下文联系进行检索。 从多媒体数据中提取信息线索。 近似匹配。 大数据库的快速检索。 多种检索手段。","s":"基于内容的多媒体数据检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#基于内容的多媒体数据检索","p":2528},{"i":2532,"t":"输入一张图片，查找出相同或者相似的图片。（例如百度识图）。 基本思想：使用图像的颜色、纹理、布局进行分析和检索。 以图搜图 哈希 将任意长度的输入通过Hash函数映射成固定长度的输出。 原始数据映射后的二进制串就是哈希值，通过对图像进行Hash编码，不仅能实现时间上的高效（基于XOR操作的快速计算）还能实现存储上的高效（基于位存储的紧致表达)。 好的Hash函数一般要求原始相近的数据其哈希编码也要尽可能的相近，而当原始数据发生变化时其Hash编码的差异也要尽可能的大，同时还能抵御各种攻击以保护原始数据。","s":"1.1 基于内容的图像检索（CBIR）","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#11-基于内容的图像检索cbir","p":2528},{"i":2534,"t":"视频的层次结构 视频可由场景，镜头，帧，对象等语义信息进行描述。 视频镜头切边和过渡检测 关键帧选取和视频摘要 MPEG-7视频内容标准​ MPEG-7概述 MPEG-7 的产生是为了解决上述问题，其重点在于影音内容的描述 和定义，以有弹性、具延伸性、多层次及明确的数据结构和语法来 定义影音数据的内容，经由 MPEG-7 的定义格式，使用者可以有效 率地搜寻、过滤和定义想要的影音数据。 MPEG-7:基于信息内容的搜索引擎 MPEG-7是属于信息方面的检索和搜寻，而所谓信息，则可以是影像 或音乐；换句话说，MPEG-7在本质上来说就是我们常常在网上使用 的搜索引擎，只不过它提供的是多媒体的信息查询服务。 MPEG-7中的主要概念 数据(Data) 是用MPEG-7描述的视听资料，不考虑它们的存储、编码、显示、传输、媒介或技术。 特征(Feature) 指数据的特性。特征本身不能比较，而要用有意义的特征表示(描述子)和它的实例(描述值) 描述子(Descriptor，D) 是特征的表示。它定义特征表示的句法和语义，可以赋予描述值。 描述值(Descriptor Value) 是描述子的实例。 描述模式(Description Scheme，DS) 说明其成员之间的关系结构和语义。 描述(Description) 一个描述由一个描述模式(结构)和一组描述值组成。 编码的描述(Coded Description) 是对已完成编码的描述，满足诸如压缩效率、差错恢复和随机存取的相关要求。 描述定义语言(Description Definition Language，DDL) 是一种允许产生新的描述模式和描述子的语言，允许扩展和修改现有的描述机制。 MPEG-7是针对存储形式(在线、脱机)或流形式(如 Internet上的广播、推拉模型)的应用而制定 的，并且可以在实时和非实时环境中操作。一个实时环境意味着当采集资料时，信息是与内容相 关的。 下图是MPEG-7处理过程的一种高度抽象示意图，用于解释MPEG-7的范围。它包括特征抽取(分 析)、描述本身和搜索引擎(应用)。","s":"1.2 基于内容的视频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#12-基于内容的视频检索","p":2528},{"i":2536,"t":"音频检索系统分为两种类型：原音检索和模糊检索；  根据对音频媒体的划分，音频信息检索分为以下三种： 基于语音技术的检索：以语音为中心的检索，主要采用语音识别等技术，如电台节目、电 话交流、会议录音等。 音频检索：以波形声音为对象的检索。 音乐检索：以音乐为中心的检索，利用音乐的音符和旋律等音乐特性来检索，如检索乐器、 声乐作品等。 跨媒体搜索 跨媒体检索的目标是计算不同媒体数据间的相似度，对于给定的查询样例，检索出 与查询样例相关的不同媒体数据。关键挑战在于不同媒体的表示形式不一致，难以 进行直接的相似性度量，即“媒体鸿沟”问题。两种主要的跨媒体检索方法：共同 空间学习方法和跨媒体相似性度量方法。","s":"1.3 基于内容的音频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#13-基于内容的音频检索","p":2528},{"i":2539,"t":"从媒体数据中提取特定的信息进行检索，再根据这些线索从存储在数据库中的大量媒体进行查找，检索出具有相似特征的媒体数据。 基于内容的检索 基于内容的检索（Content-based Retrieval,CBR），根据媒体的语义和上下文联系进行检索。 从多媒体数据中提取信息线索。 近似匹配。 大数据库的快速检索。 多种检索手段。","s":"基于内容的多媒体数据检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#基于内容的多媒体数据检索","p":2537},{"i":2541,"t":"输入一张图片，查找出相同或者相似的图片。（例如百度识图）。 基本思想：使用图像的颜色、纹理、布局进行分析和检索。 以图搜图 哈希 将任意长度的输入通过Hash函数映射成固定长度的输出。 原始数据映射后的二进制串就是哈希值，通过对图像进行Hash编码，不仅能实现时间上的高效（基于XOR操作的快速计算）还能实现存储上的高效（基于位存储的紧致表达)。 好的Hash函数一般要求原始相近的数据其哈希编码也要尽可能的相近，而当原始数据发生变化时其Hash编码的差异也要尽可能的大，同时还能抵御各种攻击以保护原始数据。","s":"1.1 基于内容的图像检索（CBIR）","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#11-基于内容的图像检索cbir","p":2537},{"i":2543,"t":"视频的层次结构 视频可由场景，镜头，帧，对象等语义信息进行描述。 视频镜头切边和过渡检测 关键帧选取和视频摘要 MPEG-7视频内容标准​ MPEG-7概述 MPEG-7 的产生是为了解决上述问题，其重点在于影音内容的描述 和定义，以有弹性、具延伸性、多层次及明确的数据结构和语法来 定义影音数据的内容，经由 MPEG-7 的定义格式，使用者可以有效 率地搜寻、过滤和定义想要的影音数据。 MPEG-7:基于信息内容的搜索引擎 MPEG-7是属于信息方面的检索和搜寻，而所谓信息，则可以是影像 或音乐；换句话说，MPEG-7在本质上来说就是我们常常在网上使用 的搜索引擎，只不过它提供的是多媒体的信息查询服务。 MPEG-7中的主要概念 数据(Data) 是用MPEG-7描述的视听资料，不考虑它们的存储、编码、显示、传输、媒介或技术。 特征(Feature) 指数据的特性。特征本身不能比较，而要用有意义的特征表示(描述子)和它的实例(描述值) 描述子(Descriptor，D) 是特征的表示。它定义特征表示的句法和语义，可以赋予描述值。 描述值(Descriptor Value) 是描述子的实例。 描述模式(Description Scheme，DS) 说明其成员之间的关系结构和语义。 描述(Description) 一个描述由一个描述模式(结构)和一组描述值组成。 编码的描述(Coded Description) 是对已完成编码的描述，满足诸如压缩效率、差错恢复和随机存取的相关要求。 描述定义语言(Description Definition Language，DDL) 是一种允许产生新的描述模式和描述子的语言，允许扩展和修改现有的描述机制。 MPEG-7是针对存储形式(在线、脱机)或流形式(如 Internet上的广播、推拉模型)的应用而制定 的，并且可以在实时和非实时环境中操作。一个实时环境意味着当采集资料时，信息是与内容相 关的。 下图是MPEG-7处理过程的一种高度抽象示意图，用于解释MPEG-7的范围。它包括特征抽取(分 析)、描述本身和搜索引擎(应用)。","s":"1.2 基于内容的视频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#12-基于内容的视频检索","p":2537},{"i":2545,"t":"音频检索系统分为两种类型：原音检索和模糊检索；  根据对音频媒体的划分，音频信息检索分为以下三种： 基于语音技术的检索：以语音为中心的检索，主要采用语音识别等技术，如电台节目、电 话交流、会议录音等。 音频检索：以波形声音为对象的检索。 音乐检索：以音乐为中心的检索，利用音乐的音符和旋律等音乐特性来检索，如检索乐器、 声乐作品等。 跨媒体搜索 跨媒体检索的目标是计算不同媒体数据间的相似度，对于给定的查询样例，检索出 与查询样例相关的不同媒体数据。关键挑战在于不同媒体的表示形式不一致，难以 进行直接的相似性度量，即“媒体鸿沟”问题。两种主要的跨媒体检索方法：共同 空间学习方法和跨媒体相似性度量方法。","s":"1.3 基于内容的音频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#13-基于内容的音频检索","p":2537},{"i":2548,"t":"从媒体数据中提取特定的信息进行检索，再根据这些线索从存储在数据库中的大量媒体进行查找，检索出具有相似特征的媒体数据。 基于内容的检索 基于内容的检索（Content-based Retrieval,CBR），根据媒体的语义和上下文联系进行检索。 从多媒体数据中提取信息线索。 近似匹配。 大数据库的快速检索。 多种检索手段。","s":"基于内容的多媒体数据检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#基于内容的多媒体数据检索","p":2546},{"i":2550,"t":"输入一张图片，查找出相同或者相似的图片。（例如百度识图）。 基本思想：使用图像的颜色、纹理、布局进行分析和检索。 以图搜图 哈希 将任意长度的输入通过Hash函数映射成固定长度的输出。 原始数据映射后的二进制串就是哈希值，通过对图像进行Hash编码，不仅能实现时间上的高效（基于XOR操作的快速计算）还能实现存储上的高效（基于位存储的紧致表达)。 好的Hash函数一般要求原始相近的数据其哈希编码也要尽可能的相近，而当原始数据发生变化时其Hash编码的差异也要尽可能的大，同时还能抵御各种攻击以保护原始数据。","s":"1.1 基于内容的图像检索（CBIR）","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#11-基于内容的图像检索cbir","p":2546},{"i":2552,"t":"视频的层次结构 视频可由场景，镜头，帧，对象等语义信息进行描述。 视频镜头切边和过渡检测 关键帧选取和视频摘要 MPEG-7视频内容标准​ MPEG-7概述 MPEG-7 的产生是为了解决上述问题，其重点在于影音内容的描述 和定义，以有弹性、具延伸性、多层次及明确的数据结构和语法来 定义影音数据的内容，经由 MPEG-7 的定义格式，使用者可以有效 率地搜寻、过滤和定义想要的影音数据。 MPEG-7:基于信息内容的搜索引擎 MPEG-7是属于信息方面的检索和搜寻，而所谓信息，则可以是影像 或音乐；换句话说，MPEG-7在本质上来说就是我们常常在网上使用 的搜索引擎，只不过它提供的是多媒体的信息查询服务。 MPEG-7中的主要概念 数据(Data) 是用MPEG-7描述的视听资料，不考虑它们的存储、编码、显示、传输、媒介或技术。 特征(Feature) 指数据的特性。特征本身不能比较，而要用有意义的特征表示(描述子)和它的实例(描述值) 描述子(Descriptor，D) 是特征的表示。它定义特征表示的句法和语义，可以赋予描述值。 描述值(Descriptor Value) 是描述子的实例。 描述模式(Description Scheme，DS) 说明其成员之间的关系结构和语义。 描述(Description) 一个描述由一个描述模式(结构)和一组描述值组成。 编码的描述(Coded Description) 是对已完成编码的描述，满足诸如压缩效率、差错恢复和随机存取的相关要求。 描述定义语言(Description Definition Language，DDL) 是一种允许产生新的描述模式和描述子的语言，允许扩展和修改现有的描述机制。 MPEG-7是针对存储形式(在线、脱机)或流形式(如 Internet上的广播、推拉模型)的应用而制定 的，并且可以在实时和非实时环境中操作。一个实时环境意味着当采集资料时，信息是与内容相 关的。 下图是MPEG-7处理过程的一种高度抽象示意图，用于解释MPEG-7的范围。它包括特征抽取(分 析)、描述本身和搜索引擎(应用)。","s":"1.2 基于内容的视频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#12-基于内容的视频检索","p":2546},{"i":2554,"t":"音频检索系统分为两种类型：原音检索和模糊检索；  根据对音频媒体的划分，音频信息检索分为以下三种： 基于语音技术的检索：以语音为中心的检索，主要采用语音识别等技术，如电台节目、电 话交流、会议录音等。 音频检索：以波形声音为对象的检索。 音乐检索：以音乐为中心的检索，利用音乐的音符和旋律等音乐特性来检索，如检索乐器、 声乐作品等。 跨媒体搜索 跨媒体检索的目标是计算不同媒体数据间的相似度，对于给定的查询样例，检索出 与查询样例相关的不同媒体数据。关键挑战在于不同媒体的表示形式不一致，难以 进行直接的相似性度量，即“媒体鸿沟”问题。两种主要的跨媒体检索方法：共同 空间学习方法和跨媒体相似性度量方法。","s":"1.3 基于内容的音频检索","u":"/docs/Notes/digitalMediaBasis/smjc-5","h":"#13-基于内容的音频检索","p":2546},{"i":2557,"t":"计算机网络 树莓基础","s":"数媒专业学习","u":"/docs/study","h":"#数媒专业学习","p":2555}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/2",[0,8.477,1,0.196,2,6.985,3,4.337,4,9.574,5,4.595]],["t/4",[0,7.812,1,0.194,2,7.217,3,4.429,4,9.723,5,4.748]],["t/6",[0,6.014,1,0.194,6,3.811,7,6.595,8,8.136,9,8.136,10,5.722,11,5.203,12,6.546]],["t/8",[0,7.962,1,0.159]],["t/10",[0,2.876,1,0.199,7,3.249,13,1.456,14,1.806,15,1.958,16,1.557,17,1.659,18,1.116,19,2.244,20,2.391,21,2.811,22,1.587,23,0.917,24,1.873,25,2.072,26,2.244,27,2.244,28,2.244,29,2.244,30,3.891,31,3.703,32,4.028,33,2.072,34,4.301,35,2.072,36,2.7,37,2.072,38,2.211,39,4.301,40,1.873,41,1.456,42,2.072,43,3.592,44,2.072,45,2.244,46,1.749,47,2.244,48,2.244,49,3.45,50,2.811,51,2.072,52,1.958,53,2.072,54,2.244,55,2.244,56,2.244,57,2.564,58,2.244,59,3.206,60,2.244,61,4.145,62,4.447,63,1.873,64,2.072,65,1.325,66,1.587,67,2.072,68,2.072,69,1.288,70,2.072,71,2.244,72,2.244,73,2.072,74,2.072,75,1.873,76,2.244]],["t/12",[1,0.159,31,3.084,32,4.796,34,9.014,35,7.897,36,7.491,37,7.897,38,6.136,77,8.554]],["t/14",[1,0.143,32,4.318,39,8.115,40,8.115,41,6.308,42,8.974,78,9.721]],["t/16",[1,0.158,31,3.851,32,4.744,46,6.556,49,5.632,50,6.076,51,7.764,52,7.339,79,8.41,80,8.41,81,8.41,82,8.41]],["t/18",[1,0.186,31,2.326,32,2.866,49,6.888,50,7.431,61,7.206,62,7.465,63,5.386,64,5.956,65,2.197,67,5.956,68,5.956,83,6.452,84,6.452,85,6.452,86,6.452,87,6.452]],["t/20",[1,0.133,31,3.252,32,4.006,63,7.529,65,3.071,69,5.177,73,8.325,74,8.325,75,7.529,88,9.018,89,9.018]],["t/23",[1,0.176,63,8.379,69,5.762,75,8.379,90,4.206,91,7.637,92,4.34,93,7.637,94,7.637,95,7.637,96,7.637,97,7.637,98,7.637,99,7.637]],["t/25",[1,0.177,10,4.856,11,5.676,12,7.142,32,3.942,69,5.864,75,5.318,90,2.669,100,6.37,101,6.37,102,6.37,103,6.37,104,6.37,105,5.88,106,6.37,107,4.828,108,6.37,109,6.37,110,6.37,111,6.37,112,6.37,113,6.37,114,6.37]],["t/27",[1,0.198,5,5.941,115,9.574,116,5.119,117,3.773,118,7.845]],["t/29",[1,0.196,5,6.003,115,9.648,116,5.203,117,3.835,118,7.927]],["t/31",[1,0.202,7,4.829,21,2.277,32,1.4,119,1.987,120,2.909,121,3.68,122,3.931,123,4.787,124,3.151,125,5.577,126,3.151,127,2.475,128,3.151,129,2.63,130,2.63,131,2.277,132,3.365,133,2.741,134,3.151,135,3.151,136,3.151,137,3.151,138,2.63,139,4.042,140,3.808,141,3.648,142,1.392,143,3.983,144,2.045,145,2.475,146,3.668,147,3.151,148,2.63,149,2.75,150,2.045,151,2.045]],["t/33",[1,0.202,49,2.151,115,7.67,116,2.054,117,2.483,141,1.773,143,3.483,146,3.726,152,3.97,153,4.345,154,1.825,155,2.965,156,3.212,157,3.212,158,2.965,159,3.212,160,2.584,161,2.965,162,3.212,163,3.588,164,2.965,165,3.212,166,2.965,167,2.965,168,1.712,169,3.212,170,2.584,171,3.212,172,3.212,173,3.212,174,2.626,175,5.267,176,5.267,177,3.212,178,3.212,179,3.212,180,3.212,181,4.596,182,1.597,183,2.681,184,2.681,185,3.212,186,3.212]],["t/35",[1,0.198,143,3.798,160,5.876,182,5.452,187,8.311,188,6.741,189,7.302,190,7.302,191,6.372,192,6.741]],["t/37",[1,0.203,32,2.02,49,3.953,139,4.602,140,2.261,142,3.065,143,3.071,145,2.171,146,3.217,151,1.747,153,2.951,154,2.584,160,2.166,182,1.339,188,2.485,192,2.485,193,6.938,194,4.547,195,4.547,196,6.406,197,2.692,198,4.547,199,2.692,200,2.856,201,5.904,202,4.547,203,2.868,204,3.796,205,4.547,206,2.692,207,4.198,208,4.547,209,4.198,210,4.547,211,2.692,212,2.485,213,2.166,214,2.692]],["t/39",[1,0.192,118,7.369,215,11.682]],["t/41",[1,0.188,118,8.555,216,9.184,217,10.419,218,9.184]],["t/43",[1,0.194,118,7.668]],["t/45",[1,0.2,219,7.864,220,7.197,221,7.197,222,9.648,223,5.928,224,6.008,225,7.197,226,6.644]],["t/47",[1,0.198,116,4.739,227,9.839,228,6.187,229,7.41,230,7.41,231,6.187,232,6.466,233,5.354,234,7.41,235,6.466,236,7.41]],["t/49",[1,0.2,49,2.11,92,1.791,116,2.015,118,5.805,121,1.514,127,1.504,143,4.403,146,3.668,152,3.917,155,2.909,163,2.147,166,2.909,167,2.909,174,1.236,181,2.75,203,3.27,217,2.909,237,3.151,238,2.535,239,3.151,240,3.151,241,3.151,242,3.151,243,3.151,244,3.151,245,3.151,246,3.151,247,3.151,248,3.151,249,3.151,250,3.151,251,5.185,252,3.151,253,3.632,254,3.151,255,3.151,256,3.151,257,6.607,258,2.75,259,3.151,260,3.151,261,2.492,262,3.151,263,1.154,264,5.185,265,3.151,266,2.909,267,3.151]],["t/51",[1,0.19,143,4.923,146,6.696,160,7.616,161,6.458,174,3.712,181,8.26,268,9.465,269,9.465,270,6.995,271,9.465,272,6.995]],["t/53",[1,0.194,118,7.668]],["t/55",[1,0.196,115,10.376,273,7.756,274,7.16,275,10.139,276,5.487,277,6.768]],["t/57",[278,5.29]],["t/60",[1,0.159,117,5.076]],["t/62",[117,5.188]],["t/64",[1,0.174,117,4.673,279,7.978,280,9.153,281,6.878]],["t/66",[1,0.196,116,2.973,117,2.191,152,2.756,153,3.016,191,4.056,281,3.225,282,4.291,283,4.291,284,4.291,285,3.74,286,4.291,287,4.291,288,4.291,289,5.5,290,6.514,291,6.514,292,4.291,293,4.291,294,3.016,295,4.291,296,4.291,297,4.291,298,4.291,299,4.291,300,3.881,301,4.291,302,2.821,303,2.788,304,4.056,305,4.056,306,3.436,307,4.291,308,4.291,309,4.291,310,4.291,311,4.291,312,4.291,313,4.291,314,4.291]],["t/68",[1,0.183]],["t/70",[1,0.18,3,1.829,6,2.044,90,2.817,116,2.791,146,6.518,149,8.039,163,4.58,263,2.463,315,2.388,316,9.213,317,6.984,318,6.723,319,7.039,320,7.691,321,6.723,322,6.723,323,2.789,324,2.969,325,2.803,326,3.11,327,3.073,328,6.206,329,6.206,330,6.723]],["t/74",[1,0.2,6,3.811,331,6.167,332,8.415,333,5.574,334,8.136]],["t/76",[1,0.185,332,9.4,335,9.721,336,9.721]],["t/78",[1,0.182,119,5.901,140,4.652,337,9.356,338,7.092,339,7.529,340,9.356]],["t/80",[1,0.189,331,7.092,332,9.912,341,6.916]],["t/82",[1,0.183,10,4.68,11,5.47,338,6.484,342,5.016,343,8.554,344,8.554,345,8.554,346,7.897,347,7.464,348,7.141]],["t/84",[1,0.194,10,4.762,331,8.274,348,7.266,349,5.648,350,8.035,351,8.035]],["t/86",[1,0.188,140,3.857,151,5.033,331,5.879,332,6.241,348,6.475,352,7.756,353,7.756,354,7.756,355,6.475,356,7.16,357,6.475,358,7.756,359,7.756,360,7.756]],["t/90",[1,0.193,20,3.679,168,3.191,182,5.646,331,8.15,348,4.998,349,3.885,350,7.845,351,5.528,355,4.998,361,4.667,362,4.998,363,4.326,364,4.667,365,4.426,366,4.818,367,5.528,368,4.998,369,4.998,370,4.667]],["t/92",[1,0.194,20,2.109,21,2.48,168,3.736,182,5.486,331,5.314,332,4.475,333,3.736,347,4.853,355,2.866,364,2.676,365,2.538,366,2.762,367,5.134,368,6.728,369,2.866,370,5.464,371,7.389,372,7.684,373,2.195,374,2.762,375,3.433,376,3.433,377,3.433,378,3.016,379,6.471,380,3.169,381,2.866,382,2.429,383,3.433,384,2.602,385,5.561,386,5.561]],["t/95",[1,0.189,133,5.838,263,2.715,331,7.458,347,6.466,379,6.841,387,7.41,388,9.839,389,7.41,390,6.841,391,6.466,392,6.466,393,7.41]],["t/97",[394,10.325,395,9.009,396,9.009,397,9.009]],["t/99",[395,9.2,396,9.2,397,9.2]],["t/101",[1,0.2,23,4.148,49,4.376,50,3.449,65,1.626,66,1.439,92,1.156,325,0.848,398,1.877,399,1.698,400,1.585,401,1.698,402,2.981,403,1.362,404,1.32,405,1.698,406,1.877,407,1.698,408,1.698,409,1.698,410,2.707,411,4.407,412,4.793,413,1.698,414,1.282,415,3.985,416,3.985,417,3.985,418,3.985,419,0.783,420,4.793,421,4.407,422,1.698,423,3.297,424,5.456,425,0.879,426,2.873,427,3.985,428,1.877,429,1.698,430,6.01,431,6.01,432,1.877,433,1.877,434,3.985,435,3.985,436,3.985,437,1.877,438,3.619,439,1.698,440,1.877,441,1.698,442,1.877,443,1.877,444,1.877,445,1.636]],["t/103",[1,0.196,23,4.538,32,0.752,38,0.51,49,3.077,50,1.223,65,1.228,66,1.197,92,2.856,325,0.375,399,0.75,400,1.871,401,1.413,402,2.533,403,1.134,404,1.098,405,1.413,407,1.413,408,1.413,409,0.75,410,1.819,412,3.836,413,1.413,415,4.196,416,6.605,417,2.533,418,3.443,420,0.75,424,0.75,426,0.723,427,0.75,429,1.413,430,4.196,431,4.196,434,2.533,435,2.533,436,0.75,438,2.734,439,0.75,441,1.413,446,0.75,447,0.829,448,1.563,449,0.829,450,1.819,451,0.829,452,0.829,453,1.477,454,2.679,455,1.458,456,4.64,457,1.362,458,2.216,459,1.202,460,0.829,461,1.563,462,0.649,463,0.829,464,5.342,465,0.829,466,1.068,467,2.216,468,2.094,469,4.64,470,0.829,471,4.243,472,0.829,473,1.734,474,3.329,475,2.811,476,3.329,477,2.094,478,2.801,479,2.801,480,2.094,481,1.563,482,1.563,483,0.829,484,3.807,485,2.216,486,5.342,487,1.563,488,2.216,489,2.216,490,2.216,491,4.243,492,0.829,493,0.829,494,0.829,495,0.829,496,0.829,497,0.829,498,0.829,499,0.829,500,1.563,501,1.563,502,1.563,503,1.413,504,0.829,505,1.563,506,0.829,507,0.829,508,0.829,509,0.567,510,0.829,511,0.829]],["t/105",[512,5.37,513,9.532,514,9.009,515,9.532]],["t/107",[119,6.942]],["t/110",[516,10.163]],["t/112",[517,10.163]],["t/114",[1,0.193,6,1.74,7,2.342,23,1.519,31,1.339,32,1.65,90,1.556,121,3.551,127,1.773,133,3.132,140,4.884,141,3.271,143,1.932,145,2.828,174,1.456,319,5.648,378,2.014,518,3.429,519,5.469,520,3.429,521,5.17,522,2.53,523,3.429,524,2.815,525,3.429,526,5.661,527,3.429,528,3.429,529,2.202,530,3.429,531,3.429,532,3.429,533,3.429,534,3.429,535,3.429,536,2.282,537,3.429,538,2.745,539,3.429,540,3.429,541,3.429,542,3.429,543,3.429,544,1.997,545,3.429,546,3.429,547,3.429]],["t/116",[548,10.163]],["t/118",[1,0.202,119,5.913,140,3.43,339,5.551,549,5.759,550,10.552,551,7.828,552,6.019]],["t/120",[1,0.2,536,6.229,553,7.685,554,9.429,555,7.16,556,7.16]],["t/122",[1,0.199,536,6.293,553,7.764,554,9.501,555,7.274,556,7.274]],["t/124",[1,0.199,20,3.356,303,3.276,333,2.912,363,5.748,554,4.561,557,5.463,558,5.043,559,7.956,560,5.043,561,4.561,562,5.463,563,5.463,564,5.043,565,5.043,566,5.043,567,5.463,568,5.043,569,3.721,570,2.697,571,4.259,572,5.463,573,5.463,574,4.767,575,5.043,576,4.259]],["t/126",[1,0.195,90,1.752,303,2.507,338,3.169,355,3.49,361,3.259,536,2.569,554,3.49,561,3.49,564,6.004,565,7.369,568,3.86,569,2.848,574,8.513,575,3.86,577,3.364,578,4.181,579,3.648,580,4.181,581,4.181,582,4.181,583,3.364,584,2.901,585,4.181,586,4.181,587,3.625,588,4.181,589,4.181,590,3.86,591,3.091,592,6.504,593,4.181,594,8.313,595,4.181,596,2.958,597,3.259,598,4.181,599,6.504,600,6.504]],["t/128",[1,0.19,279,7.673,509,7.282,601,7.96]],["t/130",[1,0.185,279,7.822,509,7.367,601,8.115]],["t/133",[1,0.152,509,6.511,602,9.532,603,10.325]],["t/135",[1,0.162]],["t/137",[1,0.189,604,10.325]],["t/140",[1,0.199,18,4.182,509,6.736,601,7.021,605,8.41,606,4.409]],["t/142",[1,0.203,509,7.123,601,8.464,607,7.756]],["t/145",[1,0.135,608,7.159,609,7.159,610,5.385,611,6.372,612,6.789,613,6.962,614,8.555,615,5.445]],["t/148",[5,6.634,200,3.935,616,7.511,617,7.511,618,7.511,619,7.511,620,7.511,621,5.884,622,7.511,623,7.511,624,7.511,625,7.511,626,7.511,627,7.511]],["t/150",[1,0.153,628,7.39,629,7.39,630,9.031,631,7.39,632,7.39,633,7.39,634,7.39,635,7.39,636,4.267,637,7.39,638,6.683,639,6.683,640,7.39,641,7.39,642,7.39]],["t/152",[643,9.943,644,9.943]],["t/154",[1,0.184,645,8.035,646,8.035,647,8.035,648,8.035,649,8.035,650,8.035,651,8.035,652,8.035,653,8.035]],["t/156",[654,9.153,655,9.153,656,9.153,657,9.153,658,9.153,659,9.153]],["t/159",[1,0.166,3,3.849,660,8.479,661,8.479,662,8.479,663,8.479,664,8.479,665,8.479,666,6.257]],["t/161",[1,0.172,667,8.974,668,8.115,669,8.974,670,8.974,671,8.974]],["t/163",[1,0.135,608,7.159,610,5.385,612,6.789,613,6.962,614,8.555,615,5.445,672,6.962,673,9.184]],["t/165",[1,0.135,419,3.539,608,7.159,610,5.385,612,6.789,613,6.962,614,8.555,615,5.445,674,5.96]],["t/167",[117,5.188]],["t/169",[1,0.174,117,4.673,279,7.978,280,9.153,281,6.878]],["t/171",[1,0.196,116,2.973,117,2.191,152,2.756,153,3.016,191,4.056,281,3.225,282,4.291,283,4.291,284,4.291,285,3.74,286,4.291,287,4.291,288,4.291,289,5.5,290,6.514,291,6.514,292,4.291,293,4.291,294,3.016,295,4.291,296,4.291,297,4.291,298,4.291,299,4.291,300,3.881,301,4.291,302,2.821,303,2.788,304,4.056,305,4.056,306,3.436,307,4.291,308,4.291,309,4.291,310,4.291,311,4.291,312,4.291,313,4.291,314,4.291]],["t/173",[1,0.183]],["t/175",[1,0.135,608,7.159,610,5.385,612,6.789,613,6.962,614,8.555,615,5.445,621,5.168,674,5.96]],["t/177",[1,0.141,675,7.96,676,7.673,677,6.615,678,5.858,679,7.96,680,7.96,681,7.049]],["t/179",[1,0.195,23,2.598,65,2.164,125,1.965,139,2.324,152,1.768,154,1.694,174,1.169,183,2.489,184,2.489,276,2.109,682,2.602,683,4.323,684,4.323,685,6.459,686,4.323,687,5.545,688,2.602,689,2.602,690,2.399,691,4.323,692,5.545,693,6.459,694,1.662,695,2.031,696,2.031,697,2.489,698,2.602,699,2.602,700,2.602,701,2.602,702,2.602,703,2.602,704,2.602,705,2.602,706,2.602,707,2.602,708,2.602,709,2.602,710,2.602,711,4.496,712,2.602,713,4.064,714,2.602,715,4.323,716,2.602,717,2.602,718,2.602,719,4.323,720,2.602,721,2.602,722,2.602,723,2.602,724,2.489,725,2.602,726,2.602,727,4.135,728,1.965,729,2.602,730,2.489,731,2.602,732,2.602,733,2.602]],["t/182",[681,8.137]],["t/184",[734,8.965]],["t/186",[678,6.477,735,9.2,736,9.2]],["t/188",[737,10.695,738,9.2]],["t/190",[1,0.17,734,6.889,739,8.321,740,8.321,741,8.321,742,8.321,743,8.321]],["t/192",[1,0.168,678,7.013,734,6.76,744,9.96,745,8.165,746,8.165]],["t/194",[1,0.135,608,7.159,610,5.385,612,6.789,613,6.962,614,8.555,615,5.445,674,5.96,747,5.327]],["t/196",[395,9.2,396,9.2,397,9.2]],["t/198",[1,0.2,23,4.148,49,4.376,50,3.449,65,1.626,66,1.439,92,1.156,325,0.848,398,1.877,399,1.698,400,1.585,401,1.698,402,2.981,403,1.362,404,1.32,405,1.698,406,1.877,407,1.698,408,1.698,409,1.698,410,2.707,411,4.407,412,4.793,413,1.698,414,1.282,415,3.985,416,3.985,417,3.985,418,3.985,419,0.783,420,4.793,421,4.407,422,1.698,423,3.297,424,5.456,425,0.879,426,2.873,427,3.985,428,1.877,429,1.698,430,6.01,431,6.01,432,1.877,433,1.877,434,3.985,435,3.985,436,3.985,437,1.877,438,3.619,439,1.698,440,1.877,441,1.698,442,1.877,443,1.877,444,1.877,445,1.636]],["t/200",[1,0.196,23,4.538,32,0.752,38,0.51,49,3.077,50,1.223,65,1.228,66,1.197,92,2.856,325,0.375,399,0.75,400,1.871,401,1.413,402,2.533,403,1.134,404,1.098,405,1.413,407,1.413,408,1.413,409,0.75,410,1.819,412,3.836,413,1.413,415,4.196,416,6.605,417,2.533,418,3.443,420,0.75,424,0.75,426,0.723,427,0.75,429,1.413,430,4.196,431,4.196,434,2.533,435,2.533,436,0.75,438,2.734,439,0.75,441,1.413,446,0.75,447,0.829,448,1.563,449,0.829,450,1.819,451,0.829,452,0.829,453,1.477,454,2.679,455,1.458,456,4.64,457,1.362,458,2.216,459,1.202,460,0.829,461,1.563,462,0.649,463,0.829,464,5.342,465,0.829,466,1.068,467,2.216,468,2.094,469,4.64,470,0.829,471,4.243,472,0.829,473,1.734,474,3.329,475,2.811,476,3.329,477,2.094,478,2.801,479,2.801,480,2.094,481,1.563,482,1.563,483,0.829,484,3.807,485,2.216,486,5.342,487,1.563,488,2.216,489,2.216,490,2.216,491,4.243,492,0.829,493,0.829,494,0.829,495,0.829,496,0.829,497,0.829,498,0.829,499,0.829,500,1.563,501,1.563,502,1.563,503,1.413,504,0.829,505,1.563,506,0.829,507,0.829,508,0.829,509,0.567,510,0.829,511,0.829]],["t/202",[512,5.37,513,9.532,514,9.009,515,9.532]],["t/204",[1,0.135,608,7.159,610,5.385,612,6.789,613,6.962,614,8.555,615,5.445,748,6.635,749,5.071]],["t/207",[516,10.163]],["t/209",[517,10.163]],["t/211",[1,0.193,6,1.74,7,2.342,23,1.519,31,1.339,32,1.65,90,1.556,121,3.551,127,1.773,133,3.132,140,4.884,141,3.271,143,1.932,145,2.828,174,1.456,319,5.648,378,2.014,518,3.429,519,5.469,520,3.429,521,5.17,522,2.53,523,3.429,524,2.815,525,3.429,526,5.661,527,3.429,528,3.429,529,2.202,530,3.429,531,3.429,532,3.429,533,3.429,534,3.429,535,3.429,536,2.282,537,3.429,538,2.745,539,3.429,540,3.429,541,3.429,542,3.429,543,3.429,544,1.997,545,3.429,546,3.429,547,3.429]],["t/213",[548,10.163]],["t/215",[1,0.202,119,5.913,140,3.43,339,5.551,549,5.759,550,10.552,551,7.828,552,6.019]],["t/217",[1,0.168,675,7.811,676,7.529,677,6.491,678,5.748,679,7.811,680,7.811,681,6.916]],["t/219",[1,0.141,675,7.96,676,7.673,677,6.615,678,5.858,679,7.96,680,7.96,681,7.049]],["t/221",[1,0.195,23,2.598,65,2.164,125,1.965,139,2.324,152,1.768,154,1.694,174,1.169,183,2.489,184,2.489,276,2.109,682,2.602,683,4.323,684,4.323,685,6.459,686,4.323,687,5.545,688,2.602,689,2.602,690,2.399,691,4.323,692,5.545,693,6.459,694,1.662,695,2.031,696,2.031,697,2.489,698,2.602,699,2.602,700,2.602,701,2.602,702,2.602,703,2.602,704,2.602,705,2.602,706,2.602,707,2.602,708,2.602,709,2.602,710,2.602,711,4.496,712,2.602,713,4.064,714,2.602,715,4.323,716,2.602,717,2.602,718,2.602,719,4.323,720,2.602,721,2.602,722,2.602,723,2.602,724,2.489,725,2.602,726,2.602,727,4.135,728,1.965,729,2.602,730,2.489,731,2.602,732,2.602,733,2.602]],["t/224",[681,8.137]],["t/226",[734,8.965]],["t/228",[678,6.477,735,9.2,736,9.2]],["t/230",[737,10.695,738,9.2]],["t/232",[1,0.17,734,6.889,739,8.321,740,8.321,741,8.321,742,8.321,743,8.321]],["t/234",[1,0.168,678,7.013,734,6.76,744,9.96,745,8.165,746,8.165]],["t/236",[1,0.159,750,7.962]],["t/238",[116,7.04]],["t/241",[1,0.199,6,3.577,117,5.612,203,4.817,751,7.637,752,7.637,753,6.376,754,7.637]],["t/243",[1,0.161,65,4.061,132,5.648,419,3.353,610,5.103,755,8.703,756,8.035,757,7.595,758,8.035,759,7.003]],["t/245",[1,0.203,23,1.876,65,1.563,117,3.677,132,1.766,182,1.353,187,2.063,203,1.716,342,1.596,419,1.768,454,1.45,459,2.98,695,1.854,696,1.854,753,2.272,756,2.512,760,6.369,761,2.721,762,2.721,763,2.375,764,2.121,765,2.721,766,2.121,767,4.589,768,4.589,769,2.721,770,2.721,771,2.721,772,4.237,773,4.237,774,4.237,775,4.237,776,4.237,777,4.237,778,4.237,779,4.237,780,4.237,781,2.272,782,2.272,783,2.512,784,2.512,785,2.512,786,2.512,787,2.512,788,2.512]],["t/247",[1,0.181,117,4.969]],["t/249",[1,0.203,65,1.066,117,3.976,143,3.422,152,1.856,153,2.032,154,1.779,163,2.133,203,5.724,610,1.836,695,2.133,757,4.501,759,2.52,760,6.421,763,5.74,789,3.131,790,3.131,791,3.131,792,2.891,793,2.891,794,2.891,795,2.891,796,2.891,797,2.891,798,2.771,799,2.891,800,2.891,801,2.891,802,2.891,803,2.891,804,2.891,805,2.891,806,2.614,807,2.441,808,2.891,809,3.131]],["t/251",[1,0.2,65,2.015,152,3.508,163,4.03,174,2.32,342,3.469,410,4.485,711,4.186,749,3.267,759,6.78,810,8.426,811,5.916,812,6.78,813,4.939,814,5.916,815,5.916,816,3.731,817,5.916,818,5.916]],["t/253",[1,0.19,65,2.771,163,5.542,174,3.191,342,4.77,711,5.756,813,6.792,819,7.511,820,8.136,821,8.136,822,8.136,823,8.136]],["t/255",[1,0.2,18,1.212,23,3.38,65,2.051,92,1.385,163,0.905,174,3.129,419,0.512,425,1.053,445,1.069,606,1.769,621,1.371,674,0.862,747,0.771,749,0.734,782,2.817,812,1.961,813,2.034,824,1.227,825,4.413,826,1.227,827,2.25,828,1.227,829,2.25,830,1.227,831,4.254,832,3.695,833,1.227,834,1.329,835,5.063,836,3.857,837,5.063,838,1.227,839,4.5,840,1.227,841,1.227,842,1.227,843,2.126,844,3.115,845,1.227,846,1.227,847,0.681,848,1.227,849,1.227,850,1.227,851,1.227,852,1.227,853,1.227,854,2.25,855,1.227,856,1.227,857,2.25,858,1.227,859,2.25,860,1.227,861,2.25,862,1.227,863,2.25,864,6.001,865,7.366,866,2.25,867,5.56,868,3.115,869,1.227,870,2.25,871,3.857,872,1.227,873,2.25,874,1.227,875,2.25,876,1.227,877,2.25,878,1.227,879,0.797,880,1.227,881,1.16,882,1.329,883,1.329,884,1.329,885,1.329,886,1.11,887,1.329,888,1.329,889,1.329,890,1.329,891,1.329,892,1.329,893,4.178]],["t/257",[1,0.201,23,3.603,38,2.282,65,0.793,66,1.647,116,1.488,203,3.341,253,1.104,261,1.118,342,1.365,454,1.241,459,3.157,772,4.891,773,4.891,774,4.891,775,4.891,776,4.891,777,6.566,778,3.708,779,4.891,780,4.891,781,1.943,782,1.943,783,2.149,784,2.149,785,2.149,786,2.149,787,2.149,788,2.149,807,4.13,894,6.303,895,4.016,896,1.943,897,4.016,898,1.873,899,1.559,900,2.328,901,5.298,902,6.303,903,2.328,904,1.51,905,2.328,906,2.328,907,2.328,908,2.328,909,2.328,910,2.328,911,4.016,912,4.016,913,4.016,914,2.328,915,2.328,916,2.328,917,2.328]],["t/259",[1,0.198,65,2.382,163,4.765,174,2.743,711,6.696,819,6.458,880,6.458,896,5.84,918,6.995,919,9.465,920,6.995,921,6.995,922,6.995,923,6.995]],["t/261",[1,0.162]],["t/264",[1,0.162]],["t/266",[1,0.159,750,7.962]],["t/268",[1,0.194,278,4.861]],["t/270",[924,9.606]],["t/273",[1,0.169,11,4.411,153,6.084,727,5.759,924,6.019,925,6.898,926,6.898,927,6.019,928,6.898,929,6.898,930,6.898,931,6.898,932,6.898,933,6.898,934,6.898,935,6.368,936,6.898,937,6.898,938,8.656,939,9.376,940,8.182]],["t/275",[1,0.189,941,10.325]],["t/278",[1,0.116,11,5.038,141,4.35,457,6.34,924,6.875,927,8.938,942,6.142,943,7.879,944,7.879,945,7.274,946,6.142,947,7.879,948,5.038,949,7.879,950,7.879,951,7.879,952,7.879,953,7.879]],["t/280",[1,0.199,694,5.538,945,6.945,954,7.522,955,7.522,956,7.522,957,6.945,958,9.937,959,7.522,960,7.522]],["t/282",[1,0.194,278,5.485,961,5.901,962,8.638]],["t/285",[1,0.194,963,9.356,964,9.529,965,7.294]],["t/287",[1,0.201,32,2.374,143,2.781,261,2.569,278,2.569,285,8.209,303,3.206,361,4.167,571,4.167,587,2.979,948,3.419,964,4.463,966,8.555,967,4.302,968,5.346,969,5.346,970,5.346,971,5.346,972,4.665,973,5.346,974,5.346,975,5.346]],["t/289",[1,0.202,18,2.476,23,3.038,65,2.53,261,1.441,278,1.441,303,1.799,414,3.14,453,4.344,621,1.688,674,1.946,748,3.597,759,2.413,807,2.338,825,2.413,831,2.617,976,2.999,977,6.382,978,2.999,979,2.999,980,2.999,981,4.006,982,2.999,983,2.999,984,2.769,985,2.999,986,8.241,987,2.999,988,2.999,989,2.999,990,2.999,991,2.999,992,2.999,993,7.429,994,2.999,995,2.413,996,4.978,997,2.769,998,2.999,999,2.999,1000,2.769,1001,2.769,1002,2.999,1003,2.999,1004,2.999,1005,2.999]],["t/291",[1,0.193,278,4.413,576,7.159,961,5.792,1006,8.479,1007,5.792]],["t/293",[1,0.201,65,1.034,224,2.534,231,2.534,278,5.334,320,4.198,569,2.068,576,5.835,606,1.592,760,5.295,807,3.92,825,2.443,946,3.92,948,4.787,961,4.72,981,2.443,1007,3.171,1008,2.443,1009,2.443,1010,4.642,1011,2.803,1012,2.803,1013,4.642,1014,3.633,1015,2.068,1016,2.803,1017,2.803,1018,2.803,1019,2.803,1020,1.725,1021,2.803,1022,2.803,1023,2.803,1024,3.089,1025,4.046,1026,4.046]],["t/295",[1,0.204,18,2.606,23,3.957,65,1.087,116,2.041,145,1.524,152,1.892,163,2.174,174,1.251,278,3.203,289,2.488,414,2.013,611,3.635,621,2.948,690,2.568,695,2.174,749,2.893,760,5.459,806,2.664,847,1.634,961,2.013,981,2.568,1006,2.946,1007,3.304,1027,3.191,1028,2.946,1029,2.946,1030,2.664,1031,2.946,1032,3.191,1033,2.946,1034,2.946,1035,2.785,1036,2.946]],["t/297",[1,0.192,315,4.601,454,6.582,1037,9.799,1038,7.339]],["t/299",[1,0.189,315,4.68,454,6.623,1037,9.877,1038,7.464]],["t/301",[1,0.152,7,6.511,1037,8.619,1039,10.325]],["t/303",[1,0.189,263,2.22,323,2.514,325,3.574,577,8.002,596,4.287,638,5.059,1015,5.839,1040,5.595,1041,6.06,1042,5.595,1043,5.595,1044,4.378,1045,5.288,1046,5.288,1047,5.595,1048,5.059,1049,5.288,1050,7.913,1051,5.059,1052,4.594,1053,7.479,1054,6.06]],["t/305",[1,0.204,263,1.2,323,1.359,325,4.256,509,2.065,577,6.307,1015,2.231,1037,4.468,1044,2.366,1045,2.858,1046,2.858,1047,3.024,1048,2.734,1049,2.858,1055,3.275,1056,3.275,1057,3.275,1058,3.275,1059,3.275,1060,5.352,1061,5.352,1062,6.266,1063,3.275,1064,4.941,1065,6.855,1066,3.275,1067,5.352,1068,3.275,1069,3.275]],["t/307",[1,0.2,263,2.585,325,3.97,577,3.74,1015,5.809,1044,5.098,1045,6.157,1046,6.157,1049,6.157,1062,7.873,1064,9.45,1065,5.216,1070,4.648,1071,7.056,1072,4.648,1073,4.648,1074,4.648,1075,3.74]],["t/310",[1,0.194,62,4.351,342,3.989,390,6.281,606,3.567,1076,6.804,1077,6.804,1078,11.364,1079,10.577,1080,6.804,1081,6.804,1082,6.804,1083,6.804,1084,6.804,1085,6.804]],["t/312",[1,0.183,384,8.753,1086,11.547,1087,9.535]],["t/314",[1,0.162]],["t/317",[5,6.634,200,3.935,616,7.511,617,7.511,618,7.511,619,7.511,620,7.511,621,5.884,622,7.511,623,7.511,624,7.511,625,7.511,626,7.511,627,7.511]],["t/319",[1,0.153,628,7.39,629,7.39,630,9.031,631,7.39,632,7.39,633,7.39,634,7.39,635,7.39,636,4.267,637,7.39,638,6.683,639,6.683,640,7.39,641,7.39,642,7.39]],["t/321",[643,9.943,644,9.943]],["t/323",[1,0.184,645,8.035,646,8.035,647,8.035,648,8.035,649,8.035,650,8.035,651,8.035,652,8.035,653,8.035]],["t/325",[654,9.153,655,9.153,656,9.153,657,9.153,658,9.153,659,9.153]],["t/328",[1,0.166,3,3.849,660,8.479,661,8.479,662,8.479,663,8.479,664,8.479,665,8.479,666,6.257]],["t/330",[1,0.172,667,8.974,668,8.115,669,8.974,670,8.974,671,8.974]],["t/332",[1,0.192,117,4.25,278,5.823,961,7.038]],["t/334",[1,0.188,117,4.329,278,5.871,961,7.117]],["t/336",[1,0.174,116,6.34,278,4.764,961,6.252,1088,9.914]],["t/338",[1,0.19,278,6.315,961,6.884]],["t/341",[1,0.183]],["t/343",[1,0.162]],["t/345",[1,0.162]],["t/347",[1,0.162]],["t/349",[1,0.162]],["t/351",[1,0.193,5,5.691,281,6.878]],["t/353",[1,0.196,964,8.115,965,7.578]],["t/355",[1,0.2,92,3.92,116,4.411,148,5.759,278,5.119,512,3.588,553,5.229,1089,6.898,1090,6.368,1091,6.368,1092,6.898,1093,6.898,1094,6.898]],["t/357",[1,0.162]],["t/359",[1,0.203,117,3.258,143,3.595,261,3.322,462,4.994,615,4.098,758,6.382,1095,5.47,1096,7.351,1097,7.963,1098,5.47,1099,6.032,1100,6.913,1101,6.913,1102,6.032,1103,6.382,1104,6.913,1105,6.913,1106,3.363]],["t/361",[1,0.181,1107,10.543]],["t/363",[1,0.201,18,0.727,23,2.616,65,1.532,92,0.831,117,0.689,143,1.901,163,0.996,174,2.294,203,0.922,419,0.563,425,0.632,445,1.176,512,0.76,606,0.766,610,1.558,621,0.822,674,0.948,695,0.996,747,0.848,749,0.807,757,2.319,759,1.176,760,3.694,763,3.189,782,2.219,792,1.349,793,1.349,794,1.349,795,1.349,796,1.349,797,1.349,798,1.119,799,1.349,800,1.349,801,1.349,802,1.349,803,1.349,804,1.349,805,1.349,806,1.22,807,1.139,808,1.349,812,1.176,813,1.22,824,1.349,825,2.138,826,1.349,827,1.349,828,1.349,829,1.349,830,1.349,831,2.319,832,2.77,833,1.349,835,3.374,836,2.454,837,3.374,838,1.349,839,2.454,840,1.349,841,1.349,842,1.349,843,1.275,844,2.454,845,1.349,846,1.349,847,0.748,848,1.349,849,1.349,850,1.349,851,1.349,852,1.349,853,1.349,854,2.454,855,1.349,856,2.454,857,1.349,858,2.454,859,1.349,860,2.454,861,1.349,862,2.454,863,1.349,864,3.374,865,5.399,866,1.349,867,4.153,868,1.349,869,1.349,870,1.349,871,2.454,872,1.349,873,1.349,874,1.349,875,1.349,876,1.349,877,1.349,878,1.349,1096,1.349,1108,2.658,1109,2.658,1110,1.462,1111,1.462,1112,1.462,1113,1.462,1114,1.462,1115,1.462,1116,1.349,1117,1.275,1118,1.462,1119,1.462,1120,1.462,1121,1.462,1122,1.462,1123,1.462,1124,1.462,1125,1.462]],["t/365",[1,0.2,32,2.325,65,1.782,143,4.01,235,4.567,261,2.515,278,2.515,281,3.631,285,8.126,361,4.08,419,2.016,587,2.917,948,3.347,964,4.369,966,8.45,967,4.211,1126,4.832,1127,5.234,1128,5.234,1129,5.234,1130,5.234,1131,5.234,1132,5.234,1133,5.234]],["t/367",[1,0.156,1126,9.733,1134,10.543]],["t/369",[1,0.162]],["t/371",[1,0.202,92,3.574,143,3.271,1135,6.289,1136,6.289,1137,6.289,1138,6.289,1139,10.146,1140,6.289,1141,6.289,1142,6.289,1143,6.289,1144,6.289,1145,6.289,1146,6.289]],["t/373",[1,0.191]],["t/376",[1,0.191,65,1.629,224,3.992,231,3.992,278,5.235,320,6.018,569,3.258,576,5.619,606,2.507,807,5.619,825,3.848,961,5.471,981,3.848,1007,4.546,1008,3.848,1009,3.848,1010,6.655,1011,4.415,1012,4.415,1013,6.655,1014,5.208,1015,3.258,1016,4.415,1017,4.415,1018,4.415,1019,4.415,1020,4.096,1021,4.415,1022,4.415,1023,4.415]],["t/378",[1,0.204,278,3.793,576,6.153,760,5.584,946,6.153,948,6.558,1024,4.849,1025,6.351,1026,6.351]],["t/380",[1,0.204,18,2.463,23,3.84,65,1.015,116,1.907,145,1.423,152,1.768,163,2.031,174,1.169,278,3.947,289,2.324,414,1.88,611,3.437,621,2.787,690,2.399,695,2.031,749,2.735,760,5.811,806,2.489,847,1.527,961,1.88,981,2.399,984,4.573,1007,3.124,1028,2.752,1029,2.752,1030,2.489,1031,2.752,1033,2.752,1034,2.752,1035,2.602,1036,2.752,1147,2.981,1148,2.981,1149,4.954,1150,2.981,1151,2.981,1152,2.981]],["t/382",[1,0.156,965,8.219,1090,9.733]],["t/385",[1,0.149,315,5.534,341,7.477,1153,8.139,1154,6.295]],["t/388",[1,0.2,23,1.433,32,1.557,38,1.992,65,3.048,263,2.072,323,2.347,324,2.498,325,2.358,326,2.617,327,2.585,419,2.179,425,1.515,455,4.301,459,1.756,606,3.728,1155,4.722,1156,3.505,1157,2.732,1158,3.505,1159,3.236,1160,3.059,1161,3.505,1162,3.505,1163,3.505,1164,3.236,1165,3.505,1166,2.275,1167,3.505,1168,3.059,1169,3.236,1170,3.505,1171,3.505,1172,3.505,1173,3.505,1174,3.505,1175,3.505,1176,3.505,1177,3.505,1178,3.059]],["t/390",[1,0.205,92,1.715,168,3.416,182,3.187,263,1.106,323,2.076,324,1.333,325,1.258,326,1.396,327,1.379,455,2.404,459,6.278,570,1.49,606,1.582,1179,6.225,1180,4.619]],["t/392",[1,0.204,23,1.792,65,0.622,263,0.669,323,1.347,324,0.806,325,0.761,326,0.844,327,0.834,419,3.168,422,2.709,454,5.314,455,2.106,459,4.76,570,0.901,609,4.142,672,3.322,674,2.106,832,2.46,1179,5.631,1181,1.825,1182,1.825,1183,7.795,1184,6.227,1185,6.745,1186,5.313,1187,1.825,1188,3.245,1189,1.825,1190,1.825,1191,1.825,1192,5.313,1193,3.245,1194,1.825,1195,3.824]],["t/394",[1,0.203,168,3.536,182,4.033,263,1.571,323,2.752,324,1.894,325,1.788,326,1.984,327,1.96,371,5.171,459,6.011,570,2.118,1179,5.538,1196,4.289,1197,4.289,1198,4.289,1199,4.289,1200,4.289]],["t/396",[1,0.2,65,2.079,92,5.335,168,2.056,182,1.918,253,1.83,263,1.413,315,2.111,323,2.533,324,1.704,325,1.608,326,1.785,327,1.763,414,5.921,425,1.667,455,1.854,459,5.845,570,1.905,587,5.565,606,3.973,1154,2.401,1166,3.962,1201,3.366]],["t/398",[1,0.186,450,7.515,1202,10.315]],["t/400",[1,0.2,263,2.334,294,4.133,315,3.485,323,3.683,324,2.813,325,2.656,326,2.947,327,2.912,459,3.19,570,3.145,798,2.683,1203,4.602,1204,4.965,1205,3.776,1206,4.419,1207,6.37,1208,5.558]],["t/402",[1,0.192,18,3.478,65,3.224,200,3.384,419,2.695,425,3.023,621,3.936,749,3.862,847,3.582,1209,6.995,1210,6.995,1211,6.995,1212,6.995,1213,6.995,1214,6.458,1215,6.458,1216,5.84,1217,6.995]],["t/404",[315,5.893,1218,9.398]],["t/406",[1,0.201,92,3.53,253,5.46,263,2.276,323,3.618,324,2.743,325,2.59,326,2.874,327,2.839,455,2.985,570,3.067,606,3.257,1219,5.42,1220,4.842]],["t/408",[1,0.198,92,3.402,168,3.191,182,2.977,253,5.386,263,2.194,323,3.526,324,2.645,325,2.496,326,2.77,327,2.737,455,2.877,512,3.114,570,2.956,606,3.139,1218,7.415,1219,5.225,1220,4.667]],["t/410",[1,0.203,92,3.038,253,5.151,263,1.959,315,2.925,323,3.249,324,2.361,325,2.229,326,2.473,327,2.444,570,2.64,606,2.803,1219,4.665,1220,4.167,1221,5.346,1222,5.346,1223,4.302,1224,5.346]],["t/412",[1,0.198,36,3.382,92,2.771,253,3.469,261,4.687,263,1.786,323,3.035,324,2.154,325,2.033,326,2.256,327,2.229,378,3.966,414,3.075,455,2.343,570,2.407,606,2.556,1220,3.801,1223,3.923,1225,4.289,1226,3.449,1227,7.848,1228,4.876,1229,4.876,1230,4.876,1231,4.876,1232,4.876,1233,4.876]],["t/414",[1,0.198,36,3.556,92,4.315,253,4.742,263,1.878,323,3.15,324,2.264,325,2.137,326,2.372,327,2.343,414,5.703,438,6.855,455,2.463,570,2.531,606,3.981,798,2.159,1220,3.996,1223,4.125,1225,4.452,1226,3.626,1227,4.125,1234,4.473]],["t/416",[1,0.199,36,5.188,92,4.25,253,4.238,263,1.84,323,3.103,324,2.219,325,2.094,326,2.324,327,2.296,414,4.716,455,2.414,570,2.48,606,3.921,730,7.459,798,2.115,1218,4.383,1220,3.916,1223,4.042,1225,4.385,1226,5.291,1227,4.042,1235,5.023]],["t/418",[1,0.159,182,5.356]],["t/420",[1,0.195,92,3.867,168,3.627,253,4.406,263,2.493,323,3.854,324,3.005,325,2.837,326,3.148,327,3.11,414,4.291,455,3.27,570,3.36,798,2.866,1227,7.475,1236,6.804]],["t/422",[1,0.187,65,3.071,182,4.484,419,3.475,425,3.898,1237,9.018,1238,9.018,1239,9.018]],["t/424",[1,0.185,65,3.311,419,3.745,1240,9.721,1241,9.721]],["t/426",[1,0.2,263,0.986,294,1.747,315,1.473,323,1.887,324,1.189,325,1.122,326,1.245,327,1.231,342,1.578,372,5.732,378,1.46,438,8.27,450,4.475,454,1.435,459,1.348,570,1.329,587,2.534,749,1.486,798,1.134,1166,5.459,1234,9.1,1242,11.153,1243,2.692,1244,2.692,1245,2.692,1246,5.45,1247,2.692,1248,2.692]],["t/430",[1,0.159,454,5.741]],["t/432",[1249,11.008]],["t/434",[1,0.201]],["t/437",[1,0.197,59,5.623,174,3.544,263,2.395,325,2.725,455,3.141,1250,5.704,1251,7.145,1252,7.544,1253,6.537,1254,6.537,1255,6.537,1256,6.537,1257,6.537]],["t/439",[1,0.198,174,3.544,263,2.395,459,3.274,1258,8.343,1259,6.007,1260,6.537,1261,6.537,1262,6.537,1263,6.537,1264,6.537,1265,6.537,1266,6.537,1267,6.537]],["t/441",[1,0.196,32,3.196,1258,8.907,1268,9.648,1269,10.884,1270,7.197,1271,7.197,1272,7.197,1273,7.197,1274,7.197,1275,7.197,1276,7.197]],["t/443",[1,0.196,32,1.662,160,3.011,174,2.337,261,3.569,263,2.721,323,3.514,324,3.281,325,2.485,378,3.232,455,3.569,512,1.946,904,4.819,1024,3.662,1065,5.49,1259,3.204,1277,3.742,1278,4.518,1279,3.011,1280,3.742,1281,3.742,1282,3.742,1283,3.742,1284,3.742,1285,8.539,1286,3.742,1287,3.742,1288,2.917,1289,3.742,1290,3.742,1291,3.742,1292,3.742,1293,3.742,1294,3.124,1295,3.742,1296,2.917]],["t/445",[1,0.189,261,4.029,263,3.072,323,3.894,378,4.547,455,4.029,904,6.561,1024,7.027,1065,7.88,1288,5.386,1296,5.386,1297,5.559,1298,5.559,1299,5.559,1300,5.559,1301,4.522,1302,4.522,1303,4.522]],["t/447",[1,0.193,261,4.196,263,2.521,315,1.828,323,4.644,325,3.307,378,3.731,455,3.306,711,4.868,904,6.074,1024,5.751,1065,6.919,1288,5.364,1296,5.364,1297,6.382,1298,5.537,1299,6.382,1300,5.537,1304,5.744,1305,3.084,1306,3.341,1307,3.341]],["t/449",[1,0.193,261,2.625,263,2.001,315,2.989,323,4.277,325,3.317,378,2.962,455,2.625,711,3.865,904,5.162,1024,6.333,1065,5.881,1166,3.545,1285,7.345,1288,4.259,1296,4.259,1297,4.396,1298,4.396,1299,4.396,1300,4.396,1304,4.561,1308,5.463,1309,4.767,1310,5.463]],["t/451",[1,0.197,261,2.429,263,3.049,323,4.403,324,3.961,325,3.47,326,1.413,327,1.396,378,3.506,455,3.106,711,4.573,904,4.875,1024,6.326,1065,6.153,1166,3.28,1288,3.94,1296,3.94,1297,4.067,1298,4.067,1299,4.067,1300,4.067,1304,2.55,1305,2.82,1309,2.665,1311,3.054,1312,3.054,1313,3.054,1314,2.82,1315,2.161]],["t/453",[1,0.192,261,2.569,263,2.869,323,4.233,325,3.265,378,2.899,455,2.569,711,5.54,904,5.081,1024,6.268,1065,5.789,1288,4.167,1296,4.167,1297,4.302,1298,4.302,1299,4.302,1300,4.302,1304,4.463,1309,4.665,1316,7.831,1317,5.346,1318,5.346,1319,5.346,1320,5.346]],["t/457",[1,0.193,32,2.166,261,2.343,263,3.216,315,2.668,323,4.856,324,2.154,325,3.66,326,2.256,327,2.229,378,2.644,425,2.107,455,2.343,570,2.407,904,3.164,1166,4.746,1321,4.439,1322,5.885,1323,4.501,1324,9.753,1325,4.876,1326,4.876,1327,4.876,1328,4.876,1329,4.876]],["t/460",[1,0.152,315,6.624,1330,10.325]],["t/462",[1,0.201,315,6.275,1331,8.005,1332,7.39,1333,8.005,1334,8.005]],["t/464",[1,0.133,315,6.106,610,5.288,749,4.979,1335,9.018,1336,9.018,1337,9.018,1338,9.018,1339,9.018,1340,7.529]],["t/467",[1,0.196,466,5.792,1040,8.479,1341,8.014,1342,8.479]],["t/469",[1,0.2,948,4.18,1166,5.864,1315,6.393,1343,6.035,1344,6.537,1345,6.537,1346,6.537,1347,6.537,1348,6.035,1349,6.537,1350,6.537,1351,4.832,1352,6.537,1353,6.537]],["t/472",[1,0.195]],["t/474",[1,0.195]],["t/476",[1,0.198]],["t/478",[1,0.198]],["t/480",[1,0.195,610,5.591,749,5.265,1340,7.96]],["t/483",[1,0.194,65,1.801,263,1.938,315,2.894,323,3.224,324,3.432,325,2.205,327,2.418,378,2.868,473,3.821,570,2.612,798,2.228,1315,3.742,1354,8.502,1355,5.289,1356,5.289,1357,5.289,1358,5.289,1359,5.289,1360,5.289,1361,4.883,1362,5.289,1363,5.289,1364,5.289,1365,5.289,1366,4.615,1367,5.289,1368,5.289,1369,4.883,1370,5.289,1371,5.289]],["t/486",[1,0.199,253,1.903,263,1.47,323,2.613,324,1.772,325,1.673,326,1.856,327,1.834,455,3.027,570,1.981,594,3.705,798,1.69,847,3.981,1166,4.087,1225,2.353,1251,4.028,1259,4.179,1372,4.013,1373,6.49,1374,4.013,1375,8.806,1376,4.013,1377,4.013,1378,4.013,1379,5.5,1380,4.013,1381,5.258,1382,4.013,1383,3.128,1384,4.013,1385,4.013,1386,4.013,1387,3.502]],["t/488",[1,0.191,23,3.128,65,3.422,253,2.457,263,1.898,323,3.775,324,2.288,325,2.16,326,2.396,327,2.368,455,2.489,570,2.557,798,2.181,847,2.652,1225,3.037,1251,3.312,1259,2.784,1373,6.387,1379,5.412,1381,4.324,1383,7.092,1388,7.651,1389,5.179,1390,7.651,1391,5.179,1392,5.179,1393,5.179]],["t/490",[1,0.19,117,2.467,168,4.879,182,3.834,253,2.482,263,1.917,323,3.199,324,2.312,325,2.182,326,2.421,327,2.392,570,2.584,606,2.744,798,2.204,816,3.301,847,4.688,1225,4.52,1251,3.347,1259,2.813,1381,4.369,1383,7.136,1394,4.567,1395,4.08,1396,3.215,1397,5.234,1398,5.234,1399,4.369,1400,5.234,1401,5.234,1402,5.234]],["t/492",[1,0.167,253,3.679,263,2.842,323,4.207,324,3.426,325,3.234,326,3.588,327,3.546,570,3.83,674,5.033,847,5.192,1205,6.011,1383,6.046,1403,7.756,1404,7.756]],["t/494",[1,0.192,62,6.322,253,1.788,263,1.381,323,1.564,324,3.757,325,1.572,326,1.744,327,1.723,378,4.048,454,2.01,455,3.587,459,1.888,747,2.187,798,1.588,1160,3.29,1225,2.211,1251,2.411,1259,2.027,1383,9.338,1387,3.29,1405,3.147,1406,5.996,1407,8.506,1408,6.891,1409,3.77,1410,3.77,1411,3.77,1412,3.77,1413,3.77,1414,2.411,1415,3.481,1416,3.481,1417,3.481,1418,3.77,1419,3.481]],["t/496",[1,0.191,18,2.378,62,6.177,253,2.268,263,1.752,323,2.991,324,3.832,325,1.994,326,2.212,327,2.186,419,1.842,454,2.549,455,4.98,459,2.395,570,2.361,606,2.507,747,2.774,798,2.014,1160,4.173,1259,2.571,1387,4.173,1408,6.655,1414,3.058,1415,4.415,1417,4.415,1419,4.415,1420,4.173,1421,8.676,1422,4.782,1423,4.782,1424,4.782,1425,4.782]],["t/498",[1,0.176,18,4.662,38,3.92,263,2.527,294,4.476,323,3.89,324,3.047,325,2.876,326,3.191,327,3.153,342,4.045,570,3.406,798,2.905,1251,4.411,1259,3.708,1383,5.377,1426,6.368,1427,6.898,1428,6.898,1429,6.898,1430,6.019,1431,6.368]],["t/500",[1,0.186,263,1.917,294,5.94,323,3.199,324,2.312,325,2.182,326,2.421,327,2.392,342,5.367,473,3.781,570,2.584,798,2.204,1251,4.93,1259,6.26,1430,4.567,1431,7.118,1432,5.234,1433,5.234,1434,5.234,1435,5.234,1436,5.234,1437,5.234,1438,4.567,1439,5.234,1440,5.234,1441,5.234,1442,5.234,1443,4.832]],["t/502",[1,0.191,263,2.117,294,3.75,323,3.438,324,2.553,325,2.41,326,2.674,327,2.642,342,4.858,570,2.854,728,3.808,798,2.434,1259,6.267,1430,7.231,1438,5.043,1443,5.335,1444,5.779,1445,5.779,1446,5.335,1447,5.779,1448,5.779,1449,5.779,1450,5.779]],["t/504",[1,0.192,38,3.846,263,1.613,294,5.351,323,2.808,324,1.944,325,1.836,326,2.037,327,2.012,342,4.835,392,5.906,455,2.115,473,3.181,570,2.174,728,2.901,748,3.181,781,5.65,798,1.854,1251,5.919,1259,4.433,1379,3.114,1426,4.064,1438,3.841,1446,4.064,1451,6.768,1452,4.402,1453,3.542,1454,4.402,1455,4.402,1456,4.402,1457,4.402,1458,4.402,1459,3.542,1460,4.402,1461,4.402,1462,4.402,1463,4.402]],["t/506",[1,0.128,263,2.248,323,3.587,324,2.71,325,2.558,326,2.838,327,2.804,455,4.154,570,3.029,798,2.584,1251,5.529,1259,4.647,1379,6.116,1464,6.135,1465,10.034,1466,10.034,1467,6.135,1468,6.135,1469,6.135,1470,6.135,1471,6.135,1472,6.135,1473,7.981,1474,6.135]],["t/508",[1,0.128,263,2.248,323,3.587,324,2.71,325,2.558,326,2.838,327,2.804,455,4.154,570,3.029,798,2.584,1251,5.529,1259,4.647,1379,6.116,1465,10.034,1466,10.034,1473,5.663,1475,6.135,1476,6.135,1477,6.135,1478,6.135,1479,6.135,1480,8.645,1481,6.135,1482,6.135]],["t/510",[1,0.18,253,4.065,263,2.22,323,3.556,324,2.677,325,2.527,326,2.804,327,2.77,342,3.553,570,2.992,728,5.648,798,2.552,816,3.822,1259,5.346,1483,6.06,1484,6.06,1485,5.059,1486,5.059,1487,5.059,1488,4.287,1489,5.059,1490,6.06,1491,5.059,1492,6.06,1493,5.059,1494,6.06,1495,6.06]],["t/512",[1,0.184,253,4.101,263,2.248,323,3.587,324,2.71,325,2.558,326,2.838,327,2.804,342,3.597,570,3.029,728,4.042,798,2.584,816,3.869,1259,5.382,1485,5.121,1486,5.121,1487,5.121,1488,4.34,1489,5.121,1491,5.121,1493,5.121,1496,6.135,1497,6.135,1498,6.135,1499,6.135,1500,6.135]],["t/514",[1,0.186,253,3.714,263,1.959,323,3.249,324,2.361,325,2.229,326,2.473,327,2.444,365,5.789,570,2.64,728,3.522,798,2.251,816,5.844,1259,5.485,1485,4.463,1486,4.463,1487,4.463,1488,3.782,1489,4.463,1491,4.463,1493,4.463,1501,5.346,1502,5.346,1503,7.831,1504,5.346,1505,5.346,1506,5.346,1507,5.346,1508,5.346,1509,5.346]],["t/516",[1,0.184,253,4.101,263,2.248,323,3.587,324,2.71,325,2.558,326,2.838,327,2.804,342,3.597,570,3.029,728,4.042,798,2.584,816,3.869,1259,5.382,1485,5.121,1486,5.121,1487,5.121,1488,4.34,1489,5.121,1491,5.121,1493,5.121,1510,6.135,1511,6.135,1512,6.135,1513,6.135,1514,6.135]],["t/518",[1,0.183,263,2.364,323,3.716,324,2.85,325,2.69,326,2.985,327,2.949,570,3.186,798,2.717,1259,4.814,1278,4.891,1488,6.336,1515,6.981,1516,6.62,1517,5.03,1518,5.03,1519,5.03,1520,4.891,1521,5.63,1522,5.956,1523,5.03,1524,5.192]],["t/520",[1,0.183,263,2.364,323,3.716,324,2.85,325,2.69,326,2.985,327,2.949,570,3.186,798,2.717,1259,4.814,1278,4.891,1488,6.336,1515,6.981,1516,6.62,1517,5.03,1518,5.03,1519,5.03,1520,4.891,1521,5.63,1523,5.03,1524,5.192,1525,5.63]],["t/522",[1,0.183,263,2.364,323,3.716,324,2.85,325,2.69,326,2.985,327,2.949,570,3.186,798,2.717,1259,4.814,1278,4.891,1488,6.336,1515,6.981,1516,6.62,1517,5.03,1518,5.03,1519,5.03,1520,4.891,1521,5.63,1523,5.03,1526,6.452,1527,6.452]],["t/524",[1,0.187,263,2.22,323,3.556,324,2.677,325,2.527,326,2.804,327,2.77,570,2.992,798,2.552,1205,3.593,1259,5.346,1278,4.594,1488,4.287,1515,4.724,1516,4.48,1517,4.724,1518,4.724,1519,4.724,1520,4.594,1522,5.595,1523,4.724,1524,4.876,1528,6.06,1529,5.288,1530,5.288,1531,6.06,1532,5.595]],["t/526",[1,0.192,263,2.142,323,3.467,324,2.583,325,2.438,326,2.705,327,2.673,798,2.463,1205,3.467,1259,5.241,1278,4.432,1488,4.136,1515,4.558,1516,4.322,1517,4.558,1518,4.558,1519,4.558,1520,4.432,1523,4.558,1524,4.705,1525,5.102,1529,5.102,1530,5.102,1532,5.398,1533,5.847,1534,5.847,1535,5.847]],["t/528",[1,0.188,263,2.276,323,3.618,324,2.743,325,2.59,326,2.874,327,2.839,570,3.067,798,2.616,1205,3.682,1259,4.688,1278,4.708,1488,4.394,1515,4.842,1516,4.591,1517,4.842,1518,4.842,1519,4.842,1520,4.708,1523,4.842,1524,4.998,1525,5.42,1529,5.42,1530,5.42,1536,6.211,1537,6.211]],["t/530",[1,0.178,253,3.365,263,2.599,323,3.965,324,3.134,325,2.958,326,3.282,327,3.243,570,3.503,798,2.988,816,4.474,1166,6.201,1259,5.137,1516,5.244,1538,6.549,1539,7.094,1540,7.094,1541,7.094,1542,7.094]],["t/532",[1,0.182,253,3.272,263,2.527,323,3.89,324,3.047,325,2.876,326,3.191,327,3.153,570,3.406,798,2.905,816,4.35,1166,6.084,1259,5.041,1369,6.368,1516,5.099,1538,6.368,1543,6.898,1544,6.898,1545,6.898,1546,6.898]],["t/534",[1,0.178,263,2.887,323,4.25,324,3.48,325,3.285,326,3.645,327,3.602,570,3.89,798,3.318,1166,6.646,1547,9.456,1548,7.879,1549,7.879]],["t/536",[1,0.197,315,5.424]],["t/538",[263,3.783,1075,8.308,1155,8.619,1550,9.532]],["t/540",[1,0.197,315,6.038,1341,7.73,1551,8.858,1552,6.548]],["t/542",[1,0.19,263,2.563,315,3.827,317,5.302,319,4.684,323,3.927,324,3.09,325,2.917,326,3.236,327,3.198,328,6.458,526,4.298,1315,6.696,1341,8.26,1343,6.458,1553,6.995,1554,4.948]],["t/545",[1,0.19,315,5.217,454,6.155,1555,9.535]],["t/547",[1556,10.163]],["t/549",[1,0.162]],["t/551",[1,0.201,116,4.81,204,6.28,263,2.756,276,5.322,454,5.297,1332,6.945,1557,7.522,1558,7.522]],["t/554",[1,0.163,315,4.846,946,6.905,1559,8.858,1560,8.858,1561,8.858,1562,8.858,1563,8.858,1564,6.905,1565,8.178,1566,8.858]],["t/556",[1,0.146,610,5.813,749,5.474,1340,8.277,1567,9.914,1568,9.153]],["t/559",[1,0.197,315,5.424]],["t/561",[1,0.176,263,4.383,315,5.534]],["t/563",[1,0.199,65,2.934,200,1.866,263,2.776,323,4.143,324,3.347,325,3.16,326,3.506,327,3.464,414,2.433,419,1.486,425,1.667,455,4.14,606,2.023,847,1.976,1159,3.561,1314,5.637,1416,3.561,1569,6.106,1570,3.858,1571,3.858,1572,3.858,1573,5.328,1574,6.106,1575,7.578,1576,3.858]],["t/565",[1,0.204,18,2.552,65,1.748,168,1.659,182,1.547,200,2.483,263,1.14,323,1.291,324,1.374,325,1.297,327,1.422,371,2.426,378,1.687,419,1.977,450,6.373,454,1.659,455,1.495,609,2.426,798,1.311,1155,2.598,1166,2.019,1223,2.504,1227,2.504,1251,1.99,1259,1.673,1315,2.201,1373,2.598,1379,2.201,1381,2.598,1396,1.912,1577,3.112,1578,3.112,1579,3.112,1580,3.112,1581,3.112,1582,3.112,1583,2.873,1584,3.112,1585,3.112,1586,3.112,1587,3.112,1588,3.112,1589,3.112,1590,3.112,1591,3.112,1592,3.112,1593,3.112]],["t/567",[1,0.203,182,3.74,261,3.615,371,5.864,1594,6.564,1595,5.561,1596,6.28,1597,7.522]],["t/569",[1,0.177,263,3.245,323,4.579,324,3.913,325,3.693,326,4.098,327,4.049,1598,8.858,1599,8.858]],["t/571",[1,0.17,455,4.582,1379,6.746,1600,9.535,1601,8.803,1602,9.535,1603,9.535]],["t/573",[1,0.156,315,5.768,1168,9.2]],["t/575",[1604,11.008]],["t/577",[1605,10.77,1606,10.77]],["t/579",[1,0.191,125,4.675,152,4.206,263,2.599,323,2.943,324,3.134,325,2.958,326,3.282,327,3.243,455,3.409,1164,6.549,1168,8.339,1169,6.549,1607,7.094,1608,7.094,1609,7.094,1610,7.094,1611,7.094]],["t/581",[1,0.198,263,3.167,323,3.587,325,3.605,455,2.948,459,6.118,1179,5.121,1180,5.663,1321,3.723,1612,8.645,1613,6.135,1614,6.739]],["t/583",[1,0.188,62,5.886,174,3.609,263,2.459,323,2.785,325,3.837,455,3.226,1259,3.609,1615,8.031,1616,9.203,1617,6.712,1618,6.712,1619,6.712,1620,6.712,1621,6.712,1622,6.712,1623,6.712,1624,6.712]],["t/585",[1,0.192,174,3.544,253,3.1,263,3.311,323,2.712,455,5.369,1321,3.967,1596,7.544,1614,7.044,1615,9.038,1625,6.537,1626,6.537,1627,6.537,1628,6.537]],["t/588",[1,0.175,59,5.323,263,3.134,323,3.549,450,6.484,455,4.111,904,5.551,1251,6.905,1252,7.141,1596,7.141,1629,7.897]],["t/590",[1,0.162]],["t/592",[1,0.192,1259,4.521,1630,10.837,1631,10.837,1632,8.41,1633,7.021]],["t/594",[1,0.2,32,5.017,315,4.244,1630,7.16,1631,7.16,1634,7.756,1635,7.756,1636,7.756]],["t/596",[1,0.193,1251,5.873,1637,9.184,1638,9.184,1639,9.184,1640,9.184]],["t/598",[1,0.199,23,2.608,32,1.811,263,1.494,323,2.647,324,1.801,325,1.7,326,1.887,327,1.864,455,3.065,584,4.425,606,2.138,798,1.718,1166,2.646,1259,3.429,1633,3.405,1641,3.559,1642,3.765,1643,3.765,1644,4.078,1645,4.078,1646,4.078,1647,4.078,1648,4.078,1649,4.078,1650,4.078,1651,4.078,1652,4.078,1653,4.078,1654,4.078,1655,4.078,1656,4.078,1657,4.078,1658,4.078,1659,4.078,1660,4.078,1661,4.078,1662,4.078,1663,6.558,1664,3.765,1665,4.078]],["t/600",[1,0.183,419,2.988,455,3.727,847,3.972,1601,7.16,1666,7.756,1667,7.756,1668,7.756,1669,7.756,1670,7.756,1671,7.756,1672,7.756,1673,7.756,1674,7.756,1675,7.756,1676,7.756]],["t/602",[1,0.131,32,3.934,315,6.038,455,5.776,1205,5.252,1259,4.762,1642,8.178,1677,8.858,1678,8.858]],["t/604",[1,0.2,23,3.114,65,1.324,263,1.424,323,2.549,324,1.717,325,1.621,326,1.799,327,1.777,446,5.129,455,3.66,798,1.637,1259,4.094,1633,3.246,1641,3.392,1643,3.589,1663,7.224,1664,7.031,1679,5.671,1680,5.671,1681,7.031,1682,7.616,1683,3.888,1684,3.888,1685,7.867,1686,3.888,1687,3.888]],["t/606",[1,0.192,263,2.395,323,3.749,324,2.887,325,2.725,326,3.024,327,2.988,373,4.18,446,5.457,1259,4.858,1633,7.544,1641,5.704,1679,6.035,1680,6.035,1681,6.035,1688,6.537,1689,7.271,1690,9.037]],["t/608",[1,0.197,23,2.638,65,2.197,200,3.121,323,2.677,324,2.85,325,2.69,373,4.126,419,3.963,455,4.303,621,3.631,1691,6.452,1692,6.452,1693,6.452,1694,6.452,1695,6.452,1696,6.452,1697,6.452]],["t/610",[1,0.194,23,2.673,32,2.903,65,2.226,146,7.327,174,2.563,323,2.712,324,2.887,455,4.977,898,7.271,899,4.377,1698,6.537,1699,6.537,1700,6.537,1701,6.537,1702,6.537,1703,6.537]],["t/612",[1,0.174,32,4.404,378,5.376,1704,7.014,1705,9.914]],["t/614",[1,0.196,32,5.456,62,3.212,303,4.485,378,4.056,455,2.414,1706,5.023,1707,5.023,1708,7.479,1709,7.479,1710,5.023,1711,5.023,1712,5.023,1713,5.023,1714,5.023,1715,5.023,1716,5.023,1717,5.023,1718,5.023,1719,5.023,1720,5.023,1721,5.023,1722,5.023,1723,5.023]],["t/616",[1,0.195,32,3.766,65,1.569,263,1.687,323,1.911,324,2.034,325,1.92,326,2.131,327,2.105,419,2.699,425,3.028,455,3.367,674,2.988,748,3.327,781,3.845,1155,3.845,1205,5.027,1724,4.605,1725,4.605,1726,7.006,1727,7.006,1728,4.605,1729,4.605,1730,4.605,1731,7.006,1732,4.605,1733,4.605,1734,4.605,1735,4.605,1736,4.605,1737,4.605,1738,4.605,1739,4.605,1740,4.605,1741,4.605]],["t/618",[1,0.193,65,2.473,200,2.336,323,4.027,324,4.287,325,3.028,371,3.764,419,1.86,425,2.087,455,4.664,610,2.831,749,2.666,1117,4.213,1379,5.137,1394,4.213,1568,4.458,1742,4.828,1743,4.458,1744,3.885,1745,4.828,1746,4.828,1747,3.416,1748,4.828,1749,4.828,1750,4.213,1751,4.828,1752,4.828,1753,4.458,1754,4.828,1755,4.828,1756,4.828]],["t/621",[1,0.193,32,3.853,263,1.752,323,2.991,324,2.112,325,1.994,326,2.212,327,2.186,378,6.58,450,3.625,459,2.395,1166,3.103,1205,2.835,1206,3.318,1395,5.619,1757,7.208,1758,7.208,1759,4.782,1760,4.782,1761,4.782,1762,7.208,1763,4.782,1764,4.173,1765,4.782,1766,3.992,1767,7.208,1768,4.782]],["t/623",[1,0.191,263,2.493,323,3.854,324,3.005,325,2.837,326,3.148,327,3.11,378,3.69,455,3.27,674,4.415,798,2.866,1166,4.415,1208,8.106,1764,5.937,1769,5.475,1770,6.804,1771,9.289,1772,6.804]],["t/625",[1,0.196,263,2.395,323,3.749,324,2.887,325,2.725,326,3.024,327,2.988,378,4.9,798,2.753,1361,6.035,1764,5.704,1773,6.537,1774,6.537,1775,10.357,1776,5.457,1777,6.537,1778,6.537]],["t/627",[1,0.203,62,4.819,294,4.89,342,4.418,378,5.395,1348,4.684,1779,5.074,1780,8.298,1781,5.074,1782,7.535,1783,7.535,1784,7.535,1785,5.074,1786,5.074]],["t/629",[1,0.162]],["t/632",[1,0.162]],["t/634",[1787,7.953]],["t/637",[1,0.194,1788,8.827]],["t/639",[1,0.172,896,8.115,1787,7.023,1788,8.483,1789,7.369,1790,7.578]],["t/641",[1,0.198,696,6.496,1791,9.535]],["t/644",[1,0.202,459,5.532,1206,5.141,1792,7.41,1793,7.41,1794,7.41,1795,7.41,1796,6.841]],["t/646",[1,0.187,150,7.557,1153,10.437,1797,10.568]],["t/648",[1,0.194,11,5.289,65,2.817,276,5.851,935,7.635,1153,8.504,1342,7.635,1798,7.635,1799,8.27]],["t/652",[1,0.174,342,5.813,606,5.198,1800,9.914,1801,9.914]],["t/654",[1,0.204,410,4.381,747,3.352,1205,3.426,1796,5.335,1802,5.779,1803,5.779,1804,5.779,1805,5.779,1806,5.779,1807,5.779,1808,5.779,1809,5.779,1810,5.779,1811,5.779,1812,5.779]],["t/656",[1,0.205,1203,5.435,1813,7.522,1814,7.522,1815,7.522]],["t/658",[1,0.186,294,5.748,342,5.194,544,4.762,1206,6.145,1766,7.395,1816,8.858,1817,8.858,1818,8.858]],["t/660",[1,0.198]],["t/663",[1,0.183]],["t/665",[1,0.198]],["t/667",[1819,11.008]],["t/669",[1,0.162]],["t/671",[1,0.162]],["t/673",[1,0.162]],["t/675",[1820,11.008]],["t/677",[1,0.162]],["t/679",[1,0.204,62,7.309,1206,7.929]],["t/681",[1,0.197,62,8.032,65,3.158,419,3.573,425,3.388,454,4.178,459,4.327,1206,8.652,1821,6.787,1822,3.275,1823,3.275,1824,3.275]],["t/683",[1,0.194,279,6.546,1203,7.555,1206,5.644,1750,9.125,1825,8.136,1826,8.136,1827,7.511,1828,8.136]],["t/685",[1,0.193,1750,9.031,1827,7.39,1829,8.005,1830,10.349,1831,9.554,1832,8.005,1833,8.005,1834,8.005]],["t/687",[1835,11.008]],["t/691",[1,0.162]],["t/693",[1,0.152,62,6.603,1836,10.325,1837,9.009]],["t/695",[1,0.173,145,4.015,366,6.767,1787,6.076,1838,8.137,1839,8.41,1840,8.41,1841,8.41,1842,8.41,1843,7.764]],["t/698",[1,0.179,219,5.528,261,3.676,584,5.308,1043,7.063,1787,5.528,1837,6.676,1844,7.063,1845,4.781,1846,7.063,1847,7.651,1848,5.179,1849,5.179,1850,5.179,1851,5.179,1852,5.179,1853,5.179,1854,5.179,1855,5.179,1856,5.179,1857,5.179,1858,5.179,1859,5.179,1860,5.179,1861,5.179,1862,5.179,1863,5.179,1864,5.179,1865,7.651,1866,5.179,1867,5.179,1868,5.179,1869,5.179,1870,5.179]],["t/700",[1,0.183,219,4.723,261,3.141,361,5.096,366,5.26,372,4.832,1787,6.529,1837,5.704,1838,5.954,1845,10.315,1871,9.037,1872,6.537,1873,6.537,1874,6.537,1875,6.537,1876,9.038,1877,6.537,1878,6.537]],["t/703",[1564,8.396,1787,7.782]],["t/705",[1,0.191]],["t/707",[1,0.202,1787,6.516,1879,9.018]],["t/709",[1,0.162]],["t/711",[1787,7.459,1844,9.532,1880,10.325,1881,10.325]],["t/714",[1,0.202]],["t/716",[1,0.181,1882,7.992]],["t/719",[1,0.162]],["t/721",[1,0.162]],["t/723",[1,0.162]],["t/725",[1,0.181,1882,7.992]],["t/727",[1,0.162]],["t/729",[1,0.159,1883,10.77]],["t/731",[1884,10.543,1885,8.483,1886,8.801]],["t/733",[1887,10.543,1888,10.543,1889,10.543]],["t/735",[1882,8.345]],["t/737",[1882,8.345]],["t/739",[1882,8.345]],["t/741",[1882,8.345]],["t/744",[1890,11.008]],["t/746",[1,0.196,1882,8.855]],["t/748",[1,0.162]],["t/750",[1,0.162]],["t/753",[1,0.162]],["t/755",[1,0.162]],["t/757",[1,0.186,62,1.15,65,3.911,92,1.022,200,5.681,419,4.346,425,4.876,454,0.959,473,4.356,475,4.7,832,4.571,847,5.777,886,1.502,995,1.447,1203,1.3,1226,4.266,1246,1.661,1340,1.502,1891,1.799,1892,6.029,1893,1.799,1894,3.204,1895,1.799,1896,1.799,1897,3.204,1898,1.799,1899,1.799,1900,1.799,1901,1.799,1902,1.799,1903,4.332,1904,1.799,1905,1.799,1906,1.799,1907,5.261,1908,1.799,1909,3.204,1910,1.799,1911,1.799]],["t/759",[1,0.162]],["t/762",[1,0.201,117,3.713,158,7.274,1154,7.499,1912,6.875]],["t/764",[1,0.194,5,6.266,10,4.762,154,4.946,341,6.434,1154,6.792]],["t/766",[1,0.179,154,5.867,1154,6.425]],["t/768",[1,0.149,5,6.867,117,5.638]],["t/770",[1,0.156,10,5.768,1913,10.543]],["t/773",[1,0.175,141,4.723,142,4.769,150,5.551,1007,5.395,1154,6.719,1914,7.897,1915,6.323,1916,8.554,1917,5.728]],["t/776",[1,0.188,419,3.539,798,3.868,1918,7.667,1919,8.479,1920,5.574,1921,9.184]],["t/778",[1,0.188,419,3.539,798,3.868,1919,8.479,1920,5.574,1922,8.479,1923,9.184]],["t/780",[1,0.198,203,6.809,1924,7.897,1925,8.554,1926,8.554,1927,8.554]],["t/782",[1,0.195,92,3.53,141,3.429,142,2.743,187,4.708,261,2.985,753,5.185,798,2.616,904,4.03,1154,3.865,1629,5.734,1915,4.591,1917,4.159,1920,3.769,1924,5.734,1928,8.721,1929,4.708,1930,4.708,1931,6.211,1932,6.211,1933,4.708,1934,3.725,1935,6.211]],["t/784",[1,0.2,92,4.09,187,5.455,261,3.458,904,4.67,1936,10.884,1937,7.197,1938,7.197,1939,7.197,1940,7.197,1941,6.644]],["t/786",[1,0.198,143,6.193,1942,7.637,1943,7.637,1944,10.037,1945,10.037,1946,7.637]],["t/789",[1,0.198,141,3.517,142,2.813,323,2.643,1154,5.523,1912,7.745,1915,4.709,1917,4.266,1929,4.828,1930,4.828,1933,4.828,1934,3.82,1947,6.37,1948,6.37,1949,6.37,1950,6.37,1951,5.125,1952,6.37,1953,6.37]],["t/791",[1,0.194,151,6.071,323,3.882,1838,6.165,1954,9.356]],["t/793",[1,0.156,1955,10.543,1956,10.543]],["t/795",[1,0.14,10,3.827,11,4.473,1014,5.054,1015,4.765,1459,5.628,1917,4.684,1934,4.195,1957,11.686,1958,6.995,1959,6.458,1960,6.458,1961,5.84,1962,6.995,1963,7.616,1964,6.458,1965,6.458,1966,6.458,1967,6.995]],["t/798",[1,0.181,1968,10.543]],["t/801",[1,0.195,132,5.748,694,4.937,1154,6.868,1969,8.858,1970,8.858]],["t/803",[1,0.185,798,4.094,1920,5.899,1971,9.721,1972,8.974]],["t/805",[694,6.135]],["t/808",[1,0.19,798,4.597,1920,6.624,1972,10.077,1973,8.703,1974,8.703]],["t/810",[1,0.2,32,1.905,141,3.663,142,3.583,187,3.251,349,4.304,529,2.543,696,4.519,798,2.794,1154,5.681,1914,3.959,1915,3.17,1917,2.872,1920,4.026,1929,3.251,1930,3.251,1933,3.251,1975,6.124,1976,3.58,1977,4.289,1978,4.289,1979,6.595,1980,4.289,1981,4.289,1982,4.289,1983,4.289,1984,4.289,1985,3.58,1986,4.289]],["t/812",[1,0.159,1987,10.77]],["t/815",[1,0.159,1988,10.77]],["t/817",[1,0.181,1154,6.561]],["t/819",[1,0.191,90,3.712,466,7.581,798,3.731,1920,5.376,1989,8.858]],["t/821",[1,0.162]],["t/823",[1,0.17,142,4.212,466,7.282,1990,7.96,1991,9.535,1992,6.013]],["t/825",[1,0.192,90,1.511,141,1.991,142,3.201,187,2.734,466,4.571,696,2.457,798,3.052,1014,4.181,1015,3.942,1154,5.161,1915,2.666,1917,4.853,1920,4.398,1929,2.734,1930,2.734,1933,2.734,1934,3.47,1957,8.949,1959,5.342,1960,5.342,1961,4.831,1963,6.674,1964,5.342,1965,5.342,1966,5.342,1976,3.011,1979,2.606,1985,3.011,1990,4.831,1992,2.274,1993,3.607,1994,3.33,1995,3.607,1996,3.011,1997,5.787,1998,5.787]],["t/827",[1,0.18,466,7.117,798,3.868,1044,6.635,1920,5.574,1992,5.792,1999,8.479]],["t/829",[1,0.175,466,7.461,798,4.547,1920,6.552,1999,7.897,2000,8.554,2001,8.554,2002,8.554]],["t/831",[1,0.199,90,1.966,141,2.591,142,4.225,466,4.481,798,3.612,1014,5.134,1154,4.422,1915,3.468,1917,3.142,1920,6.237,1929,3.557,1930,3.557,1933,3.557,1979,3.39,1985,3.917,1990,3.917,1992,2.959,1994,4.332,1996,3.917,2003,4.692,2004,3.917,2005,5.932,2006,3.917,2007,4.332]],["t/833",[1,0.198,90,2.023,141,2.666,142,4.287,466,4.579,798,3.675,1014,5.246,1154,4.518,1915,3.569,1917,3.233,1918,4.031,1920,5.89,1929,3.66,1930,3.66,1933,3.66,1976,4.031,1979,3.488,1985,4.031,1990,6.062,1992,3.045,1996,4.031,2004,4.031,2005,6.062,2006,4.031,2007,4.458]],["t/835",[1,0.198,798,3.986,1918,5.84,1920,5.744,2005,5.84,2006,7.902,2008,8.738,2009,8.738,2010,8.738,2011,6.995]],["t/837",[1,0.201,466,6.884,798,3.666,1920,5.282]],["t/839",[1,0.198,1154,7.185]],["t/841",[1,0.196,141,4.217,798,3.217,1918,8.379,1920,4.635,1922,7.051,1976,6.376,2005,6.376,2006,6.376,2008,7.051,2009,7.051,2010,7.051]],["t/843",[1,0.174,466,6.252,1975,9.153,2012,9.914,2013,9.914]],["t/845",[1,0.186,32,3.934,942,6.905,1294,7.395,2014,8.858,2015,8.858,2016,8.858,2017,8.858,2018,8.858]],["t/847",[1,0.2,21,2.745,141,3.33,142,2.664,168,2.025,187,4.572,203,3.804,261,1.825,606,1.992,694,2.117,798,2.54,904,2.465,1154,5.316,1321,2.305,1912,3.315,1915,4.459,1917,5.024,1920,3.66,1929,4.572,1930,4.572,1933,4.572,1941,3.507,1996,5.036,2019,3.799,2020,6.032,2021,3.799,2022,3.799,2023,3.799,2024,3.799,2025,6.032,2026,6.032,2027,3.799,2028,3.799]],["t/851",[1,0.196,6,4.224,151,5.852,333,4.807,529,5.347,1951,7.257]],["t/853",[1,0.182,6,1.028,13,1.424,14,1.766,15,1.915,16,3.514,17,1.622,18,1.091,20,1.348,22,1.552,23,2.475,31,2.183,32,0.975,36,1.522,38,1.247,41,2.477,57,2.515,59,2.375,66,1.552,90,1.599,121,2.434,154,1.247,170,1.766,174,0.861,302,1.332,382,1.552,384,3.839,403,1.47,404,2.477,419,0.846,462,1.586,584,1.522,696,1.495,747,1.273,879,1.316,940,1.915,1205,3.003,1226,3.583,1279,1.766,2029,2.026,2030,2.026,2031,1.832,2032,2.026,2033,2.026,2034,2.026,2035,2.026,2036,2.026,2037,2.194,2038,2.194,2039,2.757,2040,1.832,2041,2.194,2042,2.975,2043,1.711,2044,1.832,2045,2.194,2046,2.194,2047,2.194,2048,2.194,2049,3.817,2050,2.194,2051,2.194,2052,1.622,2053,1.766,2054,3.583,2055,2.648,2056,1.711,2057,2.026,2058,3.33,2059,4.419,2060,1.711,2061,1.766,2062,1.316,2063,3.817,2064,1.915,2065,1.766,2066,1.586,2067,1.663,2068,1.832,2069,2.194,2070,1.766,2071,1.403,2072,1.446,2073,1.663,2074,2.194,2075,2.194,2076,1.832,2077,3.33,2078,2.194,2079,2.194,2080,2.194,2081,2.194,2082,2.194,2083,2.194,2084,2.194,2085,3.071,2086,2.194,2087,2.194,2088,2.194,2089,3.817,2090,2.194,2091,2.194,2092,2.194,2093,2.194,2094,2.026,2095,1.915,2096,2.194,2097,2.194,2098,2.194,2099,2.194,2100,2.194,2101,2.194,2102,2.194,2103,2.194,2104,2.194,2105,2.194,2106,2.194,2107,2.194,2108,2.194,2109,2.194]],["t/855",[1,0.202,6,3.371,7,4.539,20,4.422,151,4.67,357,6.008,2110,4.819,2111,7.197,2112,7.197,2113,5.2,2114,7.197]],["t/857",[1,0.182,62,6.831,142,3.715,2110,5.632,2115,7.339,2116,5.457,2117,7.764,2118,7.764,2119,7.764,2120,7.764,2121,7.764]],["t/859",[1,0.195,90,3.152,151,4.881,174,2.95,2122,6.945,2123,5.702,2124,5.322,2125,6.547,2126,5.561,2127,6.945,2128,6.945,2129,6.945,2130,6.945]],["t/861",[1,0.197,90,3.787,142,3.991,174,2.563,2123,4.955,2125,5.954,2131,6.035,2132,5.704,2133,6.035,2134,7.885,2135,6.035,2136,6.035,2137,5.096,2138,5.704,2139,5.457,2140,6.035]],["t/863",[1,0.197,90,3.787,142,3.991,174,2.563,2123,4.955,2125,5.954,2132,5.704,2134,7.885,2137,5.096,2139,5.457,2141,6.035,2142,6.035,2143,6.035,2144,6.035,2145,5.704,2146,6.035]],["t/865",[1,0.192,7,4.122,90,2.739,142,2.887,174,2.563,2123,4.955,2125,5.954,2137,5.096,2139,5.457,2147,6.035,2148,6.035,2149,8.343,2150,6.035,2151,6.035,2152,4.535,2153,5.704,2154,6.035,2155,6.035,2156,6.035,2157,5.457,2158,6.035]],["t/867",[1,0.199,7,1.726,23,1.119,62,2.948,90,2.938,142,3.748,151,1.775,174,2.75,879,1.641,2110,1.832,2115,2.388,2116,1.775,2117,2.526,2118,2.526,2119,2.526,2120,2.526,2121,2.526,2122,2.526,2123,4.529,2124,1.936,2125,6.247,2126,2.023,2127,2.526,2128,2.526,2129,2.526,2130,2.526,2131,2.526,2132,4.023,2133,2.526,2134,4.023,2135,2.526,2136,2.526,2137,3.594,2138,2.388,2139,4.988,2140,2.526,2141,2.526,2142,2.526,2143,2.526,2144,2.526,2145,2.388,2146,2.526,2147,2.526,2148,2.526,2149,4.256,2150,2.526,2151,2.526,2152,1.898,2153,2.388,2154,2.526,2155,2.526,2156,2.526,2157,2.284,2158,2.526,2159,2.736,2160,2.388,2161,2.736,2162,2.736,2163,2.736,2164,4.61,2165,2.736]],["t/869",[748,7.308,1934,6.066,2166,9.338,2167,8.827,2168,10.115]],["t/871",[1,0.181,151,6.841]],["t/873",[1,0.188,2169,11.043]],["t/875",[1,0.192,666,7.958,1951,7.822]],["t/877",[1,0.197,151,5.748,357,7.395,694,4.937,1951,7.128,2113,6.4]],["t/879",[1,0.197,90,2.813,142,4.065,150,4.356,153,4.356,154,3.814,798,2.827,1920,4.074,1992,4.233,2110,4.495,2115,5.857,2116,4.356,2160,5.857,2170,6.712,2171,5.233,2172,5.857,2173,6.197,2174,5.604]],["t/881",[1,0.199,90,2.813,142,4.065,694,6.298,798,2.827,1920,4.074,2123,5.088,2138,5.857,2145,5.857,2157,5.604,2172,5.857,2175,5.401,2176,5.604]],["t/883",[1,0.198,90,3.355,174,3.139,2124,5.663,2125,6.819,2126,5.917,2177,8.005,2178,8.005,2179,8.005]],["t/885",[1,0.198,151,5.852,1934,5.408,2174,7.529,2180,9.018]],["t/887",[1,0.2,694,5.43,1951,5.876,2123,7.385,2157,6.096,2176,9.153,2181,6.372,2182,4.431]],["t/890",[1,0.19,5,6.628,154,5.419,2171,7.433]],["t/892",[1,0.19,5,5.474,341,7.049,2183,9.535,2184,9.535]],["t/895",[223,7.623]],["t/897",[1,0.197,223,6.091]],["t/900",[1,0.176,142,4.468,2185,8.139,2186,10.115]],["t/902",[1,0.152,142,4.56,150,6.7,2171,8.049]],["t/904",[1,0.179,5,5.177,150,5.852,153,7.241,798,3.798,2187,7.869,2188,9.018,2189,8.325]],["t/906",[1,0.18,150,5.96,475,7.159,1007,5.792,1917,6.15,2173,8.479,2190,9.184,2191,9.184]],["t/908",[1,0.197,132,6.331,142,4.04,150,3.799,151,2.375,153,7.122,154,2.08,694,5.71,798,1.541,1007,3.692,1704,4.142,1917,3.921,1920,3.553,1934,2.195,2171,2.853,2175,5.889,2187,3.193,2192,7.298,2193,3.378,2194,3.378,2195,5.405,2196,3.193,2197,3.193,2198,3.659,2199,3.659,2200,3.193,2201,3.659,2202,3.659]],["t/910",[1,0.196,132,6.373,142,4.07,150,3.844,151,2.41,153,7.338,154,2.111,694,5.743,798,3.113,1007,3.736,1704,5.228,1917,2.487,2171,2.895,2175,4.767,2187,3.241,2192,6.449,2193,3.429,2194,3.429,2195,3.429,2196,3.241,2197,3.241,2200,3.241,2203,3.429,2204,3.429,2205,3.429,2206,3.714,2207,3.714,2208,3.714,2209,3.714]],["t/912",[1,0.197,18,2.874,132,6.286,142,4.279,153,5.377,694,5.897,798,2.434,1704,5.862,2172,5.043,2175,6.668,2192,7.231,2204,7.65,2205,5.335,2210,5.779,2211,5.779]],["t/914",[1,0.202,6,1.895,18,2.012,142,2.8,150,2.625,151,5.071,154,2.299,302,4.743,303,2.426,694,5.678,798,1.704,1007,2.551,1917,2.709,1920,2.455,2171,3.153,2175,3.255,2181,3.53,2196,3.53,2197,3.53,2200,3.53,2203,3.735,2212,7.815,2213,4.045,2214,4.045,2215,4.045,2216,4.045,2217,4.045,2218,4.045,2219,4.045,2220,4.045]],["t/917",[1,0.181,529,6.251]],["t/919",[1,0.188,3,4.239,341,7.477]],["t/921",[1,0.194,117,5.145,544,4.679,666,7.436,2221,8.703,2222,8.703]],["t/923",[1,0.2,5,6.003,117,3.835,315,4.451,1154,5.063,2223,8.136,2224,8.136]],["t/925",[1,0.186,117,4.673,529,5.878,666,6.754]],["t/927",[1,0.159,666,7.337]],["t/930",[1,0.199,341,5.398,529,4.329,1934,7.015,2225,8.501,2226,6.741,2227,6.372,2228,7.302,2229,7.302]],["t/932",[1,0.185,1934,5.83,2110,6.51,2137,7.578,2230,9.721]],["t/934",[1,0.174,142,4.379,1934,5.946,2110,6.639,2231,9.914]],["t/937",[1,0.199,363,6.288,2116,5.648,2232,8.035,2233,8.703,2234,7.595]],["t/939",[1,0.203,90,2.673,142,3.47,148,3.405,1195,5.566,1396,3.919,1992,4.954,2110,4.272,2124,5.558,2125,6.354,2126,5.807,2226,3.765,2235,4.078,2236,7.253,2237,7.856,2238,4.078,2239,4.078,2240,4.078]],["t/941",[1,0.197,90,2.704,142,2.85,1195,5.63,1838,4.251,1992,5.648,2110,4.321,2124,4.564,2125,5.901,2126,6.62,2167,5.63,2241,6.452,2242,5.192,2243,5.956,2244,5.956,2245,5.63,2246,4.891,2247,6.452]],["t/944",[1,0.201,145,4.84,363,7.325,2116,5.033,2232,7.16,2234,8.847]],["t/946",[1,0.187,90,3.334,142,3.514,294,3.545,317,6.031,596,3.865,942,4.259,1396,3.356,1838,3.6,1934,3.276,2110,5.328,2116,3.545,2124,5.628,2125,5.242,2236,7.345,2243,7.345,2244,5.043,2245,4.767,2246,6.031,2248,5.463,2249,7.956,2250,5.463,2251,5.463,2252,5.463,2253,5.463,2254,5.463,2255,5.463]],["t/948",[1,0.188,90,3.524,174,3.298,317,6.375,1992,6.736,2124,5.95,2125,7.038,2242,6.767,2256,8.41]],["t/950",[1,0.204,90,1.941,142,3.108,174,1.816,473,3.346,1934,1.65,1992,5.366,2110,4.017,2124,1.946,2125,4.636,2126,3.424,2137,2.145,2169,4.276,2242,2.214,2257,3.867,2258,7.036,2259,2.751,2260,2.751,2261,2.751,2262,4.632,2263,2.751,2264,4.276,2265,4.632,2266,2.751,2267,4.632,2268,2.751,2269,2.751,2270,1.988,2271,5.998,2272,2.751,2273,2.751,2274,2.401,2275,2.751,2276,2.751,2277,2.751]],["t/953",[1,0.203,90,2.45,142,2.583,1838,3.853,1934,5.847,1992,5.269,2110,3.916,2124,4.136,2125,5.506,2126,6.177,2242,4.705,2278,5.847,2279,6.513]],["t/955",[1,0.2,90,2.539,142,2.677,748,4.378,1934,3.634,1992,5.405,2110,4.058,2116,3.932,2124,4.287,2125,5.648,2126,6.336,2167,5.288,2242,4.876,2280,8.571,2281,6.06,2282,6.06,2283,6.06]],["t/958",[1,0.195]],["t/960",[1,0.2,529,5.547,2284,9.356]],["t/962",[1,0.195,142,5.027,2110,5.276,2185,8.242,2285,7.879,2286,6.34,2287,7.879,2288,10.243]],["t/964",[1,0.195,142,3.48,529,4.671,1934,4.725,2289,6.875,2290,7.879,2291,10.507,2292,9.456,2293,7.879]],["t/966",[1,0.197,7,4.673,31,3.547,151,4.809,666,5.048,766,7.67,2294,7.41,2295,7.41,2296,7.41,2297,9.839,2298,7.41]],["t/969",[1,0.194,143,3.356,168,3.439,320,5.386,748,4.662,1550,5.956,1846,5.956,2116,5.811,2299,6.452,2300,6.452,2301,10.286,2302,7.476,2303,6.452,2304,5.956,2305,6.452,2306,6.452,2307,6.452,2308,6.452,2309,6.452]],["t/971",[1,0.199,90,3.592,142,3.786,319,4.058,349,5.562,512,3.152,766,4.724,904,5.562,2227,5.288,2289,5.288,2291,7.913,2292,5.595,2310,6.06,2311,5.595,2312,6.06,2313,5.595,2314,6.06]],["t/973",[1,0.199,90,2.851,349,6.863,766,5.304,1992,4.291,2185,5.475,2227,5.937,2289,5.937,2311,6.281,2313,6.281,2315,6.804,2316,6.804,2317,6.804,2318,6.804]],["t/975",[1,0.194,182,4.328,349,7.738,1934,5.219,2302,7.266,2319,8.703]],["t/978",[1,0.19,1934,5.718,2116,6.187,2320,8.803,2321,9.535]],["t/980",[1,0.149,142,4.468,2116,7.762,2185,8.139]],["t/982",[1,0.181,2320,9.733]],["t/984",[1,0.181,2322,10.543]],["t/986",[1,0.196,142,4.142,342,4.045,454,4.998,459,3.455,512,3.588,2116,6.084,2160,8.182,2323,9.376,2324,6.898,2325,6.898,2326,6.898,2327,6.898]],["t/989",[1,0.186,2116,6.433,2328,9.914,2329,9.914]],["t/991",[1,0.194,142,3.653,2176,6.904,2182,5.019,2330,8.27,2331,6.447,2332,8.27,2333,8.27,2334,8.27,2335,8.27]],["t/994",[1,0.174,378,5.376,1934,5.946,2336,9.914,2337,9.914]],["t/996",[1,0.187,6,4.224,142,4.929,2176,7.529,2338,9.018,2339,9.018,2340,9.018]],["t/999",[1,0.183,3,3.996,119,6.013,333,5.083,666,6.496,2341,7.673]],["t/1001",[1,0.162]],["t/1004",[1,0.196,2342,11.159,2343,9.018,2344,9.018,2345,9.018]],["t/1006",[1,0.204,143,4.958,315,5.215,462,2.876,569,2.712,610,2.334,614,3.017,886,3.323,1030,3.323,2286,5.036,2346,2.943,2347,3.981,2348,8.094,2349,3.981,2350,6.749,2351,2.51,2352,3.981,2353,3.981,2354,2.712,2355,3.981,2356,3.675]],["t/1008",[1,0.196,591,7.186,2357,8.974]],["t/1010",[1,0.18,213,3.923,261,4.687,278,2.343,694,5.436,1596,4.07,2351,6.151,2354,4.983,2357,8.103,2358,4.876,2359,4.876,2360,4.876,2361,4.876,2362,7.314,2363,7.314,2364,9.753,2365,4.876,2366,4.876,2367,4.876,2368,4.876,2369,4.501,2370,4.07,2371,4.876,2372,4.876,2373,4.876,2374,4.876,2375,4.876,2376,4.876,2377,4.876,2378,4.876,2379,4.876,2380,4.876]],["t/1012",[1,0.192,591,5.824,610,4.619,674,5.112,749,4.35,1052,5.972,2381,6.875,2382,7.879,2383,7.879,2384,7.879,2385,7.879,2386,7.879,2387,7.879]],["t/1015",[1,0.152,2354,7.034,2388,10.325,2389,9.009]],["t/1017",[1,0.199,6,1.167,20,0.837,24,1.137,32,0.605,142,1.101,182,0.677,233,0.984,261,1.197,278,3.17,303,2.554,349,0.884,362,2.875,364,1.942,369,1.137,370,1.062,569,2.346,570,0.672,591,3.668,636,1.328,694,0.759,938,1.257,948,0.871,1020,3.169,1026,2.772,1044,3.077,1075,1.096,1294,1.137,1351,1.007,1552,1.007,1769,3.427,1790,1.062,1798,1.257,2043,1.062,2052,2.546,2054,1.763,2071,2.723,2152,2.39,2274,1.188,2351,3.129,2354,2.346,2370,1.137,2381,1.188,2390,2.3,2391,2.492,2392,1.362,2393,1.362,2394,2.3,2395,1.362,2396,1.362,2397,1.257,2398,1.257,2399,1.362,2400,1.362,2401,1.362,2402,1.188,2403,1.362,2404,1.362,2405,1.188,2406,1.257,2407,1.257,2408,3.716,2409,1.137,2410,1.257,2411,2.3,2412,1.257,2413,1.257,2414,2.3,2415,1.362,2416,1.188,2417,1.188,2418,1.257,2419,1.257,2420,1.257,2421,1.362,2422,1.137,2423,3.716,2424,3.931,2425,1.257,2426,1.257,2427,1.062,2428,1.257,2429,1.188,2430,2.174,2431,1.257,2432,1.257,2433,1.257,2434,2.174,2435,2.174,2436,3.931,2437,2.174,2438,2.3,2439,2.3,2440,2.3,2441,1.257,2442,1.257,2443,1.257,2444,1.257,2445,1.257,2446,1.257,2447,1.362,2448,1.257,2449,1.257,2450,5.326,2451,2.3,2452,3.868,2453,2.3,2454,1.188,2455,1.257,2456,1.188,2457,1.257,2458,1.257,2459,1.257,2460,1.188,2461,1.257,2462,1.362,2463,2.3,2464,1.257,2465,1.257,2466,1.257,2467,1.257]],["t/1020",[1,0.195,349,6.187,378,5.171,2351,6.013]],["t/1022",[1,0.198,349,5.033,378,4.206,694,6.295,2402,6.768,2468,7.16,2469,7.756,2470,10.139]],["t/1024",[1,0.2,117,2.416,278,4.345,349,3.326,365,5.612,694,5.04,1020,4.315,2402,10.366,2468,4.732,2471,5.126,2472,5.126,2473,5.126,2474,7.592,2475,5.126,2476,3.886,2477,5.126]],["t/1027",[1,0.197,349,6.448,677,5.219,678,4.622,694,4.192,2406,9.173,2407,6.945,2452,5.864,2478,7.522,2479,6.945,2480,6.945]],["t/1029",[1,0.188,2422,7.021,2423,10.243,2424,10.837,2425,7.764,2426,7.764,2427,6.556]],["t/1031",[1,0.196,349,6.308,2397,8.974]],["t/1033",[1,0.196,278,4.333,349,5.852,2413,8.325,2481,11.159]],["t/1035",[1,0.186,349,6.433,2354,6.754,2416,8.651]],["t/1037",[1,0.2,20,1.738,24,2.362,32,1.257,278,2.279,303,2.844,364,2.206,369,2.362,370,2.206,569,1.927,591,4.525,677,1.963,678,1.738,1075,2.277,1351,2.091,1552,2.091,1769,2.277,2043,2.206,2052,4.525,2054,3.355,2071,4.58,2152,1.963,2351,4.517,2354,1.927,2390,2.612,2394,2.612,2408,4.138,2430,2.469,2444,2.612,2445,2.612,2446,2.612,2448,2.612,2449,2.612,2450,7.579,2452,6.219,2453,4.378,2454,2.469,2455,2.612,2456,2.469,2457,2.612,2458,2.612,2459,2.612,2460,2.469,2461,2.612,2463,4.378,2464,2.612,2465,2.612,2466,2.612,2467,2.612,2479,2.612,2480,2.612]],["t/1039",[1,0.197,182,2.448,303,2.953,364,3.838,569,3.354,591,3.64,1020,4.187,1026,5.929,2152,5.112,2428,4.546,2429,4.296,2430,4.296,2431,4.546,2432,4.546,2433,4.546,2434,6.43,2435,6.43,2436,9.049,2437,6.43,2438,6.802,2439,6.802,2440,6.802,2441,4.546,2442,4.546,2443,4.546]],["t/1042",[1,0.168,5,5.371,2482,9.356,2483,9.356,2484,9.356,2485,9.356,2486,9.356,2487,9.356]],["t/1045",[127,4.552,1934,5.718,2488,9.535,2489,9.535,2490,9.535,2491,9.535,2492,9.535,2493,9.535]],["t/1047",[1,0.186,10,6.038,338,6.715,2354,7.518,2429,7.73,2494,8.858,2495,8.858]],["t/1049",[1,0.204,324,1.801,333,2.174,414,2.572,526,2.506,569,2.778,591,3.015,713,2.608,1020,2.318,1102,6.855,1103,3.765,1117,3.559,1552,3.015,2113,2.947,2389,3.559,2496,6.379,2497,6.379,2498,4.078,2499,4.078,2500,4.078,2501,4.078,2502,4.078,2503,4.078,2504,4.078,2505,4.078,2506,3.765,2507,4.078,2508,4.078,2509,3.559,2510,4.078,2511,4.078,2512,4.078]],["t/1051",[1,0.19,10,5.217,1015,6.496,1042,8.803,2513,9.535]],["t/1054",[1,0.162]],["t/1056",[10,5.319,11,6.217,2427,7.578,2514,8.483,2515,9.721,2516,8.974,2517,8.115]],["t/1058",[1,0.201,182,2.498,349,3.259,363,3.629,364,6.965,569,3.422,948,3.212,1044,3.629,1379,3.553,1838,3.31,2182,3.048,2389,4.383,2420,4.637,2422,4.193,2423,4.383,2427,3.916,2516,4.637,2517,4.193,2518,4.637,2519,5.023,2520,6.018,2521,6.904,2522,5.023,2523,4.637,2524,5.023,2525,6.526]],["t/1060",[1,0.189,2526,10.325]],["t/1062",[1,0.163,2354,7.518,2527,8.858,2528,8.858,2529,8.858,2530,8.858,2531,8.858,2532,8.858,2533,8.858,2534,8.858]],["t/1064",[1,0.191]],["t/1066",[1,0.162]],["t/1068",[1,0.189,117,4.866]],["t/1070",[1,0.189,747,5.989]],["t/1072",[1,0.19,277,8.321,278,5.549,1020,5.419]],["t/1074",[1,0.2,6,2.983,10,4.856,149,5.558,150,4.133,278,5.583,571,6.919,1007,4.017,1020,5.044,2113,4.602,2246,4.828,2354,4.339]],["t/1076",[1,0.183,10,5.217,278,4.582,571,7.433,961,6.013,1007,6.013]],["t/1078",[1,0.198,278,3.847,591,5.917,1020,6.517,2535,8.005,2536,9.554,2537,7.39]],["t/1080",[1,0.204,278,3.793,576,6.153,760,5.584,946,6.153,948,6.558,1024,4.849,1025,6.351,1026,6.351]],["t/1082",[1,0.199,285,8.783,300,7.266,760,6.157,948,5.566]],["t/1084",[1,0.193,7,2.491,10,5.195,11,4.921,168,2.105,261,4.195,274,5.742,278,1.898,300,3.297,571,7.862,961,2.491,1007,5.505,1020,3.535,1044,4.494,1315,4.4,2270,4.494,2409,7.287,2536,3.646,2537,5.742,2538,3.949,2539,3.949,2540,3.949,2541,3.949,2542,3.949,2543,3.446,2544,3.949,2545,3.949,2546,3.949,2547,3.949,2548,3.949,2549,3.949,2550,3.949,2551,3.949,2552,3.949]],["t/1086",[1,0.196,278,4.413,961,5.792,2270,6.635,2553,8.479]],["t/1088",[1,0.201,219,5.2,277,8.419,278,3.458,363,5.2,2409,6.008,2554,7.197,2555,6.28,2556,7.197,2557,7.197,2558,7.197]],["t/1090",[1,0.162]],["t/1092",[1,0.197,6,1.509,11,0.805,16,0.873,20,0.773,90,1.962,121,4.422,133,2.116,142,2.068,152,1.374,174,1.836,200,0.609,372,1.714,381,1.935,457,1.865,569,1.579,574,1.098,590,2.14,636,3.35,695,3.19,1007,0.794,1044,1.675,1048,1.051,1315,1.64,1321,1.407,2039,0.909,2072,1.527,2113,1.675,2152,3.249,2245,1.098,2286,1.013,2302,1.935,2350,1.098,2351,3.964,2354,2.726,2381,1.098,2451,1.162,2454,1.098,2555,2.023,2559,1.259,2560,1.162,2561,1.259,2562,1.259,2563,1.259,2564,4.002,2565,1.259,2566,4.682,2567,1.259,2568,5.281,2569,1.259,2570,1.259,2571,1.259,2572,2.318,2573,1.162,2574,3.222,2575,1.259,2576,1.259,2577,1.259,2578,0.93,2579,4.682,2580,2.318,2581,2.318,2582,2.318,2583,3.222,2584,1.865,2585,2.318,2586,1.39,2587,2.318,2588,2.318,2589,2.318,2590,2.318,2591,2.318,2592,2.318,2593,1.259,2594,1.259,2595,2.318,2596,1.259,2597,5.812,2598,2.318,2599,4.53,2600,1.259,2601,1.259,2602,1.259,2603,2.318,2604,1.259,2605,2.14,2606,1.259,2607,2.318,2608,1.259,2609,1.259,2610,1.259,2611,1.259,2612,1.259,2613,2.318,2614,2.318,2615,1.162,2616,1.162,2617,1.259,2618,1.259,2619,1.259,2620,1.162,2621,2.318,2622,1.259,2623,1.259,2624,1.259,2625,1.259,2626,1.259,2627,1.259,2628,1.259,2629,1.259,2630,1.259,2631,1.051,2632,1.259,2633,0.817]],["t/1094",[1,0.17,23,2.126,41,7.841,261,0.698,333,0.774,370,5.346,374,5.129,380,2.441,381,10.088,404,0.943,445,1.169,512,0.756,584,1.008,596,2.573,927,5.562,1201,1.268,2073,1.101,2354,2.478,2634,3.358,2635,3.036,2636,11.156,2637,1.453,2638,1.453,2639,5.826,2640,1.453,2641,5.826,2642,1.453,2643,1.453,2644,5.378,2645,1.453,2646,5.826,2647,1.453,2648,2.644,2649,2.061,2650,2.441,2651,1.453,2652,2.441,2653,1.453,2654,1.453,2655,1.453,2656,1.453,2657,1.453,2658,1.453,2659,1.453,2660,1.341,2661,1.453,2662,2.441,2663,2.644,2664,1.341,2665,1.453,2666,1.453,2667,1.453,2668,2.644,2669,2.644,2670,2.644,2671,2.644,2672,2.644,2673,2.644,2674,2.644,2675,2.644,2676,1.453,2677,1.453,2678,1.453,2679,1.453,2680,1.453,2681,1.453,2682,1.453,2683,1.453,2684,1.453,2685,1.453,2686,1.453,2687,1.453,2688,1.453,2689,1.453]],["t/1096",[1,0.201,31,2.637,41,5.696,145,2.328,263,3.216,333,3.899,370,3.801,381,6.106,2348,6.752,2356,6.752,2634,6.752,2635,4.07,2636,6.752,2644,4.501,2652,4.501,2690,4.501,2691,4.876,2692,4.876,2693,4.876,2694,4.876,2695,4.254]],["t/1099",[2696,10.543,2697,10.543,2698,10.543]],["t/1101",[10,5.768,11,6.742,2699,10.543]],["t/1104",[1,0.189,18,3.631,152,4.329,425,3.156,1689,5.876,2085,5.876,2700,7.302,2701,7.302,2702,7.302,2703,7.302,2704,7.302,2705,7.302,2706,7.302,2707,7.302,2708,6.372,2709,6.372,2710,6.372,2711,7.302]],["t/1106",[1,0.198,18,3.208,141,3.562,152,3.825,174,2.53,362,8.587,372,6.62,425,2.789,2085,5.192,2286,5.192,2708,5.63,2709,5.63,2710,5.63,2712,10.286,2713,6.452]],["t/1108",[1,0.194,23,3.568,38,4.126,65,2.473,66,3.416,362,4.031,378,2.618,425,2.087,480,4.213,606,2.532,609,3.764,1000,4.458,1225,6.843,2521,6.703,2708,4.213,2709,4.213,2710,4.213,2714,4.828,2715,4.031,2716,4.828,2717,4.213,2718,4.828,2719,4.828,2720,7.261,2721,4.828,2722,4.828,2723,4.828,2724,4.828,2725,4.828]],["t/1111",[1,0.159,2726,10.77]],["t/1113",[1,0.162]],["t/1115",[1,0.192,676,6.767,677,7.41,678,6.562,713,5.378,2727,7.764,2728,10.681]],["t/1118",[1,0.195,23,3.03,278,5.307,509,4.673,596,5.243,961,4.673,1020,5.591,2476,5.617,2729,7.41,2730,7.41,2731,6.841,2732,7.41]],["t/1120",[278,4.961,2733,9.532,2734,9.532,2735,10.325]],["t/1122",[1,0.146,219,7.163,967,9.511,2736,9.153,2737,9.153]],["t/1124",[1,0.168,278,5.485,1838,6.165,2738,8.898,2739,10.538]],["t/1126",[1,0.193,278,4.413,967,7.39,2738,7.159,2740,9.184,2741,9.184]],["t/1128",[1,0.188,278,4.413,948,5.873,961,5.792,1020,5.219,2553,8.479,2742,9.184]],["t/1130",[278,5.176,2738,8.396]],["t/1132",[1,0.149,278,4.861,2738,7.885,2743,10.115,2744,10.115]],["t/1135",[1,0.161,3,3.647,10,6.525,341,8.815,2745,8.703,2746,8.703,2747,8.703,2748,8.703]],["t/1137",[1,0.188,2749,10.115,2750,10.115]],["t/1139",[1,0.188,10,5.844,127,5.099,1934,6.406,2116,5.457,2751,8.41,2752,8.41,2753,8.41]],["t/1142",[965,8.049,2754,10.325,2755,10.325,2756,10.325]],["t/1144",[65,3.516,200,4.994,419,3.978,2757,10.325]],["t/1146",[1,0.202,141,4.492,391,7.099,454,4.337,2758,6.792,2759,7.511]],["t/1148",[1,0.174,553,7.515,2760,9.914,2761,9.914,2762,9.914]],["t/1150",[1,0.189,143,4.867,2763,9.356,2764,9.356,2765,9.356,2766,9.356]],["t/1152",[1,0.19,182,4.328,2767,8.703,2768,8.703,2769,8.703,2770,8.703,2771,8.703,2772,7.003,2773,8.703]],["t/1154",[1,0.146,2774,6.754,2775,9.914,2776,9.914,2777,9.914,2778,9.914]],["t/1156",[1,0.188,2779,10.115,2780,10.115]],["t/1158",[1,0.196,2781,9.184,2782,9.184,2783,9.184,2784,9.184]],["t/1160",[1,0.156,965,8.219,2785,10.543]],["t/1163",[1,0.141,675,7.96,676,7.673,677,6.615,678,5.858,679,7.96,680,7.96,681,7.049]],["t/1165",[1,0.195,23,2.598,65,2.164,125,1.965,139,2.324,152,1.768,154,1.694,174,1.169,183,2.489,184,2.489,276,2.109,682,2.602,683,4.323,684,4.323,685,6.459,686,4.323,687,5.545,688,2.602,689,2.602,690,2.399,691,4.323,692,5.545,693,6.459,694,1.662,695,2.031,696,2.031,697,2.489,698,2.602,699,2.602,700,2.602,701,2.602,702,2.602,703,2.602,704,2.602,705,2.602,706,2.602,707,2.602,708,2.602,709,2.602,710,2.602,711,4.496,712,2.602,713,4.064,714,2.602,715,4.323,716,2.602,717,2.602,718,2.602,719,4.323,720,2.602,721,2.602,722,2.602,723,2.602,724,2.489,725,2.602,726,2.602,727,4.135,728,1.965,729,2.602,730,2.489,731,2.602,732,2.602,733,2.602]],["t/1168",[681,8.137]],["t/1170",[734,8.965]],["t/1172",[678,6.477,735,9.2,736,9.2]],["t/1174",[737,10.695,738,9.2]],["t/1176",[1,0.17,734,6.889,739,8.321,740,8.321,741,8.321,742,8.321,743,8.321]],["t/1178",[1,0.168,678,7.013,734,6.76,744,9.96,745,8.165,746,8.165]],["t/1182",[1,0.197,2786,8.178,2787,8.178,2788,8.178,2789,8.178,2790,7.395]],["t/1184",[1,0.194,278,5.597,1091,7.635,2731,7.635,2791,8.27,2792,8.27,2793,8.27,2794,8.27]],["t/1186",[278,5.066,2733,9.733,2734,9.733]],["t/1188",[278,5.818,2738,8.049,2795,10.325]],["t/1190",[1,0.17,219,6.889,512,4.96,967,9.291,2736,8.803,2737,8.803]],["t/1192",[1,0.185,361,7.578,512,5.056,948,6.217,1615,8.483]],["t/1194",[1,0.176,278,4.861,512,5.261,2796,10.115]],["t/1196",[1,0.196,148,7.529,278,4.333,694,5.026,2739,8.325,2797,9.018]],["t/1198",[1,0.183]],["t/1200",[1,0.18,10,5.025,11,5.873,666,6.257,1554,7.984,2798,8.479,2799,9.184]],["t/1202",[1,0.146,10,5.424,140,4.93,1007,6.252,2800,8.651,2801,9.914]],["t/1204",[1,0.182,278,4.041,1554,5.95,2270,6.076,2738,6.556,2802,8.41,2803,9.861,2804,11.738,2805,8.41]],["t/1206",[1,0.195]],["t/1208",[1,0.181,2806,8.801]],["t/1211",[278,4.671,1020,5.524,2476,8.855,2807,9.721,2808,8.974,2809,9.721]],["t/1214",[2476,8.345]],["t/1216",[1,0.179,32,4.006,278,4.333,1075,7.257,1769,7.257,2409,7.529,2810,9.018,2811,9.018,2812,9.018]],["t/1218",[1,0.188,2476,7.668,2813,9.338]],["t/1220",[1,0.179,2476,7.826,2814,10.325]],["t/1223",[1,0.202,3,0.42,18,0.499,23,0.41,69,2.26,90,0.42,121,2.802,131,3.918,133,2.081,142,0.829,174,2.127,253,2.943,263,0.97,466,0.633,512,0.977,544,1.009,587,1.855,636,2.652,747,1.089,1321,1.606,1395,3.494,1396,2.418,1789,2.006,2633,4.643,2815,7.992,2816,4.836,2817,7.468,2818,1.669,2819,1.567,2820,1.567,2821,1.638,2822,1.733,2823,3.167,2824,1.733,2825,1.003,2826,2.443,2827,2.443,2828,1.877,2829,1.003,2830,1.003,2831,0.926,2832,1.638,2833,0.782,2834,2.443,2835,0.875,2836,0.782,2837,1.733,2838,1.638,2839,2.523,2840,1.003,2841,1.003,2842,1.003,2843,0.875,2844,0.875,2845,1.003,2846,0.782,2847,0.76,2848,0.837,2849,2.209,2850,0.837,2851,0.837,2852,0.837,2853,0.837,2854,0.837,2855,0.837,2856,0.837,2857,0.837,2858,0.837,2859,1.003,2860,0.782]],["t/1225",[1,0.193,2815,7.014,2860,7.729]],["t/1227",[1,0.173,31,3.032,65,2.864,261,5.133,419,4.115,2847,8.097,2861,9.861,2862,8.41,2863,7.764]],["t/1229",[1,0.188,31,3.318,65,2.286,261,4.422,419,4.046,2847,8.566,2861,10.432,2863,6.197,2864,6.712,2865,10.502,2866,6.712]],["t/1231",[1,0.162]],["t/1233",[1,0.183]],["t/1235",[1,0.192,597,8.699,636,4.807,2867,11.159,2868,9.018]],["t/1237",[1,0.2,69,3.396,90,2.479,131,4.275,133,4.454,174,2.32,263,2.168,512,3.077,2633,5.468,2815,6.943,2816,4.612,2818,3.731,2834,5.462,2836,4.612,2869,5.916,2870,8.426,2871,5.916,2872,5.163]],["t/1239",[1,0.199,69,2.957,121,4.358,131,1.621,142,2.715,174,2.02,182,1.935,253,3.615,263,1.426,466,2.454,1321,2.361,1395,5.941,1789,3.905,2815,6.416,2816,1.749,2817,5.777,2818,2.454,2819,3.248,2820,3.248,2821,3.395,2822,3.592,2823,1.806,2827,2.072,2833,3.033,2837,2.072,2838,3.395,2839,1.701,2843,3.395,2844,3.395,2846,4.016,2847,2.95,2848,1.873,2849,4.301,2850,1.873,2851,1.873,2852,1.873,2853,1.873,2854,1.873,2855,1.873,2856,1.873,2857,1.873,2858,1.873,2873,7.035,2874,7.035]],["t/1241",[1,0.2,18,2.89,23,2.798,65,1.521,69,3.336,90,1.104,142,3.023,174,2.684,200,3.31,253,2.757,419,2.239,425,1.93,454,1.405,459,1.32,466,1.662,621,3.27,747,1.528,749,2.466,847,2.287,1395,4.531,1396,2.744,2649,2.054,2815,4.841,2817,3.385,2833,2.054,2838,2.299,2839,1.997,2843,2.299,2844,3.897,2846,5.335,2847,1.997,2873,2.433,2874,5.366,2875,2.635,2876,5.812,2877,2.635,2878,2.635,2879,6.843,2880,2.635,2881,2.635,2882,2.635,2883,6.843,2884,2.635]],["t/1244",[1,0.195,3,2.813,509,4.233,636,6.518,847,3.438,2370,5.604,2885,6.712,2886,6.712,2887,6.712,2888,6.712,2889,6.712,2890,6.712,2891,6.712,2892,6.712,2893,6.712]],["t/1246",[1,0.181,341,7.793]],["t/1248",[1,0.19,10,0.995,21,1.314,22,4.297,23,0.744,57,1.198,59,2.013,69,2.508,121,4.971,133,1.71,141,1.786,142,1.429,152,1.078,174,2.078,219,1.314,253,0.863,263,1.601,302,1.104,333,0.969,346,1.679,357,2.701,382,1.286,404,2.099,466,1.147,529,1.078,584,1.262,636,2.329,879,1.94,1015,1.239,1251,1.163,1252,1.518,1321,2.652,1552,4.975,1554,1.286,1789,3.312,2039,2.337,2042,1.418,2043,1.418,2054,3.091,2055,1.262,2059,3.813,2061,1.463,2062,1.091,2066,2.337,2067,2.452,2070,1.463,2072,1.198,2073,3.312,2076,1.518,2113,2.337,2279,2.522,2560,1.679,2635,1.518,2649,1.418,2806,2.701,2815,2.289,2817,3.312,2818,2.756,2823,1.463,2836,1.418,2846,2.522,2847,1.378,2848,1.518,2849,3.648,2850,1.518,2851,1.518,2852,1.518,2853,1.518,2854,1.518,2855,1.518,2856,1.518,2857,1.518,2858,1.518,2894,1.818,2895,1.818,2896,1.818,2897,1.818,2898,1.818,2899,1.818,2900,1.818,2901,1.818,2902,1.218,2903,1.818,2904,1.818,2905,1.679,2906,1.679,2907,1.818,2908,1.818,2909,1.679,2910,1.679,2911,1.679,2912,1.587,2913,2.987,2914,1.818,2915,1.818,2916,1.818,2917,1.679,2918,1.818,2919,1.818,2920,1.463,2921,1.818,2922,2.289,2923,1.679,2924,4.034,2925,2.452,2926,1.818,2927,1.679,2928,1.818,2929,1.818]],["t/1251",[1,0.199,3,3.128,69,2.164,121,3.587,174,2.351,263,1.381,509,3.781,544,2.027,636,5.269,899,4.999,1321,2.288,2304,5.535,2584,3.034,2818,3.781,2902,4.999,2930,8.506,2931,3.77,2932,3.77,2933,3.77,2934,3.77,2935,3.77,2936,3.77,2937,3.77,2938,3.77,2939,3.77,2940,4.084,2941,3.77,2942,3.77,2943,3.034,2944,3.77,2945,3.77,2946,3.77,2947,2.446]],["t/1253",[1,0.195,333,5.083,636,5.083,2948,8.803]],["t/1255",[1,0.185,22,4.991,23,1.901,57,3.063,59,4.391,69,2.668,133,4.508,174,1.823,263,1.703,333,2.478,382,3.288,404,3.016,584,3.225,636,2.478,1251,2.973,1252,3.881,1321,2.821,2039,3.358,2043,3.624,2054,3.288,2055,3.225,2059,7.441,2061,3.74,2062,2.788,2070,3.74,2072,3.063,2073,5.348,2649,3.624,2815,7.241,2818,2.931,2836,3.624,2909,4.291,2910,4.291,2911,4.291,2912,4.056,2913,7.873,2922,3.288,2948,4.291]],["t/1257",[1,0.187,69,2.943,121,5.83,142,2.264,174,2.977,253,2.431,263,1.878,466,3.233,1321,3.111,1789,6.855,2815,5.371,2817,5.755,2818,3.233,2823,4.125,2846,3.996,2847,3.886,2848,4.279,2849,7.549,2850,4.279,2851,4.279,2852,4.279,2853,4.279,2854,4.279,2855,4.279,2856,4.279,2857,4.279,2858,4.279]],["t/1259",[1,0.184,69,3.802,121,6.108,174,2.597,263,2.427,1321,4.019,2806,5.529,2817,6.913,2818,4.177,2846,5.163,2922,4.686,2923,6.115,2924,9.628,2925,6.913]],["t/1261",[1,0.201,69,3.859,133,3.554,174,2.636,263,2.463,587,2.432,636,2.326,1321,4.08,2633,5.978,2815,7.436,2817,7.543,2818,4.24,2823,3.511,2824,4.029,2826,4.029,2832,5.866,2836,3.402,2922,3.087,2949,4.364]],["t/1263",[1,0.202,3,0.866,69,4.173,131,6.31,133,4.617,174,1.896,253,2.755,263,2.663,524,1.567,587,2.695,636,3.096,1321,3.524,1396,2.226,2633,2.351,2815,5.883,2816,4.527,2818,3.663,2819,4.037,2820,4.037,2821,5.763,2831,3.344,2832,4.219,2833,1.611,2835,1.804,2836,3.769,2943,1.663,2950,2.067,2951,4.835,2952,2.067,2953,2.067,2954,2.067,2955,2.067,2956,2.067,2957,2.067,2958,2.067,2959,2.067,2960,2.067,2961,1.908]],["t/1265",[1,0.156,529,4.903,636,4.408,2341,6.655,2962,7.635,2963,10.568,2964,7.635,2965,8.27,2966,8.27,2967,8.27,2968,8.27,2969,8.27,2970,8.27,2971,8.27]],["t/1267",[1,0.201,3,2.743,6,4.855,69,2.42,90,1.767,133,5.479,174,1.653,419,1.624,544,3.519,636,5.765,2341,3.393,2633,2.736,2927,6.044,2940,2.872,2972,3.892,2973,4.216,2974,3.52,2975,4.384,2976,3.287,2977,3.892,2978,3.892,2979,4.216]],["t/1269",[1,0.197,90,2.851,133,4.91,174,2.668,303,4.08,2341,5.475,2450,7.041,2514,5.937,2633,4.415,2940,4.635,2975,4.556,2980,5.68,2981,5.937,2982,6.281,2983,6.804,2984,6.281]],["t/1271",[1,0.199,65,1.304,69,2.197,90,1.604,117,3.554,125,3.999,133,3.985,142,1.691,174,1.501,303,2.296,306,2.83,419,1.475,524,2.902,544,2.058,636,4.573,749,2.114,961,2.414,1396,2.352,1961,3.196,2450,2.902,2517,5.066,2633,2.484,2943,3.08,2975,2.563,2980,5.066,2981,3.34,2982,3.534,2984,3.534,2985,7.92,2986,5.602,2987,3.828,2988,5.602,2989,3.828,2990,3.828,2991,3.828,2992,3.828,2993,3.828,2994,3.828,2995,3.534]],["t/1273",[1,0.2,3,1.4,6,3.715,69,1.918,90,1.4,117,3.738,125,5.226,133,4.193,142,1.476,174,1.31,263,1.224,306,4.021,425,1.444,524,2.532,544,3.699,636,5.26,2633,2.168,2940,3.706,2943,2.688,2972,3.084,2975,2.237,2976,2.604,2980,6.621,2985,3.084,2986,3.084,2988,7.322,2995,3.084,2996,3.084,2997,3.341,2998,3.341,2999,3.341,3000,3.341,3001,3.341,3002,3.341,3003,3.341]],["t/1275",[1,0.2,3,2.603,6,4.72,200,3.004,263,2.276,425,2.685,636,5.372,2370,5.185,2940,7.445,2943,4.998,2980,5.185,3004,6.211,3005,6.211]],["t/1277",[1,0.198,3,3.25,38,4.408,121,4.872,142,3.426,2940,5.284,2975,5.194,3006,7.16,3007,7.756,3008,7.756]],["t/1279",[1,0.198,3,4.531,20,3.25,41,3.432,65,1.801,121,3.734,133,2.796,142,2.336,333,2.819,536,4.774,2044,4.415,2410,4.883,2633,3.432,2940,3.603,2975,3.542,2976,4.123,3006,4.883,3009,6.78,3010,4.415,3011,4.883,3012,5.289,3013,5.289,3014,5.289,3015,5.289]],["t/1281",[1,0.198,3,3.065,6,2.284,20,2.995,41,3.164,117,2.298,121,4.687,142,3.231,536,4.494,544,2.621,636,3.899,1453,3.923,2044,4.07,2940,3.321,2975,3.265,2976,3.801,3009,7.659,3010,4.07,3011,4.501,3016,9.004,3017,6.752,3018,4.876,3019,4.876,3020,4.876]],["t/1283",[1,0.197,3,2.422,121,4.655,142,2.553,168,3.081,182,2.874,419,3.193,425,2.498,636,3.081,728,3.808,1396,3.551,1776,4.825,2940,3.937,2975,3.87,3009,5.043,3016,5.335,3017,5.335,3021,3.937,3022,5.779,3023,5.335,3024,5.779,3025,5.779,3026,5.779,3027,5.779]],["t/1285",[1,0.185,3,4.074,121,4.671,587,5.418,636,5.182]],["t/1287",[1,0.193,3,3.152,65,2.562,69,4.318,133,5.253,174,2.95,263,2.756,636,4.01,1321,4.565,2818,4.744,2974,6.28,2975,5.037,3028,7.522,3029,6.564]],["t/1289",[1,0.201,3,2.17,69,4.392,117,2.441,133,5.311,174,2.031,196,4.781,263,1.898,544,4.113,636,4.078,1321,3.143,2004,4.324,2633,3.361,2818,4.825,2819,4.324,2820,4.324,2940,3.528,2974,4.324,2975,3.468,3029,4.519,3030,4.781,3031,5.179]],["t/1291",[1,0.198,23,2.604,69,3.656,133,5.4,174,2.498,263,2.334,1321,3.865,2818,4.017,2839,4.828,2940,4.339,2974,5.318,2975,4.266,3029,5.558,3030,5.88,3032,5.558,3033,6.37,3034,6.37,3035,6.37,3036,5.88]],["t/1293",[1,0.192,3,3.105,263,2.715,419,3.791,748,5.354,1790,5.777,2839,5.617,2977,6.841,2978,6.841,3036,9.083,3037,7.41,3038,9.839,3039,7.41]],["t/1295",[1,0.199,3,2.084,69,2.855,117,2.344,131,5.363,133,2.629,174,1.95,263,1.822,306,6.566,544,4.775,636,5.25,1009,4.001,1321,3.018,2818,3.136,2975,3.33,2981,4.339,3040,4.591,3041,4.973,3042,4.973,3043,4.973,3044,4.973,3045,4.339,3046,4.973,3047,4.973,3048,4.973,3049,4.973]],["t/1297",[1,0.201,69,3.004,117,2.467,419,2.016,544,5.788,636,6.502,2633,3.396,2818,3.301,2872,4.567,2976,4.08,3050,5.234,3051,9.153,3052,4.567,3053,5.234]],["t/1299",[1,0.2,23,1.695,32,2.87,65,1.412,66,2.933,69,2.38,117,3.045,121,3.105,133,2.192,174,2.534,263,1.519,462,4.668,636,4.778,1321,2.516,2094,3.828,2816,3.232,2818,2.615,2833,5.037,2839,3.143,2975,2.777,3032,5.638,3052,3.618,3054,4.146,3055,4.146,3056,5.965,3057,4.146,3058,4.146,3059,4.146,3060,4.146,3061,4.146,3062,4.146,3063,4.146,3064,4.146]],["t/1301",[1,0.203,3,2.289,23,2.234,32,2.426,117,2.575,131,3.947,462,3.947,636,2.912,672,4.141,2833,4.259,2839,7.113,2961,10.114,3032,4.767,3052,4.767,3056,5.043]],["t/1304",[1,0.179,3,4.327,636,5.503]],["t/1306",[1,0.19,509,7.282,636,6.155]],["t/1308",[1,0.192,3,4.074,509,6.131,544,5.226]],["t/1310",[1,0.193,630,8.014,636,6.512,1934,5.508]],["t/1312",[1,0.19,69,4.222,90,1.545,141,2.035,174,2.31,233,2.663,261,2.83,329,3.403,372,2.725,524,2.794,526,2.265,596,4.166,636,3.92,798,1.553,1321,2.237,1838,2.429,1961,4.917,2246,2.794,2302,3.078,2437,7.329,2555,5.139,2633,3.822,2695,6.417,2818,2.325,2872,3.217,2940,2.511,2976,4.591,3065,3.686,3066,3.686,3067,3.686,3068,8.399,3069,3.686,3070,3.686,3071,3.686,3072,3.686,3073,3.686,3074,3.686,3075,3.686,3076,3.686,3077,3.686,3078,7.354,3079,5.889,3080,5.889,3081,3.686,3082,3.686,3083,3.686,3084,3.686]],["t/1315",[0,7.793,1,0.156,3085,8.483]],["t/1317",[3086,11.008]],["t/1319",[1,0.198,145,4.305,174,3.537,3087,9.018,3088,8.325]],["t/1321",[1,0.199,168,3.484,170,5.26,1396,4.016,1838,4.307,3089,6.537,3090,9.037,3091,6.537,3092,6.537,3093,6.537,3094,6.537,3095,6.537,3096,9.037,3097,6.537,3098,6.537,3099,6.537]],["t/1323",[1,0.202,23,1.241,32,1.348,38,1.725,65,1.034,90,2.107,142,3.664,144,3.263,168,1.618,207,4.642,209,4.642,303,1.821,536,1.865,584,2.106,713,1.941,1838,2,2405,2.649,3100,5.029,3101,3.036,3102,5.029,3103,3.036,3104,3.036,3105,2.367,3106,3.036,3107,3.036,3108,3.036,3109,3.036,3110,3.036,3111,5.029,3112,5.029,3113,7.485,3114,3.036,3115,3.036,3116,3.036,3117,3.036,3118,3.036,3119,3.036,3120,3.036,3121,3.036,3122,5.029,3123,5.029,3124,5.029,3125,5.029,3126,2.649,3127,2.803,3128,2.803,3129,3.036,3130,3.036]],["t/1325",[1,0.193,31,2.915,32,4.626,34,4.663,39,4.663,40,4.663,90,2.34,142,2.467,182,2.777,403,5.414,3088,5.156,3131,5.585,3132,5.585,3133,5.585,3134,5.585,3135,8.085,3136,5.585,3137,5.585,3138,5.585,3139,5.585,3140,5.156,3141,6.749,3142,4.663,3143,4.663,3144,4.874]],["t/1327",[1,0.183,544,4.599,3085,6.883,3126,7.464,3127,9.968,3128,7.897,3145,7.464,3146,8.554,3147,8.554,3148,8.554]],["t/1329",[879,6.602]],["t/1332",[4,8.992,3149,10.77]],["t/1334",[1,0.198,7,3.917,31,3.144,32,2.759,57,4.093,59,5.427,70,5.734,182,3.088,1184,5.734,3150,6.211,3151,6.211,3152,6.211,3153,6.211,3154,6.211,3155,6.211,3156,6.211,3157,6.211,3158,6.211,3159,6.211,3160,6.211]],["t/1336",[1,0.192,23,2.986,31,3.513,32,4.87,33,6.741,52,6.372,53,6.741,425,3.156,3161,7.302,3162,7.302,3163,9.743,3164,7.302,3165,7.302]],["t/1338",[1,0.196,31,3.849,32,4.741,34,4.279,39,6.338,40,4.279,43,4.732,44,4.732,138,4.279,713,4.855,3140,4.732,3141,6.338,3142,4.279,3143,4.279,3144,6.625,3166,4.732,3167,4.732,3168,5.126,3169,5.126,3170,5.126,3171,5.126,3172,5.126,3173,5.126,3174,5.126]],["t/1340",[1,0.195,23,2.433,31,3.774,32,4.373,49,1.822,50,1.966,92,2.608,138,2.272,174,1.067,454,1.45,473,3.316,475,2.121,606,2.406,832,5.296,2062,1.632,2072,1.793,2715,2.272,2912,2.375,3142,3.831,3143,3.831,3144,4.004,3166,2.512,3167,2.512,3175,5.494,3176,5.951,3177,2.721,3178,6.987,3179,4.589,3180,4.589,3181,4.589,3182,6.987,3183,4.589,3184,4.589,3185,4.589,3186,4.589,3187,4.589,3188,2.721,3189,2.721,3190,4.589,3191,2.721,3192,2.721,3193,4.589,3194,2.721,3195,2.721,3196,2.721,3197,2.721,3198,2.375,3199,2.721,3200,2.721,3201,2.721,3202,2.721]],["t/1342",[0,1.745,1,0.203,23,0.965,31,2.587,32,1.806,65,1.385,168,2.167,182,1.174,253,1.12,303,1.416,338,1.789,419,1.566,438,1.789,544,1.269,816,1.489,1251,2.6,1689,1.9,1992,1.489,2071,1.51,2405,2.06,2920,3.271,3045,2.06,3203,2.361,3204,2.361,3205,2.361,3206,2.361,3207,5.354,3208,2.361,3209,3.394,3210,4.065,3211,4.065,3212,4.065,3213,2.361,3214,2.361,3215,2.361,3216,2.361,3217,1.971,3218,2.361,3219,2.361,3220,2.361,3221,2.361,3222,2.361,3223,2.361,3224,2.361,3225,2.361,3226,2.361,3227,2.361,3228,2.361,3229,2.361,3230,2.06,3231,4.065,3232,2.361,3233,2.361,3234,6.363,3235,5.354,3236,2.361,3237,2.361,3238,2.361,3239,2.361,3240,2.361,3241,2.361]],["t/1344",[1,0.196,23,4.177,31,3.2,32,2.829,57,5.848,59,5.523,65,2.169,66,4.506,468,7.745,606,3.34,3230,5.558,3242,6.37,3243,6.37,3244,6.37,3245,6.37,3246,6.37]],["t/1346",[0,2.272,1,0.2,23,3.678,31,3.011,32,3.709,38,1.746,65,1.047,168,1.638,426,2.473,1014,3.67,1322,2.473,1520,2.33,1907,2.682,3105,3.96,3230,4.433,3247,3.073,3248,3.073,3249,3.073,3250,3.073,3251,3.073,3252,3.073,3253,3.073,3254,3.073,3255,3.073,3256,3.073,3257,3.073,3258,3.073,3259,3.073,3260,5.08,3261,3.073,3262,3.073,3263,3.073,3264,3.073,3265,5.08,3266,5.08,3267,3.073,3268,5.666,3269,3.073,3270,3.073,3271,3.073,3272,3.073,3273,3.073,3274,3.073,3275,3.073,3276,3.073,3277,3.073,3278,3.073,3279,3.073,3280,3.073,3281,3.073]],["t/1349",[10,6.624,11,6.603,12,8.308]],["t/1351",[1,0.152,12,8.308,3282,9.532,3283,10.325]],["t/1353",[1,0.177,7,4.388,10,3.806,11,2.918,12,9.646,105,6.423,107,3.459,140,3.459,142,2.016,152,6.019,204,5.808,2514,3.982,3085,3.672,3282,4.213,3284,8.431,3285,4.563,3286,6.957,3287,4.563,3288,6.957,3289,6.957,3290,4.563,3291,6.957,3292,6.957,3293,6.957,3294,4.563,3295,4.563,3296,4.563,3297,4.563,3298,4.563,3299,4.563]],["t/1356",[1,0.156,3300,10.543,3301,10.543]],["t/1358",[140,6.02,549,8.619,3302,10.325]],["t/1360",[1,0.143,338,7.369,339,7.822,2279,7.578,3303,9.721,3304,9.721,3305,9.721]],["t/1362",[10,5.649,140,5.134,1007,6.511,2800,9.009]],["t/1364",[1,0.192,65,1.84,140,5.849,200,2.614,323,2.242,333,2.88,356,4.989,419,2.082,425,2.336,509,3.408,529,3.204,553,4.096,597,4.212,621,3.041,847,2.767,1552,3.994,1979,3.904,2113,3.904,2506,4.989,2509,4.715,2798,4.989,3306,5.404,3307,5.404,3308,5.404,3309,5.404,3310,5.729,3311,4.989]],["t/1366",[1,0.16,20,0.925,22,1.065,23,1.116,24,1.257,25,1.39,41,1.772,59,2.331,65,0.513,121,3.131,122,1.141,123,1.39,144,7.241,168,0.803,200,0.728,372,1.113,382,1.065,404,0.977,419,0.58,425,0.651,522,3.633,612,2.018,713,1.746,1351,3.942,1789,2.07,1979,6.988,2039,1.088,2043,1.174,2054,1.065,2055,1.894,2060,1.174,2071,5.767,2152,6.571,2408,1.314,2573,1.39,2620,4.249,2715,1.257,2996,3.458,3310,0.925,3311,1.39,3312,1.506,3313,1.506,3314,1.506,3315,1.506,3316,1.506,3317,1.506,3318,1.506,3319,2.73,3320,1.506,3321,2.73,3322,1.506,3323,1.506,3324,7.002,3325,1.506,3326,1.506,3327,1.506,3328,1.506,3329,1.506,3330,1.506,3331,1.506,3332,1.506,3333,1.506,3334,1.506,3335,1.506,3336,2.383,3337,1.506,3338,1.506,3339,1.506,3340,1.506,3341,1.506,3342,1.506,3343,1.506,3344,2.73,3345,1.506,3346,1.506,3347,10.03,3348,1.506,3349,2.73,3350,2.73,3351,2.73,3352,2.73,3353,2.07,3354,1.506,3355,1.506,3356,1.39,3357,1.506,3358,4.602,3359,1.506,3360,2.73,3361,5.333,3362,1.506,3363,1.212,3364,1.506,3365,1.506,3366,1.506,3367,1.506,3368,1.506,3369,1.506,3370,1.506,3371,1.506,3372,1.506,3373,1.506,3374,1.506,3375,1.506,3376,1.506,3377,1.506,3378,1.506,3379,1.506,3380,1.506,3381,1.506,3382,1.506,3383,1.506,3384,1.506,3385,1.506,3386,1.39,3387,1.506,3388,1.506,3389,1.506,3390,1.506,3391,1.506,3392,1.506,3393,1.506,3394,1.506]],["t/1368",[1,0.187,32,1.713,140,3.036,152,2.287,261,5.026,372,2.852,597,8.154,1315,5.361,1979,4.411,2116,6.787,2369,7.954,3145,7.519,3310,2.37,3395,3.858,3396,3.858,3397,8.616,3398,3.858,3399,8.616,3400,3.858,3401,8.616,3402,3.858,3403,8.616,3404,3.858,3405,3.858,3406,3.858,3407,3.858,3408,3.858,3409,3.858]],["t/1370",[1,0.196,20,4.918,119,6.527,127,4.941,263,3.792,3410,5.275,3411,8.067]],["t/1373",[1,0.195,90,1.381,121,4.715,127,4.139,145,3.757,168,2.868,174,1.293,182,3.39,263,2.883,324,1.456,750,5.817,942,2.57,2062,4.719,3410,2.172,3412,6.866,3413,7.766,3414,8.117,3415,2.172,3416,2.752,3417,3.297,3418,5.381,3419,7.869,3420,3.297,3421,3.297,3422,5.381,3423,5.381,3424,3.297,3425,3.297,3426,5.381,3427,3.297,3428,3.297]],["t/1375",[1,0.192,121,4.928,127,4.896,145,2.58,263,3.416,750,3.994,2062,4.733,3412,6.887,3413,6.589,3414,6.887,3416,4.511,3429,5.404,3430,9.324,3431,9.324,3432,7.893,3433,5.404,3434,5.404,3435,5.404]],["t/1377",[1,0.194,6,3.583,127,2.473,140,2.575,263,3.927,522,3.528,597,8.357,2586,5.456,3412,4.519,3413,4.324,3414,6.676,3415,3.413,3416,4.324,3436,5.179,3437,9.098,3438,5.179,3439,5.179,3440,5.179,3441,6.676,3442,4.781,3443,5.179,3444,5.179]],["t/1380",[1,0.189,3,2.394,41,5.333,121,4.625,127,4.595,145,3.923,333,4.38,414,3.603,1242,5.274,2044,6.861,3040,5.274,3415,3.764,3445,7.171,3446,5.713,3447,8.218,3448,10.525,3449,5.713,3450,5.713,3451,5.713,3452,5.713]],["t/1382",[1,0.143,121,4.671,127,5.577,3445,8.483,3453,9.721,3454,9.721]],["t/1384",[1,0.189,127,4.467,333,4.987,3415,6.165,3445,8.165,3455,9.356]],["t/1386",[1,0.189,20,6.045,121,4.728,384,5.617,2066,7.108,2067,7.458,2077,6.466,3415,4.883,3456,9.839,3457,6.466,3458,9.839]],["t/1389",[1,0.17,140,6.419,3310,5.858,3459,9.535]],["t/1391",[1,0.197,6,4.076,7,6.884,119,5.489,120,8.035,3460,8.703]],["t/1393",[1,0.2,6,2.605,31,2.005,32,3.113,119,3.507,121,3.368,122,4.215,127,3.346,140,5.34,141,4.45,144,3.609,145,2.655,317,2.602,419,2.143,526,2.109,536,5.44,544,4.333,2351,2.165,3410,5.311,3411,2.676,3415,2.262,3461,2.538,3462,3.433,3463,3.169,3464,3.433,3465,3.433,3466,3.433,3467,3.433]],["t/1395",[1,0.197,3,2.559,31,2.201,32,2.712,65,1.314,121,2.934,122,4.628,127,3.618,140,4.965,141,3.371,144,3.962,145,2.915,168,2.056,182,1.918,200,2.953,419,1.486,425,3.275,544,3.282,798,1.625,2062,4.544,2586,2.313,2922,4.319,2925,2.924,2947,3.962,3410,2.542,3468,3.858,3469,3.858,3470,5.637,3471,3.561,3472,3.561,3473,3.561,3474,3.858]],["t/1397",[1,0.194,31,2.315,32,2.851,90,1.723,119,2.593,121,3.085,122,4.867,125,2.709,127,4.261,132,2.668,133,2.174,138,3.433,140,5.101,141,3.545,144,4.166,145,3.065,526,3.944,536,5.483,544,3.451,621,3.612,847,3.288,2586,5.352,3475,4.112,3476,4.112,3477,6.42,3478,4.112,3479,3.588,3480,4.112,3481,4.112]],["t/1399",[1,0.198,23,1.008,32,1.874,65,0.84,121,2.028,122,3.199,127,3.128,140,3.993,141,4.739,143,2.878,144,1.6,145,1.177,281,1.711,302,1.496,419,0.95,522,3.769,749,2.33,798,1.038,2062,3.318,2071,6.266,2633,5.21,2922,7.504,2925,3.199,2947,3.59,3310,1.515,3410,1.625,3411,1.922,3472,3.896,3473,2.276,3482,5.108,3483,2.466,3484,2.466,3485,2.466,3486,1.984,3487,5.533,3488,2.466,3489,2.276,3490,2.466,3491,2.466,3492,2.466,3493,2.276,3494,2.466,3495,2.466,3496,2.466,3497,2.466]],["t/1402",[1,0.202,31,1.811,32,3.322,117,2.367,140,6.198,538,5.528,668,4.193,2922,3.553,3498,5.023,3499,5.023,3500,5.023,3501,5.023,3502,5.023,3503,5.023,3504,5.023,3505,5.023]],["t/1404",[1,0.2,23,1.044,31,2.711,32,1.932,65,1.481,90,1.07,121,1.227,122,1.936,127,1.219,133,1.35,140,4.069,141,1.41,144,2.822,145,4.743,168,1.361,182,2.163,204,3.631,233,1.845,419,0.984,425,1.104,459,1.279,538,3.215,942,1.991,1396,1.569,1963,2.055,2586,2.608,2922,1.807,3415,6.546,3506,5.68,3507,4.349,3508,2.554,3509,2.554,3510,2.554,3511,2.554,3512,2.358,3513,2.554,3514,2.554,3515,4.349,3516,5.851,3517,2.554,3518,2.554,3519,2.554,3520,2.554,3521,2.554,3522,2.554,3523,2.554,3524,2.554,3525,2.358,3526,2.229,3527,2.554]],["t/1406",[1,0.202,32,2.027,65,2.369,90,2.915,140,4.193,145,2.179,219,6.092,538,3.373,544,3.74,613,3.459,1554,3.228,3021,3.109,3415,4.584,3525,4.213,3526,3.982,3528,4.213,3529,4.563,3530,4.563,3531,4.563,3532,4.563,3533,6.957,3534,4.563,3535,6.957,3536,6.423]],["t/1408",[1,0.181,119,6.649]],["t/1410",[1,0.193,121,5.423,536,5.643,3537,8.014,3538,8.479]],["t/1412",[1,0.2,31,1.459,32,1.797,90,1.695,121,1.944,140,3.152,144,2.625,145,1.931,174,1.586,233,2.923,526,2.485,536,5.434,538,4.685,1157,3.153,2586,2.426,3143,3.377,3415,4.176,3479,3.53,3537,3.53,3539,4.045,3540,4.045,3541,3.53,3542,7.215,3543,3.735,3544,6.819,3545,7.815,3546,4.045,3547,4.045,3548,4.045,3549,4.045,3550,4.045,3551,7.815,3552,4.045]],["t/1414",[1,0.201,90,3.623,132,3.981,174,3.39,536,5.311,812,4.936,1157,4.782,2004,7.217,2586,3.679,3479,5.353,3542,9.242,3544,5.353,3553,6.135]],["t/1416",[1,0.2,31,2.149,32,2.647,90,3.112,121,2.864,140,4.212,144,3.867,145,2.845,174,1.467,538,4.406,1157,2.917,1595,5.49,1753,7.819,1963,5.976,2331,5.79,3353,4.518,3441,6.481,3516,6.481,3554,3.742,3555,3.742,3556,5.63,3557,5.96,3558,4.975,3559,4.796]],["t/1418",[1,0.201,31,1.867,65,1.764,90,3.206,174,2.031,261,2.489,948,3.312,1157,4.037,2331,4.037,3526,4.519,3544,6.676,3558,6.387,3559,6.156,3560,9.098,3561,5.179,3562,5.179,3563,5.179,3564,5.179,3565,5.179,3566,4.781,3567,5.179,3568,5.179]],["t/1420",[1,0.201,7,2.743,31,0.921,32,1.134,65,0.87,90,2.38,117,2.05,121,1.227,125,1.683,127,1.219,132,1.657,140,2.824,144,1.657,145,1.219,174,1.002,212,4.015,219,1.845,233,3.142,289,1.991,303,1.532,503,2.132,538,1.888,942,4.427,1963,5.395,2414,2.358,2586,3.406,2964,2.358,3217,2.132,3543,2.358,3569,2.554,3570,4.349,3571,2.554,3572,7.621,3573,2.554,3574,5.243,3575,2.554,3576,2.554,3577,2.554,3578,2.554,3579,2.554,3580,2.554,3581,2.554,3582,5.68,3583,2.554,3584,2.554,3585,4.349,3586,4.349,3587,2.554,3588,2.554,3589,2.554,3590,2.554,3591,2.554,3592,2.554,3593,2.554,3594,2.554,3595,2.554,3596,2.554,3597,4.349,3598,2.554,3599,2.554,3600,2.554]],["t/1422",[1,0.181,119,6.649]],["t/1424",[1,0.199,3,1.312,23,1.28,31,1.86,32,2.291,65,2.24,121,1.505,127,4.333,140,2.565,144,3.347,145,2.463,233,3.727,419,1.988,536,4.687,2071,6.413,2182,3.131,2902,3.454,2947,3.347,3441,6.656,3486,4.151,3516,6.656,3537,4.501,3601,3.131,3602,5.159,3603,4.501,3604,3.131,3605,3.131,3606,2.891,3607,5.159,3608,3.131,3609,6.578,3610,3.131]],["t/1426",[1,0.191,3,1.5,32,1.59,121,3.969,127,4.319,140,4.107,144,2.323,145,1.709,261,3.969,512,1.862,587,4.02,606,3.782,899,4.83,1030,6.021,1099,6.294,1747,6.836,2182,3.492,2351,4.549,2902,2.398,2947,2.323,3415,3.791,3566,6.658,3603,3.125,3611,3.581,3612,3.306,3613,3.581,3614,7.212,3615,7.212,3616,7.212,3617,5.753,3618,3.581]],["t/1428",[1,0.2,117,2.298,121,3.515,127,5.239,140,5.196,281,7.613,512,2.536,544,4.719,2071,3.118,3410,5.784,3486,3.923,3489,4.501,3619,4.876,3620,4.876,3621,4.876]],["t/1431",[1,0.181,140,4.113,536,5.081,1744,6.655,2071,5.289,2270,5.975,3442,7.635,3541,7.217,3622,6.904,3623,7.217,3624,7.635,3625,7.635,3626,8.27]],["t/1433",[1,0.195,140,5.093,174,3.09,544,5.506,2071,5.038,2860,6.142,3627,7.879,3628,7.879,3629,7.879,3630,7.879]],["t/1435",[1,0.179,3,4.327,140,5.134]],["t/1437",[1,0.196,18,1.964,23,2.543,65,2.118,90,2.606,127,4.167,145,2.969,174,3.423,200,3.009,419,3.363,425,2.688,621,2.222,747,2.291,749,2.181,847,3.185,948,3.978,1157,3.079,1205,3.688,1225,5.914,2417,3.446,2902,2.645,2947,4.993,3603,3.446,3631,5.742,3632,6.22,3633,3.949,3634,3.949,3635,3.949,3636,3.949,3637,3.949]],["t/1439",[1,0.166,121,4.413,127,5.388,606,4.815,1205,5.445,3461,6.789,3463,8.479,3631,8.479]],["t/1441",[1,0.169,127,5.475,522,7.05,2071,5.119,2902,5.361,2947,7.442,3486,6.441,3638,8.005,3639,8.005,3640,8.005,3641,8.005]],["t/1443",[1,0.191,127,6.182,512,2.972,522,3.892,2902,3.826,2922,8.215,2947,6.245,3471,7.587,3642,5.713,3643,5.713,3644,5.713,3645,5.713,3646,5.713]],["t/1445",[1,0.192,65,1.443,90,1.038,121,1.191,125,1.633,127,5.264,132,1.608,133,1.31,140,1.232,143,3.419,144,1.608,145,1.183,200,1.199,233,3.062,281,1.719,306,3.133,419,0.955,425,1.071,512,1.289,522,1.688,544,1.332,597,5.124,899,2.838,1565,2.288,2071,5.502,2182,2.572,2351,4.658,2450,1.878,2633,2.75,2902,2.838,2922,5.696,2947,4.793,3410,1.633,3482,2.288,3486,1.994,3512,2.288,3606,2.288,3647,2.478,3648,2.478,3649,2.478,3650,2.478,3651,2.478,3652,2.478,3653,2.478,3654,2.478,3655,2.478,3656,2.478,3657,2.478,3658,2.478,3659,2.478,3660,2.478,3661,2.478,3662,2.478,3663,4.238,3664,2.478,3665,2.478,3666,2.478,3667,2.478,3668,2.478,3669,2.478,3670,2.478,3671,2.478,3672,2.162,3673,2.478,3674,2.478,3675,2.478,3676,2.478,3677,2.478,3678,2.478,3679,2.478,3680,4.238]],["t/1449",[10,5.534,11,6.469,140,5.03,549,8.445,1459,8.139]],["t/1451",[140,5.356,3681,9.943]],["t/1453",[1,0.149,140,5.03,338,7.668,339,8.139,2416,8.827]],["t/1456",[10,5.893,11,6.888]],["t/1458",[10,5.893,1015,7.337]],["t/1460",[10,5.768,571,8.219,1007,6.649]],["t/1462",[1,0.181,119,6.649]],["t/1464",[1,0.179,127,5.993,2584,9.228,3416,6.683,3682,10.349,3683,8.005,3684,8.005,3685,8.005]],["t/1466",[1,0.181,127,5.56,522,7.934,3686,8.27,3687,8.27,3688,10.568,3689,8.27,3690,8.27]],["t/1468",[1,0.19,121,3.615,127,6.155,812,7.996,1453,6.053,3691,7.522,3692,7.522,3693,7.522,3694,7.522]],["t/1470",[1,0.191,121,3.226,127,6.176,454,3.578,459,3.362,3695,6.712,3696,10.502,3697,6.712,3698,6.712,3699,6.712,3700,6.712,3701,6.712]],["t/1472",[1,0.187,7,2.533,90,1.683,121,3.738,125,6.512,127,4.206,130,1.943,132,2.606,133,2.123,140,3.537,144,2.606,145,1.917,174,1.575,233,4.554,281,4.935,522,6.521,766,8.109,2450,1.764,3410,2.646,3612,3.708,3702,6.303,3703,6.303,3704,8.811,3705,2.328,3706,6.303,3707,7.779,3708,2.328,3709,5.298,3710,2.328,3711,5.298,3712,4.016,3713,3.708,3714,4.016,3715,4.016,3716,6.303,3717,4.016,3718,2.328,3719,4.016,3720,2.328,3721,2.328]],["t/1474",[1,0.188,127,5.96,333,3.836,512,3.743,522,4.903,544,3.869,1614,9.066,2066,5.2,2584,5.791,3415,4.742,3722,7.197]],["t/1476",[1,0.195,127,6.224,333,4.2,1614,8.872]],["t/1478",[1,0.194,127,6.274,512,4.527]],["t/1481",[1,0.195,127,4.89,638,8.551,3461,8.413,3723,6.875,3724,7.879,3725,8.551]],["t/1483",[1,0.196,6,5.973,127,5.246,750,4.649,2920,5.061,3461,4.649,3723,5.488,3726,6.289,3727,6.289,3728,6.289,3729,6.289,3730,6.289]],["t/1485",[1,0.194,6,3.102,121,3.183,127,4.979,133,4.82,168,3.53,2717,5.78,3410,6.872,3411,7.109,3723,5.78,3731,6.623,3732,6.623,3733,6.623,3734,6.623,3735,6.623]],["t/1487",[1,0.203,3,3.231,31,1.887,65,2.626,119,3.301,121,2.515,127,2.499,140,2.602,174,2.052,238,6.204,462,3.781,512,2.722,536,3.215,1225,3.069,1354,4.832,2808,4.832,3415,3.449,3538,4.832,3736,5.234,3737,5.234]],["t/1489",[1,0.195,3,3.152,127,5.651,544,4.044,2586,5.959,2920,6.053,3410,6.547,3470,6.945,3738,7.522]],["t/1491",[1,0.195,6,3.323,127,5.761,544,3.814,694,3.954,2452,7.449,3410,6.297,3411,7.449,3739,6.549,3740,6.549]],["t/1493",[1,0.198,3,3.592,127,5.445,140,3.013,145,2.893,2452,4.724,2605,5.595,3415,3.993,3741,7.479,3742,6.06,3743,8.571,3744,6.06,3745,6.06,3746,6.06,3747,6.06,3748,6.06]],["t/1495",[1,0.179,1396,7.438]],["t/1497",[1,0.201,6,4.311,127,5.014,544,4.948,3410,6.064,3415,4.423,3749,6.712,3750,6.712,3751,6.712,3752,6.712]],["t/1499",[1,0.191,127,5.268,306,6.548,1876,7.73,3045,7.73,3753,8.858,3754,8.858]],["t/1501",[1,0.191,119,4.539,127,5.789,140,5.412,228,6.008,1020,4.09,3410,4.742,3411,5.61,3755,6.644,3756,7.197,3757,7.197,3758,6.644]],["t/1503",[1,0.193,127,4.385,3739,8.479,3741,8.014,3759,9.184,3760,9.184]],["t/1505",[1,0.202,6,3.577,127,3.646,140,3.798,3410,5.032,3740,7.051,3741,6.665,3761,7.637,3762,7.637]],["t/1507",[1,0.195,23,2.185,38,0.943,65,0.565,152,2.936,213,0.708,261,2.174,414,1.046,473,1.199,747,1.729,832,1.258,847,0.85,1322,7.129,1453,1.335,1743,3.745,2052,0.65,2053,0.708,2056,8.081,2057,4.571,2077,9.529,2695,3.54,2906,3.745,3105,2.323,3268,6.031,3356,2.751,3457,4.98,3763,0.879,3764,2.98,3765,0.879,3766,1.659,3767,0.879,3768,2.98,3769,3.545,3770,2.98,3771,0.879,3772,2.355,3773,0.879,3774,2.355,3775,0.879,3776,2.355,3777,0.879,3778,2.98,3779,5.345,3780,4.057,3781,2.98,3782,7.163,3783,5.707,3784,2.98,3785,3.093,3786,3.545,3787,2.98,3788,4.952,3789,2.98,3790,2.98,3791,4.952,3792,2.98,3793,6.353,3794,6.353,3795,6.353,3796,0.879]],["t/1511",[1,0.184,13,2.125,16,2.272,17,2.421,18,1.629,22,2.317,23,4.174,38,4.454,57,3.527,59,3.331,65,2.312,117,1.544,121,3.261,403,4.545,404,6.017,419,1.262,584,3.713,677,2.272,678,2.012,847,2.741,1399,4.468,2039,2.366,2040,4.468,2052,3.956,2053,4.307,2054,2.317,2055,2.272,2060,4.172,2182,3.248,2650,4.941,3797,3.275,3798,3.275,3799,3.275,3800,3.275,3801,3.024,3802,3.275,3803,3.275,3804,3.275,3805,3.275,3806,3.275,3807,3.275,3808,3.275,3809,4.67,3810,3.275,3811,3.275,3812,3.275,3813,5.352,3814,5.352,3815,3.275,3816,5.352,3817,3.275,3818,3.275,3819,3.024]],["t/1515",[1,0.176,13,1.268,14,1.572,15,1.705,16,3.209,17,1.444,18,0.972,20,6.396,21,1.412,22,1.382,23,1.892,31,0.704,38,1.959,41,3.621,57,4.196,59,3.473,65,0.665,121,2.223,154,1.11,302,2.807,382,3.273,384,1.481,404,3.621,1051,1.631,1226,2.439,1250,1.705,1279,3.722,1322,2.774,1399,1.631,1907,1.705,2029,1.804,2030,1.804,2031,1.631,2032,1.804,2033,1.804,2034,1.804,2035,1.804,2036,1.804,2040,1.631,2042,1.523,2052,4.125,2053,1.572,2054,1.382,2055,1.356,2056,4.35,2058,1.705,2060,2.687,2064,4.037,2066,2.491,2067,2.613,2068,1.631,2070,1.572,2071,1.249,2072,2.272,2076,2.878,2182,1.186,3105,1.523,3198,1.705,3209,1.631,3217,1.631,3268,1.705,3461,7.829,3801,1.804,3819,1.804,3820,1.954,3821,1.954,3822,1.705,3823,1.804,3824,3.183,3825,3.183,3826,3.183,3827,4.271,3828,1.804,3829,5.152,3830,1.804,3831,1.804,3832,1.954,3833,1.954,3834,4.271,3835,1.804,3836,5.152,3837,1.804,3838,1.804,3839,4.869,3840,3.447,3841,1.954,3842,1.804,3843,1.804,3844,1.804,3845,1.954,3846,3.447,3847,1.954,3848,1.954]],["t/1518",[1,0.185,23,3.128,41,4.964,57,5.041,59,4.761,302,4.643,333,2.761,382,5.412,384,3.926,404,4.964,1051,4.324,1226,3.664,1279,6.156,2052,5.656,2053,4.168,2054,3.664,2055,3.593,2058,4.519,2060,4.037,2064,7.939,2076,6.387,3198,4.519,3217,4.324,3834,4.781,3835,4.781,3836,8.399,3837,4.781,3838,4.781]],["t/1520",[1,0.176,333,5.392,2056,7.885,3209,8.445]],["t/1522",[1,0.175,20,7.666,31,1.402,121,2.952,263,1.424,333,3.275,1250,5.361,1322,4.943,2040,3.246,2042,3.031,2056,3.031,3105,3.031,3209,3.246,3461,9.377,3823,3.589,3824,5.671,3825,5.671,3826,5.671,3827,7.031,3828,3.589,3829,7.989,3830,3.589,3831,3.589,3839,5.361,3842,3.589,3843,3.589,3844,3.589,3849,3.888]],["t/1524",[3850,11.008]],["t/1526",[1,0.179,3851,10.325,3852,10.325]],["t/1528",[1,0.186,333,4.722,512,4.607,3853,8.858,3854,8.858,3855,8.858,3856,8.178,3857,8.858,3858,8.858]],["t/1530",[1,0.193,2073,6.962,2902,6.15,2947,5.96,3493,8.479,3859,9.184]],["t/1532",[1,0.194,404,5.367,2417,7.217,3860,8.27,3861,8.27,3862,8.27,3863,8.27,3864,8.27,3865,8.27,3866,8.27]],["t/1535",[1,0.17,6,5.408,2525,8.321,3867,9.535,3868,9.535,3869,9.535]],["t/1537",[1,0.191,302,5.376,1689,7.128,2246,6.715,2350,9.63,2586,5.312,3870,8.858]],["t/1539",[1,0.196,6,4.302,3871,8.014,3872,9.184,3873,8.479]],["t/1541",[6,4.302,713,5.873,1015,6.257,3874,9.184,3875,9.184,3876,9.184,3877,9.184,3878,9.184,3879,9.184,3880,9.184]],["t/1543",[1,0.198,143,4.96,263,3.493]],["t/1545",[1,0.198,125,7.387,129,9.359,2717,10.39,3881,7.637]],["t/1547",[1,0.19,6,5.504,13,6.12,14,3.672,16,4.827,17,5.143,18,5.048,21,5.026,323,1.893,333,2.432,419,1.758,610,2.676,1366,3.982,2346,3.373,2578,6.971,3882,4.563,3883,4.213,3884,4.213,3885,4.563,3886,4.563,3887,4.563,3888,4.563,3889,4.563,3890,4.563,3891,4.563,3892,6.423,3893,4.563,3894,4.563]],["t/1549",[1,0.178,6,4.476,13,4.603,14,5.709,16,6.63,17,7.064,18,4.752,21,6.904,2578,8.921,3883,6.549,3884,6.549,3895,7.094,3896,6.549]],["t/1551",[1,0.143,16,6.744,17,7.186,18,4.834,2351,6.131,2578,7.186,3896,8.974]],["t/1553",[1,0.179,6,4.836,16,7.163]],["t/1555",[1,0.189,5,4.523,16,5.466,17,5.824,18,5.659,65,2.683,1583,7.274,2806,6.577,3785,6.875,3892,9.456,3897,7.879]],["t/1557",[1,0.19,5,5.597,16,7.38,228,4.881,261,4.015,302,5.071,569,3.983,946,4.558,1769,4.705,2412,5.398,2962,5.398,3898,5.847,3899,5.847,3900,5.847,3901,5.847,3902,5.847,3903,5.847,3904,5.102,3905,5.847,3906,5.847,3907,5.847,3908,5.847,3909,5.847,3910,5.398]],["t/1559",[1,0.162]],["t/1561",[1,0.195,6,3.276,583,7.616,621,3.936,2152,4.853,2578,5.171,3911,6.995,3912,6.995,3913,9.465,3914,6.995,3915,6.995,3916,5.628,3917,6.104,3918,6.995,3919,6.995,3920,6.995]],["t/1563",[1,0.197,3,4.364,6,3.787,7,5.993,333,4.309,419,2.152,529,3.311,1552,4.129,2152,7.226,2153,7.055,2452,4.354,2578,4.129,3921,5.585,3922,5.585,3923,5.585,3924,5.585,3925,5.585,3926,5.585]],["t/1565",[1,0.179,6,5.227,18,4.484,610,5.288,678,5.541,2346,6.666,2419,8.325,3927,9.018]],["t/1568",[3928,9.532,3929,9.532,3930,10.325,3931,10.325]],["t/1570",[1,0.168,2351,7.199,2586,5.611,3928,8.638,3932,9.356,3933,10.538]],["t/1572",[1,0.181,18,4.113,610,4.849,678,5.081,713,6.758,1351,6.114,2346,6.114,3929,7.635,3933,9.757,3934,8.27,3935,8.27]],["t/1576",[1,0.199,6,4.351,223,4.18,403,4.556,713,6.764,957,6.281,1554,4.814,3910,6.281,3936,6.804,3937,5.68,3938,6.804,3939,5.475,3940,6.804]],["t/1578",[1,0.169,713,5.119,1038,6.985,1351,7.65,1379,5.663,2398,7.39,2578,7.65,3937,6.683,3941,8.005,3942,8.005,3943,8.005,3944,8.005,3945,8.005,3946,8.005]],["t/1580",[1,0.146,713,6.34,1351,7.329,3937,8.277,3947,8.651,3948,9.153]],["t/1582",[1,0.128,713,5.566,1203,6.288,1351,6.434,2066,6.288,3937,7.266,3947,7.595,3948,8.035,3949,8.703,3950,8.703,3951,8.703,3952,8.703,3953,8.703]],["t/1585",[1,0.176,3,3.647,107,9.04,117,4.102,2586,5.219,3954,7.266,3955,8.035,3956,7.595,3957,8.035]],["t/1587",[1,0.195,57,3.68,59,3.476,107,4.234,170,4.494,333,2.977,425,2.414,694,3.113,2418,5.156,2586,3.349,3947,4.874,3954,4.663,3955,5.156,3956,4.874,3957,5.156,3958,5.585,3959,8.085,3960,8.085,3961,8.085,3962,5.585,3963,7.464,3964,5.585,3965,5.585,3966,5.585,3967,5.585,3968,5.585,3969,5.585]],["t/1590",[107,6.836,2586,5.408,3956,7.869,3963,10.302,3970,9.018,3971,9.018,3972,9.018,3973,9.018,3974,9.018,3975,9.018]],["t/1592",[1,0.182,18,2.746,57,3.639,59,3.437,117,2.603,170,4.444,333,2.944,382,3.907,561,4.611,610,3.238,694,3.078,713,3.532,1552,4.083,2152,3.832,2411,5.099,2586,3.312,3954,4.611,3976,11.004,3977,5.523,3978,8.02,3979,5.523,3980,5.523,3981,5.523,3982,8.02,3983,5.523,3984,5.523,3985,5.523,3986,5.523,3987,5.523,3988,5.523,3989,5.523,3990,5.523]],["t/1596",[1,0.186,6,4.644,2586,5.946,3991,9.914]],["t/1598",[1,0.165,1315,6.38,2578,6.666,2584,7.257,3992,9.018,3993,9.018,3994,9.018,3995,9.018,3996,9.018,3997,9.018]],["t/1600",[1,0.176,3998,10.115,3999,10.115,4000,10.115]],["t/1603",[1,0.194,2902,7.077,2947,5.367,4001,8.27,4002,8.27,4003,8.27,4004,8.27,4005,8.27,4006,8.27]],["t/1605",[1,0.159,50,7.801,2902,5.728,2925,8.184,2947,5.551,4007,8.554,4008,8.554,4009,8.554,4010,8.554,4011,8.554,4012,7.464]],["t/1607",[2902,7.557,2925,6.962,2947,5.96,4012,8.014,4013,9.184,4014,9.184,4015,9.184,4016,9.184,4017,9.184]],["t/1609",[1,0.152,6,4.836,4018,10.325,4019,10.325]],["t/1611",[4020,10.325,4021,10.325,4022,10.325,4023,10.325]],["t/1613",[1,0.165,6,3.577,18,3.798,152,4.528,333,4.071,459,3.825,521,6.665,610,4.478,2346,5.646,3461,5.646,3873,9.266,4024,7.637,4025,7.637,4026,7.637,4027,7.637,4028,7.637,4029,7.637,4030,7.637]],["t/1616",[1,0.162]],["t/1618",[1,0.182,18,2.942,20,3.635,610,3.469,1766,7.034,2062,3.548,2346,4.373,2586,6.413,2649,4.612,2925,4.485,2947,6.368,4012,5.163,4031,5.916,4032,5.916,4033,5.916,4034,5.916,4035,5.916,4036,5.916,4037,5.916,4038,5.916,4039,5.916,4040,8.426,4041,5.916,4042,5.916,4043,5.916,4044,5.916]],["t/1622",[1,0.197,31,4.361,65,1.861,90,4.319,529,3.239,570,5.089,3021,7.022,4045,6.942,4046,4.767,4047,7.345,4048,7.345]],["t/1624",[1,0.197,90,2.891,182,3.43,419,2.658,570,3.406,1025,5.551,1051,5.759,2031,5.759,4045,6.019,4046,6.019,4047,6.368,4048,6.368,4049,6.898,4050,6.898,4051,6.898,4052,6.898,4053,6.898]],["t/1626",[1,0.197,18,3.375,23,4.319,31,2.826,65,2.312,200,3.283,419,2.615,425,2.934,529,1.942,606,6.433,621,3.819,747,1.9,749,3.748,847,3.476,3126,5.923,4046,2.858,4054,7.236,4055,5.352,4056,3.275,4057,3.275,4058,5.352]],["t/1628",[1,0.197,23,2.478,142,5.377,182,3.013,419,3.302,606,3.177,1201,7.479,3536,5.595,4045,5.288,4054,5.595,4059,6.06,4060,6.06,4061,8.571,4062,8.571]],["t/1630",[1,0.196,31,2.797,142,4.478,419,3.906,459,5.078,4063,7.756,4064,7.756,4065,7.756,4066,7.756]],["t/1632",[1,0.192,621,4.364,847,3.972,1396,6.939,1747,7.173,4067,6.475,4068,7.756,4069,7.756,4070,9.089]],["t/1634",[1,0.194,182,5.2,1396,7.494,3021,8.31]],["t/1636",[1,0.199,23,2.186,168,5.789,182,4.608,371,7.224,378,2.899,459,2.677,1225,3.134,1396,3.284,1747,3.782,3021,5.335,4071,5.346,4072,5.346,4073,5.346,4074,5.346,4075,5.346,4076,5.346,4077,5.346,4078,4.302,4079,5.346]],["t/1638",[1,0.202,3,0.985,23,2.182,65,3.273,168,1.252,182,1.168,419,0.905,425,1.016,454,2.158,459,4.968,606,1.232,1216,1.961,1225,1.378,1405,1.961,2660,6.604,3528,3.738,4078,6.741,4080,2.35,4081,2.35,4082,2.35,4083,2.35,4084,2.35,4085,2.35,4086,4.049,4087,4.049,4088,1.961,4089,4.049,4090,4.049,4091,2.35,4092,2.35,4093,4.049,4094,3.738,4095,2.35,4096,2.35,4097,7.219,4098,2.35,4099,2.35,4100,4.656,4101,2.35,4102,2.35,4103,2.35,4104,2.35,4105,2.35,4106,2.169]],["t/1640",[1,0.2,419,2.253,425,2.527,1420,5.102,4107,5.847,4108,5.847,4109,5.398,4110,5.847,4111,5.847,4112,5.847,4113,5.847,4114,5.847,4115,5.847,4116,5.847,4117,8.355,4118,5.847,4119,5.847,4120,5.847,4121,5.847,4122,5.847,4123,5.847,4124,5.847]],["t/1642",[1,0.203,6,1.372,92,2.774,163,1.995,294,1.901,378,1.588,419,1.881,425,1.266,454,1.561,459,5.236,609,3.805,621,1.648,1203,2.116,1205,1.736,1206,2.032,1414,5.201,1594,4.259,2902,3.269,4067,2.445,4125,2.929,4126,2.929,4127,2.929,4128,2.929,4129,2.929,4130,2.929,4131,2.929,4132,2.283,4133,2.929,4134,2.929,4135,2.929,4136,2.929,4137,2.929,4138,2.929,4139,2.929,4140,2.929,4141,2.929,4142,2.929,4143,4.881,4144,4.881,4145,4.881,4146,2.929,4147,2.929]],["t/1644",[1,0.193,168,4.56,459,5.407,621,4.813,4067,7.141,4148,8.554,4149,8.554,4150,8.554]],["t/1646",[1,0.201,261,3.141,611,4.535,621,3.678,904,4.242,1216,5.457,1405,5.457,1747,7.327,2835,5.704,4067,5.457,4151,6.537,4152,6.537,4153,6.537,4154,6.537]],["t/1649",[1,0.196,2065,6.146,4155,7.637,4156,5.954,4157,7.637,4158,6.376,4159,7.637,4160,7.637,4161,7.637,4162,7.637,4163,7.637,4164,7.637,4165,7.637]],["t/1651",[1,0.192,3,3.25,31,3.656,2065,6.241,4156,7.904,4158,6.475,4166,8.161,4167,7.756,4168,7.756,4169,7.756]],["t/1653",[1,0.178,3,3.302,31,2.841,904,5.112,1024,4.841,1595,5.824,3556,5.972,3856,7.274,4170,6.577,4171,6.577,4172,7.274,4173,7.274,4174,5.692,4175,5.824,4176,7.274,4177,7.879]],["t/1655",[1,0.202,31,2.388,90,2.776,143,3.445,174,2.597,1024,4.069,1595,4.896,2331,7.109,3556,5.021,3558,5.529,3559,5.33,4174,4.785,4175,4.896,4178,6.623]],["t/1657",[1,0.2,1024,5.442,1595,6.548,2331,6.905,3559,7.128]],["t/1659",[1,0.197,13,3.932,31,2.185,65,2.064,143,3.152,419,2.335,1024,3.723,1595,4.48,3556,4.594,4174,4.378,4175,4.48,4179,6.06,4180,6.06,4181,6.06,4182,6.06,4183,5.059,4184,6.06,4185,6.06,4186,6.06,4187,5.288,4188,5.595,4189,5.059,4190,5.595,4191,6.06]],["t/1661",[1,0.198,13,3.932,31,2.185,90,2.539,143,3.152,174,2.377,261,2.912,1024,3.723,1595,4.48,2331,4.724,3556,4.594,3558,5.059,3559,4.876,4174,4.378,4175,4.48,4183,5.059,4187,5.288,4188,5.595,4189,5.059,4192,6.06,4193,6.06,4194,6.06,4195,6.06]],["t/1665",[1,0.182,90,3.021,146,3.383,174,3.788,182,2.378,303,2.868,378,2.593,425,3.116,459,4.345,587,4.017,639,6.018,1202,4.173,1394,4.173,2615,4.415,3572,6.29,3672,6.29,4196,7.208,4197,4.782,4198,7.208,4199,4.782,4200,6.655,4201,4.782,4202,4.782,4203,4.782,4204,7.208,4205,4.173,4206,4.782,4207,4.415,4208,4.782,4209,7.208,4210,4.782,4211,4.782,4212,4.782,4213,4.415]],["t/1667",[1,0.14,90,4.496,132,6.142,146,4.948,174,3.712,378,3.793,425,3.023,639,5.84,1044,6.839,1052,5.302,1202,6.104,2860,5.453,3572,6.104,3672,6.104,4205,8.26,4214,6.995,4215,6.995,4216,6.995,4217,6.995,4218,6.995]],["t/1669",[1,0.159,3,4.513]],["t/1671",[1,0.195,6,5.169,1992,5.586,4219,8.858,4220,8.178,4221,8.858]],["t/1673",[1,0.197,3,3.152,6,4.654,13,4.881,529,4.46,847,3.852,3353,5.702,4187,6.564,4189,6.28,4222,7.522,4223,7.522,4224,7.522]],["t/1675",[1,0.2,6,4.608,13,6.384,4220,9.083,4225,7.41,4226,6.841,4227,7.41,4228,7.41,4229,7.41]],["t/1677",[1,0.172,13,6.308,133,5.139,4230,9.721,4231,9.721,4232,9.721]],["t/1679",[1,0.193,13,5.96,1992,5.792,2690,8.479,4226,8.479,4233,9.184]],["t/1683",[1,0.195,3,2.973,31,4.169,253,3.365,749,3.917,3556,5.378,4132,5.53,4156,5.53,4166,5.126,4170,5.923,4171,5.923,4175,5.244,4234,5.53,4235,5.923]],["t/1685",[1,0.197,3,4.292,31,3.693,253,4.858,4156,7.985,4158,8.551]],["t/1687",[1,0.199,31,3.583,253,5.996,749,4.153,4174,5.435,4236,7.522]],["t/1689",[1,0.198,31,4.189,1050,8.194,3574,9.431,4156,6.919,4158,7.41,4174,6.413,4237,8.876,4238,6.37,4239,6.37]],["t/1691",[1,0.198,3,2.931,31,3.868,477,6.104,816,4.411,847,3.582,1399,5.84,4240,6.995,4241,6.995,4242,6.995,4243,6.458,4244,6.458,4245,6.458,4246,6.458]],["t/1693",[1,0.18,31,3.311,168,6.015,182,4.567,253,4.356,816,5.792,4247,9.184]],["t/1695",[1,0.192,3,3.524,23,3.439,31,3.032,65,2.864,4156,6.556,4166,7.717,4234,6.556,4235,7.021]],["t/1697",[1,0.186,3,3.712,31,3.194,1024,5.442,4170,7.395,4171,7.395,4172,8.178,4173,8.178,4248,8.858]],["t/1699",[1,0.201,3,3.836,18,2.602,23,2.14,749,4.257,1008,4.211,1225,3.069,1747,3.702,4070,8.126,4174,5.57,4175,3.869,4249,9.153,4250,10.099,4251,5.234,4252,4.832]],["t/1701",[1,0.197,3,3.105,31,2.672,1024,6.045,3021,8.886,4253,7.41]],["t/1703",[1,0.2,31,3.194,378,4.804,3021,6.034,4166,6.4]],["t/1705",[1,0.2,3,4.195,31,3.117,566,5.663,1024,5.311,1396,7.505,3021,7.404,4254,6.135]],["t/1707",[1,0.195,182,3.918,1396,6.293,3021,8.209,4070,6.34,4255,7.879,4256,7.879,4257,7.879]],["t/1709",[1,0.198,3,4.249,90,3.25,174,3.042,4258,7.756,4259,11.295,4260,10.139]],["t/1711",[1,0.201,65,3.418,90,4.206,261,3.67,419,3.867,425,3.301,529,4.528]],["t/1713",[1,0.201,3,3.361,6,2.587,18,2.746,31,1.992,90,2.315,174,3.703,253,2.62,459,4.729,3353,4.187,4205,4.82,4261,5.523,4262,5.523,4263,5.099,4264,5.099,4265,5.099,4266,5.099,4267,5.523,4268,5.099]],["t/1715",[1,0.194,90,3.409,174,3.191,4263,7.511,4264,7.511,4265,7.511,4266,7.511,4268,11.261]],["t/1718",[1,0.198,3,2.931,31,3.868,253,4.49,425,3.023,816,5.969,847,3.582,4243,6.458,4244,6.458,4245,6.458,4246,6.458,4252,6.458]],["t/1720",[1,0.2,3,3.388,31,3.426,38,5.4,182,2.777,253,5.465,606,4.239,1225,4.74,4078,4.494,4106,5.156,4269,8.085,4270,3.476,4271,5.585]],["t/1722",[1,0.198,3,2.148,23,3.697,31,2.738,253,3.601,419,2.925,816,4.788,1225,4.452,4070,6.109,4097,11.201,4272,10.674,4273,5.126,4274,5.126]],["t/1725",[1,0.201,31,2.558,38,4.031,253,4.533,995,5.709,1178,8.339,1216,5.923,4275,7.094,4276,7.094,4277,6.549,4278,7.094]],["t/1727",[1,0.199,31,2.982,253,3.923,4279,8.27,4280,8.27,4281,8.27,4282,8.27,4283,8.27]],["t/1729",[1,0.2,31,2.797,253,3.679,4284,7.756,4285,7.756,4286,7.756,4287,7.756,4288,7.756,4289,7.756,4290,7.756]],["t/1731",[1,0.199,31,2.886,253,3.797,4291,8.005,4292,8.005,4293,8.005,4294,8.005,4295,8.005,4296,8.005]],["t/1733",[1,0.2,31,2.595,38,4.09,253,4.577,995,5.791,1178,8.419,1405,6.008,4277,6.644,4297,7.197,4298,7.197,4299,7.197]],["t/1735",[1,0.199,92,4.275,414,4.744,606,3.944,881,6.564,1420,6.564,4078,6.053,4300,7.522,4301,7.522,4302,9.937,4303,7.522]],["t/1737",[1,0.199,92,4.275,414,4.744,606,3.944,881,6.564,4078,6.053,4109,6.945,4304,7.522,4305,7.522,4306,7.522,4307,7.522,4308,7.522]],["t/1739",[1,0.191,3,4.429,31,3.81,253,5.013,4094,7.635,4309,8.27,4310,8.27,4311,8.27]],["t/1741",[1,0.17,3,3.996,31,3.438,4166,6.889,4234,7.433,4235,7.96,4312,7.96]],["t/1743",[1,0.195,3,2.148,31,3.849,32,4.016,36,3.556,38,4.315,46,5.919,65,2.586,261,2.463,373,4.855,606,3.981,847,3.888,4166,5.486,4234,5.919,4235,6.338,4312,4.279,4313,5.126,4314,5.126,4315,5.126,4316,5.126,4317,5.755]],["t/1745",[1,0.197,31,3.547,261,3.561,4166,7.98,4234,5.777,4312,6.187,4318,11.045,4319,7.41,4320,6.841]],["t/1747",[1,0.18,3,3.849,31,3.311,4166,8.154,4234,7.159,4312,7.667,4320,8.479]],["t/1749",[1,0.191,3,4.004,31,3.446,1024,5.871,1747,5.019,4070,5.709,4170,5.923,4171,5.923,4174,7.807,4175,5.244,4176,6.549,4190,6.549,4321,7.094,4322,7.094]],["t/1751",[1,0.196,3,3.779,4323,9.018,4324,9.018,4325,9.018,4326,9.018]],["t/1754",[1,0.184,31,3.138,200,4.21,615,5.16,4132,6.785,4270,5.416,4327,7.083,4328,5.489,4329,8.703]],["t/1756",[1,0.168,615,5.547,1052,7.092,4270,5.822,4327,6.071,4328,5.901,4330,7.529,4331,8.638]],["t/1758",[1,0.166,65,3.128,615,5.445,4207,8.479,4270,5.715,4327,5.96,4328,5.792,4330,7.39,4332,9.184]],["t/1760",[1,0.198,23,2.118,31,2.759,587,2.887,615,4.536,2062,5.456,2947,6.52,4270,4.761,4327,4.964,4328,4.825,4333,7.651,4334,5.179,4335,5.179,4336,5.179,4337,5.179,4338,5.179,4339,5.179,4340,5.179,4341,5.179,4342,5.179,4343,5.179,4344,3.829]],["t/1762",[1,0.197,31,3.258,615,5.358,2270,4.723,4132,5.096,4270,5.623,4327,7.25,4328,5.699,4345,6.537,4346,8.646,4347,6.537]],["t/1765",[1,0.193,31,3.318,253,4.365,615,5.456,3622,7.683,4270,5.727,4327,6.815,4328,5.804,4330,5.401,4348,6.712,4349,8.497,4350,6.712]],["t/1767",[1,0.194,31,3.349,253,4.406,615,5.507,847,3.484,2270,6.711,4270,5.781,4327,6.863,4328,5.858,4330,5.475,4351,6.804,4352,6.804]],["t/1769",[1,0.196,31,2.886,615,4.746,3623,6.985,4270,4.982,4327,6.715,4328,7.232,4353,8.005]],["t/1771",[1,0.191,31,2.982,615,4.903,847,4.235,3624,7.635,4270,5.147,4327,6.858,4328,5.216,4346,6.904,4354,8.27]],["t/1773",[1,0.189,31,3.084,615,5.071,4270,5.323,4327,7.006,4328,5.395,4355,8.554,4356,9.968]],["t/1775",[1,0.197,3,4.004,31,2.558,615,4.206,3021,4.833,3622,5.923,3623,6.191,4270,4.415,4327,6.201,4328,4.474,4331,6.549,4357,9.556,4358,7.094]],["t/1777",[1,0.17,23,3.87,31,3.413,419,3.647,615,5.612,3625,8.738,4270,5.89,4327,6.142,4328,5.969,4346,7.902,4356,8.738,4359,9.465,4360,6.995]],["t/1779",[1,0.195,31,2.869,1776,7.833,4361,7.956,4362,7.956,4363,7.956,4364,7.956,4365,7.956,4366,7.956,4367,7.956,4368,7.956,4369,5.463,4370,5.463,4371,5.463,4372,9.383,4373,5.463,4374,5.463,4375,5.463,4376,5.463]],["t/1781",[1,0.188,31,3.172,65,2.996,425,3.803,615,6.015,2860,6.858,4270,5.475,4327,5.709,4328,5.548,4330,7.079,4346,7.344,4377,8.798,4378,8.798,4379,6.289]],["t/1784",[1,0.192,31,3.032,615,4.986,1744,8.595,4270,5.233,4327,6.931,4328,5.304,4380,7.764]],["t/1786",[1,0.194,31,2.982,615,4.903,3541,7.217,4270,5.147,4327,6.858,4328,5.216,4380,7.635,4381,8.27]],["t/1788",[1,0.191,31,3.064,36,5.896,38,5.614,46,6.624,65,3.364,419,2.307,459,4.256,847,4.352,1744,6.838,4270,3.726,4317,7.488,4328,3.776,4382,7.845,4383,7.094]],["t/1790",[1,0.196,36,6.902,38,5.653,46,3.955,65,1.728,133,2.682,459,3.774,832,3.846,847,2.598,1744,6.063,4189,6.291,4317,3.846,4383,6.291,4384,5.074,4385,5.074,4386,5.074,4387,5.074,4388,4.428,4389,5.074,4390,5.074,4391,5.074,4392,5.074,4393,5.074,4394,5.074,4395,5.074,4396,5.074]],["t/1792",[1,0.131,31,3.194,36,6.145,38,5.034,46,6.905,65,3.017,847,4.536,1453,7.128,1547,8.178,4317,6.715,4382,8.178,4383,7.395]],["t/1794",[1,0.181,23,2.572,31,3.658,65,2.996,174,3.979,253,4.813,459,3.15,816,6.399,4166,4.544,4383,5.251,4397,6.289,4398,6.289,4399,6.289,4400,6.289,4401,8.798,4402,6.289,4403,6.289,4404,6.289,4405,6.289]],["t/1797",[1,0.199,31,3.5,200,3.512,266,6.703,373,3.088,425,2.087,587,4.863,747,4.212,1225,4.257,1414,4.643,2182,2.93,2257,9.469,4344,5.367,4406,4.828,4407,5.504,4408,7.261,4409,4.828]],["t/1799",[1,0.19,13,3.133,31,1.741,90,2.023,174,3.422,200,3.512,373,4.643,419,3.362,587,4.863,747,4.212,1414,4.643,2182,4.406,3142,7.285,4183,4.031,4344,6.451,4388,4.213,4407,5.504,4410,6.336,4411,5.66,4412,7.261,4413,4.828,4414,4.828,4415,4.828,4416,4.828,4417,4.828,4418,4.828]],["t/1801",[1,0.197,31,2.717,174,2.955,200,3.645,373,4.819,425,2.193,587,4.2,611,6.236,747,4.371,1225,4.418,1414,4.819,2182,4.573,3023,4.684,4344,5.57,4407,5.712,4411,5.874,4419,5.074,4420,7.535,4421,7.535]],["t/1803",[1,0.197,13,2.951,31,2.129,174,3.041,200,4.07,373,3.775,587,5.246,747,4.498,1225,2.666,1414,4.959,1573,6.766,1663,6.473,2182,3.583,4183,3.796,4388,3.968,4407,5.878,4410,5.152,4411,6.045,4422,6.055,4423,2.485,4424,4.547,4425,7.158,4426,4.547,4427,2.692,4428,4.547,4429,4.547,4430,2.692,4431,2.692,4432,2.692,4433,2.692,4434,2.692,4435,2.692]],["t/1805",[1,0.197,31,2.637,174,2.868,200,4.246,373,4.677,587,5.436,747,4.243,1414,4.677,1573,6.382,1663,6.106,2182,4.439,4407,5.544,4410,6.382,4411,5.702,4422,4.254,4423,8.103,4425,6.752,4436,7.314]],["t/1807",[1,0.196,31,2.846,168,2.88,174,3.095,200,3.818,373,3.456,425,2.336,587,4.399,611,6.469,747,4.578,1225,4.628,1414,5.047,2182,3.279,4344,5.834,4407,5.983,4411,6.153,4437,7.893,4438,7.893]],["t/1809",[1,0.186,31,2.712,174,2.95,200,3.639,373,4.81,587,4.192,611,6.894,747,4.363,1225,4.411,1414,4.81,2182,4.565,4344,5.561,4407,5.702,4411,5.864,4439,7.522,4440,7.522]],["t/1811",[1,0.191,31,2.558,174,2.782,200,3.432,373,4.537,587,3.954,611,6.63,747,4.115,1052,5.378,1225,4.16,1414,4.537,2182,4.305,4317,7.244,4344,5.244,4441,7.094,4442,6.549,4443,7.094]],["t/1813",[1,0.191,31,2.558,174,2.782,200,3.432,373,4.537,425,3.066,587,3.954,611,6.63,747,4.115,1052,5.378,1225,4.16,1414,4.537,2182,4.305,4317,5.378,4344,5.244,4442,6.549,4444,7.094,4445,7.094]],["t/1816",[1,0.199,3,4.31,6,5.803,131,4.662,133,4.734,1009,7.206,1689,5.192,4446,6.452,4447,6.452]],["t/1818",[1,0.2,6,5.447,117,3.392,131,5.2,544,3.869,4448,6.644,4449,7.197,4450,7.197,4451,7.197,4452,5.791]],["t/1821",[1,0.156,3,4.418,4453,10.543]],["t/1823",[1,0.192,3,3.524,117,5.034,228,7.021,378,4.561,4454,7.021,4455,8.41,4456,8.41,4457,8.41]],["t/1825",[1,0.201,2,4.665,4,4.463,5,4.495,6,3.668,117,5.119,333,2.849,544,2.874,1747,3.782,3175,4.935,3353,4.052,3785,4.665,4458,5.346,4459,5.346,4460,5.346,4461,5.346,4462,5.346,4463,5.346,4464,5.346,4465,5.346]],["t/1827",[1,0.192,117,6.133,2460,7.869]],["t/1829",[1,0.196,3,5.042,6,5.175,18,3.167,117,3.002,333,5.89,544,3.424,610,3.735,696,4.339,2346,4.709,4466,5.318]],["t/1831",[1,0.162]],["t/1833",[1,0.203,3,2.479,6,2.771,31,3.038,127,2.824,253,2.806,294,3.839,459,2.963,816,3.731,1203,4.275,1205,3.508,1206,4.105,4467,9.863]],["t/1836",[1,0.188,31,3.311,2257,7.667,4132,7.159,4468,9.184,4469,9.184,4470,9.184]],["t/1838",[1,0.193,31,3.353,65,2.321,232,8.114,261,4.468,611,3.081,1704,6.578,4088,3.708,4467,8.114,4471,6.291,4472,8.585,4473,8.585,4474,8.585,4475,8.585,4476,6.815,4477,6.815,4478,4.441,4479,4.441,4480,4.441]],["t/1840",[1,0.195,31,2.558,232,6.191,261,3.409,1704,5.019,2517,9.021,4088,5.923,4467,6.191,4471,8.822,4472,6.549,4473,6.549,4474,6.549,4475,6.549,4481,7.094]],["t/1842",[1,0.198,13,1.131,23,0.712,31,2.363,168,2.737,182,3.993,213,2.506,231,1.455,319,5.378,373,1.114,526,4.671,621,2.375,672,2.36,674,2.739,748,2.25,749,1.719,798,2.485,847,0.892,1015,2.121,1704,3.633,1831,1.608,2062,5.247,2860,4.003,3839,2.717,3917,1.52,4132,1.358,4174,1.259,4175,1.288,4213,1.608,4270,3.195,4328,4.486,4349,1.608,4482,1.742,4483,1.742,4484,1.742,4485,5.135,4486,1.742,4487,1.742,4488,5.901,4489,1.742,4490,1.742,4491,1.742,4492,1.608,4493,3.114,4494,3.114,4495,3.114,4496,1.742,4497,3.114,4498,1.742,4499,1.742,4500,1.742,4501,7.114,4502,3.114,4503,1.742,4504,1.742,4505,1.742,4506,3.114,4507,1.742,4508,1.742,4509,1.742,4510,1.742,4511,1.742,4512,1.742,4513,1.742,4514,1.742,4515,3.114,4516,1.742,4517,1.742,4518,1.742,4519,1.742]],["t/1844",[1,0.192,798,1.746,1205,5.761,1208,8.983,1459,3.336,1704,7.605,2189,10.264,2274,7.823,2434,9.702,4520,9.717,4521,7.939,4522,9.717,4523,4.146,4524,4.146,4525,4.146]],["t/1846",[1,0.196,31,3.898,319,7.239,526,5.266,1214,5.595,1215,5.595,4526,9.98,4527,9.98,4528,6.06,4529,8.571,4530,6.06]],["t/1848",[1,0.196,31,3.413,319,4.684,526,4.298,1776,7.902,2062,5.676,4526,6.458,4527,8.738,4531,6.995,4532,6.995,4533,6.995,4534,6.995,4535,6.995]],["t/1850",[1,0.182,31,3.374,319,6.266,526,5.748,1704,6.619,4536,9.356,4537,9.356]],["t/1852",[1,0.202,31,3.449,526,5.877,749,2.591,1594,4.094,1704,6.768,3021,3.196,3916,3.776,3917,4.094,4538,8.576,4539,4.692,4540,7.918,4541,7.106,4542,4.692,4543,4.692,4544,7.106,4545,7.106]],["t/1854",[1,0.203,23,2.638,31,3.229,526,3.964,2182,3.915,2257,7.476,2264,5.956,4546,6.452,4547,11.111]],["t/1858",[1,0.201,4548,12.504]],["t/1860",[1,0.18,896,7.667,1787,6.635,1788,9.848,1789,6.962,1790,7.159,4549,8.479]],["t/1863",[1,0.195]],["t/1865",[4550,11.008]],["t/1868",[1,0.193,125,4.918,129,6.231,130,6.231,133,3.946,403,2.525,899,2.525,2055,2.616,2062,4.476,2774,2.568,3310,6.61,3336,3.29,3822,6.513,4551,4.824,4552,6.231,4553,3.481,4554,3.77,4555,3.77,4556,7.422,4557,3.77,4558,3.77,4559,3.77,4560,3.481,4561,6.891,4562,3.77,4563,3.77,4564,3.77,4565,3.77,4566,3.77,4567,3.77,4568,3.77,4569,3.77,4570,3.481,4571,3.481,4572,3.481,4573,3.481,4574,3.481,4575,3.29]],["t/1870",[1,0.196,1554,6.877,4576,9.721]],["t/1872",[1,0.204,23,0.555,31,0.49,32,0.603,65,0.463,90,1.781,117,1.171,125,1.638,129,1.134,130,1.134,142,2.187,143,2.21,145,1.641,146,0.961,150,0.881,168,0.724,174,1.348,203,0.856,224,1.134,258,2.169,261,0.653,302,2.085,728,0.895,764,3.312,798,1.79,1009,2,1035,1.185,1294,1.134,1747,1.758,2113,0.981,2182,0.824,2351,1.567,2758,1.134,2772,7.476,4200,3.923,4560,1.254,4561,1.254,4577,1.358,4578,1.358,4579,1.254,4580,1.358,4581,1.358,4582,1.185,4583,1.254,4584,2.295,4585,2.384,4586,1.358,4587,1.358,4588,1.358,4589,1.358,4590,4.249,4591,1.358,4592,1.358,4593,2.169,4594,1.254,4595,2.169,4596,1.358,4597,1.358,4598,2.485,4599,1.358,4600,1.358,4601,1.358,4602,3.436,4603,1.358,4604,1.358,4605,1.254,4606,1.358,4607,2.485,4608,1.358,4609,1.358,4610,1.358,4611,1.358,4612,1.358,4613,1.358,4614,3.172,4615,1.358,4616,1.358,4617,2.485,4618,1.358,4619,1.254,4620,1.358,4621,1.358,4622,1.358,4623,1.185,4624,1.358,4625,1.358,4626,2.485,4627,1.358,4628,1.254,4629,1.185,4630,2.485,4631,1.185,4632,1.358,4633,1.254,4634,1.358,4635,1.358,4636,1.358,4637,1.358]],["t/1874",[1,0.201,117,3.545,142,3.323,143,3.913,4593,8.671,4594,6.945,4595,6.564,4623,6.564,4638,7.522]],["t/1876",[1,0.204,23,1.101,90,2.474,143,2.365,145,2.818,174,1.056,203,1.698,258,2.349,261,1.294,302,4.706,373,1.721,728,2.996,764,2.098,798,1.915,1992,1.698,2351,3.723,2772,2.166,4584,2.485,4585,4.096,4614,5.45,4619,4.198,4628,4.198,4629,2.349,4631,3.968,4633,2.485,4639,5.904,4640,2.692,4641,2.692,4642,2.692,4643,2.692,4644,4.547,4645,5.904,4646,4.547,4647,2.692,4648,2.692,4649,2.485,4650,2.692,4651,2.692,4652,2.692,4653,2.692,4654,2.692]],["t/1878",[1,0.202,31,1.645,90,1.912,142,2.016,143,2.374,2772,3.672,3310,6.238,4100,3.982,4570,4.213,4571,4.213,4572,4.213,4573,4.213,4574,4.213,4593,3.982,4595,3.982,4623,3.982,4629,3.982,4631,3.982,4649,4.213,4655,5.808,4656,4.563,4657,4.213,4658,4.563,4659,4.563,4660,4.563,4661,4.563,4662,6.957,4663,4.563]],["t/1881",[1,0.159,750,7.962]],["t/1883",[1,0.152,509,6.511,4664,10.325,4665,10.325]],["t/1885",[1,0.189,509,5.901,2616,8.638,4666,9.185,4667,9.356]],["t/1888",[1,0.163,10,6.884,62,5.665,143,4.607,512,4.607,4668,8.858,4669,8.858,4670,8.858]],["t/1890",[1,0.185,20,5.972,2774,7.958,4671,9.721]],["t/1892",[1,0.2,10,4.055,182,3.685,948,4.739,2509,6.466,4672,9.083,4673,7.41,4674,7.41,4675,7.41,4676,7.41,4677,7.41]],["t/1894",[1,0.176,10,6.545,512,5.261]],["t/1896",[1,0.156,4678,10.543,4679,10.543]],["t/1898",[1,0.196,32,1.857,145,1.996,168,4.254,174,1.64,182,2.079,462,6.506,512,2.175,587,2.33,1020,2.376,1614,8.052,2351,2.637,4556,3.648,4585,5.538,4666,3.364,4680,4.181,4681,3.49,4682,7.246,4683,6.504,4684,4.181,4685,5.675,4686,4.181,4687,4.181,4688,4.181,4689,4.181,4690,4.181,4691,4.181,4692,4.181,4693,4.181,4694,4.181,4695,4.181,4696,4.181,4697,4.181,4698,4.181]],["t/1900",[1,0.198,145,2.824,164,10.435,182,2.942,509,3.731,879,5.053,1020,3.362,1234,7.353,2113,4.275,2774,4.03,4448,5.462,4556,5.163,4585,4.105,4666,4.761,4681,4.939,4682,6.78,4699,5.916,4700,5.462]],["t/1903",[1,0.17,403,6.385,1554,6.746,4701,9.535,4702,6.496,4703,9.535,4704,9.535]],["t/1905",[1,0.185,403,6.524,672,5.535,677,5.066,678,4.486,1685,6.096,2727,6.741,4100,6.372,4657,6.741,4702,6.637,4705,7.302,4706,7.302,4707,7.302,4708,7.302,4709,7.302,4710,7.302,4711,7.302]],["t/1909",[1,0.198,512,4.449,2786,7.897,2787,7.897,2788,7.897,2789,7.897,2790,7.141]],["t/1911",[1,0.202,143,4.302,154,4.7,553,6.269,694,4.609,2270,5.975]],["t/1913",[1,0.202,4712,9.184]],["t/1915",[1,0.202,4713,9.184]],["t/1918",[1,0.197,3,1.813,133,3.53,141,3.687,145,3.894,261,5.033,524,3.279,526,5.011,551,5.575,2435,3.775,3310,6.089,4585,3.001,4702,2.947,4714,3.611,4715,4.326,4716,4.326,4717,6.678,4718,8.156,4719,4.326,4720,4.326,4721,6.678,4722,4.326,4723,4.326,4724,7.529,4725,3.994]],["t/1920",[3,4.613]],["t/1922",[1,0.203,141,2.92,145,3.709,363,5.614,512,2.751,552,6.78,1008,4.256,2225,4.615,3725,4.415,4655,4.415,4726,4.883,4727,4.883,4728,4.615,4729,5.289,4730,5.289,4731,4.883,4732,5.289,4733,5.289,4734,5.289]],["t/1924",[1,0.204,90,4.739,145,3.362,577,2.781,948,2.21,1020,1.964,1204,2.695,2062,4.224,2234,3.016,3310,2.124,4452,2.781,4585,2.398,4655,2.886,4725,3.191,4728,3.016,4735,3.457,4736,3.457,4737,3.457,4738,3.191,4739,3.457,4740,3.457,4741,3.457,4742,3.457,4743,3.457,4744,3.457,4745,3.457,4746,3.457,4747,3.457,4748,3.457]],["t/1926",[1,0.162]],["t/1928",[1,0.197,117,4.392,342,2.227,454,3.215,1204,5.848,2246,7.063,2456,3.315,2917,8.603,4452,7.498,4551,7.981,4655,7.779,4728,3.315,4738,6.925,4749,3.507,4750,3.799,4751,3.799,4752,3.799,4753,3.507,4754,3.799,4755,3.799,4756,3.799,4757,3.799,4758,3.799,4759,3.799,4760,3.799,4761,3.799,4762,3.799,4763,3.799]],["t/1931",[1,0.185,5,5.58,553,7.369,4764,9.721,4765,9.721]],["t/1933",[1,0.193,41,2.832,168,2.326,317,3.308,899,2.922,1204,7.182,2042,5.241,2052,3.226,2055,3.027,2062,4.918,2065,3.511,2286,3.511,2774,2.973,3010,3.643,3363,3.511,4551,7.413,4552,6.846,4766,4.364,4767,4.364,4768,4.364,4769,4.364,4770,4.364,4771,4.364,4772,4.364,4773,4.364,4774,7.571,4775,8.2,4776,7.571,4777,8.2,4778,4.364,4779,4.364,4780,4.364]],["t/1935",[1,0.185,276,5.166,374,5.876,2061,5.876,2065,5.876,2351,6.914,2774,4.974,3363,7.839,4781,6.372,4782,8.501,4783,8.133,4784,8.501,4785,6.741]],["t/1938",[1,0.159,4786,10.77]],["t/1940",[1,0.195,3,3.712,6,4.149,141,4.891,333,4.722,4702,6.034,4787,8.858]],["t/1942",[1,0.188,5,4.452,10,4.244,117,4.779,512,4.034,544,6.072,666,5.284,4788,10.139,4789,7.756,4790,7.756,4791,7.756]],["t/1944",[1,0.201,141,4.492,391,7.099,454,4.337,1554,5.756,2758,6.792,2759,7.511]],["t/1946",[1,0.183]],["t/1948",[1,0.181,2758,8.801]],["t/1950",[1,0.201,141,4.092,203,4.673,333,3.95,529,4.393,1020,4.211,2225,6.466,2774,5.048,4702,5.048,4714,6.187,4792,6.841]],["t/1954",[1,0.17,319,7.732,526,7.094,1020,5.419,3353,7.228]],["t/1956",[1,0.149,317,7.668,2774,6.891,4793,10.115,4794,9.338]],["t/1958",[1,0.146,3310,6.091,4794,9.153,4795,9.914,4796,9.914,4797,9.153]],["t/1960",[1,0.161,22,4.394,38,3.53,41,4.03,57,4.093,59,3.865,302,3.769,584,4.309,672,4.708,2055,4.309,2066,4.487,2067,4.708,2068,5.185,2072,4.093,2073,4.708,2586,3.725,3310,3.816,4797,5.734,4798,6.211,4799,6.211,4800,6.211,4801,6.211,4802,6.211,4803,6.211,4804,6.211,4805,6.211,4806,6.211,4807,6.211,4808,8.051,4809,6.211,4810,6.211,4811,6.211]],["t/1962",[1,0.195]],["t/1964",[1,0.187,65,1.598,90,1.966,132,3.045,143,2.441,145,2.24,154,2.666,203,2.959,261,2.255,263,1.719,302,2.847,303,2.814,304,4.094,305,4.094,306,3.468,583,3.776,694,2.615,695,3.196,753,3.917,764,5.539,798,1.976,972,4.094,2351,2.959,2599,3.658,3105,3.658,4753,4.332,4812,4.692,4813,4.692,4814,4.332,4815,4.692,4816,4.692,4817,4.692,4818,4.332,4819,4.692,4820,4.332,4821,4.692,4822,4.692,4823,4.692,4824,4.692,4825,4.692,4826,4.692,4827,4.332,4828,4.692,4829,4.692,4830,4.332,4831,4.692,4832,4.692,4833,4.692]],["t/1966",[1,0.197,90,2.023,145,2.305,302,2.93,303,2.896,363,3.488,694,2.691,695,3.289,764,3.764,798,2.034,899,4.862,1020,2.744,2062,4.354,3310,6.717,4452,3.885,4575,4.213,4585,3.35,4702,3.289,4814,4.458,4830,4.458,4834,4.828,4835,4.828,4836,4.458,4837,4.828,4838,4.828,4839,4.828,4840,4.828,4841,7.261,4842,4.828,4843,4.828,4844,4.828]],["t/1970",[1,0.202,276,2.729,374,3.104,583,4.913,899,2.583,1020,2.192,2061,3.104,2062,3.662,2543,3.366,3363,3.104,4551,4.913,4552,5.097,4666,3.104,4681,3.22,4682,3.104,4774,5.637,4776,5.637,4781,3.366,4782,3.366,4783,3.22,4784,3.366,4845,3.858,4846,6.106,4847,3.858,4848,6.106,4849,3.858,4850,3.858,4851,3.858,4852,6.106,4853,6.106,4854,6.106,4855,6.106,4856,3.858,4857,3.858]],["t/1972",[1,0.195,961,5.586,1020,5.034,4582,7.73,4858,8.858,4859,8.858,4860,8.858]],["t/1974",[1,0.201,142,2.645,143,3.114,366,6.838,764,4.667,798,2.522,1396,3.679,2772,4.818,4579,5.528,4583,5.528,4605,5.528,4726,5.528,4727,5.528,4731,5.528,4861,5.987,4862,5.987,4863,5.987,4864,5.987,4865,5.987]],["t/1976",[1,0.144,23,2.986,38,4.15,59,4.544,302,4.431,382,5.166,384,7.385,584,5.066,940,6.372,2039,5.276,2066,5.276,2067,7.385,2068,6.096,2070,5.876,2071,4.67,2072,4.811,2920,5.876,4866,7.302,4867,7.302,4868,7.302,4869,7.302]],["t/1979",[1,0.167,22,3.923,23,2.017,38,1.405,41,2.746,57,1.63,145,0.645,152,0.801,261,0.649,302,0.82,382,1.75,404,2.746,422,2.856,583,2.752,587,2.358,1020,0.768,1204,5.752,1279,1.99,1395,1.928,2039,0.976,2042,1.053,2054,0.956,2055,0.937,2056,1.053,2062,3.325,2066,0.976,2071,5.929,2073,1.875,2085,1.99,2351,4.41,3310,2.102,4585,2.936,4666,1.087,4681,1.128,4682,9.133,4685,1.179,4700,1.247,4870,1.351,4871,11.021,4872,1.351,4873,1.351,4874,1.351,4875,1.351,4876,1.351,4877,1.351,4878,1.351,4879,1.351,4880,1.351,4881,2.473,4882,1.351,4883,1.351,4884,1.351,4885,5.545,4886,1.351,4887,4.231,4888,6.085,4889,4.231,4890,1.351,4891,1.351,4892,4.231,4893,1.351,4894,1.351,4895,1.351,4896,1.351,4897,1.351,4898,3.421,4899,1.351,4900,3.421,4901,1.351,4902,1.351,4903,1.351,4904,3.421,4905,1.351,4906,1.351,4907,3.421,4908,1.351,4909,1.351,4910,3.421,4911,1.351,4912,1.351,4913,1.351,4914,1.351,4915,1.351,4916,1.351,4917,1.351,4918,1.351,4919,1.351,4920,1.351,4921,1.351,4922,1.351,4923,1.351,4924,1.351,4925,1.351,4926,1.351,4927,1.351,4928,2.473,4929,1.351,4930,1.351,4931,1.351,4932,1.351,4933,2.473,4934,2.473,4935,1.351,4936,1.351,4937,1.351,4938,1.351,4939,1.351,4940,1.351,4941,1.351,4942,1.351,4943,1.351,4944,1.351,4945,1.351,4946,1.351,4947,1.351,4948,1.351,4949,1.247,4950,3.906,4951,1.351,4952,1.351,4953,1.351]],["t/1981",[1,0.199,20,0.917,22,1.056,23,0.61,59,0.929,65,1.266,90,0.625,133,0.789,142,1.196,143,1.409,145,0.712,182,0.742,261,1.301,263,0.992,303,0.895,363,1.078,419,1.433,512,0.776,570,0.737,579,1.302,587,3.612,612,1.103,694,2.072,696,1.016,766,1.163,899,0.999,972,2.363,1020,0.848,1614,1.163,1685,1.246,1790,5.43,1838,3.492,1843,2.5,2039,1.078,2060,2.898,2062,2.23,2067,2.053,2185,4.264,2450,4.912,2543,3.988,2599,2.111,3145,1.302,3310,2.284,3336,1.302,3386,1.378,3413,3.104,4452,1.201,4582,3.244,4585,1.879,4682,6.791,4685,3.988,4749,1.378,4818,2.5,4820,2.5,4827,4.892,4836,1.378,4949,1.378,4950,2.5,4954,1.492,4955,4.57,4956,3.718,4957,3.718,4958,1.492,4959,1.492,4960,1.492,4961,2.708,4962,1.492,4963,2.708,4964,1.492,4965,1.492,4966,1.378,4967,1.492,4968,1.492,4969,1.492,4970,1.492,4971,1.492,4972,1.492,4973,1.492,4974,1.492,4975,1.492,4976,1.492,4977,1.492,4978,1.492,4979,1.492,4980,1.492,4981,1.492,4982,1.492,4983,1.492,4984,1.492,4985,1.492,4986,1.492,4987,1.492,4988,1.492,4989,1.492,4990,1.492,4991,1.492,4992,1.492,4993,1.492,4994,1.492,4995,1.492,4996,1.492,4997,1.492,4998,1.492]],["t/1983",[1,0.193,200,3.872,203,6.527,319,5.361,526,4.918,529,6.136,4702,7.05,4714,8.64]],["t/1985",[1,0.177,203,6.96,1747,6.267,2774,6.034,4672,8.178,4999,8.858,5000,8.858,5001,8.858,5002,8.858]],["t/1987",[1,0.2,3,2.891,168,3.677,203,7.538,281,7.39,587,3.845,1396,4.238,3021,4.699,5003,6.898]],["t/1989",[1,0.204,153,3.074,276,5.063,750,3.501,899,3.172,1020,4.067,1204,3.692,2062,4.292,2774,4.875,3353,3.591,4551,5.759,4552,5.975,4553,6.607,4783,3.954,5004,7.157,5005,4.737,5006,7.157,5007,4.737]],["t/1991",[1,0.184,203,4.969,374,6.34,2715,6.577,2774,5.367,3010,6.577,3363,6.34,4781,6.875,4782,6.875,4783,6.577,4784,6.875,4785,7.274,5008,7.274,5009,7.879,5010,7.879]],["t/1993",[1,0.162]],["t/1995",[1,0.197,5,2.116,6,4.585,117,1.738,121,1.771,133,3.887,140,1.833,333,3.139,403,2.469,404,2.392,529,5.804,544,3.953,636,1.965,668,3.078,2062,4.41,2586,2.211,3310,5.641,3461,2.725,3822,3.217,3871,5.139,4575,3.217,4702,5.721,5011,3.686,5012,5.889,5013,3.686,5014,3.686,5015,3.686,5016,3.686,5017,3.686,5018,3.686,5019,3.686,5020,3.686,5021,3.686,5022,3.686,5023,3.686]],["t/1997",[1,0.19,319,6.654,526,6.836,3725,8.295,4585,6.894,4702,5.124,5024,7.522,5025,7.522,5026,7.522,5027,7.522,5028,7.522]],["t/1999",[1,0.182,65,2.562,145,3.591,200,3.639,373,4.81,419,2.898,425,3.251,455,3.615,847,3.852,2071,4.81,3310,6.105,4702,5.124,5029,7.522,5030,7.522,5031,6.564,5032,7.522,5033,7.522]],["t/2001",[1,0.188,141,5.082,145,3.205,454,3.578,3310,6.452,4702,4.573,4724,8.497,5031,5.857,5034,6.712,5035,9.203,5036,9.203,5037,6.712,5038,6.712,5039,9.203,5040,6.712,5041,6.712]],["t/2003",[1,0.161,23,2.209,145,2.58,174,2.119,325,2.253,454,2.88,522,3.681,1315,3.823,1595,8.063,3310,3.32,3556,8.635,4702,3.681,5031,4.715,5042,5.404,5043,5.404,5044,9.324,5045,5.404,5046,5.404,5047,5.404,5048,5.404,5049,5.404,5050,5.404,5051,5.404,5052,5.404,5053,5.404,5054,5.404,5055,5.404,5056,5.404,5057,5.404,5058,5.404,5059,5.404,5060,5.404,5061,5.404]],["t/2005",[1,0.2,333,6.092,750,5.099,2774,4.699,4714,9.542,4792,6.368,4808,6.368,5008,6.368,5062,6.898]],["t/2007",[1,0.196,90,2.739,133,4.777,319,6.052,526,5.552,529,5.358,1020,3.715,3310,4.016,3725,8.646,4585,4.535,5063,6.537,5064,6.537,5065,6.537,5066,9.037]],["t/2010",[1,0.165,90,3.779,596,6.38,1323,8.325,3809,7.869,5067,9.018,5068,9.018,5069,9.018,5070,9.018,5071,9.018]],["t/2012",[1,0.166,119,5.792,278,4.413,333,4.895,529,5.445,636,4.895,2476,6.962,3085,7.39,5072,8.479]],["t/2014",[1,0.183]],["t/2016",[1,0.186,315,5.424,666,6.754,1153,7.978]],["t/2018",[1,0.2,5,2.973,119,3.266,315,2.834,666,3.528,681,3.829,1153,4.168,1154,3.223,2341,4.168,2354,3.528,3085,4.168,5072,4.781,5073,5.179,5074,7.651,5075,7.651,5076,5.179,5077,5.179,5078,5.179,5079,7.651,5080,5.179,5081,5.179,5082,5.179,5083,5.179,5084,5.179,5085,5.179,5086,5.179,5087,5.179]],["t/2020",[5088,9.398,5089,10.77]],["t/2022",[278,5.066,965,8.219,5090,10.543]],["t/2026",[1,0.195]],["t/2029",[1,0.202,223,6.856]],["t/2031",[1,0.199,223,5.643,5091,9.184,5092,9.184]],["t/2033",[1,0.201,536,5.347,5093,8.703,5094,8.703,5095,8.703]],["t/2035",[1,0.195]],["t/2037",[1,0.204,5,3.102,154,3.071,5096,4.511,5097,6.597,5098,4.715,5099,5.404,5100,5.404,5101,9.324,5102,5.404,5103,7.893,5104,5.404,5105,5.404,5106,5.404]],["t/2039",[1,0.203]],["t/2041",[1,0.198]],["t/2043",[1,0.185,5097,6.877,5107,8.115,5108,9.721,5109,9.721]],["t/2045",[1,0.2,5,4.293,154,6.014,475,3.916,1014,3.629,5097,8.354,5110,5.023,5111,5.023,5112,5.023,5113,5.023,5114,4.637,5115,5.023,5116,4.637,5117,8.249,5118,5.023,5119,4.637,5120,5.023,5121,5.023]],["t/2047",[1,0.177,132,5.033,697,6.475,2525,6.768,5122,7.756,5123,7.16,5124,7.756,5125,7.756,5126,7.756,5127,7.756,5128,7.756,5129,7.756,5130,7.756,5131,7.756,5132,7.756,5133,7.756,5134,7.756]],["t/2049",[1,0.186,49,5.037,153,4.881,154,4.275,238,6.053,561,6.28,694,4.192,1048,6.28,2181,6.564,3681,6.945,4966,6.945,5135,7.522,5136,7.522,5137,7.522,5138,7.522,5139,7.522,5140,7.522]],["t/2051",[1,0.138,5141,11.414,5142,9.356,5143,9.356,5144,9.356,5145,9.356,5146,9.356,5147,9.356]],["t/2053",[1,0.196,5,5.58,154,5.524]],["t/2055",[1,0.172,5,4.534,18,2.045,21,2.971,49,2.754,145,3.065,150,4.166,154,2.337,200,1.989,303,2.466,609,3.205,749,3.545,1001,5.927,1876,8.447,2523,3.796,5114,3.796,5116,7.291,5123,3.796,5148,4.112,5149,6.42,5150,6.42,5151,3.796,5152,4.112,5153,4.112,5154,6.42,5155,8.924,5156,6.42,5157,6.42,5158,4.112,5159,6.42,5160,6.42,5161,4.112,5162,4.112,5163,4.112,5164,4.112,5165,4.112,5166,4.112,5167,4.112,5168,4.112,5169,4.112,5170,4.112,5171,4.112,5172,4.112,5173,4.112,5174,4.112,5175,4.112]],["t/2057",[1,0.204,145,2.437,154,2.901,425,2.207,503,2.582,558,2.855,2085,2.488,2270,2.234,2803,2.855,3713,2.855,5088,4.455,5098,8.707,5176,3.092,5177,3.092,5178,2.582,5179,3.092,5180,2.698,5181,3.092,5182,3.092,5183,3.092,5184,3.092,5185,5.106,5186,3.092,5187,3.092,5188,3.092,5189,3.092,5190,3.092,5191,3.092,5192,3.092,5193,3.092,5194,3.092,5195,3.092,5196,3.092,5197,5.106,5198,3.092,5199,2.855,5200,3.092,5201,3.092,5202,3.092,5203,3.092,5204,3.092]],["t/2059",[1,0.199,143,2.841,235,4.767,238,4.396,696,5.42,899,3.658,2125,3.6,3622,4.561,5088,4.767,5180,6.942,5199,5.043,5205,5.463,5206,5.463,5207,5.463,5208,5.463,5209,5.043,5210,5.463,5211,5.463,5212,5.463,5213,5.043,5214,5.463,5215,5.463,5216,5.463,5217,9.383]],["t/2062",[261,4.961,1564,8.049,5218,10.325,5219,10.325]],["t/2064",[1,0.194,223,4.765,3939,9.638,5209,7.16,5220,7.756,5221,7.756,5222,7.756,5223,7.756,5224,7.756,5225,7.756]],["t/2066",[65,3.128,200,4.443,223,5.643,419,3.539,425,3.97,5226,9.184,5227,9.184,5228,9.184,5229,9.184,5230,9.184]],["t/2068",[1,0.199,139,5.037,150,6.68,223,2.547,261,4.308,879,4.761,1979,4.668,2635,3.461,3939,8.946,4454,7.484,5231,4.146,5232,4.146,5233,4.146,5234,4.146,5235,4.146,5236,4.146,5237,4.146,5238,6.461,5239,4.146,5240,4.146,5241,4.146,5242,4.146,5243,4.146,5244,4.146]],["t/2070",[1,0.159,5245,10.77]],["t/2072",[1,0.193,143,4.449,425,3.697,621,4.813,674,5.551,3939,9.999]],["t/2075",[1,0.183]],["t/2077",[1,0.206,213,5.628,1564,5.453,5246,6.995,5247,6.995,5248,6.458]],["t/2079",[1,0.203,61,4.998,879,3.725,5249,5.734,5250,6.211,5251,8.051,5252,6.211,5253,6.211,5254,6.211,5255,6.211,5256,6.211,5257,6.211,5258,6.211,5259,6.211,5260,6.211]],["t/2082",[1,0.191]],["t/2084",[1,0.206,459,3.408,5261,8.017,5262,6.804,5263,6.804]],["t/2086",[1,0.162]],["t/2088",[1,0.172,392,8.483,1014,7.023,5117,10.785,5119,8.974]],["t/2090",[1,0.206,847,4.035]],["t/2092",[1,0.193,223,6.091,5264,9.914]],["t/2102",[1,0.183]],["t/2104",[1,0.149,1025,8.139,1053,8.827,5265,10.115,5266,10.115]],["t/2106",[4466,8.619,5267,8.619,5268,10.325,5269,10.325]],["t/2109",[1,0.152,65,4.123,1226,7.304]],["t/2111",[1,0.186,65,3.377,898,7.978,5270,9.914]],["t/2113",[1,0.186,23,2.638,61,5.192,65,3.05,419,2.486,1205,3.825,1206,6.213,5271,6.452,5272,6.452,5273,6.452,5274,6.452,5275,6.452,5276,6.452,5277,6.452,5278,6.452,5279,6.452,5280,6.452,5281,6.452,5282,5.63,5283,6.452,5284,6.452,5285,6.452,5286,6.452,5287,6.452]],["t/2115",[1,0.162]],["t/2117",[1,0.148,560,7.051,2790,6.376,5249,7.051,5251,9.266,5288,7.637,5289,7.637,5290,7.637,5291,7.637,5292,7.637,5293,7.637,5294,7.637,5295,7.637,5296,7.637,5297,7.637,5298,7.637,5299,7.637,5300,7.637,5301,7.637]],["t/2119",[1,0.206,65,1.115,1205,1.942,1206,3.713,1414,2.094,2586,1.964,5302,3.275,5303,11.126,5304,3.275,5305,3.275,5306,3.275,5307,3.275,5308,3.275,5309,3.275,5310,3.275,5311,4.941,5312,3.275,5313,3.275,5314,3.275,5315,3.275,5316,3.275,5317,3.275,5318,3.275]],["t/2121",[760,7.156,5178,9.986,5213,9.338,5319,10.115]],["t/2123",[1,0.162]],["t/2125",[1,0.149,512,3.231,843,5.42,4088,5.185,5320,6.211,5321,7.61,5322,6.211,5323,6.211,5324,6.211,5325,6.211,5326,6.211,5327,6.211,5328,6.211,5329,6.211,5330,6.211,5331,6.211,5332,6.211,5333,6.211,5334,6.211,5335,6.211,5336,6.211,5337,6.211,5338,6.211,5339,6.211,5340,6.211,5341,6.211,5342,6.211,5343,6.211,5344,6.211,5345,6.211,5346,6.211,5347,5.734,5348,6.211]],["t/2127",[1,0.13,18,3.127,419,2.423,621,3.539,2662,11.774,5282,5.488,5347,10.145,5349,6.289,5350,6.289,5351,6.289,5352,6.289,5353,6.289,5354,6.289,5355,6.289,5356,6.289,5357,6.289,5358,6.289,5359,6.289,5360,6.289,5361,6.289,5362,6.289,5363,6.289,5364,6.289]],["t/2129",[1,0.156,5321,7.231,5365,5.779,5366,5.779,5367,13.922,5368,5.779,5369,5.779,5370,5.779,5371,5.779]],["t/2131",[2427,7.578,3904,8.483,5372,9.721,5373,9.721,5374,9.721,5375,9.721,5376,9.721]],["t/2133",[1,0.149,5377,10.115,5378,10.115,5379,10.115,5380,10.115]],["t/2136",[1,0.181,65,2.142,153,4.081,2905,5.806,5311,9.367,5381,6.289,5382,6.289,5383,6.289,5384,6.289,5385,6.289,5386,6.289,5387,8.798,5388,6.289,5389,6.289,5390,6.289,5391,5.806,5392,6.289,5393,6.289,5394,5.061,5395,6.289,5396,6.289,5397,6.289,5398,6.289,5399,6.289,5400,6.289,5401,6.289]],["t/2138",[1,0.192,65,2.076,200,1.361,419,1.818,425,2.04,454,2.516,459,2.364,611,1.952,677,1.952,678,1.728,747,1.632,879,6.35,2095,2.455,5402,2.813,5403,2.813,5404,2.813,5405,2.813,5406,2.813,5407,2.813,5408,2.813,5409,2.813,5410,2.813,5411,2.813,5412,2.813,5413,2.813,5414,2.813,5415,2.813,5416,2.813,5417,2.813,5418,2.597,5419,2.813,5420,2.813,5421,2.813,5422,2.813,5423,2.813,5424,2.813,5425,2.813,5426,2.813,5427,2.813,5428,2.813,5429,2.813,5430,2.813,5431,2.813,5432,2.813,5433,2.813,5434,2.813,5435,2.813,5436,2.813,5437,2.813,5438,2.813,5439,2.813,5440,2.813,5441,2.813,5442,2.813,5443,2.813,5444,2.813,5445,2.813,5446,4.719,5447,2.813,5448,2.813,5449,2.813,5450,2.813,5451,2.813,5452,2.813,5453,2.813,5454,2.813,5455,2.813,5456,2.813,5457,2.813,5458,2.813,5459,2.813,5460,2.813,5461,2.813,5462,2.813,5463,2.813,5464,2.813,5465,2.813,5466,2.813,5467,2.813,5468,2.813,5469,2.813,5470,2.813,5471,2.813]],["t/2141",[1,0.205,65,2.259,419,1.652,425,1.854,606,2.249,847,2.196,1024,2.635,1226,3.034,2427,3.343,3904,7.966,5096,3.58,5267,7.621,5472,4.289,5473,4.289,5474,4.289,5475,4.289,5476,4.289,5477,4.289,5478,4.289]],["t/2144",[1,0.198,65,1.728,200,2.454,419,1.955,425,2.193,621,2.855,749,2.802,847,2.598,1564,5.874,2152,3.52,5479,5.074,5480,5.074,5481,5.074,5482,5.074,5483,4.684,5484,5.074,5485,5.074,5486,5.074,5487,5.074,5488,5.074,5489,5.074,5490,5.074,5491,5.074,5492,5.074,5493,5.074,5494,5.074,5495,5.074,5496,5.074,5497,5.074,5498,5.074,5499,5.074,5500,5.074,5501,5.074]],["t/2146",[1,0.156,5502,8.801,5503,10.543]],["t/2148",[1,0.2,65,2.349,200,3.337,223,4.238,419,2.658,425,2.982,536,4.238,847,3.533,1053,6.019,5321,6.019,5504,6.898,5505,6.898,5506,6.019,5507,6.898,5508,5.759]],["t/2150",[1,0.197,5502,8.277]],["t/2152",[1,0.204,1556,8.035]],["t/2154",[1,0.205,5509,8.41]],["t/2156",[1,0.162]],["t/2159",[1,0.201,223,5.643,5502,7.667]],["t/2162",[5510,10.325,5511,10.325,5512,10.325,5513,10.325]],["t/2164",[1,0.197,65,3.187,419,3.605,425,4.044]],["t/2167",[1,0.157,18,3.43,65,2.349,200,3.337,425,2.982,512,4.877,672,5.229,1414,4.411,1554,4.88,5514,6.898,5515,6.898,5516,6.898,5517,6.898,5518,6.898,5519,6.898,5520,6.898,5521,6.898,5522,6.898,5523,6.898,5524,6.898,5525,6.898,5526,6.898,5527,6.898,5528,6.898,5529,6.898]],["t/2169",[1,0.161,18,3.088,143,3.231,223,6.192,400,6.798,1205,3.682,5530,8.721,5531,6.211,5532,6.211,5533,6.211,5534,6.211,5535,6.211,5536,6.211,5537,6.211,5538,6.211,5539,6.211,5540,6.211,5541,6.211,5542,6.211,5543,6.211,5544,6.211,5545,6.211,5546,6.211,5547,6.211,5548,6.211,5549,6.211,5550,6.211,5551,6.211,5552,6.211]],["t/2171",[1,0.156,223,6.493,879,4.96,4466,6.904,5248,7.635,5553,8.27,5554,7.635,5555,8.27,5556,10.568,5557,8.27,5558,8.27,5559,8.27,5560,8.27]],["t/2173",[1,0.18,226,7.981,342,3.597,454,3.27,459,3.072,512,3.191,728,4.042,1226,4.34,2174,5.121,4317,4.65,5561,6.135,5562,6.135,5563,6.135,5564,6.135,5565,6.135,5566,8.645,5567,6.135,5568,6.135,5569,6.135,5570,6.135,5571,8.645,5572,6.135,5573,6.135,5574,6.135,5575,6.135,5576,6.135,5577,6.135,5578,6.135]],["t/2175",[1,0.146,23,4.054,454,5.285,512,5.157,5579,9.914,5580,9.914]],["t/2177",[1,0.189,223,4.18,454,3.627,459,3.408,5581,6.804,5582,6.804,5583,6.804,5584,6.804,5585,6.804,5586,6.804,5587,6.804,5588,6.804,5589,6.804,5590,6.804,5591,6.804,5592,6.804,5593,6.804,5594,6.804,5595,6.804,5596,6.804,5597,6.804,5598,6.804]],["t/2179",[1,0.138,223,7.013,2174,7.811,2800,8.165,5599,9.356,5600,9.356,5601,9.356,5602,9.356]],["t/2181",[1,0.19,23,3.273,621,4.504,5603,10.349,5604,8.005,5605,8.005,5606,7.39,5607,8.005,5608,8.005,5609,8.005,5610,8.005,5611,8.005]],["t/2183",[5612,11.008]],["t/2186",[5613,10.77,5614,10.77]],["t/2188",[1,0.135,512,4.777,5615,9.184,5616,9.184,5617,9.184,5618,9.184,5619,11.285,5620,9.184,5621,9.184]],["t/2191",[1,0.182,368,7.021,512,4.374,2790,7.021,5267,7.021,5606,7.764,5622,8.41,5623,8.41,5624,8.41,5625,8.41,5626,8.41,5627,8.41]],["t/2193",[1,0.174,419,1.935,674,3.259,5628,5.023,5629,5.023,5630,5.023,5631,8.935,5632,8.935,5633,5.023,5634,11.492,5635,5.023,5636,11.492,5637,7.479,5638,7.479,5639,5.023,5640,5.023,5641,4.637,5642,7.479,5643,10.583,5644,5.023,5645,5.023,5646,5.023,5647,5.023,5648,5.023,5649,5.023]],["t/2195",[1,0.123,65,1.991,150,6.327,223,6.535,419,2.253,425,2.527,2518,5.398,3755,5.398,4454,4.881,5151,5.398,5178,4.881,5650,5.847,5651,5.847,5652,5.847,5653,5.847,5654,5.847,5655,5.847,5656,5.847,5657,7.714,5658,5.847,5659,5.847,5660,5.847,5661,5.847,5662,5.847,5663,5.847,5664,5.847,5665,5.847,5666,5.847,5667,5.847,5668,5.398,5669,8.355,5670,5.847,5671,5.847]],["t/2197",[1,0.062,223,2.569,4454,3.49,5657,3.86,5668,3.86,5672,4.181,5673,4.181,5674,4.181,5675,4.181,5676,4.181,5677,4.181,5678,4.181,5679,4.181,5680,4.181,5681,4.181,5682,4.181,5683,4.181,5684,4.181,5685,4.181,5686,4.181,5687,4.181,5688,4.181,5689,4.181,5690,4.181,5691,4.181,5692,4.181,5693,4.181,5694,4.181,5695,4.181,5696,4.181,5697,4.181,5698,4.181,5699,6.504,5700,4.181,5701,4.181,5702,4.181,5703,4.181,5704,4.181,5705,4.181,5706,4.181,5707,4.181,5708,4.181,5709,4.181,5710,4.181,5711,4.181,5712,4.181,5713,4.181,5714,4.181,5715,4.181,5716,4.181,5717,4.181,5718,4.181,5719,4.181,5720,6.504,5721,6.504,5722,9.005,5723,6.504,5724,6.504,5725,4.181,5726,4.181,5727,4.181,5728,4.181,5729,4.181,5730,4.181,5731,4.181,5732,4.181,5733,4.181]],["t/2200",[1,0.176,107,6.597,536,5.347,2813,8.035,5178,7.266,5734,8.703,5735,8.703,5736,8.703,5737,8.703,5738,8.703,5739,8.703]],["t/2202",[1,0.203]],["t/2204",[1,0.191]],["t/2206",[1,0.189,879,5.611,1205,5.547,5740,9.356,5741,9.356,5742,9.356]],["t/2208",[1,0.191,65,2.286,200,3.247,253,4.982,294,5.972,419,2.586,425,2.901,459,4.609,1766,5.604,5743,6.712,5744,6.712,5745,6.712,5746,6.712,5747,6.712,5748,6.712,5749,6.712,5750,6.712,5751,6.712]],["t/2210",[1,0.18,5752,9.184,5753,11.279,5754,9.184,5755,9.184,5756,9.184]],["t/2212",[1,0.181,5757,10.543]],["t/2214",[1,0.201,342,5.643,368,4.769,4492,5.274,5508,4.769,5641,5.274,5758,5.713,5759,5.274,5760,5.713,5761,11.151,5762,8.218,5763,5.713,5764,5.713,5765,5.713,5766,5.713,5767,5.713]],["t/2216",[1,0.17,1564,7.433,1979,6.889,5768,9.535,5769,8.803,5770,9.535,5771,9.535]],["t/2218",[1,0.158,414,5.304,5107,7.021,5753,7.764,5772,8.41,5773,7.764,5774,8.41,5775,8.41,5776,8.41,5777,8.41,5778,7.764,5779,8.41,5780,8.41,5781,8.41]],["t/2220",[1,0.158,1052,6.375,2116,5.457,2246,6.375,5778,7.764,5782,12.747,5783,8.41,5784,8.41,5785,8.41,5786,8.41]],["t/2222",[1,0.163,5769,8.178,5787,8.858,5788,8.858,5789,8.858,5790,12.021,5791,8.858,5792,8.858,5793,8.858]],["t/2224",[1,0.159,5794,10.77]],["t/2227",[1,0.181,425,4.557]],["t/2230",[1,0.19,879,5.718,5795,9.535,5796,9.535,5797,9.535]],["t/2232",[1,0.201,23,2.673,1225,3.833,2031,5.457,5097,4.624,5798,6.537,5799,6.537,5800,6.537,5801,6.537,5802,9.037,5803,6.537,5804,6.537,5805,6.537,5806,6.537,5807,6.537]],["t/2234",[1,0.203,5808,7.637,5809,7.637,5810,7.637,5811,7.637,5812,7.637,5813,7.637,5814,7.637]],["t/2236",[1,0.201,879,3.869,5097,7.277,5815,6.452,5816,6.452,5817,6.452,5818,6.452,5819,6.452,5820,6.452,5821,6.452,5822,6.452,5823,6.452,5824,6.452,5825,6.452,5826,6.452]],["t/2240",[1,0.2]],["t/2242",[1,0.198]],["t/2244",[1,0.151,154,5.821,995,6.34,5096,6.577,5098,6.875,5180,6.875,5827,7.879,5828,7.879,5829,7.879,5830,7.879,5831,7.879,5832,7.879,5833,7.879,5834,7.879,5835,7.879,5836,7.879,5837,7.879]],["t/2247",[1,0.198,65,1.177,107,2.62,200,2.705,419,1.332,425,1.494,512,1.798,551,2.886,621,1.945,879,2.073,1414,6.401,5097,7.373,5282,3.016,5394,4.5,5506,3.016,5554,5.163,5838,3.457,5839,5.592,5840,3.457,5841,3.457,5842,3.457,5843,3.457,5844,3.457,5845,3.457,5846,3.457,5847,3.457,5848,3.457,5849,3.457,5850,3.457,5851,3.457,5852,3.457,5853,3.457,5854,3.457,5855,3.457,5856,3.457,5857,3.457,5858,3.457,5859,5.592,5860,5.592,5861,5.592,5862,3.457,5863,3.457,5864,3.457,5865,3.457,5866,3.457]],["t/2250",[1,0.183,696,6.496,3939,7.673,5867,9.535,5868,9.535,5869,9.535]],["t/2252",[1,0.133,419,3.475,879,5.408,5107,9.316,5870,9.018,5871,9.018,5872,9.018,5873,9.018,5874,9.018,5875,9.018]],["t/2254",[1,0.183]],["t/2256",[1,0.199,65,3.128,419,3.539,5502,7.667]],["t/2258",[1,0.202,65,1.801,200,2.558,419,2.038,425,2.286,621,2.976,749,2.92,847,2.709,5097,7.181,5107,9.438,5876,5.289,5877,5.289,5878,5.289,5879,5.289,5880,5.289,5881,5.289,5882,5.289]],["t/2260",[1,0.198,5097,5.95,5506,7.339,5883,10.681,5884,8.41,5885,8.41,5886,8.41]],["t/2263",[1,0.18,145,3.884,2816,6.342,5097,5.756,5887,8.136,5888,8.136,5889,8.136,5890,10.669,5891,8.136,5892,8.136,5893,8.136,5894,7.511]],["t/2265",[1,0.176,1366,8.827,5894,9.338,5895,10.115]],["t/2267",[1,0.188,3809,6.768,5261,5.879,5394,6.241,5896,7.756,5897,7.756,5898,7.756,5899,7.756,5900,10.139,5901,7.756,5902,10.139,5903,7.756,5904,7.756]],["t/2269",[1,0.186,5890,9.153,5905,9.914,5906,9.914]],["t/2271",[1,0.183,5907,9.535,5908,9.535,5909,9.535,5910,9.535,5911,9.535]],["t/2273",[1,0.185,677,6.759,678,5.986,879,5.843,5394,5.876,5912,7.302,5913,7.302,5914,7.302,5915,7.302,5916,7.302,5917,7.302,5918,7.302,5919,7.302,5920,7.302,5921,7.302,5922,7.302]],["t/2275",[1,0.156,879,6.323,5923,10.543]],["t/2277",[1,0.152,5924,10.325,5925,10.325,5926,10.325]],["t/2279",[1,0.181,200,3.585,365,5.478,879,5.9,5391,6.841,5508,6.187,5927,6.841,5928,7.41,5929,7.41,5930,7.41,5931,7.41,5932,7.41,5933,9.839,5934,7.41,5935,7.41,5936,7.41,5937,7.41]],["t/2281",[1,0.195,65,3.224,1205,5.612,5927,6.458,5938,6.995,5939,6.995,5940,6.995,5941,6.995,5942,6.995,5943,6.995,5944,6.995,5945,6.995,5946,6.995,5947,6.995,5948,6.995,5949,6.995]],["t/2284",[5950,10.163]],["t/2287",[1,0.192,154,3.174,200,2.702,223,3.431,747,3.24,997,5.156,5097,3.951,5394,6.505,5951,5.585,5952,5.585,5953,5.585,5954,5.585,5955,5.585,5956,5.585,5957,5.585,5958,5.585,5959,5.585,5960,5.585,5961,5.585,5962,5.585,5963,5.585,5964,5.585,5965,5.585,5966,8.085,5967,5.585,5968,5.585,5969,5.585,5970,5.585,5971,5.585,5972,5.585,5973,5.585]],["t/2289",[1,0.166,154,5.219,5974,9.184,5975,9.184,5976,9.184,5977,9.184,5978,9.184,5979,9.184,5980,9.184]],["t/2291",[1,0.203,153,4.539,289,5.453,5096,8.956,5981,6.995,5982,6.995,5983,6.995,5984,6.995,5985,6.995]],["t/2293",[5950,10.163]],["t/2297",[1,0.162]],["t/2299",[1,0.183]],["t/2301",[1,0.162]],["t/2303",[1,0.193,455,4.764,5986,9.914]],["t/2305",[1,0.162]],["t/2308",[1,0.198]],["t/2310",[1,0.197,2520,7.978]],["t/2313",[1,0.181,5759,9.733]],["t/2315",[1,0.204]],["t/2317",[1,0.172,1205,6.926,5987,11.682,5988,9.721]],["t/2319",[610,6.054,1102,9.009,1116,9.532,5989,10.325]],["t/2322",[1,0.162]],["t/2324",[1,0.162]],["t/2326",[1,0.162]],["t/2328",[1,0.162]],["t/2330",[3758,9.532,5990,10.325,5991,10.325,5992,10.325]],["t/2332",[1,0.162]],["t/2334",[1,0.183]],["t/2339",[5993,11.008]],["t/2341",[1,0.162]],["t/2344",[1,0.152,5994,9.009,5995,9.532,5996,10.325]],["t/2351",[1,0.191]],["t/2355",[1,0.162]],["t/2357",[1,0.162]],["t/2359",[1,0.159,5997,9.943]],["t/2361",[1,0.162]],["t/2363",[1,0.162]],["t/2365",[5998,11.008]],["t/2367",[1,0.198]],["t/2369",[1,0.183]],["t/2371",[1,0.162]],["t/2373",[1,0.197,294,5.367,342,4.849,454,4.408,459,4.142,728,5.45,1008,6.655,1459,6.655,4540,7.635]],["t/2376",[1,0.162]],["t/2378",[1,0.183]],["t/2380",[1,0.183]],["t/2382",[1,0.156,65,3.591,419,4.062]],["t/2384",[1,0.199,65,3.311]],["t/2387",[1,0.162]],["t/2389",[1,0.191]],["t/2391",[1,0.19,23,3.327,65,2.771,5999,8.136,6000,8.136,6001,8.136,6002,8.136,6003,8.136,6004,8.136,6005,8.136,6006,8.136,6007,8.136]],["t/2393",[1,0.181,6008,10.543]],["t/2395",[1,0.152,65,3.516,6009,10.325,6010,10.325]],["t/2397",[1,0.193,6011,9.914,6012,8.651]],["t/2399",[1,0.198,6012,7.339,6013,8.41,6014,8.41,6015,8.41,6016,8.41,6017,8.41,6018,8.41]],["t/2401",[1,0.19,6012,8.321,6019,9.535,6020,9.535,6021,9.535]],["t/2403",[1,0.185,6022,8.974,6023,8.974,6024,9.721,6025,9.721]],["t/2405",[1,0.186,6022,9.153,6023,9.153,6026,9.914]],["t/2407",[1,0.195]],["t/2409",[1,0.199,18,3.167,65,3.023,419,2.454,425,2.753,879,6.126,2072,4.197,6027,6.37,6028,9.431,6029,6.37,6030,6.37,6031,6.37,6032,6.37,6033,6.37,6034,6.37]],["t/2412",[1,0.172,65,3.503,400,5.03,410,4.891,419,3.45,425,2.789,1205,3.825,2072,4.251,6035,6.452,6036,6.452,6037,6.452,6038,6.452,6039,6.452,6040,6.452,6041,6.452,6042,6.452,6043,6.452,6044,6.452,6045,6.452,6046,6.452,6047,6.452,6048,6.452,6049,6.452,6050,6.452,6051,6.452,6052,6.452]],["t/2416",[1,0.176,6053,10.115,6054,10.115,6055,10.115]],["t/2418",[1,0.159,6056,10.77]],["t/2420",[1,0.181,6057,10.543]],["t/2422",[1,0.162]],["t/2424",[1,0.19,6058,8.703,6059,8.703,6060,8.703,6061,8.703,6062,8.703,6063,8.703,6064,8.703,6065,8.703]],["t/2426",[6066,11.008]],["t/2429",[1,0.188,816,5.792,2072,6.052,6067,9.184,6068,9.184,6069,9.184,6070,9.184]],["t/2432",[419,4.15,6071,10.77]],["t/2434",[457,7.673,6072,9.535,6073,9.535,6074,9.535,6075,9.535,6076,9.535,6077,9.535,6078,9.535]],["t/2437",[1,0.198]],["t/2439",[1,0.198,18,3.127,65,2.142,342,3.688,419,2.423,425,2.718,898,5.061,1685,5.251,2072,5.797,2586,3.772,3871,5.488,6079,6.289,6080,6.289,6081,6.289,6082,6.289,6083,6.289,6084,6.289,6085,6.289,6086,6.289,6087,6.289]],["t/2441",[1,0.186,200,5.059,5418,7.511,6088,8.136,6089,8.136,6090,8.136,6091,8.136,6092,8.136,6093,8.136,6094,8.136,6095,8.136,6096,8.136]],["t/2443",[1,0.199,23,2.131,57,3.435,59,1.973,65,2.893,116,2.028,152,3.09,200,2.521,419,2.962,425,2.869,713,2.028,847,1.624,879,1.902,898,4.194,899,2.123,3141,2.647,6097,5.212,6098,3.171,6099,3.171,6100,3.171,6101,3.171,6102,3.171,6103,3.171,6104,3.171,6105,3.171,6106,3.171,6107,3.171,6108,5.212,6109,3.171,6110,3.171,6111,3.171,6112,3.171,6113,3.171,6114,3.171,6115,3.171,6116,5.212,6117,3.171,6118,3.171,6119,3.171,6120,3.171,6121,3.171,6122,3.171,6123,3.171,6124,3.171,6125,3.171,6126,3.171,6127,3.171,6128,3.171,6129,3.171,6130,3.171,6131,3.171,6132,3.171,6133,3.171,6134,3.171,6135,3.171]],["t/2445",[1,0.172,419,3.745,6136,9.721,6137,9.721,6138,9.721,6139,9.721]],["t/2448",[1,0.189,2166,9.532]],["t/2450",[1,0.193,602,9.153,6140,9.914]],["t/2452",[1,0.182,403,5.037,1780,6.945,1838,4.957,5267,6.28,6141,7.522,6142,7.522,6143,7.522,6144,7.522,6145,7.522,6146,7.522,6147,7.522,6148,7.522,6149,7.522,6150,7.522,6151,7.522,6152,7.522,6153,7.522]],["t/2454",[1,0.19,36,3.228,65,2.051,200,2.913,419,1.066,425,1.196,514,4.061,579,5.255,695,1.885,1099,4.061,1373,6.575,1838,1.823,2346,3.44,3141,2.31,4549,4.296,5773,2.554,6028,4.296,6154,6.022,6155,2.766,6156,2.766,6157,4.653,6158,7.061,6159,6.022,6160,2.766,6161,2.766,6162,10.241,6163,2.766,6164,2.766,6165,2.766,6166,2.766,6167,2.766,6168,2.766,6169,2.766,6170,2.766,6171,2.766,6172,4.653,6173,2.766,6174,2.766,6175,2.766,6176,4.653,6177,2.766,6178,2.766,6179,2.766,6180,2.766,6181,2.766,6182,4.653,6183,2.766,6184,2.766,6185,4.653,6186,2.766,6187,2.766,6188,2.766,6189,2.766,6190,2.766,6191,2.766,6192,2.766,6193,2.766,6194,2.766,6195,2.766,6196,2.766,6197,2.766,6198,2.766,6199,2.766,6200,2.766,6201,2.766,6202,2.766,6203,2.766,6204,2.766,6205,2.766]],["t/2458",[1,0.183]],["t/2460",[1,0.205,62,3.382,65,1.801,419,2.038,425,2.286,606,2.773,1203,3.821,2072,3.485,5261,4.009,5994,4.615,5995,4.883,6206,4.883,6207,5.289,6208,5.289,6209,5.289,6210,5.289,6211,5.289,6212,5.289,6213,5.289]],["t/2462",[1,0.202,238,6.546,4466,6.792,6214,8.136,6215,8.136,6216,7.511]],["t/2465",[1,0.162]],["t/2467",[1,0.162]],["t/2469",[1,0.206,18,1.324,200,1.288,674,1.728,886,2.223,1414,1.703,2279,5.371,5261,2.019,5508,6.433,6206,8.227,6217,2.663,6218,2.663,6219,2.663,6220,2.663,6221,2.663,6222,2.663,6223,2.663,6224,2.663,6225,2.663,6226,2.663,6227,2.663,6228,2.663,6229,2.663,6230,2.663,6231,2.663,6232,2.663,6233,4.506,6234,2.663,6235,2.663,6236,2.663,6237,2.459,6238,2.663,6239,5.857,6240,2.663,6241,2.663]],["t/2471",[1,0.196,18,4.045,419,3.135,879,4.879,2279,8.152,6242,8.136,6243,8.136,6244,8.136,6245,8.136]],["t/2473",[1,0.198,2279,5.453,5997,8.738,6246,6.995,6247,10.728,6248,6.995,6249,6.995,6250,6.995,6251,6.995,6252,6.995,6253,6.995,6254,6.995,6255,6.995]],["t/2476",[1,0.207,65,1.782,419,2.016,425,2.262,5261,3.967,6256,5.234,6257,5.234,6258,5.234]],["t/2478",[1,0.194,2072,6.665]],["t/2480",[1,0.204,5261,5.229,5994,6.019,6259,6.898,6260,6.898,6261,6.898,6262,6.898,6263,6.368,6264,6.898]],["t/2482",[1,0.162]],["t/2484",[1,0.199,5261,7.369]],["t/2486",[1,0.201,6263,8.803]],["t/2488",[1,0.205,23,3.327,6265,8.136]],["t/2490",[1,0.207,65,1.583,419,1.791,425,2.009,2422,7.119,6266,4.648,6267,4.648,6268,4.648,6269,7.056,6270,4.648,6271,4.648,6272,4.648]],["t/2492",[1,0.205]],["t/2495",[1,0.195]],["t/2497",[1,0.203]],["t/2499",[1,0.205,6273,8.41]],["t/2501",[1,0.162]],["t/2503",[1,0.204,454,4.408,459,4.142,6274,8.27]],["t/2507",[1,0.176,3954,8.445,6275,10.115,6276,10.115]],["t/2509",[1,0.206,41,3.016,962,4.291,2649,3.624,6277,4.648,6278,4.648,6279,4.648,6280,4.291,6281,4.648,6282,4.648,6283,4.648,6284,4.648,6285,4.648,6286,4.648,6287,4.648,6288,7.056,6289,7.056,6290,4.648,6291,4.648]],["t/2511",[1,0.194,724,6.904,1885,6.655,6216,7.635,6280,9.757,6292,8.27,6293,8.27,6294,8.27,6295,8.27]],["t/2514",[1,0.189,6296,10.325]],["t/2516",[1,0.172,2182,5.435,2664,8.268,3457,5.63,4422,5.63,5483,8.268,6297,6.452,6298,6.452,6299,6.452,6300,8.955,6301,8.955,6302,8.955,6303,8.955,6304,8.955,6305,8.955,6306,8.955,6307,6.452,6308,6.452,6309,6.452]],["t/2519",[1,0.202,61,5.709,816,4.474,1203,5.126,2095,6.191,6310,7.094,6311,7.094,6312,7.094,6313,7.094,6314,7.094,6315,7.094]],["t/2521",[1,0.191]],["t/2523",[1790,8.219,6316,10.543,6317,10.543]],["t/2525",[1,0.183]],["t/2527",[1,0.176,276,6.157,6237,8.035,6318,8.703,6319,8.703,6320,8.703,6321,8.703,6322,8.703,6323,8.703,6324,8.703,6325,8.703]],["t/2530",[1,0.197,302,5.678,365,6.916,6326,8.165]],["t/2532",[1,0.192,2520,7.822,6327,8.483,6328,8.483]],["t/2534",[1,0.196,145,2.351,587,2.744,596,3.483,749,6.851,1885,3.962,1886,4.11,2599,7.641,2631,4.11,3916,3.962,6329,10.828,6330,4.296,6331,4.296,6332,4.296,6333,4.296]],["t/2536",[1,0.205]],["t/2539",[1,0.197,302,5.678,365,6.916,6326,8.165]],["t/2541",[1,0.192,2520,7.822,6327,8.483,6328,8.483]],["t/2543",[1,0.196,145,2.351,587,2.744,596,3.483,749,6.851,1885,3.962,1886,4.11,2599,7.641,2631,4.11,3916,3.962,6329,10.828,6330,4.296,6331,4.296,6332,4.296,6333,4.296]],["t/2545",[1,0.205]],["t/2548",[1,0.197,302,5.678,365,6.916,6326,8.165]],["t/2550",[1,0.192,2520,7.822,6327,8.483,6328,8.483]],["t/2552",[1,0.196,145,2.351,587,2.744,596,3.483,749,6.851,1885,3.962,1886,4.11,2599,7.641,2631,4.11,3916,3.962,6329,10.828,6330,4.296,6331,4.296,6332,4.296,6333,4.296]],["t/2554",[1,0.205]],["t/2557",[1,0.183]]],"invertedIndex":[["",{"_index":1,"t":{"2":{"position":[[9,3],[22,5],[34,1],[50,14],[76,2],[94,5],[103,1],[109,6]]},"4":{"position":[[9,5],[21,1],[37,14],[63,2],[81,5],[90,1],[96,6]]},"6":{"position":[[9,7],[22,6],[29,2],[34,19],[135,15],[232,6],[243,3]]},"8":{"position":[[9,11]]},"10":{"position":[[0,8],[18,3],[135,1],[166,2],[183,2],[186,1],[197,2],[217,1],[309,2],[351,1],[353,2],[461,3],[465,1],[479,2],[492,1],[513,3],[517,1],[519,6],[526,2],[529,2],[545,1],[585,12],[611,1],[686,1],[736,3],[764,1],[832,12],[845,3],[849,1],[851,4],[856,2],[859,5],[875,1],[944,7],[970,11],[982,5],[1000,1],[1056,2],[1078,2],[1109,3],[1113,1],[1115,4],[1120,2],[1133,1],[1154,6],[1172,1],[1194,6],[1207,1],[1215,1],[1225,7],[1239,1],[1246,27],[1274,8],[1294,1],[1328,1],[1335,1],[1393,8],[1433,17],[1451,3],[1455,1],[1457,7],[1465,2],[1481,1],[1590,8],[1667,8],[1676,11]]},"12":{"position":[[34,1],[99,1]]},"14":{"position":[[27,1]]},"16":{"position":[[15,1],[136,1]]},"18":{"position":[[19,1],[53,1],[60,1],[156,17],[201,1],[224,3],[232,45],[464,58]]},"20":{"position":[[22,1]]},"23":{"position":[[0,2],[25,1],[495,2],[520,1]]},"25":{"position":[[162,2],[227,1],[261,17],[297,1],[361,1],[955,54]]},"27":{"position":[[0,3],[10,5],[23,1],[29,7],[43,8],[67,26],[100,1],[110,5],[120,3]]},"29":{"position":[[6,5],[19,1],[25,7],[39,8],[63,26],[96,1],[106,5],[116,3]]},"31":{"position":[[0,22],[30,12],[114,15],[183,2],[188,17],[235,1],[286,2],[289,2],[303,12],[323,1],[327,1],[405,10],[424,5],[436,4],[447,23],[478,7],[492,3],[496,5],[506,3],[510,6],[521,7],[562,2],[567,3],[581,11],[600,3],[608,4],[622,2],[643,1],[655,2],[669,1],[671,2],[686,2],[689,4],[700,1],[720,2],[723,2],[726,4],[740,1],[750,1],[752,2],[755,3],[759,4],[764,1],[766,2],[781,11],[798,13],[815,1],[844,10],[872,11],[884,1],[893,2],[908,12]]},"33":{"position":[[0,12],[17,28],[46,1],[76,17],[100,1],[108,1],[167,23],[245,1],[247,2],[256,4],[271,9],[287,3],[295,1],[313,30],[348,10],[409,25],[443,16],[473,1],[512,1],[552,7],[577,1],[579,8],[640,1],[676,1],[678,8],[687,1],[689,9],[750,1],[752,7],[769,1],[794,1],[796,7],[807,4],[815,1],[836,1],[838,9],[851,6],[880,1],[895,1],[897,6],[955,53],[1027,1],[1029,11],[1041,1],[1043,12],[1068,11],[1086,4],[1103,2],[1138,3],[1153,30]]},"35":{"position":[[0,30],[52,7],[60,8],[69,13],[83,1],[93,4],[110,25],[220,2],[226,24],[316,7],[331,2]]},"37":{"position":[[0,2],[7,12],[64,8],[73,7],[96,3],[114,1],[138,9],[219,3],[307,2],[314,21],[363,1],[365,2],[368,2],[371,1],[373,2],[387,1],[414,1],[420,6],[450,3],[456,2],[474,3],[483,1],[485,2],[510,1],[546,2],[549,5],[573,2],[576,1],[583,3],[594,5],[612,1],[626,2],[629,5],[661,3],[665,8],[690,3],[702,5],[716,1],[740,2],[743,2],[751,2],[768,1],[792,2],[800,7],[808,2],[811,2],[819,2],[920,1],[922,2],[925,2],[928,1],[953,3],[959,2],[977,3],[986,1],[988,2],[1013,1],[1049,2],[1052,1],[1059,3],[1070,5],[1088,1],[1128,1],[1130,2],[1149,2],[1157,3],[1169,16],[1234,9]]},"39":{"position":[[0,15],[20,30],[59,10],[74,5]]},"41":{"position":[[8,11],[26,12],[53,29],[95,40]]},"43":{"position":[[0,9],[18,5],[24,2],[27,19]]},"45":{"position":[[0,14],[15,5],[28,1],[30,2],[40,36],[83,34],[133,1],[135,6],[157,1],[159,12],[175,43],[258,5],[273,71]]},"47":{"position":[[0,2],[20,2],[48,5],[61,5],[81,1],[83,16],[123,41],[165,7],[264,4],[280,33],[314,3]]},"49":{"position":[[0,5],[15,13],[29,13],[43,5],[49,9],[59,10],[75,10],[93,3],[106,10],[196,5],[220,1],[222,2],[248,1],[361,1],[363,15],[384,1],[403,1],[405,5],[417,1],[431,1],[433,4],[446,1],[459,1],[461,4],[472,1],[494,1],[496,4],[501,1],[534,1],[546,1],[597,12],[610,4],[691,11],[706,1],[718,17],[736,13],[758,8],[767,8],[781,6],[788,1],[827,7],[845,1],[941,2],[944,6],[956,3],[972,36],[1016,10]]},"51":{"position":[[0,14],[72,1],[104,1],[200,1],[232,1],[270,17],[297,2],[310,3]]},"53":{"position":[[0,35],[36,2],[47,19],[67,30]]},"55":{"position":[[0,8],[15,2],[18,3],[56,2],[65,2],[82,2],[91,2],[101,2],[110,2]]},"60":{"position":[[0,3]]},"64":{"position":[[42,14],[57,12]]},"66":{"position":[[49,1],[111,1],[228,1],[284,1],[304,1],[383,1],[411,1],[447,1],[475,1],[520,1],[534,1],[553,1],[575,1],[639,1],[733,1],[750,1],[799,1],[853,15],[869,4],[874,4],[879,12]]},"68":{"position":[[0,33],[34,6]]},"70":{"position":[[62,1],[94,1],[118,1],[150,1],[313,1],[354,1],[392,1],[394,1],[413,1],[454,1],[492,1],[494,1]]},"74":{"position":[[0,4],[5,10],[24,5],[30,7],[51,12],[77,3],[81,4],[86,4],[96,11],[108,2]]},"76":{"position":[[0,4],[128,3],[141,5]]},"78":{"position":[[0,3],[11,16],[33,3]]},"80":{"position":[[0,5],[23,6],[38,3],[51,14]]},"82":{"position":[[0,12],[82,6],[110,18],[148,3]]},"84":{"position":[[14,4],[38,5],[52,4],[72,1],[74,1],[76,5]]},"86":{"position":[[100,1],[110,3],[160,5],[174,9],[259,15],[283,2]]},"90":{"position":[[0,4],[24,3],[36,4],[41,5],[62,1],[64,1],[66,5],[72,2],[125,2],[163,1],[250,3],[273,3]]},"92":{"position":[[32,5],[69,4],[164,4],[185,4],[216,39],[256,12],[299,4],[316,5],[353,4],[405,4],[423,2],[430,14],[475,4],[525,4],[538,3],[571,20],[601,4],[668,21],[749,3],[753,1],[763,29],[800,3],[816,9],[830,23],[854,8],[941,9],[979,2],[1002,6],[1012,13]]},"95":{"position":[[0,1],[10,8],[25,8],[70,6],[85,11],[145,5],[163,15]]},"101":{"position":[[0,5],[52,1],[54,2],[57,7],[65,6],[94,8],[255,17],[279,2],[351,10],[362,4],[367,1],[369,1],[371,5],[377,4],[382,4],[387,18],[406,8],[415,11],[433,8],[462,8],[471,17],[513,10],[566,8],[581,2],[663,8],[715,8],[760,2],[842,8],[894,8],[943,1],[945,8],[956,1],[981,2],[986,2],[993,2],[1000,2],[1007,2],[1014,2],[1021,2],[1029,1],[1116,22],[1139,4],[1155,2],[1174,1],[1176,17],[1255,1],[1257,1],[1272,2],[1277,2],[1284,2],[1291,2],[1298,2],[1305,2],[1312,2],[1320,1],[1322,4],[1338,2],[1357,1],[1359,17],[1420,1],[1422,1],[1437,2],[1442,2],[1449,2],[1456,2],[1463,2],[1470,2],[1477,2],[1485,1],[1487,4],[1503,2],[1522,1],[1524,17],[1573,1],[1575,1],[1582,1],[1584,6],[1645,1],[1647,2]]},"103":{"position":[[49,1],[225,20],[305,1],[307,3],[328,15],[348,1],[380,1],[389,17],[418,1],[442,1],[449,1],[464,1],[481,2],[489,1],[498,1],[512,1],[528,1],[542,32],[737,11],[810,10],[841,8],[923,1],[1083,8],[1153,6],[1261,8],[1333,6],[1357,24],[1466,8],[1538,6],[1582,6],[1632,8],[1685,8],[1738,7],[1790,7],[1842,7],[1850,27],[1886,1],[1913,1],[1915,6],[1998,6],[2056,5],[2124,5],[2193,5],[2263,2],[2287,1],[2299,1],[2420,8],[2595,8],[2665,6],[2709,6],[2759,8],[2790,6],[2841,8],[2872,6],[2923,7],[2953,6],[3004,7],[3034,6],[3085,7],[3093,8],[3112,1],[3116,1],[3141,2],[3146,2],[3153,2],[3160,2],[3167,2],[3173,2],[3180,2],[3187,1],[3189,4],[3243,2],[3262,1],[3264,17],[3309,1],[3311,1],[3326,2],[3333,2],[3340,2],[3348,2],[3355,2],[3362,2],[3369,2],[3377,1],[3379,8],[3431,6],[3449,2],[3467,2],[3478,1],[3483,1],[3485,17],[3511,1],[3521,1],[3622,1],[3624,1],[3639,2],[3646,2],[3653,2],[3661,2],[3668,2],[3675,2],[3682,2],[3690,1],[3692,8],[3745,6],[3763,2],[3781,2],[3792,1],[3801,1],[3803,17],[3829,1],[3862,1],[3864,1],[3866,1],[3875,1],[3877,1],[3890,2],[3896,1],[3971,10],[3982,4],[3987,1],[3989,1],[3991,5],[3997,4],[4002,4],[4027,8],[4096,9],[4215,8],[4285,6],[4319,1],[4323,1],[4348,2],[4353,2],[4360,2],[4367,2],[4374,2],[4380,2],[4387,2],[4394,1],[4396,4],[4412,2],[4431,1],[4433,17],[4478,1],[4480,1],[4482,1],[4484,1]]},"114":{"position":[[0,2],[192,2],[195,6],[253,1],[270,2],[273,1],[282,1],[293,1],[295,2],[353,2],[362,2],[384,9],[505,1],[515,1],[557,1],[576,2],[595,1],[662,1],[729,7],[768,1],[791,2],[819,6],[951,4],[1050,26],[1219,4]]},"118":{"position":[[8,5],[21,15],[37,2],[49,13],[63,2],[75,1],[101,11],[113,7],[145,4],[150,2],[161,14],[176,17],[194,11],[206,26],[233,13],[254,8]]},"120":{"position":[[0,3],[4,3],[8,2],[11,13],[36,49],[90,10],[154,50],[205,8],[229,10],[248,2],[251,20]]},"122":{"position":[[0,3],[4,2],[7,13],[32,49],[86,10],[150,50],[201,8],[225,10],[244,2],[247,20]]},"124":{"position":[[0,7],[108,4],[113,3],[121,4],[138,3],[147,7],[159,2],[171,10],[191,28],[225,4],[236,7],[244,4],[253,10],[269,9],[285,12],[305,7],[316,10],[333,16],[358,5],[373,9]]},"126":{"position":[[15,2],[30,5],[55,4],[75,8],[101,6],[130,2],[139,2],[157,6],[183,1],[205,5],[255,6],[287,2],[301,2],[328,2],[335,2],[361,2],[374,4],[393,2],[429,2],[438,1],[447,2],[463,2],[473,2]]},"128":{"position":[[0,3],[54,4],[62,28],[99,12]]},"130":{"position":[[50,4],[58,28],[95,12]]},"133":{"position":[[0,14]]},"135":{"position":[[0,21]]},"137":{"position":[[0,51],[52,2],[55,31]]},"140":{"position":[[8,3],[15,17],[50,23],[74,14],[92,2],[95,15],[111,40],[154,9],[167,8]]},"142":{"position":[[0,7],[11,3],[15,5],[24,39],[81,2],[87,15],[112,9],[122,1],[124,38],[163,31],[195,18],[214,2],[217,8],[234,57]]},"145":{"position":[[14,1]]},"150":{"position":[[519,6],[1158,16]]},"154":{"position":[[216,1],[227,1],[538,50],[589,10]]},"159":{"position":[[118,23],[142,30]]},"161":{"position":[[214,31],[605,4]]},"163":{"position":[[14,1]]},"165":{"position":[[14,1]]},"169":{"position":[[42,14],[57,12]]},"171":{"position":[[49,1],[111,1],[228,1],[284,1],[304,1],[383,1],[411,1],[447,1],[475,1],[520,1],[534,1],[553,1],[575,1],[639,1],[733,1],[750,1],[799,1],[853,15],[869,4],[874,4],[879,12]]},"173":{"position":[[0,33],[34,6]]},"175":{"position":[[14,1]]},"177":{"position":[[0,2]]},"179":{"position":[[0,37],[38,4],[140,1],[166,1],[168,2],[180,1],[207,19],[296,1],[312,1],[320,1],[348,1],[350,1],[500,1],[511,1],[556,1],[591,1],[660,2],[717,1],[719,5],[789,1],[799,1],[816,1],[861,1],[863,10],[884,1],[905,1],[907,2],[928,1],[1037,8],[1058,2],[1105,2],[1177,2],[1215,1],[1278,7],[1286,7],[1294,4]]},"190":{"position":[[175,24],[261,6]]},"192":{"position":[[23,11],[270,16]]},"194":{"position":[[14,1]]},"198":{"position":[[0,5],[52,1],[54,2],[57,7],[65,6],[94,8],[255,17],[279,2],[351,10],[362,4],[367,1],[369,1],[371,5],[377,4],[382,4],[387,18],[406,8],[415,11],[433,8],[462,8],[471,17],[513,10],[566,8],[581,2],[663,8],[715,8],[760,2],[842,8],[894,8],[943,1],[945,8],[956,1],[981,2],[986,2],[993,2],[1000,2],[1007,2],[1014,2],[1021,2],[1029,1],[1116,22],[1139,4],[1155,2],[1174,1],[1176,17],[1255,1],[1257,1],[1272,2],[1277,2],[1284,2],[1291,2],[1298,2],[1305,2],[1312,2],[1320,1],[1322,4],[1338,2],[1357,1],[1359,17],[1420,1],[1422,1],[1437,2],[1442,2],[1449,2],[1456,2],[1463,2],[1470,2],[1477,2],[1485,1],[1487,4],[1503,2],[1522,1],[1524,17],[1573,1],[1575,1],[1582,1],[1584,6],[1645,1],[1647,2]]},"200":{"position":[[49,1],[225,20],[305,1],[307,3],[328,15],[348,1],[380,1],[389,17],[418,1],[442,1],[449,1],[464,1],[481,2],[489,1],[498,1],[512,1],[528,1],[542,32],[737,11],[810,10],[841,8],[923,1],[1083,8],[1153,6],[1261,8],[1333,6],[1357,24],[1466,8],[1538,6],[1582,6],[1632,8],[1685,8],[1738,7],[1790,7],[1842,7],[1850,27],[1886,1],[1913,1],[1915,6],[1998,6],[2056,5],[2124,5],[2193,5],[2263,2],[2287,1],[2299,1],[2420,8],[2595,8],[2665,6],[2709,6],[2759,8],[2790,6],[2841,8],[2872,6],[2923,7],[2953,6],[3004,7],[3034,6],[3085,7],[3093,8],[3112,1],[3116,1],[3141,2],[3146,2],[3153,2],[3160,2],[3167,2],[3173,2],[3180,2],[3187,1],[3189,4],[3243,2],[3262,1],[3264,17],[3309,1],[3311,1],[3326,2],[3333,2],[3340,2],[3348,2],[3355,2],[3362,2],[3369,2],[3377,1],[3379,8],[3431,6],[3449,2],[3467,2],[3478,1],[3483,1],[3485,17],[3511,1],[3521,1],[3622,1],[3624,1],[3639,2],[3646,2],[3653,2],[3661,2],[3668,2],[3675,2],[3682,2],[3690,1],[3692,8],[3745,6],[3763,2],[3781,2],[3792,1],[3801,1],[3803,17],[3829,1],[3862,1],[3864,1],[3866,1],[3875,1],[3877,1],[3890,2],[3896,1],[3971,10],[3982,4],[3987,1],[3989,1],[3991,5],[3997,4],[4002,4],[4027,8],[4096,9],[4215,8],[4285,6],[4319,1],[4323,1],[4348,2],[4353,2],[4360,2],[4367,2],[4374,2],[4380,2],[4387,2],[4394,1],[4396,4],[4412,2],[4431,1],[4433,17],[4478,1],[4480,1],[4482,1],[4484,1]]},"204":{"position":[[14,1]]},"211":{"position":[[0,2],[192,2],[195,6],[253,1],[270,2],[273,1],[282,1],[293,1],[295,2],[353,2],[362,2],[384,9],[505,1],[515,1],[557,1],[576,2],[595,1],[662,1],[729,7],[768,1],[791,2],[819,6],[951,4],[1050,26],[1219,4]]},"215":{"position":[[8,5],[21,15],[37,2],[49,13],[63,2],[75,1],[101,11],[113,7],[145,4],[150,2],[161,14],[176,17],[194,11],[206,26],[233,13],[254,8]]},"217":{"position":[[0,3],[4,2]]},"219":{"position":[[0,2]]},"221":{"position":[[0,37],[38,4],[140,1],[166,1],[168,2],[180,1],[207,19],[296,1],[312,1],[320,1],[348,1],[350,1],[500,1],[511,1],[556,1],[591,1],[660,2],[717,1],[719,5],[789,1],[799,1],[816,1],[861,1],[863,10],[884,1],[905,1],[907,2],[928,1],[1037,8],[1058,2],[1105,2],[1177,2],[1215,1],[1278,7],[1286,7],[1294,4]]},"232":{"position":[[175,24],[261,6]]},"234":{"position":[[23,11],[270,16]]},"236":{"position":[[7,45]]},"241":{"position":[[0,20],[25,18],[48,4],[107,5],[117,6],[129,39],[174,1],[180,16],[270,7],[283,7],[291,27]]},"243":{"position":[[78,6],[97,2]]},"245":{"position":[[0,8],[16,7],[28,23],[52,9],[62,1],[73,1],[79,8],[92,20],[117,3],[127,9],[137,11],[153,4],[211,4],[257,7],[270,19],[297,4],[302,1],[342,2],[345,8],[368,1],[382,7],[402,9],[443,7],[466,6],[473,2],[509,7],[529,7],[537,7],[551,6],[562,15],[585,2],[594,6],[601,11],[613,12],[631,9],[641,1],[643,1],[653,7],[669,7],[685,9],[703,9],[721,5],[727,8],[753,2],[756,4],[769,8],[778,2],[781,4],[798,2],[801,2],[804,2],[807,6],[814,10],[825,1],[835,5],[841,2],[844,5],[867,2],[870,5],[892,2],[895,5],[918,2],[921,5],[940,2],[1006,2],[1046,7],[1054,2],[1057,5],[1075,2]]},"247":{"position":[[0,3],[8,15]]},"249":{"position":[[0,8],[14,9],[33,12],[51,9],[66,2],[96,21],[124,6],[135,35],[174,1],[188,1],[196,1],[210,1],[223,1],[239,1],[241,2],[244,5],[263,1],[265,2],[282,1],[340,1],[345,1],[355,1],[361,1],[363,4],[372,1],[374,4],[388,1],[414,1],[416,2],[428,1],[451,1],[453,7],[467,3],[477,1],[492,1],[494,2],[510,1],[570,1],[575,1],[588,1],[599,1],[608,1],[615,1],[617,2],[626,2],[636,1],[638,1],[655,1],[657,2],[660,1],[662,1],[664,4],[678,11],[694,1],[748,1],[771,1],[773,4],[783,1],[785,4]]},"251":{"position":[[0,52],[62,3],[82,3],[86,1],[113,1],[115,6],[126,1],[152,1],[154,3],[168,1],[219,1],[221,5],[227,6],[239,1],[264,2],[269,1],[283,1],[295,1],[297,4]]},"253":{"position":[[0,37],[38,1],[67,1],[99,1],[113,1],[128,1]]},"255":{"position":[[0,54],[122,1],[134,1],[178,1],[195,1],[208,1],[213,1],[232,1],[291,2],[303,2],[316,1],[321,28],[350,1],[386,1],[392,1],[404,1],[406,3],[410,1],[424,1],[426,3],[430,1],[448,1],[458,1],[470,1],[472,3],[476,1],[490,1],[492,3],[496,1],[511,8],[529,4],[563,1],[570,1],[572,3],[576,1],[590,1],[592,3],[596,1],[610,67],[678,1],[773,12],[790,1],[846,1],[902,1],[958,1],[1014,1],[1067,26],[1100,1],[1150,15],[1176,4],[1184,1],[1189,1],[1226,23],[1255,2],[1280,1],[1303,2],[1328,1],[1351,2],[1376,1],[1399,2],[1424,1],[1447,2],[1472,1],[1505,9],[1523,1],[1554,1],[1556,6],[1567,1],[1593,1],[1595,12],[1613,1],[1629,1],[1647,1],[1660,1],[1672,1],[1685,1],[1717,2],[1729,2],[1742,1],[1747,1],[1749,7],[1765,2],[1780,1],[1786,1],[1798,1],[1800,3],[1804,1],[1818,1],[1820,3],[1824,1],[1852,1],[1864,1],[1866,3],[1870,1],[1884,1],[1886,3],[1890,1],[1912,2],[1927,1],[1934,1],[1936,3],[1940,1],[1954,1],[1956,3],[1960,1],[1974,1],[1976,12],[1989,1],[1991,8],[2005,1],[2012,5],[2024,1],[2081,1],[2138,1],[2195,1],[2252,1],[2311,1],[2361,1],[2397,2],[2422,1],[2446,2],[2471,1],[2495,2],[2520,1],[2544,2],[2569,1],[2593,2],[2618,1]]},"257":{"position":[[0,6],[12,27],[45,9],[64,4],[77,4],[174,31],[212,1],[225,4],[238,4],[315,5],[382,4],[387,2],[447,1],[478,3],[484,12],[503,3],[528,4],[538,23],[566,1],[568,3],[594,7],[606,23],[634,1],[646,4],[683,8],[701,27],[729,29],[766,4],[771,1],[781,5],[787,2],[790,5],[813,2],[816,5],[838,2],[841,5],[864,2],[867,5],[886,2],[952,2],[992,7],[1000,2],[1003,5],[1021,2],[1050,4],[1060,10],[1084,2],[1092,50],[1143,1],[1218,1],[1220,4],[1254,1],[1256,4],[1278,12],[1300,1],[1319,1],[1335,10],[1346,1],[1348,1],[1359,9],[1393,1],[1395,5],[1410,1],[1429,1],[1445,1],[1447,9],[1457,1],[1459,6],[1469,1],[1509,1]]},"259":{"position":[[0,15],[22,11],[61,1],[77,1],[79,6],[92,1],[107,1],[109,7],[129,2],[168,1],[184,1],[186,5]]},"261":{"position":[[0,8]]},"264":{"position":[[0,41]]},"266":{"position":[[7,53]]},"268":{"position":[[0,16],[24,6],[31,1],[33,1]]},"273":{"position":[[0,1],[355,7],[409,2],[412,9]]},"275":{"position":[[0,8],[9,19],[35,3]]},"278":{"position":[[227,13]]},"280":{"position":[[0,1],[10,4],[28,5],[55,2],[68,1],[79,5],[91,1],[143,1],[145,1],[153,1],[204,13]]},"282":{"position":[[0,10],[26,15],[42,27],[77,8],[86,5]]},"285":{"position":[[46,12],[64,7],[77,8],[86,4],[108,44]]},"287":{"position":[[78,2],[81,8],[90,27],[129,1],[131,3],[140,8],[203,3],[226,10],[249,7],[257,42],[311,1],[337,1],[373,1],[390,1],[408,1],[429,1],[431,9],[441,1],[452,1],[479,1],[499,1],[518,1],[531,12]]},"289":{"position":[[0,1],[6,12],[24,23],[80,9],[108,7],[125,5],[136,5],[232,1],[234,1],[236,2],[239,1],[245,2],[314,12],[331,8],[377,3],[381,2],[384,3],[418,3],[433,14],[465,14],[495,1],[497,14],[539,1],[541,1],[543,14],[585,1],[587,1],[589,1],[591,14],[642,1],[644,1],[646,1],[648,1],[650,1],[652,1],[654,1],[656,1],[658,2],[661,1],[663,1],[665,1],[667,2],[670,1],[672,1],[674,1],[676,1],[678,24],[721,1],[723,1],[725,2],[764,1],[766,1],[768,2],[771,15],[799,1],[801,1]]},"291":{"position":[[0,26],[41,8],[98,33],[132,37],[170,13]]},"293":{"position":[[0,14],[15,10],[40,26],[67,27],[341,1],[343,4],[363,64],[428,4],[446,9],[459,3],[465,17],[483,1],[500,2],[521,7],[541,43],[590,6],[630,3],[644,11],[656,37],[725,2],[742,7],[778,3],[789,5],[803,1],[805,7],[832,1],[834,4],[862,1],[864,9],[874,3],[878,1],[880,2],[888,1],[899,6],[906,18],[925,3],[936,5],[950,1],[952,7],[979,1],[981,4],[1009,1],[1011,9],[1021,3],[1025,1],[1027,2],[1035,1],[1046,6],[1053,18],[1072,3],[1076,18],[1095,6]]},"295":{"position":[[0,2],[3,3],[7,28],[36,4],[41,8],[50,11],[62,11],[81,1],[83,7],[91,15],[107,13],[127,9],[137,6],[202,2],[212,6],[219,1],[270,1],[272,1],[349,1],[361,6],[368,1],[375,1],[422,1],[581,7],[589,24],[614,8],[623,4],[649,3],[660,4],[689,11],[701,10],[712,9],[722,8],[731,4],[741,4],[752,1],[754,1],[756,1],[758,1],[760,1],[762,2],[775,1],[777,1],[779,1],[781,1],[783,1],[785,2],[798,1],[800,1],[806,1],[808,1],[810,5],[826,1],[828,1],[830,1],[832,1],[834,1],[836,2],[841,2],[844,26],[878,6],[885,25],[911,24]]},"297":{"position":[[0,9],[10,18],[87,53],[147,4],[187,1],[193,8]]},"299":{"position":[[0,18],[77,53],[137,4],[177,1],[183,8]]},"301":{"position":[[0,1]]},"303":{"position":[[0,2],[19,1],[40,23],[171,1],[188,2],[250,1],[252,1],[254,2],[303,1],[305,2]]},"305":{"position":[[80,3],[122,14],[140,20],[276,21],[308,14],[329,2],[332,1],[340,5],[358,11],[370,15],[506,1],[523,2],[526,5],[538,2],[562,1],[564,2],[567,5],[593,1],[619,1],[621,2],[624,13],[657,1],[659,2],[662,4],[676,8],[698,1],[717,1],[719,2],[722,7],[744,1],[746,2],[749,4],[754,1],[756,2],[759,1],[768,4],[799,1],[801,2],[804,6],[811,1],[813,2],[816,11],[855,1],[857,2],[860,4],[865,1],[867,2],[870,7],[903,1],[905,2],[908,5],[914,1],[916,2],[919,5],[950,1],[952,2],[955,7],[963,2]]},"307":{"position":[[0,51],[52,2],[55,14],[76,14],[97,12],[117,8],[230,1],[247,2],[250,5],[262,2],[286,1],[288,2],[291,5],[319,1],[334,1],[353,2],[460,1],[477,2],[480,5],[492,2],[516,1],[518,2],[521,1],[523,1],[538,1],[561,2],[564,7],[580,14]]},"310":{"position":[[0,2],[3,4],[105,1],[122,1],[202,1],[219,1],[299,1],[316,1],[397,1],[414,1]]},"312":{"position":[[0,8],[22,6],[42,5]]},"314":{"position":[[0,3]]},"319":{"position":[[519,6],[1158,16]]},"323":{"position":[[216,1],[227,1],[538,50],[589,10]]},"328":{"position":[[118,23],[142,30]]},"330":{"position":[[214,31],[605,4]]},"332":{"position":[[0,3],[4,96],[115,12],[143,1],[156,37]]},"334":{"position":[[0,96],[111,12],[139,1],[152,37]]},"336":{"position":[[22,8],[31,5]]},"338":{"position":[[14,1],[23,11],[92,1],[101,15],[124,36]]},"341":{"position":[[0,120],[121,45]]},"343":{"position":[[0,23]]},"345":{"position":[[0,14]]},"347":{"position":[[0,33]]},"349":{"position":[[0,66]]},"351":{"position":[[0,10],[15,18],[34,7],[46,7]]},"353":{"position":[[0,5],[6,10],[22,5],[33,28],[62,14]]},"355":{"position":[[0,73],[78,12],[98,6],[112,9],[208,13],[233,2],[247,8],[263,15],[333,4],[392,11],[404,13],[422,11],[441,8],[450,36]]},"357":{"position":[[0,72]]},"359":{"position":[[0,10],[49,13],[76,6],[96,1],[98,1],[100,1],[124,1],[126,2],[159,1],[161,13],[197,1],[199,8],[229,1],[231,7],[256,1],[258,13],[276,3],[280,2],[283,1],[285,2],[288,16],[305,16],[335,26],[370,5],[389,1],[391,1],[393,1],[417,1],[419,2],[452,1],[454,13],[490,1],[492,8],[522,1],[524,7],[549,1],[551,13],[569,3],[573,2],[576,1],[600,1],[602,2],[635,1],[637,13],[673,1],[675,8],[705,1],[707,7],[732,1],[734,13],[752,3],[756,2]]},"361":{"position":[[0,6],[14,13]]},"363":{"position":[[0,8],[51,7],[59,11],[84,6],[91,7],[99,23],[132,1],[143,10],[157,1],[184,1],[192,1],[217,1],[219,3],[223,5],[238,1],[262,5],[289,1],[324,1],[340,1],[353,1],[368,1],[370,7],[378,5],[384,9],[398,32],[435,5],[441,36],[508,23],[532,1],[566,1],[624,1],[629,1],[639,1],[649,1],[679,1],[702,1],[704,10],[727,1],[751,1],[811,1],[816,1],[829,1],[840,1],[849,1],[863,1],[865,1],[882,1],[884,2],[893,3],[897,1],[903,1],[957,1],[980,1],[982,4],[992,1],[994,9],[1004,10],[1015,54],[1137,1],[1149,1],[1193,1],[1210,1],[1223,1],[1228,1],[1247,1],[1306,2],[1318,2],[1331,1],[1336,28],[1365,1],[1400,1],[1406,1],[1418,1],[1420,3],[1424,1],[1438,1],[1440,3],[1444,1],[1462,1],[1472,1],[1484,1],[1486,3],[1490,1],[1504,1],[1506,3],[1510,1],[1525,8],[1543,4],[1577,1],[1584,1],[1586,3],[1590,1],[1604,1],[1606,3],[1610,1],[1624,67],[1692,1],[1787,12],[1804,1],[1860,1],[1916,1],[1972,1],[2028,1],[2135,1],[2191,1],[2247,1],[2303,1],[2359,1],[2412,26],[2445,1],[2495,15],[2521,4],[2529,1],[2534,1],[2571,23],[2600,2],[2625,1],[2648,2],[2673,1],[2696,2],[2721,1],[2744,2],[2769,1],[2792,2],[2817,1]]},"365":{"position":[[78,2],[81,8],[90,27],[129,1],[131,3],[140,8],[203,3],[226,10],[249,7],[257,18],[283,1],[304,1],[318,1],[336,1],[355,1],[371,1],[397,1],[421,1],[449,1],[467,1],[485,1],[494,13]]},"367":{"position":[[0,19]]},"369":{"position":[[0,9]]},"371":{"position":[[0,18],[19,20],[40,21],[62,1],[79,5],[99,5],[119,5],[139,5],[175,22],[198,8],[207,2],[228,3],[249,3],[326,8],[358,2],[377,7],[385,23],[424,15],[512,2]]},"373":{"position":[[0,16],[17,24],[42,19]]},"376":{"position":[[0,3],[17,26],[290,1],[292,4],[312,64],[377,4],[395,9],[408,3],[414,28],[443,1],[460,2],[481,7],[501,43],[550,6],[590,3],[604,11]]},"378":{"position":[[0,3],[11,5],[25,1],[27,7],[54,1],[56,4],[84,1],[86,9],[96,3],[100,1],[102,2],[110,1],[121,6],[128,18],[147,3],[158,5],[172,1],[174,7],[201,1],[203,4],[231,1],[233,9],[243,3],[247,1],[249,2],[257,1],[268,6],[275,18],[294,2],[297,18]]},"380":{"position":[[0,2],[3,3],[7,28],[36,4],[90,3],[94,8],[103,11],[115,11],[134,1],[136,7],[144,15],[160,13],[180,9],[190,6],[278,2],[288,6],[329,1],[331,1],[408,1],[410,2],[421,5],[440,1],[447,1],[486,1],[668,7],[676,24],[701,8],[710,4],[736,3],[747,4],[776,11],[788,10],[799,12],[812,8],[821,4],[831,4],[842,1],[844,1],[846,1],[848,1],[850,1],[852,2],[865,1],[867,1],[869,1],[871,1],[873,1],[875,2],[888,1],[890,1],[896,1],[898,1],[900,5],[916,1],[918,1],[920,1],[922,1],[924,1],[926,2],[931,2],[934,19],[954,15],[1013,15],[1029,7],[1044,13]]},"382":{"position":[[0,21]]},"385":{"position":[[0,7]]},"388":{"position":[[0,2],[3,2],[6,1],[8,2],[13,9],[25,2],[30,10],[41,1],[43,2],[48,9],[58,1],[60,2],[65,10],[76,1],[78,2],[83,13],[97,2],[100,3],[116,3],[176,1],[217,1],[240,2],[243,1],[270,2],[300,2],[303,1],[330,2],[333,1],[360,5],[366,4],[373,1],[377,1],[381,1],[386,2],[389,4],[394,21],[489,1],[530,1],[789,5],[803,4],[817,2]]},"390":{"position":[[0,3],[4,2],[7,2],[10,2],[13,26],[43,2],[52,2],[55,28],[87,2],[93,3],[97,1],[99,29],[139,2],[142,29],[183,3],[187,32],[224,1],[232,2],[235,32],[271,2],[298,1],[339,1],[347,1],[359,1],[387,2],[392,1],[394,1],[396,1],[401,2],[407,2],[432,2],[437,1],[439,1],[441,1],[446,2],[452,2],[477,1],[481,1],[483,1],[485,1],[490,1],[495,2],[520,1],[524,1],[526,1],[528,1],[533,1],[538,2],[563,2],[568,1],[570,1],[572,1],[577,2],[583,2],[608,2],[613,1],[615,1],[617,1],[622,2],[628,2],[631,2],[634,3],[640,2],[645,1],[655,2],[660,1],[669,1],[673,1],[683,1],[687,1],[696,2],[701,1],[710,2],[715,1]]},"392":{"position":[[95,1],[102,1],[124,1],[138,1],[154,1],[168,1],[172,1],[186,1],[190,1],[216,3],[220,2],[223,1],[246,1],[248,8],[272,1],[295,1],[326,2],[329,26],[356,2],[359,26],[386,3],[390,41],[450,1],[491,1],[499,1],[505,2],[511,1],[523,2],[532,1],[538,2],[544,1],[556,2],[565,1],[572,1],[576,1],[581,2],[587,1],[599,2],[624,1],[628,1],[630,1],[632,1],[636,2],[641,1],[645,1],[650,2],[656,1],[668,2],[693,1],[697,1],[699,1],[701,1],[705,2],[710,1],[714,1],[719,2],[725,1],[737,2],[762,1],[766,1],[768,1],[770,1],[774,2],[779,1],[785,2],[791,1],[803,2],[829,1],[831,1],[833,1],[837,2],[842,1],[846,2],[852,2],[859,1],[871,2],[896,2],[901,1],[903,1],[905,1],[909,2],[914,1],[918,2],[924,2],[930,1],[937,2],[962,2],[967,1],[969,1],[971,1],[975,2],[980,1],[984,3],[991,2],[997,1],[1009,2],[1034,3],[1040,1],[1042,1],[1044,1],[1048,2],[1051,2],[1054,3],[1060,1],[1064,1],[1071,1],[1075,1],[1082,1],[1086,1],[1094,1],[1102,2],[1107,1],[1115,2],[1120,1],[1127,3],[1133,1]]},"394":{"position":[[32,3],[36,2],[39,2],[42,2],[45,28],[77,2],[86,1],[88,1],[90,30],[124,1],[126,1],[134,1],[189,2],[216,1],[257,1],[269,1],[287,1],[318,2],[323,1],[325,1],[327,1],[360,2],[365,1],[367,1],[369,1],[378,2],[405,2],[411,1],[413,1],[415,1],[421,2],[429,2],[432,5],[440,2],[445,1],[455,2],[460,1],[471,2],[477,1]]},"396":{"position":[[73,1],[88,1],[104,1],[139,1],[187,1],[194,1],[200,2],[203,2],[208,2],[213,6],[222,1],[236,1],[241,2],[247,1],[252,1],[293,1],[295,1],[297,1],[301,2],[304,2],[307,2],[312,2],[318,6],[327,1],[341,1],[346,2],[353,1],[358,1],[399,1],[401,1],[403,1],[407,2],[410,2],[427,1],[446,1]]},"398":{"position":[[10,13],[34,13],[53,3]]},"400":{"position":[[0,34],[53,4],[58,2],[81,12],[97,7],[108,9],[121,10],[132,2],[135,10],[146,2],[149,10],[160,2],[163,10],[192,1],[233,1],[273,2]]},"402":{"position":[[0,2],[3,5],[22,7],[42,9],[69,9],[95,7],[119,7],[143,9],[169,9]]},"406":{"position":[[6,14],[28,5],[34,1],[36,1],[38,7],[46,4],[69,1],[110,1],[118,1],[133,1],[138,1],[140,1],[171,1],[173,1],[175,1],[179,2],[211,1],[213,2]]},"408":{"position":[[0,2],[9,45],[64,3],[93,10],[107,1],[134,34],[169,10],[230,1],[278,1],[317,1],[319,1],[321,1],[325,2],[367,1],[372,2],[375,2]]},"410":{"position":[[0,12],[19,2],[42,8],[51,2],[58,17],[113,6],[120,3],[124,1],[126,7],[134,2],[141,10],[152,44],[197,16],[254,17],[272,20],[311,1],[352,1],[364,1],[372,1],[380,1],[387,1],[418,1],[420,1],[422,1],[426,2],[453,1],[455,2]]},"412":{"position":[[0,17],[27,1],[29,5],[35,7],[43,60],[104,29],[134,3],[156,1],[202,2],[213,1],[247,1],[257,2],[280,2],[306,1],[339,2],[401,1],[409,1],[411,1],[436,2],[462,1],[464,2],[467,4]]},"414":{"position":[[6,10],[24,14],[45,24],[70,3],[92,1],[133,1],[139,2],[150,1],[184,1],[194,1],[196,1],[198,2],[203,2],[209,5],[221,2],[227,1],[229,1],[238,1],[260,2],[287,1],[289,2]]},"416":{"position":[[9,33],[43,1],[62,15],[78,1],[86,2],[98,22],[121,3],[143,1],[184,1],[190,2],[201,1],[235,1],[245,1],[247,1],[255,2],[261,1],[263,1],[275,1],[277,2],[331,2],[358,1],[360,2]]},"418":{"position":[[0,5]]},"420":{"position":[[53,3],[75,1],[123,1],[135,1],[140,2],[167,5],[206,5],[212,1],[214,2],[221,2],[229,2]]},"422":{"position":[[13,9],[54,9],[95,9],[123,1]]},"424":{"position":[[13,11],[51,11],[76,2]]},"426":{"position":[[12,32],[76,1],[78,4],[90,4],[106,1],[108,4],[120,4],[151,1],[153,4],[158,5],[176,8],[192,12],[220,2],[250,5],[263,6],[275,15],[298,8],[312,5],[323,14],[343,37],[381,6],[393,10],[409,14],[430,8],[446,3],[450,3],[471,10],[504,8],[519,7],[533,15],[554,7],[568,3],[579,8],[596,9],[649,3],[682,5],[694,3],[710,21],[737,9],[770,3],[792,1],[847,1],[879,1],[900,1],[911,1],[955,1],[966,1],[1010,1],[1054,1],[1103,1],[1133,1],[1161,1],[1163,1],[1173,2],[1180,2],[1183,5]]},"430":{"position":[[29,35]]},"434":{"position":[[0,2],[3,36],[40,2],[43,33],[77,2],[80,26],[107,24]]},"437":{"position":[[6,3],[10,2],[13,4],[18,2],[21,4],[65,2],[68,4],[103,1],[121,1],[141,1],[158,1],[178,1],[195,2]]},"439":{"position":[[0,26],[27,15],[43,10],[54,35],[90,42],[171,2],[174,1],[176,8],[211,19],[249,1],[271,2],[294,1],[317,2],[344,2]]},"441":{"position":[[0,5],[6,4],[11,4],[48,21],[70,6],[85,11],[238,6],[245,9],[255,15],[370,2]]},"443":{"position":[[0,5],[6,5],[19,3],[23,25],[49,13],[63,10],[74,4],[86,3],[90,37],[128,29],[190,5],[327,8],[339,19],[359,3],[369,5],[490,5],[496,65],[570,54],[660,6],[690,2],[693,6],[713,1],[749,6],[772,2],[911,2],[926,1],[966,2],[1016,1],[1032,2]]},"445":{"position":[[0,94],[183,8],[222,2],[225,18],[311,2],[314,8],[352,2],[355,31],[454,2],[457,8],[495,1],[533,8],[572,2],[575,67],[665,2],[709,10]]},"447":{"position":[[5,2],[13,17],[98,2],[130,1],[198,1],[219,2],[222,2],[235,3],[297,2],[305,20],[393,2],[425,1],[493,1],[514,2],[570,1],[595,2],[610,2],[613,2],[616,10],[632,7],[707,2],[739,1],[807,1],[837,2],[840,11],[867,1],[888,2],[944,2]]},"449":{"position":[[5,34],[51,1],[53,10],[131,2],[163,1],[231,1],[252,2],[308,1],[332,2],[365,2],[368,13],[392,1],[394,18],[454,2]]},"451":{"position":[[0,5],[6,28],[49,2],[52,4],[146,2],[178,1],[246,1],[267,2],[338,2],[341,19],[446,2],[449,2],[452,3],[473,2],[476,5],[482,28],[578,2],[610,1],[678,1],[699,2],[755,1],[757,2],[760,4],[795,2],[830,2],[833,6],[840,21],[876,2],[879,5],[926,1],[928,6],[935,18],[1012,1],[1014,2],[1017,9],[1027,2],[1030,2],[1040,2],[1064,2],[1067,2]]},"453":{"position":[[0,35],[103,2],[135,1],[203,1],[224,2],[280,1],[282,2],[285,5],[308,1],[329,2],[399,1],[401,2],[404,29],[508,2]]},"457":{"position":[[0,1],[7,92],[109,16],[146,1],[202,1],[267,1],[292,1],[321,4],[347,1],[388,1],[398,1],[411,2],[414,11],[435,1],[437,5],[451,1],[483,2]]},"460":{"position":[[58,22]]},"462":{"position":[[78,9],[113,25],[139,25],[165,26],[192,16],[209,35],[411,23],[435,3],[439,4],[444,5],[450,4]]},"464":{"position":[[39,40]]},"467":{"position":[[0,2],[13,5],[24,4],[29,7],[57,6],[69,5]]},"469":{"position":[[0,3],[4,2],[12,1],[24,2],[36,2],[64,2],[94,1],[96,1],[98,1],[100,2],[128,3],[136,9],[159,9],[182,1],[191,1],[202,13]]},"472":{"position":[[0,4],[5,2],[8,4],[13,12]]},"474":{"position":[[0,4],[5,2],[8,3],[12,3]]},"476":{"position":[[0,4],[5,2],[8,3],[12,2],[15,14]]},"478":{"position":[[0,4],[5,2],[8,3],[12,2],[15,14]]},"480":{"position":[[0,4],[5,2],[8,2],[11,2],[14,5]]},"483":{"position":[[5,1],[12,38],[56,8],[72,5],[83,13],[115,1],[157,1],[182,7],[190,1],[243,1],[289,1],[341,1],[343,1],[390,1],[449,1],[451,1]]},"486":{"position":[[11,5],[24,5],[34,10],[45,7],[53,2],[56,5],[79,2],[87,10],[128,2],[138,10],[177,2],[186,10],[221,2],[228,10],[265,2],[273,10],[303,2],[312,10],[323,3],[396,1],[401,2],[404,2],[412,6],[453,2],[456,2],[459,2],[469,6],[513,2],[516,2],[524,6],[565,2],[568,2]]},"488":{"position":[[12,5],[25,18],[66,36],[154,1],[156,2],[176,5],[217,1],[225,6],[232,3],[236,13],[253,12],[270,12],[355,1],[468,2]]},"490":{"position":[[9,6],[23,14],[38,2],[46,5],[52,3],[56,1],[65,4],[117,1],[125,16],[227,1],[242,1],[270,1],[374,2]]},"492":{"position":[[69,1],[150,8],[170,2]]},"494":{"position":[[10,13],[31,16],[57,33],[198,2],[214,6],[234,7],[250,6],[259,19],[279,3],[320,2],[331,3],[376,3],[388,3],[430,4],[443,30],[481,6],[586,1],[615,1],[648,1],[677,2],[680,2],[686,2],[781,2]]},"496":{"position":[[11,26],[38,10],[49,29],[150,2],[158,10],[178,6],[185,3],[209,15],[242,17],[260,6],[277,1],[282,5],[288,1],[388,1],[421,1],[520,2]]},"498":{"position":[[0,5],[75,1],[90,1],[106,1],[213,2]]},"500":{"position":[[7,37],[53,38],[180,2],[190,1],[198,8],[207,3],[211,2],[221,24],[314,1],[333,1],[478,2]]},"502":{"position":[[7,14],[22,2],[25,13],[61,2],[71,5],[77,3],[81,2],[91,16],[176,1],[196,1],[216,1],[329,2]]},"504":{"position":[[8,10],[28,8],[43,12],[74,10],[89,9],[116,4],[142,4],[152,2],[155,13],[209,2],[224,1],[232,7],[251,6],[258,3],[363,1],[383,1],[402,1],[417,1],[564,2]]},"506":{"position":[[0,6],[285,2]]},"508":{"position":[[0,6],[285,2]]},"510":{"position":[[114,1],[133,1],[162,3],[213,1],[241,2],[250,3],[273,1]]},"512":{"position":[[0,5],[95,1],[114,1],[143,3],[194,1],[222,2],[231,3],[254,1]]},"514":{"position":[[6,20],[68,2],[79,9],[101,9],[179,1],[198,1],[227,3],[284,1],[318,2],[327,3],[357,1]]},"516":{"position":[[0,3],[94,1],[113,1],[142,3],[194,1],[223,2],[232,3],[256,1]]},"518":{"position":[[74,1],[97,1],[146,3],[193,6],[238,2],[248,3],[264,6]]},"520":{"position":[[74,1],[97,1],[146,3],[193,6],[238,2],[248,3],[264,6]]},"522":{"position":[[74,1],[97,1],[146,3],[193,6],[238,2],[248,3],[264,6]]},"524":{"position":[[106,1],[129,1],[178,3],[225,6],[237,1],[310,2],[320,3],[338,6],[353,1]]},"526":{"position":[[7,8],[23,10],[58,1],[115,1],[138,1],[187,3],[234,6],[246,1],[319,2],[329,3],[347,6],[362,1]]},"528":{"position":[[74,1],[97,1],[146,3],[193,5],[204,1],[277,2],[287,3],[305,5],[319,1]]},"530":{"position":[[68,1],[85,1],[131,2],[172,2],[175,2]]},"532":{"position":[[12,13],[94,1],[111,1],[157,2],[198,2],[201,2]]},"534":{"position":[[0,8],[102,2],[139,2],[142,2]]},"536":{"position":[[0,4],[72,55],[128,23],[152,43],[196,37]]},"540":{"position":[[0,2],[8,8],[33,11],[73,5],[83,8],[98,1],[100,5]]},"542":{"position":[[52,6],[64,3],[168,2],[179,13],[193,14],[214,13],[228,4],[238,12]]},"545":{"position":[[5,31],[39,1],[45,5],[54,5]]},"549":{"position":[[0,21]]},"551":{"position":[[0,12],[13,3],[17,17],[35,9],[45,15],[61,4],[88,5],[99,19],[119,4],[167,4],[194,32],[227,4],[254,2]]},"554":{"position":[[74,7],[101,1]]},"556":{"position":[[0,49]]},"559":{"position":[[5,22],[28,10],[39,2],[42,2],[45,15]]},"561":{"position":[[0,17],[24,1]]},"563":{"position":[[0,14],[38,1],[80,2],[83,2],[119,4],[132,12],[145,3],[172,1],[214,2],[217,6],[269,4],[282,2],[285,81],[389,1],[391,2],[394,1],[396,21],[418,1],[420,12],[433,1],[435,13],[449,1],[451,20],[472,1],[474,15],[490,1],[492,2],[546,2],[558,2],[585,2],[612,2],[628,2],[665,2]]},"565":{"position":[[0,7],[8,4],[13,3],[17,4],[22,4],[27,3],[38,2],[50,3],[62,2],[78,2],[87,2],[113,3],[124,2],[170,6],[185,2],[188,2],[204,5],[210,6],[226,2],[229,2],[245,5],[251,3],[262,2],[269,5],[275,3],[289,2],[297,1],[333,2],[583,2],[586,1],[720,1],[753,1],[755,2],[787,6],[794,1],[796,1],[798,1],[800,1],[802,1],[804,1],[806,1],[808,1],[810,1],[812,1],[814,1],[816,1],[818,1],[820,1],[822,1],[824,1],[826,1],[828,1],[830,1],[832,1],[834,1],[836,1],[838,1],[840,1],[842,1],[844,7],[852,8],[866,1]]},"567":{"position":[[0,18],[19,17],[37,8],[46,7],[54,6],[61,4],[74,9],[92,2],[95,1],[103,7],[111,16],[134,22],[168,6],[175,17],[202,18]]},"569":{"position":[[0,2],[26,1],[104,2]]},"571":{"position":[[0,35],[55,34]]},"573":{"position":[[19,8]]},"579":{"position":[[0,10],[22,2],[71,1],[113,2],[163,6],[190,2],[193,2],[219,4]]},"581":{"position":[[10,4],[21,5],[29,12],[44,2],[49,6],[56,2],[59,1],[77,1],[79,2],[82,2],[142,4],[147,1],[151,2],[180,1],[227,2]]},"583":{"position":[[0,2],[31,1],[33,2],[36,4],[98,1],[129,1],[198,1],[242,2]]},"585":{"position":[[0,2],[31,1],[33,2],[36,3],[72,4],[85,3],[131,1],[133,2],[136,4],[176,2]]},"588":{"position":[[0,23],[45,1],[98,42]]},"590":{"position":[[0,42]]},"592":{"position":[[0,19],[44,2],[75,2],[108,2],[111,4],[116,3]]},"594":{"position":[[5,2],[12,30],[43,5],[53,4],[58,6],[65,1],[79,1],[107,2],[139,1],[171,2],[174,4]]},"596":{"position":[[0,29],[30,2],[33,26],[70,1],[120,1]]},"598":{"position":[[23,1],[64,1],[66,2],[69,4],[83,1],[89,2],[92,10],[119,1],[149,1],[166,1],[183,1],[200,1],[218,1],[235,1],[254,1],[272,1],[291,1],[311,1],[320,2],[323,9],[346,1],[362,1],[369,1],[382,1],[390,2],[404,1],[431,1],[433,1],[443,2],[450,3],[464,13]]},"600":{"position":[[0,39],[44,1],[46,1],[70,7],[157,7]]},"602":{"position":[[13,12]]},"604":{"position":[[0,14],[38,1],[79,1],[97,1],[121,2],[124,8],[144,1],[151,1],[173,1],[204,1],[206,1],[208,3],[212,1],[214,2],[217,9],[240,1],[256,1],[263,1],[285,1],[293,2],[307,1],[338,1],[340,1],[350,2],[353,6],[371,1],[395,1],[402,1],[424,1],[440,1],[451,1],[464,1],[493,1],[495,1],[503,2]]},"606":{"position":[[0,14],[71,3],[98,1],[139,1],[157,1],[181,2],[184,8],[222,1],[253,1],[255,2]]},"608":{"position":[[0,14],[19,9],[72,1],[85,1],[92,1],[113,1],[141,1],[143,1],[145,3],[149,2],[152,6],[170,5],[186,1]]},"610":{"position":[[40,1],[55,1],[90,1],[97,1],[120,1],[143,1],[145,1],[157,1],[168,1],[186,10],[204,3]]},"612":{"position":[[0,51],[67,1]]},"614":{"position":[[0,10],[29,1],[101,1],[150,4],[155,3],[169,1],[186,21],[221,1],[244,1],[265,1],[289,1],[318,1],[347,1],[374,1],[402,1],[421,3],[444,1],[465,51],[539,4]]},"616":{"position":[[0,59],[152,22],[185,1],[206,1],[242,1],[255,1],[268,1],[278,1],[314,1],[328,1],[334,18],[361,1],[385,11],[399,3],[405,5],[416,1],[421,2],[426,7],[522,1],[534,4]]},"618":{"position":[[17,24],[42,7],[50,8],[64,3],[68,8],[82,7],[90,7],[105,15],[121,9],[144,20],[165,10],[176,2],[179,5],[322,1],[324,5],[401,11],[593,6]]},"621":{"position":[[10,1],[22,2],[46,1],[58,2],[82,1],[88,2],[105,1],[129,2],[153,1],[177,2],[187,4],[192,5],[281,1],[283,1],[335,1],[393,2],[396,2]]},"623":{"position":[[24,1],[65,1],[79,1],[105,1],[156,1],[158,1],[160,1],[166,2],[169,2]]},"625":{"position":[[7,15],[48,2],[59,2],[70,17],[97,5],[127,1],[168,1],[185,1],[187,8],[220,1],[230,1],[240,2]]},"627":{"position":[[0,15],[25,1],[36,3],[47,7],[75,5],[93,3],[104,6],[120,30],[151,5],[185,1],[187,1],[194,7],[202,1],[204,1],[206,1],[212,8],[221,1],[223,1],[264,8],[286,1],[312,1],[314,1],[321,7],[329,1],[331,1],[333,1],[339,8],[348,1],[350,1],[352,1]]},"629":{"position":[[0,4]]},"632":{"position":[[0,20]]},"637":{"position":[[0,1],[8,9],[18,13],[32,6]]},"639":{"position":[[0,7],[62,18]]},"641":{"position":[[0,25],[26,40],[67,22],[95,5],[122,5],[128,12]]},"644":{"position":[[0,35],[78,3],[82,38],[134,4],[141,11],[153,4],[158,23],[184,1],[199,1],[213,1],[226,1],[230,1],[289,22],[312,50]]},"646":{"position":[[0,9],[23,1],[41,6],[101,9],[124,5]]},"648":{"position":[[0,4],[30,8],[39,4],[52,3],[114,10],[133,3],[137,9]]},"652":{"position":[[82,1],[107,1]]},"654":{"position":[[93,1],[105,1],[120,1],[178,6],[255,3],[259,9],[271,1],[284,1],[306,1],[312,1],[382,1],[384,43],[428,7],[436,2],[439,2],[442,2],[445,1],[447,2],[450,1],[452,2],[455,1],[457,2],[460,1],[462,2],[465,1],[467,2],[470,1]]},"656":{"position":[[0,29],[39,1],[41,43],[141,13],[155,2],[158,2],[161,2],[164,1],[166,2],[169,1],[171,2],[174,1],[176,15],[204,19],[226,4],[231,37],[269,18],[288,56]]},"658":{"position":[[0,67],[81,3],[167,4],[213,12]]},"660":{"position":[[0,41],[44,5],[52,4],[59,2],[62,36]]},"663":{"position":[[0,41],[42,71]]},"665":{"position":[[0,71],[72,24],[97,22],[120,18],[139,68]]},"669":{"position":[[0,33]]},"671":{"position":[[0,29]]},"673":{"position":[[0,72]]},"677":{"position":[[0,48]]},"679":{"position":[[0,6],[13,1],[23,1],[44,1],[48,6],[55,4],[60,4],[65,4],[70,3],[74,6],[81,4],[86,5],[92,4],[97,6],[104,4],[109,6],[116,6],[123,3],[127,3],[131,3]]},"681":{"position":[[0,3],[6,3],[12,7],[35,1],[39,1],[44,1],[48,1],[52,1],[59,1],[79,1],[83,1],[88,1],[92,1],[96,1],[103,1],[127,1],[136,1],[140,1],[147,1],[152,7],[162,1],[166,1],[171,1],[175,1],[179,1],[186,1],[191,3],[197,1],[211,1],[228,1],[232,1],[254,1],[258,1],[268,1],[281,1],[285,1]]},"683":{"position":[[16,4],[36,1],[48,1],[59,4],[74,2],[79,2],[84,5]]},"685":{"position":[[0,1],[15,4],[38,4],[47,1],[57,4],[65,7],[104,4]]},"691":{"position":[[0,32]]},"693":{"position":[[147,8]]},"695":{"position":[[0,5],[125,7],[186,4]]},"698":{"position":[[19,1],[39,32],[95,4],[100,5],[117,6],[357,26],[384,2],[387,1],[393,9]]},"700":{"position":[[0,3],[59,26],[90,10],[309,1],[320,1],[327,1],[329,6]]},"705":{"position":[[0,32],[33,50],[84,21]]},"707":{"position":[[0,9],[10,34],[45,43],[89,44],[209,40],[250,30],[281,35],[317,28],[346,36]]},"709":{"position":[[0,36]]},"714":{"position":[[0,22],[23,45],[69,65],[135,3],[139,104],[244,21],[266,3],[270,140]]},"716":{"position":[[32,63],[96,80]]},"719":{"position":[[0,43]]},"721":{"position":[[0,47]]},"723":{"position":[[0,44]]},"725":{"position":[[57,13],[71,51]]},"727":{"position":[[0,60]]},"729":{"position":[[65,58]]},"746":{"position":[[78,8],[87,8],[96,7],[104,10],[115,7]]},"748":{"position":[[0,21]]},"750":{"position":[[0,18]]},"753":{"position":[[0,55]]},"755":{"position":[[0,16]]},"757":{"position":[[180,2],[183,1],[185,2],[188,4],[195,2],[198,1],[200,3],[204,4],[211,2],[214,1],[216,2],[219,2],[224,2],[227,1],[229,2],[232,4],[239,2],[242,1],[244,3],[248,2],[287,2],[290,1],[295,4],[302,2],[305,1],[310,4],[317,2],[320,1],[325,4],[332,2],[335,1],[340,4],[347,2],[350,1],[355,2],[392,3],[402,2],[411,2],[420,2],[429,2],[755,70],[994,5],[1035,12],[1048,1]]},"759":{"position":[[0,38]]},"762":{"position":[[0,2],[20,8],[29,2],[40,8],[49,2],[60,6],[67,2],[78,2],[85,2],[88,1],[98,3],[107,6]]},"764":{"position":[[8,12],[25,5],[39,8],[53,11],[69,9],[83,2]]},"766":{"position":[[5,8],[22,14]]},"768":{"position":[[16,7]]},"770":{"position":[[0,19]]},"773":{"position":[[0,2],[19,1],[59,1]]},"776":{"position":[[0,2],[13,12],[125,2],[128,6]]},"778":{"position":[[0,2],[14,12],[127,2],[130,6]]},"780":{"position":[[0,2],[12,17],[65,2],[68,8],[82,2],[162,2],[165,8],[179,2]]},"782":{"position":[[6,2],[32,1],[73,1],[113,2],[116,1],[158,3],[162,8],[190,2],[193,2],[196,1],[259,6],[291,4],[313,8]]},"784":{"position":[[0,2],[13,27],[66,2],[79,9],[89,2],[92,5],[114,23],[138,2],[151,3],[180,1],[189,3],[225,1],[249,1]]},"786":{"position":[[0,4],[16,9],[59,2],[66,7],[121,3],[125,7],[137,14],[157,28],[229,2],[236,7]]},"789":{"position":[[49,15],[99,10],[222,6],[235,11],[247,2],[273,1],[314,1],[329,2],[416,2],[419,2],[422,1],[474,3],[486,7],[521,1]]},"791":{"position":[[0,16],[83,31],[126,3],[137,11],[155,5]]},"793":{"position":[[0,45]]},"795":{"position":[[38,32],[94,18]]},"798":{"position":[[0,13],[20,38]]},"801":{"position":[[8,4],[44,14],[59,5],[65,3],[73,2],[76,4]]},"803":{"position":[[0,19],[48,2],[51,1]]},"808":{"position":[[0,2],[37,2],[40,1],[107,2],[110,1]]},"810":{"position":[[21,11],[37,19],[71,2],[91,8],[100,12],[113,2],[131,8],[140,2],[151,8],[160,7],[178,2],[204,1],[246,1],[309,2],[312,1],[378,2],[381,1],[436,1],[445,7],[466,2],[492,1],[533,1],[567,1],[639,2],[642,2],[645,1],[697,5],[710,7],[718,15],[741,8]]},"812":{"position":[[0,25]]},"815":{"position":[[30,61]]},"817":{"position":[[0,7],[16,58]]},"819":{"position":[[0,7],[17,7],[52,19],[108,2],[111,5]]},"821":{"position":[[0,37]]},"823":{"position":[[9,1],[61,2]]},"825":{"position":[[0,29],[38,15],[66,8],[75,2],[101,1],[142,1],[176,1],[220,1],[248,1],[338,2],[341,1],[395,2],[398,1],[446,2],[449,2],[452,1],[504,8],[520,5],[526,1],[528,3],[532,6],[751,2],[760,3],[985,10],[1010,11]]},"827":{"position":[[0,10],[15,9],[59,1]]},"829":{"position":[[0,19],[54,1],[127,1]]},"831":{"position":[[71,44],[120,32],[153,2],[179,1],[220,1],[254,1],[298,1],[326,1],[328,2],[331,12],[355,1],[369,2],[393,1],[489,2],[492,1],[514,1],[562,2],[565,1],[587,1],[629,2],[632,2],[635,1],[687,7],[695,10],[706,21]]},"833":{"position":[[0,3],[12,20],[33,2],[59,1],[100,1],[134,1],[178,1],[206,1],[208,2],[211,12],[235,1],[249,2],[273,1],[367,2],[370,1],[392,1],[440,2],[443,1],[465,1],[507,2],[510,2],[513,1]]},"835":{"position":[[17,1],[23,1],[29,1],[42,2],[45,1],[67,1],[109,1],[115,1],[122,1],[135,2],[138,1],[160,1]]},"837":{"position":[[0,20],[21,19],[41,5],[54,15],[70,7],[85,11],[97,13],[115,1],[121,2]]},"839":{"position":[[8,14],[23,8],[32,8],[41,8],[58,5],[64,6]]},"841":{"position":[[0,4],[36,5],[46,42],[106,1],[112,1],[118,1],[131,2],[134,1],[156,1]]},"843":{"position":[[0,3],[21,18]]},"845":{"position":[[69,2],[72,6],[108,2],[111,19]]},"847":{"position":[[47,2],[93,2],[195,3],[199,1],[208,4],[218,7],[226,1],[235,1],[242,7],[250,7],[258,2],[284,1],[325,1],[366,2],[369,1],[371,2],[374,2],[386,10],[466,2],[469,2],[472,1],[524,6],[571,20],[592,2],[618,1],[659,1],[724,2],[727,1],[729,2],[732,2],[744,10],[824,2],[827,2],[830,1],[882,13],[948,1]]},"851":{"position":[[0,3],[15,13],[34,1],[39,1],[45,8],[60,4]]},"853":{"position":[[236,1],[338,1],[345,1],[699,2],[702,6],[866,1],[1027,1],[1038,2],[1041,1],[1043,2],[1074,2],[1077,1],[1086,1],[1106,1],[1129,1],[1154,1],[1172,2],[1175,9],[1225,1],[1279,1],[1333,1],[1347,2],[1356,1],[1358,2],[1361,4],[1386,1],[1397,1],[1401,1],[1405,1],[1411,1]]},"855":{"position":[[0,13],[20,3],[31,3],[35,2],[41,10],[57,3],[61,3],[76,9],[96,3],[100,3],[114,9],[133,3],[137,3],[153,9],[174,3]]},"857":{"position":[[9,1],[36,1],[76,1],[120,1]]},"859":{"position":[[0,5],[113,1],[115,2],[118,4],[132,1],[167,1],[169,2],[172,2],[238,6]]},"861":{"position":[[29,1],[31,2],[34,9],[53,1],[79,2],[82,15],[111,1],[162,4],[247,1],[258,1],[293,1],[319,1],[321,3]]},"863":{"position":[[28,1],[30,2],[33,9],[52,1],[79,2],[82,15],[111,1],[164,4],[248,1],[259,1],[294,1],[319,1],[321,3]]},"865":{"position":[[0,2],[56,1],[58,2],[61,11],[87,1],[296,1],[307,1],[342,1],[369,1],[371,3]]},"867":{"position":[[17,1],[39,1],[49,1],[51,1],[80,1],[120,1],[164,1],[334,1],[336,2],[339,4],[353,1],[388,1],[390,2],[393,2],[459,5],[516,1],[518,2],[521,9],[540,1],[566,2],[597,2],[600,15],[629,1],[680,4],[765,1],[776,1],[811,1],[837,1],[839,5],[894,1],[896,2],[899,9],[918,1],[945,2],[948,15],[976,1],[1029,4],[1111,1],[1122,1],[1157,1],[1182,6],[1242,1],[1244,2],[1247,11],[1273,1],[1482,1],[1493,1],[1528,1],[1555,1],[1557,3]]},"871":{"position":[[0,2],[14,1]]},"873":{"position":[[10,22],[33,4],[48,12]]},"875":{"position":[[0,18],[26,17],[51,2],[60,4]]},"877":{"position":[[0,18],[23,1],[25,3],[29,13],[55,1],[69,1],[82,1]]},"879":{"position":[[9,1],[36,1],[65,1],[104,1],[129,2],[183,1],[185,2],[188,9],[221,2],[224,2],[227,1],[257,8]]},"881":{"position":[[41,1],[43,2],[46,4],[51,2],[54,6],[65,2],[78,1],[89,2],[92,4],[101,11],[113,2],[134,2],[153,2],[185,1]]},"883":{"position":[[0,2],[3,15],[70,1],[72,2],[75,11],[96,1],[122,1],[124,14],[160,3]]},"885":{"position":[[14,5],[30,1],[32,5],[38,2],[54,10],[65,2],[68,19]]},"887":{"position":[[0,17],[22,10],[39,9],[59,1],[61,3],[73,3],[77,4],[82,1],[90,1],[136,1],[143,1],[151,1],[191,1]]},"890":{"position":[[5,6],[16,6],[27,3],[31,5]]},"892":{"position":[[0,9],[14,1],[23,18],[58,21]]},"897":{"position":[[0,3],[9,17],[27,2],[30,10],[41,10]]},"900":{"position":[[0,5],[14,3]]},"902":{"position":[[13,1]]},"904":{"position":[[0,2],[7,6],[58,2]]},"906":{"position":[[0,2],[3,2],[45,5]]},"908":{"position":[[0,2],[7,6],[58,2],[86,2],[97,5],[107,2],[110,2],[124,9],[144,1],[236,4],[252,6],[281,1],[312,1],[388,2],[391,1],[393,2],[404,5],[414,2],[427,1],[438,2],[452,9],[475,1],[499,1],[601,2],[604,2],[607,1],[676,7],[719,16],[756,1],[785,9],[823,8]]},"910":{"position":[[0,3],[12,31],[44,2],[51,6],[102,2],[109,26],[146,1],[218,2],[268,9],[300,1],[331,1],[411,2],[414,1],[416,2],[427,5],[437,2],[450,1],[461,2],[475,9],[498,1],[522,1],[605,2],[608,2],[615,8],[628,6],[669,2],[672,2],[675,1],[731,19]]},"912":{"position":[[73,2],[76,1],[78,2],[89,5],[99,2],[112,1],[123,2],[137,9],[160,1],[184,1],[249,2],[252,5],[315,2],[318,2],[325,8],[338,6]]},"914":{"position":[[0,5],[10,2],[26,5],[32,1],[34,2],[49,2],[52,5],[70,8],[79,6],[86,2],[99,9],[109,2],[116,5],[127,2],[141,1],[172,1],[253,2],[256,1],[268,1],[291,1],[327,3],[331,3],[335,2],[342,3],[361,1],[371,1],[388,1],[403,3],[422,1],[432,1],[449,1],[548,2],[551,2],[554,1],[610,2],[627,1],[629,2],[645,9]]},"917":{"position":[[0,4],[8,6]]},"919":{"position":[[0,2],[11,6],[29,14]]},"921":{"position":[[14,7],[25,5],[35,3],[56,4],[65,1],[71,4]]},"923":{"position":[[0,2],[13,2],[20,5],[37,2],[51,10],[62,2],[73,2],[76,4],[85,3],[89,9]]},"925":{"position":[[3,4],[15,2],[22,5]]},"927":{"position":[[0,7]]},"930":{"position":[[0,4],[5,2],[13,4],[21,5],[39,11],[58,1],[65,3],[69,10],[110,2],[124,3],[140,9],[158,4]]},"932":{"position":[[3,3],[12,26],[81,13]]},"934":{"position":[[3,5],[14,17]]},"937":{"position":[[17,2],[40,5],[51,1],[53,17],[79,1],[81,12],[103,1],[105,21]]},"939":{"position":[[0,2],[8,17],[30,1],[40,3],[126,2],[129,26],[191,5],[197,3],[225,9],[235,1],[244,7],[252,2],[262,8],[280,1],[350,1],[352,2],[355,26],[417,3],[421,2],[424,3],[450,2],[453,10],[464,11],[483,1],[490,10],[501,29],[544,11],[560,4],[570,1],[572,28],[605,3],[618,1],[688,1],[690,2],[693,26],[755,3],[759,2],[762,3],[788,2],[791,10],[802,22]]},"941":{"position":[[9,1],[79,1],[90,1],[92,2],[95,12],[142,1],[149,1],[151,2],[154,10],[184,1],[196,3],[200,9],[219,7]]},"944":{"position":[[17,1],[24,1],[26,2],[50,5],[61,1],[63,17],[86,1],[88,11],[108,1],[110,12],[132,1],[134,21]]},"946":{"position":[[9,1],[85,1],[108,9],[123,5],[129,1],[134,17],[174,1],[253,1],[276,3],[298,3],[363,1]]},"948":{"position":[[63,1],[74,1],[102,1],[118,1],[144,12]]},"950":{"position":[[0,2],[6,6],[20,9],[30,2],[40,2],[74,8],[83,2],[114,4],[119,2],[125,3],[129,2],[141,7],[149,9],[159,10],[170,8],[189,8],[203,3],[216,1],[286,1],[288,2],[291,8],[309,1],[341,1],[343,1],[359,1],[361,2],[364,4],[369,2],[393,1],[405,2],[408,7],[422,10],[446,1],[464,3],[488,1],[490,1],[501,2],[504,6],[524,1],[526,3],[530,2],[533,11],[545,1],[547,1],[549,1],[573,2],[576,1],[608,6],[615,2],[623,16],[640,1],[642,3],[646,1],[648,3],[672,1],[674,1],[685,2],[688,6],[708,1],[731,17],[773,1],[833,1],[844,1],[874,1],[897,6],[904,3],[917,1],[929,4],[934,3],[944,3],[956,3],[960,8],[969,6],[1061,5],[1067,2]]},"953":{"position":[[0,16],[17,2],[20,2],[23,3],[27,35],[68,3],[77,13],[100,1],[177,1],[188,1],[190,2],[193,12],[240,1],[247,1],[249,2],[252,10],[282,1],[294,3],[298,7],[309,12],[327,6],[337,27],[370,13]]},"955":{"position":[[0,39],[40,8],[59,5],[65,6],[82,5],[130,8],[166,17],[193,1],[278,1],[289,1],[291,2],[294,12],[341,1],[348,1],[350,2],[353,10],[383,1],[395,3]]},"958":{"position":[[0,30],[31,12],[44,18],[63,15]]},"960":{"position":[[0,9],[10,6],[30,1],[32,5],[38,6],[49,11],[61,21]]},"962":{"position":[[0,2],[11,10],[22,6],[38,1],[54,18],[86,1],[111,7],[132,1]]},"964":{"position":[[0,16],[20,10],[31,2],[66,14],[99,1],[121,2],[133,1],[149,6]]},"966":{"position":[[0,43],[44,24],[204,1],[206,4],[231,1],[233,4],[238,5],[244,2],[247,4],[291,17]]},"969":{"position":[[0,13],[14,5],[51,11],[70,1],[76,4],[130,3],[214,3],[225,1],[398,2],[401,28],[438,3]]},"971":{"position":[[14,1],[16,14],[31,2],[77,1],[108,1],[119,2],[122,1],[158,8],[171,6],[193,7],[205,18],[242,1],[280,4],[294,1],[296,1],[308,5],[347,1]]},"973":{"position":[[0,2],[11,16],[43,8],[52,2],[85,1],[116,1],[127,2],[130,1],[221,2],[224,7],[247,9],[266,1],[277,8],[301,34]]},"975":{"position":[[0,4],[33,3],[45,29],[90,6],[166,3],[187,5]]},"978":{"position":[[5,3],[14,29],[56,24],[97,16]]},"980":{"position":[[11,1]]},"982":{"position":[[0,2],[15,24]]},"984":{"position":[[25,13],[39,14]]},"986":{"position":[[11,1],[43,1],[73,6],[114,6],[134,9],[144,3],[148,31],[183,6],[190,8],[210,1],[242,1]]},"989":{"position":[[27,3],[36,9],[50,26]]},"991":{"position":[[12,1],[47,1],[93,2],[96,2],[126,1],[184,2],[187,2]]},"994":{"position":[[5,3],[24,18]]},"996":{"position":[[12,1],[35,2],[54,1],[95,7]]},"999":{"position":[[0,7],[46,5],[52,14]]},"1001":{"position":[[0,6]]},"1004":{"position":[[0,44],[45,4],[71,4],[97,4],[102,5],[122,36]]},"1006":{"position":[[0,1],[7,20],[33,9],[48,25],[74,4],[84,7],[92,8],[113,21],[135,3],[148,33],[182,5],[188,9],[198,3],[202,23],[241,1],[259,1],[269,1],[271,2],[276,2],[281,4],[289,15],[305,4],[319,23],[352,2],[355,5],[361,5],[376,4],[381,11],[404,10],[415,1],[438,1],[466,1],[497,1],[507,2],[510,2],[524,25],[550,42],[593,7],[604,1],[609,51],[662,6],[670,11],[684,8],[695,5],[701,5],[742,7],[754,7]]},"1008":{"position":[[0,47],[48,3],[57,6],[76,2],[79,5]]},"1010":{"position":[[0,1],[14,19],[34,3],[246,1],[468,25],[494,3],[589,1],[598,4],[646,1],[648,4]]},"1012":{"position":[[0,7],[8,2],[17,11],[29,16],[66,1],[68,10],[154,16]]},"1015":{"position":[[92,24]]},"1017":{"position":[[0,14],[36,1],[85,2],[88,6],[123,1],[173,2],[176,9],[229,2],[245,1],[247,1],[249,2],[252,4],[275,2],[278,5],[315,2],[318,5],[370,2],[373,9],[392,4],[397,2],[400,4],[429,2],[432,9],[442,2],[476,2],[489,2],[520,2],[530,2],[582,2],[698,2],[773,2],[800,3],[804,2],[883,2],[962,2],[1003,1],[1031,2],[1034,4],[1072,2],[1084,1],[1086,1],[1099,2],[1102,5],[1108,3],[1165,2],[1168,2],[1177,1],[1226,2],[1262,2],[1315,2],[1318,8],[1433,2],[1442,1],[1467,2],[1503,2],[1556,2],[1559,8],[1674,2],[1684,1],[1738,2],[1741,3],[1745,2],[1748,2],[1764,3],[1825,2],[1828,2],[1839,1],[1859,2],[1862,5],[1874,1],[1928,2],[1938,1],[1940,7],[1948,1],[2016,2],[2067,1],[2153,2],[2156,2],[2159,2],[2170,1],[2172,6],[2201,1],[2203,1],[2227,1],[2229,1],[2269,2],[2272,2],[2275,2],[2278,1],[2307,1],[2309,1],[2399,2],[2402,1],[2472,2],[2475,1],[2535,2],[2538,2],[2541,2],[2544,1],[2568,1],[2570,1],[2600,2],[2603,1],[2670,2],[2673,2],[2676,2],[2679,2],[2682,11],[2723,1],[2795,2],[2805,1],[2856,2],[2879,1]]},"1020":{"position":[[0,29],[55,1],[57,1],[66,9],[76,11]]},"1022":{"position":[[0,8],[9,14],[65,1],[71,1],[128,1],[134,6],[141,5],[155,5],[186,1],[188,1]]},"1024":{"position":[[0,3],[14,14],[68,1],[79,1],[108,4],[113,2],[116,5],[126,5],[132,13],[161,1],[163,1],[174,6],[181,2],[184,14],[199,7],[220,4],[225,8],[321,4],[326,7],[347,8],[449,7],[465,12],[505,5],[534,4]]},"1027":{"position":[[0,19],[25,1],[32,11],[83,1],[85,1],[118,11],[130,13],[159,1],[161,1],[242,11]]},"1029":{"position":[[0,12],[16,6],[31,1],[39,1],[89,2]]},"1031":{"position":[[0,5],[21,1],[23,1],[34,16],[51,7]]},"1033":{"position":[[0,2],[10,4],[30,1],[32,1],[34,2],[37,8]]},"1035":{"position":[[0,12],[28,1],[30,1]]},"1037":{"position":[[0,35],[49,3],[110,2],[113,2],[124,1],[133,7],[147,1],[243,2],[253,1],[255,1],[311,7],[319,2],[343,5],[368,1],[454,2],[457,2],[460,2],[471,1],[495,1],[497,1],[506,5],[519,1],[521,1],[530,7],[557,2],[560,2],[563,2],[566,1],[575,5],[588,1],[590,1],[680,2],[683,1],[753,2],[756,1],[816,2],[819,2],[822,2],[825,1],[834,5],[847,1],[849,1],[879,2],[882,1],[949,2],[952,2],[955,2],[958,2],[983,1],[1055,2],[1065,1],[1116,2],[1119,3],[1123,5]]},"1039":{"position":[[0,4],[5,4],[10,8],[28,1],[30,1],[43,3],[100,2],[103,2],[112,1],[161,2],[197,2],[356,2],[365,1],[390,2],[426,2],[585,2],[595,1],[649,2],[652,3],[656,2],[659,2]]},"1042":{"position":[[257,12],[546,5]]},"1047":{"position":[[0,19],[160,22],[236,12],[249,5]]},"1049":{"position":[[49,2],[52,5],[58,3],[81,2],[84,5],[90,5],[96,3],[127,3],[161,2],[164,7],[172,3],[184,2],[187,6],[194,3],[207,3],[220,3],[247,2],[250,8],[263,2],[266,7],[274,3],[282,1],[284,1],[286,3],[301,2],[304,16],[321,3],[332,3],[354,2],[357,7],[365,3],[378,2],[381,7],[396,2],[399,5],[405,3],[437,2],[440,9],[463,2],[466,8],[485,2],[512,2],[515,12]]},"1051":{"position":[[30,18],[59,5],[65,5],[71,23]]},"1054":{"position":[[0,38]]},"1058":{"position":[[0,1],[23,1],[32,9],[57,1],[59,1],[61,2],[64,3],[103,1],[105,2],[108,3],[131,1],[189,1],[191,2],[194,3],[212,2],[299,2],[367,2],[370,3],[374,2],[401,2],[404,3],[408,2],[411,2],[414,4],[419,23]]},"1060":{"position":[[0,13],[14,13],[28,2]]},"1062":{"position":[[0,17],[76,39]]},"1064":{"position":[[0,26],[27,24],[52,14]]},"1066":{"position":[[0,55]]},"1068":{"position":[[0,27],[32,34],[67,10]]},"1070":{"position":[[0,11],[15,1],[17,16]]},"1072":{"position":[[0,48],[62,14],[84,39],[131,25]]},"1074":{"position":[[13,22],[49,1],[58,15],[81,54],[136,22],[159,3],[174,36],[215,11],[241,18],[266,25],[297,3],[301,8],[319,13],[355,7],[363,8],[379,7]]},"1076":{"position":[[0,6],[21,33],[69,8]]},"1078":{"position":[[0,4],[10,16],[49,11],[70,1],[72,2],[88,1],[90,1],[99,11],[120,1]]},"1080":{"position":[[0,3],[11,5],[25,1],[27,7],[54,1],[56,4],[84,1],[86,9],[96,3],[100,1],[102,2],[110,1],[121,6],[128,18],[147,3],[158,5],[172,1],[174,7],[201,1],[203,4],[231,1],[233,9],[243,3],[247,1],[249,2],[257,1],[268,6],[275,18],[294,2],[297,18]]},"1082":{"position":[[0,15],[31,1],[33,7],[47,1],[49,3],[60,6],[80,16],[97,20]]},"1084":{"position":[[53,1],[66,7],[126,1],[128,2],[136,3],[145,15],[177,1],[179,10],[231,1],[255,1],[257,2],[277,1],[279,4],[371,1],[373,5],[384,1],[398,1],[428,1],[430,2],[439,2],[532,3],[557,2],[617,2]]},"1086":{"position":[[0,29],[35,6],[42,3],[61,5],[67,15],[95,6]]},"1088":{"position":[[7,26],[43,7],[58,3],[62,9],[72,12],[85,5],[116,6],[123,33],[157,9],[175,7],[183,9],[193,2],[231,8],[256,4]]},"1090":{"position":[[0,31]]},"1092":{"position":[[0,33],[34,7],[61,5],[82,11],[99,15],[121,37],[159,18],[184,11],[495,12],[578,2],[596,18],[641,20],[677,11],[689,22],[729,14],[744,16],[801,1],[822,1],[855,1],[964,4],[985,2],[1013,2],[1034,3],[1038,15],[1066,17],[1090,28],[1135,2],[1138,23],[1167,11],[1194,18],[1248,1],[1269,1],[1302,1],[1638,2],[1673,3],[1677,13],[1717,1],[1738,1],[1771,1],[2080,8],[2121,3],[2125,5],[2131,16],[2148,2],[2192,10],[2203,10],[2232,1],[2234,1],[2236,1],[2346,1],[2348,2],[2470,3],[2474,2],[2477,2],[2480,1],[2596,1],[2598,2],[2737,3],[2741,2],[2744,2],[2747,1],[2859,1],[2861,2],[2991,3],[2995,2],[2998,4],[3003,37],[3059,1],[3061,1],[3063,1],[3072,5],[3164,1],[3166,2],[3169,7],[3177,3],[3181,2],[3184,2],[3187,1],[3196,7],[3286,1],[3288,2],[3291,10],[3312,2],[3315,3],[3319,2],[3322,2],[3325,1],[3428,1],[3430,2],[3433,12],[3446,3],[3450,2],[3453,4],[3458,6],[3465,4],[3470,6],[3521,1],[3530,1],[3646,2],[3757,3],[3761,38],[3843,1],[3852,1],[3972,2],[3975,1],[4007,2],[4010,3],[4039,3],[4043,16],[4060,2],[4063,15],[4085,104],[4190,5],[4196,22]]},"1094":{"position":[[0,22],[42,36],[85,1],[446,1],[761,14],[782,1],[789,18],[808,63],[891,12],[908,8],[940,15],[967,61],[1044,2],[1052,4],[1160,2],[1204,2],[1246,2],[1284,2],[1325,2],[1368,2],[1410,2],[1413,1],[1434,13],[1448,12],[1487,1],[1743,23],[1772,21],[1794,17],[1831,7],[1845,1],[2120,1],[2376,7],[2384,5],[2390,5]]},"1096":{"position":[[0,41],[42,12],[97,16],[120,4],[125,7],[137,4],[142,4],[147,1],[149,17],[167,17],[191,1],[203,1],[208,7],[222,2],[264,1],[266,1],[274,1],[276,2],[279,2],[282,5],[386,1],[388,2],[391,2],[407,1],[472,41],[514,7],[522,18]]},"1104":{"position":[[7,1],[22,1],[91,1],[148,1],[172,1],[235,8],[244,3]]},"1106":{"position":[[7,1],[21,1],[64,1],[66,2],[69,2],[72,1],[81,1],[83,2],[86,2],[124,2],[230,3],[234,4],[239,3],[243,3]]},"1108":{"position":[[0,1],[9,7],[17,3],[21,2],[24,2],[27,3],[31,2],[45,4],[74,1],[92,4],[131,6],[162,7],[219,4],[243,6],[288,6],[342,5],[371,1],[399,4]]},"1111":{"position":[[102,22]]},"1113":{"position":[[0,12]]},"1115":{"position":[[0,21],[22,25],[48,49],[206,17],[333,40],[374,2]]},"1118":{"position":[[296,2],[299,12],[325,1],[426,1],[465,1],[467,40],[508,5],[514,1],[516,43]]},"1122":{"position":[[104,8]]},"1124":{"position":[[18,28],[62,20]]},"1126":{"position":[[0,28],[29,1],[31,2],[124,18],[173,5]]},"1128":{"position":[[86,16],[118,5],[124,7],[132,12]]},"1132":{"position":[[190,8]]},"1135":{"position":[[8,4],[74,1]]},"1137":{"position":[[47,7],[55,18],[74,13]]},"1139":{"position":[[0,8],[9,9],[49,13],[77,10],[88,4]]},"1146":{"position":[[0,21],[22,31],[54,29],[84,14],[99,19],[119,18],[138,13],[181,21],[203,1],[289,2],[303,9],[313,23]]},"1148":{"position":[[0,12],[99,2]]},"1150":{"position":[[0,36],[79,20],[100,13],[270,18]]},"1152":{"position":[[0,21],[161,1],[163,4],[168,19],[290,18]]},"1154":{"position":[[137,15]]},"1156":{"position":[[0,15],[45,1],[47,21]]},"1158":{"position":[[0,17],[18,26],[45,19],[65,14],[276,31],[308,49]]},"1160":{"position":[[50,4]]},"1163":{"position":[[0,2]]},"1165":{"position":[[0,37],[38,4],[140,1],[166,1],[168,2],[180,1],[207,19],[296,1],[312,1],[320,1],[348,1],[350,1],[500,1],[511,1],[556,1],[591,1],[660,2],[717,1],[719,5],[789,1],[799,1],[816,1],[861,1],[863,10],[884,1],[905,1],[907,2],[928,1],[1037,8],[1058,2],[1105,2],[1177,2],[1215,1],[1278,7],[1286,7],[1294,4]]},"1176":{"position":[[175,24],[261,6]]},"1178":{"position":[[23,11],[270,16]]},"1182":{"position":[[0,50],[51,5],[57,61],[119,23],[371,4],[763,11],[775,22]]},"1184":{"position":[[0,4],[5,2],[8,2],[171,4],[176,63],[259,6],[266,35]]},"1190":{"position":[[4,11],[120,8]]},"1192":{"position":[[4,13],[53,20],[74,9]]},"1194":{"position":[[4,9],[52,9]]},"1196":{"position":[[52,11],[64,10],[75,7],[83,5],[89,21],[135,7]]},"1198":{"position":[[0,20],[21,5]]},"1200":{"position":[[92,10],[103,9],[157,5]]},"1202":{"position":[[51,18]]},"1204":{"position":[[110,19],[159,8],[168,11],[180,10]]},"1206":{"position":[[0,20],[21,11],[33,10],[44,18]]},"1208":{"position":[[0,14],[20,15]]},"1216":{"position":[[114,15],[130,10],[156,5]]},"1218":{"position":[[0,7],[8,7],[16,14]]},"1220":{"position":[[65,4],[70,26]]},"1223":{"position":[[73,1],[82,23],[106,14],[127,9],[144,4],[229,7],[243,8],[258,11],[276,5],[289,19],[316,3],[320,44],[371,26],[404,42],[447,7],[461,12],[480,8],[489,2],[492,10],[503,1],[511,10],[528,13],[544,6],[587,1],[608,1],[635,1],[637,1],[669,2],[692,1],[694,1],[712,1],[739,3],[743,4],[775,24],[800,1],[857,5],[876,11],[904,1],[931,3],[935,1],[937,10],[950,1],[954,4],[964,1],[972,27],[1007,5],[1046,6],[1059,7],[1079,8],[1093,12],[1112,6],[1141,2],[1160,12],[1181,15],[1203,1],[1218,10],[1245,1],[1292,3],[1296,1],[1298,5],[1311,8],[1331,4],[1341,5],[1357,1],[1369,7],[1377,12],[1397,6],[1404,5],[1417,8],[1437,4],[1447,5],[1463,1],[1475,7],[1483,4],[1494,3],[1505,10],[1523,23],[1553,3],[1570,10],[1597,1],[1678,3],[1682,1],[1688,14],[1709,23],[1744,9],[1761,21],[1783,5],[1795,3],[1806,7],[1829,1],[1852,3],[1863,21],[1892,4],[1897,1],[1906,3],[1917,4],[1939,3],[1960,1],[1962,1],[1971,3],[1982,4],[2003,3],[2028,1],[2030,2],[2040,8],[2139,1],[2150,1],[2159,1],[2200,2],[2225,1],[2256,2],[2259,2],[2262,3],[2284,3],[2296,21],[2318,1],[2324,4],[2338,2],[2362,11],[2374,1],[2394,3],[2405,3],[2418,4],[2431,7],[2439,14],[2475,9],[2491,3],[2502,2],[2505,2],[2514,1],[2528,2],[2552,4],[2575,19],[2601,3],[2620,3],[2624,9],[2648,21],[2741,2],[2748,2],[2760,11],[2780,3],[2790,40],[2838,1],[2848,1],[2856,1],[2870,16],[2893,21],[2920,3],[2962,6],[2969,7],[2984,20],[3017,9],[3033,3],[3049,3],[3089,1],[3110,1],[3137,1],[3139,1],[3171,2],[3174,1],[3191,1],[3207,1],[3248,1],[3290,1],[3308,1],[3317,1],[3369,2],[3393,2],[3396,2],[3399,1],[3410,1],[3425,1],[3452,1],[3818,2],[3821,2],[3824,11],[3843,21],[3871,8],[3887,10],[3904,6],[3917,1],[3925,10],[3943,14],[3965,1],[3973,3],[3983,20],[4004,2],[4014,6],[4047,5],[4059,11],[4077,4],[4088,10],[4130,7],[4145,3],[4149,8],[4167,5],[4181,44],[4233,6]]},"1225":{"position":[[0,15],[25,3],[37,42],[80,51]]},"1227":{"position":[[11,1],[51,1],[65,6]]},"1229":{"position":[[11,1],[52,1],[102,7],[110,2],[123,3],[154,17],[186,1],[211,44]]},"1231":{"position":[[0,145]]},"1233":{"position":[[0,67],[68,51]]},"1235":{"position":[[0,20],[27,3],[87,16],[128,7],[152,4]]},"1237":{"position":[[0,6],[14,12],[27,13],[48,8],[106,20],[133,27],[167,23],[191,1],[200,10],[234,1],[243,1],[321,3],[325,5],[342,5],[359,4],[371,15],[399,2],[424,6]]},"1239":{"position":[[0,30],[36,3],[44,16],[67,11],[85,12],[134,1],[155,1],[182,1],[184,1],[231,2],[234,1],[304,3],[320,5],[334,3],[353,1],[369,1],[410,1],[431,1],[437,1],[508,3],[512,1],[514,11],[530,1],[536,14],[551,5],[563,2],[573,3],[586,21],[617,1],[632,1],[648,1],[650,1],[672,1],[678,1],[693,1],[695,2],[698,8],[707,6],[720,14],[771,1],[792,1],[819,1],[821,1],[868,2],[871,1],[888,1],[904,1],[945,1],[966,1],[972,1],[1043,3],[1047,1],[1065,1],[1074,1],[1126,2],[1150,2],[1153,2],[1156,1],[1167,1],[1182,1],[1198,1],[1200,1],[1222,1],[1228,1],[1243,1],[1609,2],[1612,2]]},"1241":{"position":[[0,49],[66,11],[112,1],[126,1],[128,1],[218,2],[232,1],[239,1],[260,1],[278,1],[305,2],[319,3],[334,2],[348,3],[364,1],[385,1],[387,1],[403,5],[411,22],[442,1],[452,4],[463,3],[474,5],[571,1],[580,4],[592,11],[613,1],[628,1],[691,1],[700,1],[711,1],[713,1],[723,1],[730,1],[739,1],[755,1],[757,1],[779,1],[785,1],[793,1],[802,1],[804,2],[807,8],[816,5],[834,15],[857,21],[894,1],[910,1],[969,2],[984,1],[994,1],[1007,1],[1028,1],[1034,1],[1105,3],[1109,1]]},"1244":{"position":[[6,12],[38,6],[60,1],[66,2],[81,3],[94,10],[115,6],[127,1],[263,8],[272,9],[377,146]]},"1246":{"position":[[0,5],[6,11]]},"1248":{"position":[[28,7],[41,10],[60,6],[71,38],[118,5],[136,2],[151,2],[154,1],[161,10],[182,9],[196,3],[213,1],[285,1],[324,1],[348,3],[376,1],[407,1],[630,1],[677,1],[703,1],[752,1],[774,1],[781,10],[801,9],[814,3],[863,1],[874,1],[883,1],[913,3],[922,3],[936,2],[977,1],[995,1],[1012,3],[1016,1],[1027,1],[1042,1],[1069,1],[1435,2],[1475,1],[1486,1],[1495,1],[1556,2],[1656,2],[1659,4],[1715,1],[1788,4],[1793,9],[1808,5],[1823,6],[1911,12],[1934,11]]},"1251":{"position":[[6,22],[40,4],[51,21],[76,17],[100,17],[134,8],[186,1],[197,1],[206,1],[371,2],[374,4],[379,5],[411,2],[613,20],[634,11],[736,2],[739,3],[755,3],[759,4],[790,2],[793,3],[809,3],[813,5],[819,1],[825,8],[845,24],[876,9],[897,30],[928,4],[946,11],[978,19],[1004,11],[1030,2],[1033,53],[1090,3]]},"1253":{"position":[[0,16],[30,31],[66,13],[86,10],[97,15]]},"1255":{"position":[[50,1],[61,1],[70,1],[100,3],[109,3],[123,2],[126,2],[160,1],[178,6],[192,18],[211,1],[217,12],[238,1]]},"1257":{"position":[[0,6],[13,9],[30,34],[101,1],[119,1],[136,3],[140,1],[151,1],[166,1],[193,1],[559,2],[562,2]]},"1259":{"position":[[0,24],[60,1],[71,1],[80,1],[141,2],[241,2],[244,2]]},"1261":{"position":[[0,13],[20,13],[40,5],[53,4],[58,1],[66,3],[83,23],[113,1],[120,1],[129,3],[169,1],[187,1],[214,3],[218,1],[220,4],[225,2],[235,4],[247,4],[263,3],[286,12],[336,1],[347,1],[356,1],[415,2],[418,2],[421,4],[426,18],[445,10],[461,4],[472,9],[489,2],[498,8],[513,23]]},"1263":{"position":[[0,26],[29,5],[35,6],[49,3],[62,8],[78,10],[126,1],[137,1],[146,1],[193,2],[196,1],[213,3],[246,2],[249,2],[252,25],[311,17],[340,4],[345,14],[365,17],[383,13],[409,2],[428,5],[446,2],[465,4],[478,2],[486,7],[500,21],[522,2],[525,7],[588,8],[604,17],[626,12],[645,13],[659,5],[671,10],[693,4],[715,18],[785,8],[800,15],[829,4],[846,13],[956,1],[958,2],[1043,8],[1058,15],[1118,1],[1139,1],[1166,1],[1168,1],[1170,2],[1173,6],[1193,1],[1195,1],[1206,1],[1215,1],[1256,2],[1306,2],[1309,2],[1312,10],[1330,3],[1341,24],[1372,4],[1377,1],[1388,5],[1411,3],[1433,1],[1449,9],[1471,2],[1504,10],[1525,1],[1535,1],[1542,6],[1561,3],[1572,8],[1590,11],[1639,1],[1660,1],[1687,1],[1689,1],[1691,2],[1694,6],[1714,1],[1716,1],[1727,1],[1736,1],[1777,2],[1807,4],[1841,2],[1844,2],[1847,8],[1873,11]]},"1265":{"position":[[0,4],[69,11]]},"1267":{"position":[[6,38],[45,30],[82,16],[110,3],[138,1],[140,2],[143,6],[154,6],[287,3],[302,4],[340,30],[392,9],[418,2],[423,6],[434,5],[456,12],[480,9],[527,3],[537,12],[555,11],[573,5],[588,7],[605,21],[632,6],[639,16],[661,6],[674,27],[702,3],[713,23],[742,11],[765,3],[813,16],[857,9]]},"1269":{"position":[[0,11],[16,4],[30,5],[60,1],[100,1],[117,2],[132,2],[135,6],[148,5],[154,3],[216,1],[232,3]]},"1271":{"position":[[0,1],[8,2],[31,15],[49,1],[55,2],[68,1],[74,6],[81,2],[88,5],[142,1],[158,12],[194,19],[220,14],[237,17],[255,2],[287,1],[303,34],[352,10],[363,12],[392,1],[423,1],[479,2],[577,1],[602,3],[634,1],[652,6],[669,2],[716,1],[756,1],[773,2],[788,5],[794,8],[811,6]]},"1273":{"position":[[0,15],[26,4],[37,9],[53,14],[84,17],[113,2],[116,4],[185,6],[212,7],[264,19],[284,5],[296,5],[307,7],[320,7],[334,3],[344,1],[350,3],[362,12],[381,5],[397,2],[406,11],[424,1],[430,2],[441,20],[462,10],[479,23],[507,16],[549,10],[583,12],[600,12],[633,19],[658,4],[679,1],[817,2],[843,2],[867,6],[881,15],[937,1],[939,2],[942,6],[953,6],[1016,10],[1035,2]]},"1275":{"position":[[0,9],[10,3],[19,14],[44,2],[54,12],[78,5],[104,7],[172,5],[198,3],[202,3],[233,9],[249,13],[270,23],[294,6],[310,8],[330,1],[338,5]]},"1277":{"position":[[0,1],[6,16],[34,4],[57,1],[59,2],[62,2],[71,1],[98,1],[105,1],[149,3]]},"1279":{"position":[[0,2],[14,19],[45,3],[49,3],[53,3],[57,2],[64,21],[89,14],[115,24],[161,29],[202,9],[223,21],[256,43],[304,18],[342,1],[356,2],[372,1],[414,1],[416,2],[525,3]]},"1281":{"position":[[0,22],[124,12],[137,4],[146,3],[156,19],[182,12],[212,1],[231,2],[254,2],[294,3],[319,4],[358,1],[372,2],[388,1],[430,1],[432,2],[455,6],[533,1],[539,1],[552,1],[554,3],[558,3]]},"1283":{"position":[[0,2],[14,6],[34,11],[50,4],[77,2],[108,1],[117,14],[132,6],[143,6],[194,16],[225,1],[247,2],[269,2],[274,1],[290,6],[322,3]]},"1285":{"position":[[0,11],[18,16],[74,26]]},"1287":{"position":[[37,7],[56,9],[73,5],[81,14],[133,1],[144,1],[190,4],[241,3]]},"1289":{"position":[[0,18],[35,11],[53,3],[77,2],[102,14],[124,8],[141,3],[155,19],[179,8],[188,17],[210,3],[231,24],[262,1],[264,2],[267,21],[289,54],[355,9],[402,1],[423,1],[447,1],[461,1],[472,1],[531,4],[575,3]]},"1291":{"position":[[0,32],[37,6],[81,1],[96,1],[113,1],[115,2],[118,2],[121,1],[171,2],[183,1],[192,1],[272,2],[275,4],[319,3]]},"1293":{"position":[[0,5],[9,6],[28,4],[44,4],[68,7],[135,7],[188,7],[196,2]]},"1295":{"position":[[0,3],[10,11],[30,16],[47,2],[56,13],[80,6],[109,3],[122,6],[140,24],[187,3],[220,8],[233,35],[292,45],[373,1],[388,1],[398,2],[401,1],[458,2],[470,1],[479,1],[563,2],[566,4],[595,3]]},"1297":{"position":[[0,12],[46,22],[69,10],[98,16],[141,13],[161,8],[181,13],[197,5],[203,8],[235,37],[273,3],[283,14],[302,4],[307,4],[332,15],[380,3],[390,14],[445,38],[488,6],[495,23],[576,2],[651,18],[676,22],[706,32]]},"1299":{"position":[[0,26],[33,6],[64,17],[88,11],[106,4],[115,19],[139,2],[201,1],[209,1],[211,1],[260,2],[275,1],[277,2],[280,2],[283,1],[311,2],[314,1],[323,1],[362,1],[366,2],[369,3],[373,2],[396,1],[413,2],[416,1],[463,2],[466,2],[476,1],[487,1],[496,1],[663,2],[666,4],[704,3]]},"1301":{"position":[[0,22],[29,39],[80,3],[84,8],[124,1],[139,6],[157,3],[179,5],[197,18],[224,7],[241,1],[255,21],[277,29],[325,26],[367,33],[407,21],[429,20],[462,8],[471,24],[496,98],[604,11],[616,37],[663,32],[705,3],[709,2],[712,36],[758,21]]},"1304":{"position":[[6,10],[28,11]]},"1306":{"position":[[6,6],[16,31],[54,15],[70,6]]},"1308":{"position":[[0,25],[30,6],[48,30],[83,3]]},"1310":{"position":[[0,23],[30,18],[55,5],[66,11],[91,9]]},"1312":{"position":[[6,8],[24,30],[59,6],[95,1],[106,3],[110,2],[113,2],[190,1],[201,1],[293,3],[357,12],[383,14],[405,5],[417,7],[441,14],[461,12],[479,5],[491,10],[515,5],[537,7],[610,1],[640,1]]},"1315":{"position":[[100,5]]},"1319":{"position":[[7,1],[16,1],[18,3],[30,3],[50,3],[54,1],[56,1]]},"1321":{"position":[[9,1],[24,3],[34,1],[36,2],[39,9],[58,1],[153,1],[162,2],[165,4],[199,1],[261,1],[268,1],[320,1],[358,1],[377,2]]},"1323":{"position":[[49,1],[142,17],[176,3],[187,2],[200,2],[219,2],[245,1],[250,1],[299,1],[333,1],[346,1],[353,1],[360,1],[389,1],[402,1],[409,1],[434,2],[437,9],[460,1],[504,1],[543,3],[551,1],[553,10],[564,2],[593,9],[603,3],[639,1],[646,1],[659,1],[680,1],[700,2],[703,8],[754,2],[757,11],[783,1],[794,2],[797,1],[799,2],[802,7],[810,2],[845,1],[886,2],[903,2],[906,1],[921,2],[930,1],[932,3],[1051,1],[1062,2],[1065,1],[1067,2],[1070,7],[1078,2],[1113,1]]},"1325":{"position":[[120,1],[144,1],[189,1],[235,1],[244,2],[266,1],[277,2],[280,1],[303,1],[311,2],[342,1],[385,2],[409,1],[495,22]]},"1327":{"position":[[0,16],[162,9],[244,2],[247,1]]},"1334":{"position":[[0,18],[174,1],[176,8],[195,1],[203,6],[221,1],[228,6],[249,1],[294,13],[308,3],[351,8],[398,2],[401,7],[463,8],[531,2]]},"1336":{"position":[[0,46],[71,1],[92,7],[112,1],[151,13],[180,1],[259,8],[268,1]]},"1338":{"position":[[71,16],[101,8],[123,1],[162,1],[191,11],[211,1],[272,13],[299,1],[342,2],[345,8],[367,1],[411,15],[451,6],[458,3],[477,1],[546,1],[548,7],[618,7]]},"1340":{"position":[[42,8],[51,3],[68,1],[104,1],[161,1],[217,1],[260,10],[288,1],[334,2],[337,6],[368,6],[375,3],[392,1],[452,1],[454,7],[573,1],[606,1],[648,1],[679,2],[682,8],[703,1],[755,8],[798,1],[811,8],[827,1],[841,4],[846,6],[868,1],[892,1],[904,6],[947,1],[1014,1],[1057,9],[1084,1],[1130,2],[1133,6],[1164,6],[1171,3],[1188,1],[1248,1]]},"1342":{"position":[[148,57],[320,2],[323,8],[332,2],[389,11],[415,1],[440,8],[449,2],[452,3],[456,2],[477,1],[498,1],[514,1],[527,1],[535,1],[537,2],[547,2],[550,10],[561,2],[574,2],[577,20],[598,2],[606,2],[641,2],[648,2],[707,1],[730,2],[733,14],[762,1],[785,2],[825,1],[862,2],[865,19],[893,1],[941,1],[966,1],[975,2],[1002,1],[1050,1],[1076,1],[1080,1],[1085,2],[1149,2],[1152,10],[1178,1],[1241,57],[1321,2],[1327,1],[1358,1],[1381,2],[1407,2],[1410,5],[1416,1],[1418,25],[1463,1],[1471,6],[1503,5],[1509,1],[1548,5],[1572,5],[1605,2],[1608,1],[1629,1],[1638,6],[1666,2],[1669,5],[1675,1],[1704,8],[1713,1],[1741,2],[1744,5],[1750,1],[1778,8],[1787,1],[1801,2],[1804,1],[1825,1],[1834,6],[1841,3],[1852,1],[1854,1],[1856,1],[1863,1],[1865,7],[1895,3]]},"1344":{"position":[[0,21],[35,1],[37,7],[55,1],[62,6],[80,1],[87,6],[106,1],[146,1],[166,8],[211,8],[268,2],[271,6]]},"1346":{"position":[[0,30],[46,8],[69,1],[119,2],[122,3],[161,2],[164,23],[214,1],[219,2],[222,15],[266,1],[339,1],[345,2],[348,16],[389,1],[398,8],[495,6],[549,8],[579,10],[590,2],[593,7],[617,9],[638,1],[659,2],[673,4],[688,1],[701,2],[733,1],[772,1],[857,1],[864,6],[880,1],[945,4],[972,1],[1014,8],[1035,1],[1088,1],[1093,6],[1148,2],[1151,4],[1172,6],[1179,2],[1192,1],[1194,6],[1220,1],[1321,2],[1324,6],[1331,1]]},"1351":{"position":[[15,1]]},"1353":{"position":[[61,1],[105,1],[159,21],[311,1],[343,1],[404,1],[446,1],[469,1],[520,1],[595,4]]},"1356":{"position":[[76,7]]},"1360":{"position":[[63,22]]},"1364":{"position":[[0,7],[54,11],[132,5],[148,9],[173,4],[185,2],[192,26],[282,31],[348,6],[389,4],[400,2],[407,11],[424,2],[460,13]]},"1366":{"position":[[0,26],[57,2],[386,1],[418,1],[520,2],[538,2],[668,1],[1164,2],[1260,1],[1536,2],[1632,4],[1730,2],[1828,2],[1925,2],[2091,6],[2247,4],[2536,2],[2541,7],[2551,1],[2581,2],[2586,2],[2591,1],[2593,2],[2777,1],[2824,7]]},"1368":{"position":[[414,1],[416,1],[424,4],[459,2],[462,1],[515,2],[518,1],[574,2],[577,1],[624,2],[627,1],[680,2],[683,1],[733,2],[736,1],[789,1],[791,3],[795,16]]},"1370":{"position":[[0,3],[11,2],[14,5],[26,26],[78,43],[129,2],[138,1],[155,34]]},"1373":{"position":[[0,6],[20,11],[87,7],[102,2],[111,10],[140,1],[154,20],[197,9],[223,10],[322,3],[338,1],[373,6],[414,1],[425,2],[447,14],[471,3],[486,5],[521,18],[585,1],[600,1],[637,2],[640,46],[732,1],[773,1],[797,2],[800,1],[809,1],[833,2],[875,2],[894,3],[906,1],[908,2]]},"1375":{"position":[[0,11],[37,3],[100,1],[152,4],[196,15],[257,1],[271,1],[273,3],[297,8],[332,1],[341,4],[359,9],[375,27],[442,2]]},"1377":{"position":[[0,10],[15,2],[18,28],[47,12],[75,4],[86,25],[118,6],[125,14],[170,1],[212,13],[284,6],[325,7],[339,6],[412,1],[423,1],[439,7]]},"1380":{"position":[[13,16],[68,7],[88,6],[117,4],[182,1],[205,1],[241,25],[312,1],[327,1],[360,2],[363,24]]},"1382":{"position":[[13,24]]},"1384":{"position":[[0,1],[15,14],[43,3],[64,14]]},"1386":{"position":[[7,1],[15,5],[27,4],[41,29],[95,2],[111,1],[144,43]]},"1389":{"position":[[4,3],[144,18]]},"1391":{"position":[[7,7],[20,6],[27,2],[32,19],[126,2],[129,2],[134,15]]},"1393":{"position":[[7,28],[40,4],[60,2],[88,1],[118,1],[142,3],[146,9],[174,12],[191,24],[220,15],[240,20],[261,3],[265,7],[278,8],[291,10],[306,3],[310,8],[325,13],[344,19],[368,5],[374,20],[405,1],[454,21],[499,1],[531,1],[542,6],[549,1],[551,1],[581,3],[585,25],[611,5],[632,17],[667,12],[682,7],[694,5],[731,33],[781,1],[787,3],[808,19],[836,3]]},"1395":{"position":[[0,19],[79,1],[111,1],[124,3],[128,2],[131,7],[139,17],[162,3],[172,11],[184,19],[208,3],[243,18],[266,20],[315,21],[386,2],[399,2],[429,1],[461,1],[470,1],[472,1],[480,3],[496,2],[499,1],[507,3],[516,2],[519,1],[527,7],[535,1],[537,1],[539,3]]},"1397":{"position":[[0,20],[26,18],[49,9],[162,1],[194,1],[221,2],[233,1],[260,2],[263,1],[278,1],[322,1],[324,3],[328,3],[347,20],[381,4],[390,22],[417,4],[430,26],[536,1],[568,1],[592,3],[596,5],[602,34]]},"1399":{"position":[[0,5],[10,73],[84,1],[90,22],[117,4],[126,9],[136,2],[139,4],[185,1],[224,1],[239,17],[262,2],[267,4],[282,5],[290,1],[321,71],[426,1],[428,2],[441,8],[450,2],[480,2],[483,2],[491,2],[556,9],[573,19],[615,2],[620,7],[638,2],[646,2],[654,17],[696,6],[705,1],[824,3],[855,1],[921,1],[953,1],[968,1],[970,1],[985,4],[990,2],[993,1],[1008,4],[1013,2],[1016,1],[1031,13],[1045,1],[1047,1],[1049,3],[1057,2],[1060,2],[1063,11],[1075,43],[1124,26],[1163,26],[1190,45],[1236,32]]},"1402":{"position":[[0,3],[35,1],[47,2],[50,4],[59,5],[70,14],[107,2],[114,6],[121,5],[131,35],[171,3],[179,18],[198,2],[205,7],[221,4],[230,29],[265,13],[279,5],[294,2],[306,1],[308,2],[328,1],[330,2],[348,2],[366,2],[386,2],[408,29],[442,20]]},"1404":{"position":[[0,3],[8,9],[23,7],[40,3],[48,11],[69,38],[108,2],[127,1],[129,1],[136,3],[140,9],[164,1],[191,8],[227,2],[237,2],[240,2],[250,2],[276,1],[286,2],[289,2],[309,1],[317,2],[320,2],[325,39],[370,2],[382,20],[421,1],[428,3],[434,32],[513,1],[528,3],[581,3],[598,10],[669,1],[671,1],[736,5],[758,8],[771,8],[812,2],[817,3],[827,5],[835,1],[861,1],[895,4],[913,13],[936,10],[947,10],[967,8],[985,1],[987,1],[1002,1],[1051,3],[1060,2],[1063,2],[1077,3],[1116,2],[1119,2],[1188,1],[1190,2],[1193,6],[1207,7]]},"1406":{"position":[[0,2],[7,45],[57,9],[71,49],[121,2],[132,21],[170,1],[177,2],[198,2],[201,1],[203,2],[213,2],[219,2],[241,1],[243,1],[253,5],[259,2],[272,27],[316,1],[341,9],[355,3],[367,5],[382,13],[405,2],[408,2],[431,1],[457,2],[497,29],[581,1],[635,6],[642,54]]},"1408":{"position":[[0,3],[11,2]]},"1410":{"position":[[0,56],[76,2],[125,43],[177,37],[215,23]]},"1412":{"position":[[40,3],[90,3],[131,1],[165,1],[184,2],[197,1],[199,2],[202,5],[241,2],[244,1],[246,2],[256,2],[262,2],[314,1],[316,3],[320,13],[389,1],[398,3],[434,2],[437,2],[458,1],[501,2],[504,2],[517,21],[561,7],[580,3],[584,8],[619,2],[641,3],[671,10],[701,39],[748,8],[771,14]]},"1414":{"position":[[0,32],[54,3],[84,2],[100,1],[128,2],[131,1],[182,2],[185,102],[296,12],[325,27],[353,22],[387,8],[406,1],[422,2],[425,1],[445,2],[448,29],[478,29],[572,1]]},"1416":{"position":[[4,17],[26,42],[129,12],[185,1],[216,1],[273,2],[283,1],[311,1],[327,1],[333,1],[335,1],[337,1],[339,1],[355,2],[383,1],[399,1],[416,1],[418,1],[420,1],[422,1],[428,1],[430,3],[434,28],[470,1],[501,1],[537,2],[550,1],[571,2],[574,1],[598,1],[600,1],[602,1],[604,1],[620,1],[622,3],[626,9]]},"1418":{"position":[[0,8],[39,2],[55,1],[67,1],[69,2],[93,2],[96,1],[120,1],[122,1],[124,1],[126,1],[142,2],[145,2],[180,1],[192,1],[211,2],[229,1],[254,1],[280,1],[282,4],[287,3],[291,5],[309,1],[349,1],[363,9]]},"1420":{"position":[[0,39],[44,2],[53,56],[110,3],[224,2],[229,2],[257,8],[268,3],[274,31],[499,1],[539,1],[551,3],[619,2],[629,1],[631,2],[634,2],[648,13],[708,1],[722,1],[786,1],[788,2],[809,2],[812,1],[814,2],[830,5],[843,10],[854,2],[857,15],[887,3],[891,2],[899,23],[923,2],[939,2],[942,5],[962,4],[967,2],[1031,1],[1065,2],[1077,1],[1099,2],[1102,1],[1135,3],[1143,1],[1157,1],[1203,1],[1205,2],[1215,1],[1229,1],[1252,1],[1320,1],[1332,1],[1369,2],[1396,1],[1408,1],[1443,1],[1445,1],[1453,2],[1456,1],[1471,9],[1487,12],[1500,5],[1558,1]]},"1422":{"position":[[0,3],[11,2]]},"1424":{"position":[[0,5],[34,6],[55,10],[72,8],[86,14],[168,2],[184,2],[211,1],[247,1],[256,1],[258,1],[275,2],[278,1],[295,1],[297,1],[299,3],[303,3],[307,1],[313,1],[319,1],[327,16],[359,22],[438,2],[455,2],[460,2],[469,2],[474,2],[490,2],[517,1],[553,1],[587,1],[589,1],[606,2],[609,1],[626,1],[628,1],[630,3],[634,3],[638,1],[653,1],[668,5],[677,2],[683,12],[707,7]]},"1426":{"position":[[0,5],[12,8],[96,2],[105,2],[156,1],[166,1],[247,1],[249,3],[253,3],[257,13],[280,2],[283,8],[330,2],[338,3],[342,2],[431,14],[491,2],[500,3],[504,2],[512,3],[516,2],[609,9],[633,20],[665,7]]},"1428":{"position":[[0,1],[6,6],[59,5],[69,45],[123,1],[144,29],[178,2],[181,10],[192,8],[201,3],[209,45],[319,2],[324,2],[337,8],[352,3],[382,28],[411,4],[436,4],[447,26],[478,20],[505,1],[525,2],[542,9],[556,1],[562,3]]},"1431":{"position":[[4,44],[106,17],[130,13],[181,3]]},"1433":{"position":[[0,41],[60,1],[130,1],[170,1],[207,9],[221,4],[256,4],[265,57]]},"1435":{"position":[[0,2],[22,13]]},"1437":{"position":[[0,70],[71,3],[123,1],[134,1],[163,1],[187,2],[190,1],[237,1],[253,1],[257,3],[263,2],[266,2],[269,12],[282,7],[296,4],[301,10],[388,1],[396,2],[413,2],[444,1],[471,1],[513,1],[529,1],[533,3],[539,2],[542,2]]},"1439":{"position":[[6,27],[67,2]]},"1441":{"position":[[0,3],[24,1],[37,20]]},"1443":{"position":[[4,15],[25,1],[50,5],[61,7],[74,10],[91,35],[178,2],[194,13],[214,25],[245,7],[316,2],[324,2]]},"1445":{"position":[[0,24],[106,12],[131,7],[139,53],[321,4],[331,18],[356,32],[389,8],[403,8],[597,1],[790,5],[833,13],[852,5],[863,20],[896,22],[946,1],[958,2],[967,2],[976,3],[1043,2],[1106,1],[1121,3],[1132,1],[1134,1],[1167,2],[1170,1],[1208,2],[1211,1],[1242,1],[1244,2],[1261,2],[1273,1],[1296,2],[1299,1],[1366,2],[1386,1],[1388,2],[1391,1],[1393,3]]},"1453":{"position":[[29,15]]},"1462":{"position":[[0,3],[11,2]]},"1464":{"position":[[5,30],[43,8],[92,4],[114,3]]},"1466":{"position":[[0,2],[8,41],[61,19],[109,3]]},"1468":{"position":[[0,5],[13,5],[31,3],[60,1],[128,8],[142,2],[155,17]]},"1470":{"position":[[6,2],[42,10],[69,3],[107,3],[145,3],[191,3],[212,7],[225,2],[238,6]]},"1472":{"position":[[4,37],[46,40],[113,3],[303,11],[363,16],[393,34],[499,3],[811,1],[835,2],[847,1],[875,2],[878,1],[902,1],[919,3],[934,1],[944,1],[957,1],[972,15],[992,45],[1052,3],[1082,3],[1311,23],[1403,3],[1751,1],[1775,2],[1787,1],[1815,2],[1818,1],[1842,1],[1859,3],[1874,1],[1884,1],[1897,1],[1923,20]]},"1474":{"position":[[0,17],[25,10],[64,6],[78,13],[105,10],[152,3],[167,7]]},"1476":{"position":[[5,47],[58,49],[120,35],[160,5],[176,10],[194,29],[231,19],[256,3]]},"1478":{"position":[[4,7],[17,1],[26,1],[33,1],[53,3],[62,7]]},"1481":{"position":[[0,14],[26,2],[29,6],[36,6],[58,2],[75,26],[109,27],[159,2]]},"1483":{"position":[[0,18],[24,10],[53,3],[77,2],[156,16],[178,14],[200,4],[210,9],[220,3],[231,12],[249,16],[270,12],[288,19]]},"1485":{"position":[[9,7],[32,12],[52,3],[90,4],[105,13],[132,16],[208,2],[228,3],[247,1],[276,13],[299,4]]},"1487":{"position":[[0,24],[59,7],[78,6],[85,2],[95,1],[99,4],[107,1],[115,1],[122,4],[188,1],[190,1],[203,9],[217,11],[240,39],[280,2],[285,10],[298,3],[308,1],[312,4],[319,17],[339,3],[351,1],[368,1],[370,2],[377,17],[395,10],[406,2],[414,1],[421,26]]},"1489":{"position":[[0,2],[16,3],[23,5],[52,7],[71,3],[82,49],[186,8],[200,11],[216,3]]},"1491":{"position":[[38,12],[96,3],[105,6],[119,7],[142,4],[151,5],[157,6],[169,8],[182,3],[222,28]]},"1493":{"position":[[6,2],[9,1],[17,13],[42,13],[56,2],[60,40],[136,3],[145,3],[163,6],[181,34],[220,5],[289,29],[354,3],[363,8],[382,3],[413,4]]},"1495":{"position":[[0,22],[39,36]]},"1497":{"position":[[0,31],[47,10],[58,2],[63,10],[94,1],[110,3],[119,36],[156,1],[162,6],[169,6],[181,33],[225,10],[236,2],[240,1],[246,15],[356,3]]},"1499":{"position":[[0,3],[15,6],[22,1],[62,5],[73,11]]},"1501":{"position":[[3,18],[26,3],[53,11],[89,40],[134,14],[205,1],[214,1],[221,18]]},"1503":{"position":[[0,2],[5,4],[46,2],[79,7],[116,3]]},"1505":{"position":[[0,2],[5,4],[53,2],[95,7],[142,3],[151,11],[168,6],[175,1],[177,1],[179,1],[181,2],[194,15],[214,68]]},"1507":{"position":[[0,4],[22,1],[202,1],[382,1],[564,1],[642,1],[727,1],[815,1],[900,1],[981,1],[1066,1],[1130,1],[1194,1],[1239,2],[1247,2],[1285,2],[1295,2],[1325,2],[1328,4],[1333,2],[1336,1],[1341,1],[1406,2],[1409,1],[1436,2],[1446,1],[1455,3],[1464,1],[1508,2],[1516,2],[1554,2],[1564,2],[1594,2],[1597,4],[1602,2],[1605,1],[1610,1],[1675,2],[1714,1],[1769,2],[1779,2],[1815,2],[1818,4],[1823,2],[1826,1],[1831,1],[1882,2],[1892,2],[1925,2],[1928,4],[1933,2],[1936,2],[1939,1],[1969,2],[1979,1],[1988,3],[1997,1],[2051,2],[2061,2],[2097,2],[2100,4],[2105,2],[2108,1],[2113,1],[2164,2],[2174,2],[2207,2],[2210,4],[2215,2],[2260,1],[2320,2],[2330,2],[2371,2],[2374,4],[2379,2],[2382,1],[2387,1],[2438,2],[2448,2],[2481,2],[2484,4],[2489,2],[2492,2],[2495,1],[2527,2],[2537,1],[2546,3],[2555,1],[2614,2],[2624,2],[2665,2],[2668,4],[2673,2],[2676,1],[2681,1],[2732,2],[2742,2],[2775,2],[2778,4],[2783,2],[2827,1],[2913,1],[2918,1],[2999,2],[3002,1],[3033,1],[3040,1],[3125,1],[3130,1],[3251,1],[3339,1],[3344,1],[3425,2],[3428,1],[3458,1],[3465,1],[3552,1],[3557,1],[3638,2],[3672,1],[3677,1],[3731,2],[3739,2],[3774,2],[3795,2],[3798,1],[3804,1],[3893,1],[3899,1],[3985,1],[3991,1],[4080,3],[4112,1],[4117,1],[4171,2],[4179,2],[4214,2],[4235,2],[4238,1],[4244,1],[4333,1],[4339,1],[4425,1],[4431,1],[4520,6],[4533,2]]},"1511":{"position":[[106,2],[111,4],[118,1],[148,2],[153,4],[160,1],[183,1],[185,1],[187,2],[196,2],[222,1],[232,1],[557,6],[564,1],[572,1],[789,2],[792,23],[816,9],[826,2],[870,9]]},"1515":{"position":[[830,1],[952,1],[965,1],[967,17],[1084,1],[1086,2],[1097,20],[1126,12],[1139,2],[1142,9],[1171,1],[1182,3],[1343,1],[1351,1],[1400,1],[1402,6],[1420,1],[1496,8],[1579,8],[1617,1],[1660,1],[1662,8],[1687,1],[1692,1],[1720,1],[1726,1],[1767,1],[1774,1],[1815,1]]},"1518":{"position":[[15,30],[54,28],[83,22],[106,15],[133,1],[135,17],[252,1],[254,13],[287,1],[298,3],[459,1]]},"1520":{"position":[[21,16],[38,13]]},"1522":{"position":[[5,10],[20,37],[68,23],[97,7],[113,12],[137,1],[139,2],[142,3],[146,2],[185,8],[223,1],[266,1]]},"1526":{"position":[[0,40],[41,2]]},"1528":{"position":[[0,20],[71,10],[98,1],[116,14]]},"1530":{"position":[[0,69],[75,1],[80,1],[85,1],[89,1]]},"1532":{"position":[[0,21],[22,20],[93,7],[105,12],[123,1],[129,2],[136,11]]},"1535":{"position":[[176,2],[179,9]]},"1537":{"position":[[0,11],[73,2],[76,12],[142,2],[145,45]]},"1539":{"position":[[0,1],[7,27],[35,15],[51,2],[54,76],[137,35]]},"1543":{"position":[[0,37],[91,13],[105,46],[152,15],[168,12],[181,5]]},"1545":{"position":[[0,51],[61,20],[82,22],[145,38],[184,31],[216,2],[221,2],[233,18],[288,9],[307,14]]},"1547":{"position":[[0,31],[37,4],[160,5],[183,15],[212,1],[216,18],[240,33],[296,1],[395,27],[439,11],[549,7],[601,23],[632,6],[663,10],[692,59],[769,36]]},"1549":{"position":[[0,8],[14,6],[151,3],[162,40],[208,7]]},"1551":{"position":[[8,14]]},"1553":{"position":[[0,14],[50,3]]},"1555":{"position":[[0,3],[68,33],[106,59],[166,16],[210,3],[214,8]]},"1557":{"position":[[0,2],[10,5],[21,1],[31,3],[40,3],[49,22],[80,12],[93,3],[102,38],[380,73],[454,76]]},"1559":{"position":[[0,70]]},"1561":{"position":[[117,46],[164,11],[176,21],[203,22],[231,1],[246,9],[276,11],[288,7],[301,1],[310,6]]},"1563":{"position":[[0,17],[22,12],[46,48],[102,4],[116,3],[127,14],[147,3],[174,12],[192,12],[261,12],[281,5],[291,10],[313,11],[331,11],[348,4],[394,44],[450,22]]},"1565":{"position":[[0,34],[40,3],[49,15]]},"1570":{"position":[[0,18],[179,25]]},"1572":{"position":[[0,55],[62,4],[71,4],[164,3]]},"1576":{"position":[[0,13],[35,23],[59,10],[75,6],[89,8],[166,16],[239,35],[279,4],[287,13],[306,10],[325,29],[355,9],[365,21],[387,20]]},"1578":{"position":[[0,11],[16,51],[197,58]]},"1580":{"position":[[94,83]]},"1582":{"position":[[157,24]]},"1585":{"position":[[117,24],[151,25],[192,31]]},"1587":{"position":[[252,1],[261,18],[284,8],[293,22],[316,1],[318,63],[391,72],[469,34],[510,20],[538,12],[592,16],[611,5],[624,4],[636,12],[660,10]]},"1592":{"position":[[269,12],[337,19],[369,5],[409,16],[462,4],[508,3],[518,1],[527,10],[545,7]]},"1596":{"position":[[0,1],[7,9],[21,17]]},"1598":{"position":[[46,11],[58,2]]},"1600":{"position":[[31,8],[116,7]]},"1603":{"position":[[32,1],[34,11],[46,8],[55,8],[69,22],[110,5],[121,17]]},"1605":{"position":[[38,34],[77,11]]},"1609":{"position":[[0,1]]},"1613":{"position":[[0,1],[160,2],[163,6]]},"1616":{"position":[[4,38]]},"1618":{"position":[[4,29],[34,2],[39,2],[109,3],[120,13],[230,1],[261,7],[377,13]]},"1622":{"position":[[59,1],[80,2],[100,10],[115,28],[163,1],[184,2],[193,5],[232,2],[251,1],[264,2],[277,2],[283,4],[294,1],[296,18],[319,33],[393,2],[408,1],[421,2]]},"1624":{"position":[[4,32],[47,1],[55,1],[76,2],[100,19],[126,1],[136,1],[141,2],[185,1],[191,11],[236,2],[301,1]]},"1626":{"position":[[0,1],[6,1],[43,1],[50,1],[61,1],[79,2],[118,2],[124,1],[166,14],[192,1],[199,1],[210,1],[228,2],[267,2],[287,1],[323,3],[327,8],[347,1],[354,1],[365,1],[406,2],[439,2],[447,2],[461,24],[489,1],[503,8],[530,3],[545,6],[563,1],[570,1],[581,1],[622,2],[645,2],[653,4],[661,28],[701,2],[706,21]]},"1628":{"position":[[6,32],[47,1],[61,1],[71,1],[92,2],[103,17],[129,1],[135,1],[140,2],[176,15],[198,5],[217,1],[224,1],[235,1],[253,2]]},"1630":{"position":[[0,3],[8,7],[20,1],[36,3],[45,2],[57,1],[67,1],[84,1],[96,1]]},"1632":{"position":[[13,2],[67,1],[142,4],[147,2],[162,3],[183,12],[209,2]]},"1634":{"position":[[10,1],[46,14],[66,14],[91,2],[99,19],[135,2],[144,2]]},"1636":{"position":[[21,1],[36,1],[49,1],[58,12],[81,13],[107,2],[127,2],[147,2],[169,2],[191,2],[219,2],[228,4],[233,3],[242,2],[245,3],[255,2],[284,7],[292,8],[308,14],[325,1],[338,4]]},"1638":{"position":[[7,23],[37,1],[43,2],[55,1],[62,2],[74,1],[82,2],[85,4],[90,4],[101,1],[113,1],[125,1],[131,2],[134,7],[142,24],[173,1],[180,2],[192,1],[200,2],[208,9],[221,32],[258,1],[265,2],[288,14],[309,1],[313,3],[322,1],[339,1],[343,2],[359,1],[376,1],[380,3],[392,19],[420,1],[424,1],[436,1],[440,3],[455,1],[461,1],[465,1],[476,1],[480,4],[489,2],[503,16],[540,1],[563,2],[607,2],[617,14],[681,1],[686,2],[719,2],[732,5],[754,2],[774,1],[778,1],[783,2],[800,1],[805,1],[810,2],[823,8],[851,1],[855,1],[862,2],[869,3],[877,8],[895,1],[900,2],[915,2],[925,1],[930,2],[940,2],[948,2],[973,3],[992,13],[1023,2],[1040,2],[1060,2],[1088,23],[1123,11]]},"1640":{"position":[[36,1],[58,17],[87,1],[102,8],[126,2],[150,2],[170,2],[189,2],[207,2],[223,2],[246,2],[264,2],[282,2],[305,2],[331,2],[357,2],[389,2],[425,2],[458,2]]},"1642":{"position":[[7,8],[19,1],[29,10],[46,1],[60,1],[74,1],[83,20],[110,2],[121,2],[133,2],[144,2],[155,2],[158,7],[166,2],[169,8],[178,2],[181,8],[190,2],[204,2],[216,3],[236,2],[242,1],[260,3],[267,3],[271,10],[289,5],[301,1],[319,2],[324,27],[358,1],[368,1],[377,2],[391,1],[404,2],[421,1],[425,13],[439,1],[441,25],[467,14],[488,1],[508,2],[531,2],[558,2],[582,2],[603,18],[628,1],[638,1],[659,1],[676,1],[680,1],[688,2],[719,10],[735,10],[752,1],[754,1],[800,12],[813,3],[817,3],[827,1],[837,1],[858,1],[875,1],[879,1],[887,2]]},"1644":{"position":[[7,1],[22,33],[62,1],[82,1],[98,3],[105,2]]},"1646":{"position":[[7,1],[22,24],[53,1],[55,1],[78,2],[88,12],[101,2],[104,2],[119,9],[136,5],[171,33],[227,19],[282,15],[305,6],[329,25],[366,10],[387,17]]},"1649":{"position":[[0,8],[9,3],[22,1],[48,1],[71,1],[96,1],[106,4],[111,3],[176,2]]},"1651":{"position":[[0,1],[13,11],[33,1],[46,31],[78,17],[134,4],[147,1]]},"1653":{"position":[[12,16],[40,1],[105,2],[108,3]]},"1655":{"position":[[0,9],[10,13],[24,15],[51,1],[53,1],[83,1],[97,1],[113,1],[126,1],[128,2],[131,6],[147,5],[175,1],[177,1],[179,1],[181,1],[198,3]]},"1657":{"position":[[12,12],[38,7],[55,3],[66,3],[89,4],[99,3],[113,11],[130,13]]},"1659":{"position":[[0,13],[38,2],[68,2],[90,2],[115,3],[218,1],[287,1],[289,1],[319,1],[333,1],[396,1],[415,1],[417,1],[419,1],[421,1]]},"1661":{"position":[[0,16],[41,2],[49,1],[70,7],[199,1],[201,1],[231,1],[245,1],[263,1],[276,1],[300,1],[302,1],[304,1],[306,1],[323,5],[380,1]]},"1665":{"position":[[137,2],[206,1],[226,1],[242,2],[277,1],[288,3],[388,10],[434,2],[469,1],[522,2],[556,1]]},"1667":{"position":[[163,1],[244,1]]},"1669":{"position":[[11,16]]},"1671":{"position":[[15,8],[41,5],[52,2],[65,2],[73,2],[88,5]]},"1673":{"position":[[11,2],[42,3],[51,3],[55,3],[184,1],[188,1],[216,14],[234,6],[246,2],[254,8]]},"1675":{"position":[[0,9],[27,5],[115,1],[144,12],[157,4],[167,9],[194,8],[208,1],[301,1],[334,5],[340,3],[344,17]]},"1677":{"position":[[0,13],[104,1]]},"1679":{"position":[[0,7],[20,6],[106,1],[135,7],[147,12]]},"1683":{"position":[[11,29],[52,1],[57,2],[75,1],[86,2],[101,1],[132,2],[143,1],[183,2],[186,2]]},"1685":{"position":[[0,18],[19,21],[41,24],[72,1],[78,1],[102,11],[120,1],[128,1],[163,10]]},"1687":{"position":[[0,15],[23,2],[26,2],[31,1],[48,1],[53,2],[56,2],[70,1],[80,2],[83,2],[88,5]]},"1689":{"position":[[0,3],[16,1],[33,2],[53,1],[70,2],[73,5],[79,32],[123,1],[141,2],[163,1],[188,2],[210,1],[235,2],[238,8]]},"1691":{"position":[[11,9],[21,13],[42,1],[51,2],[65,1],[71,2],[74,5],[80,19],[106,1],[115,2],[132,1],[142,2]]},"1693":{"position":[[14,1],[29,1],[42,1]]},"1695":{"position":[[11,9],[21,11],[33,14],[53,17],[80,1],[111,18]]},"1697":{"position":[[11,10],[22,5],[39,8],[59,1]]},"1699":{"position":[[0,4],[16,1],[25,3],[40,6],[54,15],[77,2],[80,2],[83,2],[108,2],[111,2],[142,2],[145,2],[165,2],[168,2],[190,2],[193,2],[216,2],[219,2],[241,2],[244,2],[265,1],[270,2],[273,2],[297,8],[330,8]]},"1701":{"position":[[0,1],[13,12],[43,3],[70,2],[73,2],[101,12],[124,11],[154,1],[167,2],[170,2]]},"1703":{"position":[[0,3],[14,6],[21,15],[45,1],[47,3],[51,2],[54,2],[57,6]]},"1705":{"position":[[0,1],[20,1],[44,6],[69,9],[79,4],[89,1],[102,9],[127,9],[142,5],[159,1],[167,2],[170,2],[188,10],[209,5],[226,1],[239,2],[242,2]]},"1707":{"position":[[10,1],[17,12],[47,2],[71,2],[85,3],[99,2],[112,2],[125,2]]},"1709":{"position":[[11,18],[41,15],[57,23],[81,3],[113,1],[125,1],[131,2],[134,5],[143,1],[148,4]]},"1711":{"position":[[3,4],[17,20],[38,31],[70,15],[86,3],[93,2],[99,4],[104,19],[144,2],[150,2],[156,1],[158,7]]},"1713":{"position":[[0,1],[13,2],[23,11],[58,17],[76,25],[102,18],[127,1],[147,2],[150,12],[190,1],[201,1],[206,2],[209,4],[216,1],[220,4],[225,3],[260,1],[275,1],[336,1],[353,9],[373,9],[388,1],[395,5]]},"1715":{"position":[[18,10],[41,9],[82,1],[97,1],[158,1],[171,10],[192,4]]},"1718":{"position":[[0,2],[14,16],[37,1],[45,2],[61,1],[66,2],[69,8],[78,18],[103,1],[112,2],[129,1],[139,2]]},"1720":{"position":[[4,2],[18,15],[34,18],[78,1],[84,1],[95,2],[100,2],[121,20],[148,1],[154,1],[162,2],[167,2],[173,6],[191,2],[202,11],[220,1],[226,1],[246,2],[249,2],[262,3]]},"1722":{"position":[[9,2],[35,20],[69,1],[89,2],[102,1],[104,2],[107,4],[130,1],[141,1],[154,3],[183,1],[187,1],[192,2],[197,2],[214,1],[219,1],[224,2],[229,2],[270,2],[298,2],[301,2]]},"1725":{"position":[[11,9],[21,29],[57,1],[77,2],[80,3],[86,2],[110,2],[113,3],[121,2],[132,1],[150,2],[153,4],[162,1],[167,2]]},"1727":{"position":[[16,28],[45,13],[65,1],[93,2],[96,2],[126,2],[129,2],[161,2],[164,2]]},"1729":{"position":[[10,21],[38,1],[60,2],[63,2],[82,2],[85,2],[106,2],[109,2],[132,2],[135,2],[158,9]]},"1731":{"position":[[14,19],[40,1],[65,2],[68,2],[94,2],[97,2],[121,2],[124,2],[150,2],[153,2]]},"1733":{"position":[[10,8],[25,1],[44,2],[47,3],[53,2],[76,2],[79,3],[87,2],[98,1],[115,2],[118,4],[127,1],[132,2]]},"1735":{"position":[[11,26],[54,2],[57,2],[81,2],[84,2],[111,2],[114,2],[141,2],[144,2],[171,2],[174,2]]},"1737":{"position":[[13,26],[58,2],[61,2],[87,2],[90,2],[122,2],[125,2],[154,2],[157,2],[186,2],[189,2]]},"1739":{"position":[[10,2],[24,9],[40,1],[70,2],[84,9],[100,1]]},"1741":{"position":[[11,16],[37,1]]},"1743":{"position":[[0,9],[21,9],[46,1],[63,5],[69,18],[97,1],[99,1],[126,4],[135,6],[151,1],[188,9],[204,3],[219,1],[255,2],[270,1],[297,2],[300,1]]},"1745":{"position":[[0,24],[25,6],[37,9],[56,1],[67,6],[79,7],[95,1],[105,5],[120,1],[189,1]]},"1747":{"position":[[0,2],[40,1],[109,1]]},"1749":{"position":[[0,14],[26,6],[40,6],[71,11],[113,2],[133,1],[195,2],[215,1]]},"1751":{"position":[[11,19],[31,24],[56,37],[105,1],[127,1],[151,1]]},"1754":{"position":[[7,19],[38,1],[94,2],[104,4]]},"1756":{"position":[[7,1],[58,1]]},"1758":{"position":[[7,1],[57,1]]},"1760":{"position":[[0,13],[20,3],[57,1],[103,1],[124,1],[140,1],[147,1],[160,1],[167,2],[177,1],[189,1],[201,6],[224,3],[252,1],[298,1],[339,2],[377,1],[384,2],[394,1],[402,1]]},"1762":{"position":[[0,16],[24,3],[39,1],[102,2],[105,1],[114,7],[130,5],[143,11],[166,1],[229,1],[240,2],[243,1],[252,7]]},"1765":{"position":[[6,15],[33,1],[88,2],[91,1],[124,12],[137,2],[151,1],[198,1],[214,2],[219,3]]},"1767":{"position":[[7,22],[41,1],[103,2],[106,1],[115,7],[130,11],[153,1],[200,1],[223,2],[228,3]]},"1769":{"position":[[0,23],[32,31],[75,1],[132,2],[135,1],[144,7],[161,1],[163,2]]},"1771":{"position":[[10,36],[58,1],[124,2],[127,1],[136,5],[150,2]]},"1773":{"position":[[11,1],[62,1],[72,2],[75,1],[84,8]]},"1775":{"position":[[0,2],[14,17],[50,7],[69,1],[128,2],[131,1],[140,8],[159,2],[169,16],[192,1],[202,5]]},"1777":{"position":[[9,13],[34,1],[198,16],[226,1]]},"1779":{"position":[[9,23],[45,1],[78,1],[123,1],[149,2],[152,2],[163,1],[181,22],[213,16],[239,1],[270,1],[309,1],[346,1],[373,2],[387,1],[394,5]]},"1781":{"position":[[8,16],[25,7],[66,1],[127,1],[146,3],[183,10],[202,28],[242,1],[303,1]]},"1784":{"position":[[7,14],[29,15],[56,1],[112,2],[115,1],[124,8]]},"1786":{"position":[[10,11],[22,17],[51,1],[107,2],[110,1],[145,2],[148,6]]},"1788":{"position":[[11,16],[46,3],[59,4],[64,17],[87,2],[103,2],[123,19],[143,17],[172,1],[241,17],[270,1]]},"1790":{"position":[[0,18],[19,24],[71,1],[80,45],[126,2],[129,3],[136,1],[151,9],[179,5],[206,6],[216,4],[225,5],[231,23],[387,1],[455,1],[487,1],[546,1],[579,1],[666,1]]},"1792":{"position":[[11,1]]},"1794":{"position":[[9,1],[89,15],[156,19],[208,1],[238,1],[268,1],[292,1]]},"1797":{"position":[[10,22],[41,1],[58,1],[148,1],[154,1],[160,1],[168,1],[178,1],[184,46],[231,2],[245,8],[256,4],[261,3],[265,4],[270,4],[275,8],[290,14],[313,1],[330,1],[406,1],[412,1],[418,1],[426,1],[436,1]]},"1799":{"position":[[6,22],[35,18],[60,11],[100,1],[134,1],[202,1],[217,1],[261,1],[276,1],[405,1],[439,1],[508,1],[560,1],[575,1],[604,28]]},"1801":{"position":[[15,7],[32,22],[55,8],[67,11],[91,1],[123,1],[193,1],[208,1],[215,8],[226,4],[231,3],[235,4],[240,4],[245,15],[267,1],[275,12],[300,1],[332,1],[388,1],[403,1]]},"1803":{"position":[[9,27],[46,17],[88,11],[100,17],[131,1],[160,1],[238,1],[253,1],[263,4],[388,1],[417,1],[488,1],[490,6],[497,1],[551,1],[566,1],[599,3],[610,8],[621,4],[626,14],[641,3],[645,4],[650,4],[655,6],[668,1],[676,11],[701,1],[730,1],[794,1],[809,1],[828,12],[854,1],[883,1],[952,1],[967,1],[1097,1],[1126,1],[1202,1],[1204,6],[1211,1],[1251,1],[1266,1],[1299,19],[1319,3],[1323,1],[1325,3],[1329,4]]},"1805":{"position":[[14,27],[56,17],[98,11],[110,17],[141,1],[170,1],[253,1],[268,1],[278,8],[289,4],[294,14],[309,3],[313,4],[318,4],[323,6],[336,1],[344,11],[369,1],[398,1],[467,1],[482,1]]},"1807":{"position":[[8,16],[25,15],[57,1],[92,1],[161,1],[176,1],[183,4],[194,8],[205,4],[210,3],[214,4],[219,4],[224,28],[265,1],[300,1],[355,1],[370,1]]},"1809":{"position":[[7,17],[25,15],[57,1],[93,1],[161,1],[176,1]]},"1811":{"position":[[7,21],[29,12],[45,9],[67,1],[98,1],[166,1],[181,1],[188,4]]},"1813":{"position":[[12,22],[35,8],[47,10],[70,1],[101,1],[174,1],[189,1],[196,4]]},"1816":{"position":[[5,18],[24,3],[33,8],[47,6],[59,7],[72,5],[78,20],[110,16],[127,2],[149,4],[159,11],[171,11],[262,12],[284,3],[372,19]]},"1818":{"position":[[0,2],[3,2],[20,6],[35,5],[46,2],[61,8],[75,3],[90,7],[103,2],[116,8],[132,11],[148,2],[155,2]]},"1821":{"position":[[80,13]]},"1823":{"position":[[27,30],[58,11],[99,26],[126,5],[228,119],[352,7]]},"1825":{"position":[[0,3],[8,3],[16,41],[58,6],[103,11],[142,1],[182,4],[187,4],[215,13],[229,4],[234,18],[264,1],[276,7],[287,1],[292,10],[307,14],[341,2],[358,2],[378,1],[387,1],[389,3],[397,68],[466,2],[474,9]]},"1827":{"position":[[0,3],[8,32],[62,15],[78,4],[96,15]]},"1829":{"position":[[25,1],[88,1],[95,1],[101,15],[128,5],[145,8],[165,20],[186,7],[205,9],[237,1],[281,1],[288,1],[294,32]]},"1831":{"position":[[0,13]]},"1833":{"position":[[24,9],[40,1],[42,12],[78,8],[87,12],[106,3],[110,14],[125,1],[127,5],[133,21],[161,1],[163,12],[201,10],[212,2],[215,2],[221,3],[228,2],[234,2],[240,2],[246,5],[255,5],[261,32],[299,8]]},"1836":{"position":[[0,8],[16,11],[36,1],[75,1]]},"1838":{"position":[[10,24],[43,1],[113,1],[137,9],[150,1],[166,23],[198,1],[268,1],[296,9],[309,1],[311,8],[330,1],[346,3],[362,1],[432,1],[454,8],[467,53],[529,1],[599,1]]},"1840":{"position":[[9,21],[39,1],[109,1],[132,9],[145,1],[147,2],[165,1],[182,16],[208,16],[235,21]]},"1842":{"position":[[0,14],[92,26],[119,32],[152,12],[167,3],[174,4],[187,1],[220,1],[259,1],[261,22],[284,12],[301,3],[308,4],[321,1],[354,1],[395,1],[397,26],[432,1],[493,3],[505,12],[526,1],[559,1],[599,3],[642,1],[675,1],[694,18],[715,2],[725,12],[762,27],[796,5],[811,1],[878,2],[881,4],[913,6],[924,5],[930,1],[932,4],[951,1],[953,7],[970,1],[1038,2],[1041,4],[1105,4],[1125,1],[1190,2],[1193,2],[1249,1],[1251,12],[1270,1],[1272,6],[1282,8],[1291,9],[1316,5],[1331,1],[1400,2],[1403,2],[1433,13],[1460,4],[1491,1],[1558,2],[1561,2],[1684,3],[1725,1],[1809,1],[1883,1],[1953,2],[1956,2],[1974,1],[2044,2],[2047,2],[2074,13],[2099,4],[2121,8],[2138,3],[2151,1],[2189,2],[2192,2],[2200,3],[2212,8],[2224,4],[2238,1],[2307,2],[2310,2]]},"1844":{"position":[[10,19],[34,1],[68,1],[120,4],[159,24],[198,8],[211,1],[259,1],[311,4],[368,13],[397,1],[431,1],[500,22],[539,1],[573,1],[614,13],[628,18],[649,11],[665,1],[713,1]]},"1846":{"position":[[0,2],[17,10],[38,1],[56,2],[72,1],[95,2],[104,8],[137,2],[154,10],[175,1],[193,2],[209,1],[232,2],[241,8]]},"1848":{"position":[[9,11],[31,1],[51,1],[67,1],[103,21],[134,1],[144,1],[146,1],[148,1],[150,1],[170,1]]},"1850":{"position":[[7,14],[30,1],[32,1]]},"1852":{"position":[[9,2],[21,21],[51,1],[82,2],[85,2],[103,2],[119,15],[143,3],[155,1],[190,2],[193,2],[199,4],[212,1],[236,2],[239,2],[244,13],[258,3],[282,6],[289,19],[309,9],[319,1],[321,2],[345,7],[366,1],[372,15],[396,1],[419,1],[426,2],[448,2],[451,2]]},"1854":{"position":[[0,4],[13,10],[32,1],[47,2],[69,2],[89,3],[93,2],[117,2],[120,5],[126,11],[138,1],[140,3],[144,17],[172,8],[181,6],[188,21],[218,1],[229,2],[250,2],[253,5]]},"1858":{"position":[[0,81],[82,7],[90,163],[254,4],[259,18],[281,4],[286,6],[296,77],[402,18]]},"1860":{"position":[[0,12],[67,18],[296,6]]},"1863":{"position":[[0,32],[33,4],[38,4],[43,4]]},"1868":{"position":[[27,1],[37,2],[81,4],[86,2],[89,1],[131,4],[136,2],[139,1],[184,4],[189,2],[192,2],[195,5],[201,19],[232,2],[274,2],[279,2],[284,1],[542,5],[559,2],[839,5],[845,11],[914,2],[919,4],[926,1]]},"1870":{"position":[[0,5],[69,22],[92,7],[100,28],[129,13]]},"1872":{"position":[[0,5],[122,5],[128,7],[140,14],[164,1],[166,2],[169,4],[183,1],[190,8],[228,2],[231,1],[274,1],[276,1],[278,2],[281,1],[283,2],[336,2],[339,1],[341,2],[392,2],[395,4],[442,2],[445,2],[448,2],[451,2],[464,9],[481,20],[509,16],[526,1],[542,8],[561,21],[583,1],[595,1],[603,5],[616,8],[625,2],[647,1],[686,2],[689,8],[729,2],[750,1],[791,1],[816,2],[819,1],[837,1],[860,2],[863,22],[893,1],[1015,2],[1018,6],[1025,5],[1040,15],[1074,1],[1082,1],[1092,1],[1094,2],[1097,6],[1123,1],[1125,1],[1127,1],[1171,2],[1174,9],[1213,2],[1216,1],[1227,1],[1247,1],[1278,2],[1284,1],[1291,1],[1393,2],[1396,19],[1434,2],[1459,2],[1462,2],[1465,6],[1483,3],[1487,3],[1523,2],[1526,18],[1552,1],[1554,15],[1570,5],[1576,2],[1585,17],[1693,1],[1695,5],[1701,2],[1704,4],[1721,7],[1729,5],[1764,1],[1808,4],[1813,6],[1820,18],[1846,28],[1875,13],[1889,5],[1902,5],[1915,16],[1932,1],[1969,2],[1972,1],[1995,1],[1997,1],[2037,2],[2040,2],[2043,10],[2063,1],[2085,2],[2088,10],[2107,2],[2110,2],[2113,11],[2128,14],[2228,22],[2251,2],[2272,4],[2277,3],[2292,8],[2307,5],[2320,7],[2362,2],[2365,4],[2415,2],[2418,1],[2420,2],[2423,4],[2428,4],[2433,2],[2436,4],[2453,34],[2509,2],[2515,1],[2539,5],[2554,8],[2563,2],[2566,1],[2568,12],[2603,7],[2643,2],[2651,8],[2665,14],[2686,1],[2688,2],[2691,1],[2696,8],[2735,2],[2738,2],[2766,2],[2769,2],[2798,2],[2825,1],[2827,2],[2834,9],[2848,11],[2902,5],[2917,7],[2925,2],[2928,1],[2930,2],[2933,25],[2959,19]]},"1874":{"position":[[0,24],[25,9],[48,2],[51,8],[91,2],[94,9],[104,8],[122,1],[144,2],[147,10],[166,2],[169,2],[185,53]]},"1876":{"position":[[0,5],[6,116],[123,8],[138,1],[171,2],[201,1],[242,2],[245,2],[273,1],[311,2],[314,2],[317,10],[328,15],[414,5],[429,11],[441,2],[444,1],[446,12],[459,5],[471,20],[526,2],[529,4],[573,2],[576,1],[578,2],[581,13],[600,15],[621,16],[651,8],[672,5],[683,16],[705,6],[712,9],[728,15],[752,22],[818,16],[869,2],[872,4],[916,2],[919,1],[921,2],[970,2],[973,8],[1051,2],[1075,3],[1082,1],[1106,5],[1121,8],[1130,2],[1141,1],[1149,2],[1152,18],[1171,1],[1173,2],[1176,7],[1184,17],[1202,2],[1252,2],[1260,8],[1274,14],[1295,1],[1297,2],[1300,5],[1328,2],[1362,2],[1365,4],[1396,2],[1423,1],[1425,2],[1432,9],[1446,11],[1500,5],[1515,7],[1523,2],[1526,3]]},"1878":{"position":[[0,5],[6,63],[70,6],[77,5],[89,12],[109,14],[141,2],[144,1],[170,1],[192,2],[195,7],[237,2],[240,2],[243,10],[294,2],[297,33],[361,2],[364,1],[418,2],[421,2],[424,2],[427,4],[439,48],[497,13],[511,5],[517,4],[531,5],[537,17],[555,14],[574,10],[585,7],[771,5]]},"1881":{"position":[[7,9]]},"1883":{"position":[[157,176]]},"1885":{"position":[[0,32],[33,17],[131,10],[142,56]]},"1888":{"position":[[123,1],[125,2]]},"1890":{"position":[[0,6],[27,2],[44,43]]},"1892":{"position":[[0,4],[51,21],[77,6],[84,1],[86,3],[101,1],[103,3],[155,1],[157,1],[238,1],[240,1],[242,2]]},"1894":{"position":[[7,4],[23,24]]},"1896":{"position":[[65,4]]},"1898":{"position":[[0,16],[49,23],[174,22],[216,1],[369,3],[426,3],[476,2],[528,1],[536,3],[553,2],[568,1],[596,3],[600,2],[613,1],[642,3],[646,2],[666,1],[673,1],[717,1],[742,2],[762,1],[829,3],[833,5],[839,6],[850,32]]},"1900":{"position":[[0,19],[56,1],[151,3],[178,2],[242,1],[259,2],[280,2],[283,1],[285,2],[288,5],[302,6],[340,3],[344,5],[350,18],[369,5],[375,2]]},"1903":{"position":[[0,10],[30,5]]},"1905":{"position":[[0,10],[11,27],[132,4],[137,7],[145,35],[340,22]]},"1909":{"position":[[0,87],[88,5],[94,61],[156,23],[408,4],[800,11],[812,22],[869,27]]},"1911":{"position":[[0,19],[20,2],[23,5],[29,16],[46,5],[70,17],[98,4],[103,7],[111,18],[130,19],[185,23]]},"1913":{"position":[[0,98],[99,22],[122,4],[127,22],[150,15],[224,15],[240,7],[248,30],[279,21]]},"1915":{"position":[[0,24],[46,9],[56,19],[76,24],[101,10],[112,9],[122,12],[135,2],[138,29]]},"1918":{"position":[[98,1],[121,76],[198,13],[212,2],[272,4],[334,2],[339,1],[341,2],[402,1],[404,1],[488,1],[490,2],[546,2],[549,3],[553,12],[566,15],[587,5],[598,20],[634,15],[661,26],[688,13],[710,5],[721,2],[729,1],[738,2]]},"1922":{"position":[[4,48],[53,9],[70,3],[78,37],[116,2],[150,1],[152,2],[155,14],[170,2],[190,1],[192,2],[195,13],[209,2],[219,2],[222,1],[224,2],[227,13],[241,2],[258,1],[260,2],[263,12],[293,2],[327,2],[330,31],[367,34],[402,22],[425,2],[452,1],[498,2]]},"1924":{"position":[[0,30],[54,1],[83,6],[90,2],[119,1],[121,2],[124,7],[132,2],[154,1],[156,2],[159,10],[170,2],[193,1],[195,2],[198,11],[210,2],[232,1],[234,2],[237,12],[250,2],[274,1],[276,2],[279,7],[287,2],[320,1],[322,2],[325,9],[335,2],[364,1],[366,2],[369,7],[377,2],[408,2],[411,1],[413,2],[416,10],[427,2],[455,1],[457,2],[460,7],[468,2],[492,1],[494,2],[497,9],[507,2],[529,1],[531,2],[538,12],[625,2],[628,2],[631,12],[664,1],[722,2],[735,2],[749,1],[751,2],[779,2],[782,3]]},"1926":{"position":[[0,15]]},"1928":{"position":[[0,28],[29,4],[216,10],[227,10],[238,3],[242,11],[273,5],[299,4],[370,5],[396,4],[469,4],[496,4],[538,10],[637,4],[646,3],[668,4],[743,11],[759,3],[775,2],[790,4],[797,11],[809,5],[838,5],[851,3],[865,4],[877,3],[890,9],[900,5],[913,13],[934,8]]},"1931":{"position":[[137,14],[152,23],[176,11]]},"1933":{"position":[[30,1],[64,1],[86,6],[121,10],[226,1],[242,1],[244,1],[281,10],[358,5],[470,2],[473,1],[518,7],[604,2],[607,1],[656,8],[743,1],[745,2],[786,1],[829,1],[831,5]]},"1935":{"position":[[0,1],[45,1],[151,17],[203,1],[205,8],[264,5]]},"1938":{"position":[[0,10]]},"1940":{"position":[[0,13],[95,21],[117,21],[159,14],[179,9],[194,19]]},"1942":{"position":[[0,91],[107,35],[225,16],[249,4],[261,13],[279,15]]},"1944":{"position":[[0,15],[16,12],[29,31],[61,29],[91,14],[106,19],[126,18],[145,13],[188,21],[302,2],[316,9]]},"1946":{"position":[[0,22],[23,9]]},"1948":{"position":[[83,13],[97,11]]},"1950":{"position":[[0,14],[19,10],[36,31],[75,1],[77,5],[92,1],[94,7],[111,1],[142,19],[165,5],[176,5],[187,5],[198,6]]},"1954":{"position":[[48,6],[85,23]]},"1956":{"position":[[75,20]]},"1958":{"position":[[0,18]]},"1960":{"position":[[285,26],[320,26],[446,1],[553,13]]},"1962":{"position":[[0,47],[48,35],[84,17],[102,21]]},"1964":{"position":[[93,1],[111,2],[114,5],[142,1],[423,2],[434,1],[488,2],[515,1],[567,17],[585,2],[610,8],[651,2],[654,2],[657,2]]},"1966":{"position":[[13,1],[15,2],[18,6],[31,2],[34,2],[64,1],[104,2],[107,5],[121,1],[158,2],[174,2],[177,1],[201,2],[204,5],[240,2],[243,2],[246,2],[249,1],[251,2],[254,4],[506,20]]},"1970":{"position":[[0,9],[10,1],[31,1],[33,12],[85,2],[100,2],[112,1],[114,10],[140,2],[143,8],[245,2],[258,1],[260,2],[263,13],[309,2],[312,8],[361,2],[364,7],[398,7],[406,2],[409,5],[449,2],[452,7],[460,2],[473,1],[475,8],[492,1],[494,1],[523,2],[551,7],[559,2],[683,2],[697,2],[700,1],[745,7],[848,1],[850,1],[852,2],[889,2],[892,19]]},"1972":{"position":[[0,32],[33,1],[43,17],[144,2],[174,3],[178,3]]},"1974":{"position":[[0,8],[9,2],[35,1],[37,2],[40,8],[60,1],[88,2],[91,2],[151,2],[154,2],[181,2],[184,1],[186,2],[189,2],[201,5],[235,1],[237,2],[240,2],[255,1],[272,3]]},"1976":{"position":[[0,28],[54,1]]},"1979":{"position":[[28,1],[49,1],[264,2],[431,3],[458,1],[1103,3],[1411,3],[1490,3],[1713,3],[1964,45],[2041,18],[2636,2],[2677,2],[2819,10],[2837,3],[2841,1],[2843,7],[2851,2],[2860,1],[2879,2],[2953,2],[2972,1],[2974,25],[3041,3],[3045,2],[3065,1],[3109,3],[3113,2],[3133,1],[3178,3],[3182,2],[3202,1],[3247,3],[3251,3]]},"1981":{"position":[[38,3],[60,3],[64,4],[71,4],[172,3],[196,2],[214,1],[255,3],[270,2],[273,2],[284,3],[290,1],[328,3],[344,2],[409,3],[424,2],[463,3],[478,2],[610,2],[621,4],[628,1],[657,3],[674,2],[710,3],[727,2],[755,1],[832,3],[1017,3],[1340,1],[1348,3],[1352,7],[1367,3],[1371,9],[1388,3],[1392,9],[1415,3],[1419,9],[1442,3],[1446,9],[1473,17],[1495,3],[1499,7],[1514,3],[1518,7],[1536,3],[1540,9],[1557,1],[1559,1],[1567,7],[1587,3],[1591,2],[1594,1],[1602,7],[1622,3],[1626,2],[1629,1],[1637,7],[1657,3],[1661,2],[1664,2],[1703,2],[1722,1],[1760,3],[1764,2],[1784,1],[1786,9],[1802,1],[1809,1],[1811,1],[1827,2],[1830,3],[1842,1],[1849,2],[1857,13],[1932,2],[1935,13],[1993,1],[2008,2],[2024,1],[2026,2],[2029,8],[2053,1],[2064,1],[2066,2],[2069,1],[2071,1],[2123,3],[2151,3],[2155,2],[2158,3],[2162,2],[2165,3],[2169,1],[2171,6],[2179,6],[2186,2],[2216,1],[2218,2],[2233,1],[2277,14],[2292,2],[2295,4],[2304,14]]},"1983":{"position":[[58,3],[67,4],[77,3],[86,4],[96,3],[105,4],[113,3]]},"1985":{"position":[[94,16],[120,1],[157,7]]},"1987":{"position":[[19,5],[54,19],[79,7],[91,23],[160,2],[174,11],[186,13],[211,2],[220,12],[233,2],[236,12],[249,2],[257,7],[270,23]]},"1989":{"position":[[7,4],[21,33],[59,6],[75,7],[83,1],[94,1],[96,12],[130,11],[161,6],[168,3],[172,2],[185,1],[187,19],[241,2],[254,1],[256,2],[259,12],[280,2],[324,4],[329,2],[332,1],[374,4],[379,2],[382,2],[403,1],[405,2],[408,8],[457,3],[461,18],[488,2],[491,45],[546,2],[549,25],[584,2],[587,8]]},"1991":{"position":[[0,22],[32,63],[188,3],[201,1],[307,11]]},"1993":{"position":[[0,31]]},"1995":{"position":[[22,1],[28,1],[33,8],[79,18],[98,20],[124,7],[137,6],[257,2],[272,6],[555,22],[578,9],[588,3],[597,13],[717,15],[738,5],[763,46],[810,4],[821,7],[829,2],[832,2],[835,6],[842,19],[865,2],[872,3],[926,8],[938,9],[956,2],[963,79],[1048,8],[1094,4],[1106,37]]},"1997":{"position":[[0,26],[39,11],[56,4],[61,1],[134,2],[137,28],[194,2]]},"1999":{"position":[[28,2],[82,2],[105,1],[130,3],[134,17]]},"2001":{"position":[[0,21],[22,2],[53,2],[107,2],[153,2],[181,2],[204,1],[219,3]]},"2003":{"position":[[0,25],[26,2],[311,2],[334,1],[475,3]]},"2005":{"position":[[20,2],[27,11],[44,11],[63,4],[68,10],[137,11],[153,61],[215,17],[253,12],[275,28],[314,9],[324,2],[332,5],[342,4]]},"2007":{"position":[[0,59],[63,13],[138,2],[148,14],[167,3],[198,8],[215,2],[221,7],[237,12],[277,1],[313,2],[316,3]]},"2010":{"position":[[92,2],[95,30]]},"2012":{"position":[[41,9],[116,6]]},"2014":{"position":[[0,8],[9,5]]},"2016":{"position":[[5,5],[17,5],[30,5]]},"2018":{"position":[[11,2],[23,2],[37,7],[56,4],[61,8],[81,4],[86,5],[103,8],[127,2],[130,1],[141,3],[156,2],[170,4],[175,5],[192,4],[219,4],[248,4],[269,4],[294,4],[317,4],[339,4],[362,4],[384,4]]},"2026":{"position":[[0,25],[26,2],[29,11],[41,24]]},"2029":{"position":[[0,2],[3,2],[6,4],[11,4],[21,15],[37,4],[42,7],[50,7],[66,18]]},"2031":{"position":[[0,2],[3,2],[6,26],[33,10],[44,13],[58,15],[124,5]]},"2033":{"position":[[0,12],[13,2],[16,7],[24,29],[83,13],[97,13],[111,3],[199,1],[201,4]]},"2035":{"position":[[0,14],[15,15],[31,15],[47,14]]},"2037":{"position":[[0,2],[3,4],[8,2],[11,4],[16,5],[22,8],[31,4],[36,4],[41,2],[44,1],[55,4],[60,4],[65,2],[68,1],[85,4],[100,1],[111,5],[117,4],[162,4],[167,4],[209,5],[215,4],[241,1],[243,1],[245,6],[252,4],[257,2],[260,9],[270,1],[272,1]]},"2039":{"position":[[0,6],[7,40],[48,8],[57,7],[65,10],[76,12],[89,3],[93,11],[105,22]]},"2041":{"position":[[0,7],[8,15],[24,20],[45,22],[68,25]]},"2043":{"position":[[0,8],[9,31],[41,1]]},"2045":{"position":[[0,11],[56,2],[188,16],[205,1],[207,8],[828,12],[841,7],[849,16],[866,15],[886,6],[893,2],[900,7],[921,9],[935,12],[948,7],[956,6],[963,5],[1006,44],[1055,4],[1064,21],[1086,9],[1096,7],[1154,5],[1207,5]]},"2047":{"position":[[0,4],[142,4],[147,2],[648,6]]},"2049":{"position":[[0,5],[6,13],[20,9],[37,21],[157,23],[195,14]]},"2051":{"position":[[121,2]]},"2053":{"position":[[0,20],[21,8],[58,16],[75,30],[106,17]]},"2055":{"position":[[0,2],[93,3],[97,23],[121,4],[163,4],[214,2],[486,4],[656,8],[1026,50],[1162,22]]},"2057":{"position":[[0,8],[93,2],[136,2],[139,4],[144,9],[154,10],[182,14],[197,2],[200,5],[206,13],[220,15],[261,11],[273,12],[286,2],[289,9],[331,19],[359,2],[362,4],[367,2],[370,7],[389,11],[415,3],[419,2],[787,2],[902,2],[905,1],[907,2],[910,1],[916,3],[924,1],[931,1],[933,32],[971,1],[1001,1],[1008,30],[1047,1],[1049,5],[1060,1],[1062,8],[1076,1],[1078,34],[1116,1],[1118,17],[1144,1],[1146,28],[1180,1],[1182,4],[1197,3],[1201,1],[1203,2],[1206,1],[1212,3],[1220,1],[1226,1],[1228,4],[1237,1],[1239,8],[1252,1],[1254,4],[1263,1],[1265,3],[1295,5],[1305,7],[1313,6]]},"2059":{"position":[[90,10],[112,19],[146,6],[153,22],[212,8],[322,2],[325,6],[332,23],[394,6],[418,2],[421,6],[437,2],[440,6],[447,18],[472,5],[506,2],[509,6],[561,10],[596,12],[609,10]]},"2064":{"position":[[34,24],[112,2],[347,2],[350,8],[440,2],[443,11],[521,2],[524,8]]},"2068":{"position":[[63,1],[65,4],[86,5],[99,2],[143,7],[154,16],[171,1],[173,4],[194,9],[215,4],[305,23],[329,2],[332,2],[335,3],[346,7],[385,2],[395,1],[409,2],[416,9],[433,9],[453,15],[481,3],[507,1],[520,11],[632,19],[652,67],[835,6],[911,4],[916,14],[939,4]]},"2070":{"position":[[150,6]]},"2072":{"position":[[0,6],[11,11],[81,4],[86,2],[93,6],[102,25]]},"2075":{"position":[[0,54],[55,29]]},"2077":{"position":[[53,20],[74,5],[80,4],[85,1],[87,2],[90,1],[94,1],[96,1],[98,1],[102,1],[113,1],[115,30],[146,2],[149,1],[151,19],[180,1],[182,31],[214,4],[219,1],[230,6],[237,1],[239,31]]},"2079":{"position":[[0,4],[5,21],[27,2],[30,10],[41,51],[93,16],[110,27],[138,72],[211,2],[214,10],[225,124],[350,5],[356,12],[369,12],[382,12],[513,2],[516,10],[527,98],[626,2],[629,2],[816,4]]},"2082":{"position":[[0,1],[2,6],[9,26]]},"2084":{"position":[[0,2],[3,4],[8,73],[82,7],[90,22],[113,5],[119,24],[144,5],[150,14],[165,5],[171,16],[188,5],[194,3],[206,4],[236,11],[248,3],[252,3],[264,4],[300,3],[304,3],[316,4],[321,35],[357,3]]},"2086":{"position":[[0,39]]},"2088":{"position":[[0,50],[167,17]]},"2090":{"position":[[17,2],[20,1],[22,2],[25,1],[27,2],[30,1],[34,1],[36,1],[38,1],[42,1],[44,1],[46,1],[50,1],[52,29],[82,25],[108,35],[144,26],[171,16]]},"2092":{"position":[[0,1],[2,4],[7,28],[52,27]]},"2102":{"position":[[0,133],[134,55]]},"2104":{"position":[[74,15]]},"2109":{"position":[[0,10]]},"2111":{"position":[[37,1],[41,1],[64,25]]},"2113":{"position":[[0,3],[4,24],[31,4],[36,15],[77,3],[206,22],[231,1],[264,1]]},"2115":{"position":[[0,25]]},"2117":{"position":[[399,90],[490,4]]},"2119":{"position":[[270,54],[608,24],[633,9],[643,1],[707,27],[735,7],[743,1],[745,1],[747,4],[752,1],[754,5],[760,6],[767,1],[769,5],[775,1],[777,5],[783,1],[785,4],[790,1],[792,1],[794,5],[800,1],[802,9],[812,1],[814,7],[822,1],[824,12],[837,1],[839,11],[851,1],[853,1],[855,5],[861,1],[863,23],[887,1],[889,10],[900,1],[902,1],[910,2],[913,1],[915,2],[924,2],[927,2],[930,1],[932,1],[934,5],[940,1],[942,1],[950,2],[953,1],[955,2],[964,2],[967,4],[972,1],[974,1],[976,6],[983,1],[985,1],[993,2],[996,4],[1001,1],[1003,2],[1012,2],[1015,6],[1022,3],[1026,1],[1028,3],[1032,1],[1173,53],[1227,40],[1268,11],[1280,45],[1326,9],[1336,100]]},"2123":{"position":[[0,14]]},"2125":{"position":[[545,7],[1335,11],[1347,78]]},"2127":{"position":[[0,11],[1351,10]]},"2129":{"position":[[0,217],[224,9],[234,124],[382,10]]},"2133":{"position":[[44,56]]},"2136":{"position":[[240,16],[320,6],[507,15],[585,4],[666,4],[671,7],[934,4]]},"2138":{"position":[[6,10],[176,9],[186,20],[207,5],[310,8],[322,10],[392,10],[499,44],[573,4],[1144,4],[1284,13],[1388,25],[1453,4],[1537,4],[1841,1],[1894,1],[1995,4],[2336,4],[2625,4],[3142,10],[3157,12],[3214,2],[3418,1],[3424,12],[3495,2],[3573,1],[3579,15],[3645,2],[3724,2],[3866,2],[3979,8],[4069,3],[4154,3],[4239,3]]},"2141":{"position":[[29,2],[32,12],[91,29],[121,3],[229,1],[234,26],[303,32],[370,2],[373,5],[379,55],[435,2],[438,86],[525,17],[543,3],[547,21],[569,15],[585,16],[602,16],[619,2],[622,4],[627,192],[820,13],[834,3],[838,17],[856,25],[882,44],[927,36],[964,2],[967,4],[972,95],[1068,2],[1071,4],[1076,162],[1239,20],[1260,3],[1264,22],[1287,18],[1306,11],[1318,15],[1334,11],[1346,2],[1349,4],[1354,160],[1515,39],[1555,6],[1583,2],[1586,5]]},"2144":{"position":[[0,2],[401,2],[404,2],[407,4],[412,7],[422,3],[426,9],[477,3],[481,14],[523,3],[527,10],[584,3],[588,6],[609,3],[613,9],[623,9],[635,5],[641,10],[688,3],[692,5],[698,22]]},"2146":{"position":[[0,1]]},"2148":{"position":[[0,2],[3,1],[5,4],[10,2],[15,3],[31,1],[35,3],[78,3],[84,3],[88,2],[91,1],[128,5],[151,3],[160,1]]},"2150":{"position":[[0,2],[3,6],[10,42],[53,34],[88,4]]},"2152":{"position":[[13,4],[18,12],[31,2],[34,4],[39,10],[50,4],[55,6],[62,10],[73,18],[92,28],[121,43],[165,9]]},"2154":{"position":[[0,6],[7,2],[10,6],[17,44],[62,2],[65,6],[72,66],[139,6],[146,2],[149,6],[156,140],[297,6],[304,2],[307,6]]},"2156":{"position":[[0,24]]},"2159":{"position":[[0,2],[3,8],[121,125],[247,2],[250,92],[343,2],[346,111],[465,12]]},"2164":{"position":[[0,2],[3,56],[60,17],[95,108],[220,160],[389,113]]},"2167":{"position":[[453,8],[462,10],[900,5]]},"2169":{"position":[[253,26],[316,7],[431,3],[586,23]]},"2171":{"position":[[0,15],[329,7]]},"2173":{"position":[[47,2],[50,2],[53,2],[522,1],[954,21],[986,1],[1065,27]]},"2175":{"position":[[86,5]]},"2177":{"position":[[62,20],[83,19],[109,5],[171,3],[319,9],[329,7],[337,2],[570,2]]},"2179":{"position":[[85,2]]},"2181":{"position":[[20,5],[41,16],[58,22],[81,22],[156,25],[257,2]]},"2188":{"position":[[1247,18]]},"2191":{"position":[[98,21],[120,22],[220,3],[239,23]]},"2193":{"position":[[66,2],[357,6],[379,1],[417,9],[463,1],[516,1],[569,1],[622,1]]},"2195":{"position":[[48,10],[822,33]]},"2197":{"position":[[1443,4]]},"2200":{"position":[[107,55],[175,18],[194,4]]},"2202":{"position":[[0,18],[19,11],[31,11],[43,15],[59,4],[64,31],[96,35],[132,7],[140,38]]},"2204":{"position":[[0,13],[14,60],[75,31]]},"2206":{"position":[[0,10],[11,54],[171,11],[183,12]]},"2208":{"position":[[81,3],[241,4],[432,18],[497,9],[507,67],[575,39],[673,16],[690,2],[1044,82]]},"2210":{"position":[[0,5],[148,4],[207,25]]},"2212":{"position":[[0,32],[72,6]]},"2214":{"position":[[158,3],[167,13],[181,85],[267,2],[270,3],[274,10],[287,1],[302,8],[341,11],[353,4],[358,53],[412,4],[417,2],[518,3],[539,3],[554,5],[560,2],[565,16],[635,3],[654,4],[659,29]]},"2216":{"position":[[0,48],[181,14]]},"2218":{"position":[[0,10],[202,12]]},"2220":{"position":[[44,17],[228,12]]},"2222":{"position":[[209,10],[220,18]]},"2224":{"position":[[38,9]]},"2227":{"position":[[113,2],[116,15]]},"2230":{"position":[[0,2],[3,4],[97,2],[100,13]]},"2232":{"position":[[118,2],[121,5],[243,2],[246,5],[406,2],[409,5],[624,1],[626,9],[636,23],[672,17],[692,20],[713,1],[744,3],[748,3],[756,10],[767,13],[781,55]]},"2234":{"position":[[0,1],[2,26],[210,2],[213,9],[223,42],[266,55],[322,100],[423,45],[469,64],[534,64],[599,12],[612,41],[654,44],[699,43]]},"2236":{"position":[[0,46],[47,34],[82,12],[95,65],[161,6],[168,24],[193,33],[278,2],[281,4],[589,2],[592,3],[988,2],[991,6],[1189,2],[1192,4],[1826,1],[1828,10]]},"2240":{"position":[[0,7],[8,15],[24,11],[36,8],[45,20],[66,20]]},"2242":{"position":[[0,61],[62,2],[65,11],[77,26],[104,23]]},"2244":{"position":[[0,2],[3,3]]},"2247":{"position":[[96,24],[121,20],[142,2],[145,3],[269,1],[271,7],[437,2],[536,4],[541,2],[544,2],[547,4],[557,8],[566,5],[577,8],[597,14],[624,17],[642,4],[652,9],[662,3],[671,11],[683,5],[689,5],[695,5],[701,10],[712,27],[789,7],[915,8],[1030,26],[1131,1],[1135,1],[1178,10],[1458,23],[1518,7],[1556,9],[1742,4],[1965,17]]},"2250":{"position":[[0,10],[91,37],[129,12]]},"2252":{"position":[[150,2]]},"2254":{"position":[[0,24],[25,37]]},"2256":{"position":[[0,2],[3,4],[57,28],[86,7],[94,15],[110,16],[188,31]]},"2258":{"position":[[53,4],[58,1],[60,1],[66,1],[72,1],[76,1],[78,1],[80,1],[84,1],[86,1],[88,1],[92,1],[96,1],[111,1],[129,1],[166,1],[219,1],[278,1],[304,1],[389,1],[408,1],[455,1],[508,1],[608,1],[661,1],[695,1]]},"2260":{"position":[[0,59],[60,2],[63,9],[109,2],[112,9],[160,3],[229,15],[306,5]]},"2263":{"position":[[156,17],[210,1],[212,2],[388,2]]},"2265":{"position":[[0,12],[47,2]]},"2267":{"position":[[0,16],[65,9],[75,2],[230,1],[270,3],[457,3]]},"2269":{"position":[[41,12],[54,2],[57,2]]},"2271":{"position":[[79,2],[82,2],[273,1]]},"2273":{"position":[[123,5],[381,2],[384,2],[425,2],[486,8],[577,20]]},"2275":{"position":[[143,13]]},"2277":{"position":[[0,14]]},"2279":{"position":[[294,1],[296,6],[595,2],[598,3],[696,2]]},"2281":{"position":[[0,2],[107,2],[110,3],[114,9],[124,14],[218,2],[221,3],[419,5],[425,3],[452,1]]},"2287":{"position":[[28,16],[45,11],[206,14],[741,23],[765,6],[803,6],[810,6],[903,20],[1098,8],[1107,4],[1171,26],[1343,5],[1349,18]]},"2289":{"position":[[213,7],[229,3]]},"2291":{"position":[[47,14],[62,6],[69,2],[72,7],[80,2],[143,5],[149,3],[343,9],[353,4],[358,4],[363,4],[368,5],[374,4],[379,4],[384,4],[389,4],[394,16]]},"2297":{"position":[[0,51]]},"2299":{"position":[[0,66],[67,33]]},"2301":{"position":[[0,29]]},"2303":{"position":[[0,28],[57,3],[61,27],[89,22]]},"2305":{"position":[[0,29]]},"2308":{"position":[[0,30],[31,33],[65,64],[130,23],[154,19]]},"2310":{"position":[[0,32],[33,7],[41,52],[94,51],[146,56]]},"2313":{"position":[[0,3],[14,44]]},"2315":{"position":[[0,37],[38,37],[76,35],[112,34],[147,34],[182,8],[191,17],[209,24],[234,43],[278,58]]},"2317":{"position":[[0,25],[92,28]]},"2322":{"position":[[0,16]]},"2324":{"position":[[0,90]]},"2326":{"position":[[0,13]]},"2328":{"position":[[0,42]]},"2332":{"position":[[0,9]]},"2334":{"position":[[0,9],[10,20]]},"2341":{"position":[[0,24]]},"2344":{"position":[[0,12]]},"2351":{"position":[[0,3],[4,7],[12,4]]},"2355":{"position":[[0,9]]},"2357":{"position":[[0,30]]},"2359":{"position":[[5,7]]},"2361":{"position":[[0,19]]},"2363":{"position":[[0,11]]},"2367":{"position":[[0,2],[3,9],[13,21],[35,13],[49,44]]},"2369":{"position":[[0,21],[22,20]]},"2371":{"position":[[0,15]]},"2373":{"position":[[8,7],[19,7],[30,7],[41,7],[52,7],[63,7],[74,8],[86,7]]},"2376":{"position":[[0,8]]},"2378":{"position":[[0,21],[22,31]]},"2380":{"position":[[0,21],[22,21]]},"2382":{"position":[[4,7]]},"2384":{"position":[[0,2],[3,34],[42,7],[50,9],[60,33],[94,11]]},"2387":{"position":[[0,95]]},"2389":{"position":[[0,20],[21,22],[44,16]]},"2391":{"position":[[34,2],[170,1],[179,1],[186,1],[195,1],[248,3]]},"2393":{"position":[[46,32],[79,60]]},"2395":{"position":[[135,35]]},"2397":{"position":[[94,2],[97,57],[215,30],[246,121]]},"2399":{"position":[[0,9],[10,3],[14,95],[202,2],[356,15],[372,2],[375,25],[401,5]]},"2401":{"position":[[0,2],[125,50],[176,5],[182,38]]},"2403":{"position":[[0,2],[118,1],[120,76]]},"2405":{"position":[[0,2],[87,92],[180,34]]},"2407":{"position":[[0,50],[51,56],[108,2],[111,63]]},"2409":{"position":[[0,35],[36,3],[47,7],[55,1],[69,3],[159,4],[191,11],[203,1],[205,8],[337,11],[349,1],[351,8],[461,11],[473,1],[475,8]]},"2412":{"position":[[187,3],[231,3],[312,19],[332,3],[363,5]]},"2416":{"position":[[124,45],[223,1]]},"2418":{"position":[[0,87]]},"2420":{"position":[[0,30],[31,10]]},"2422":{"position":[[0,57]]},"2424":{"position":[[45,50],[216,17],[234,1],[395,2],[411,3]]},"2429":{"position":[[50,3],[75,3],[119,2],[135,3]]},"2437":{"position":[[0,22],[23,22],[46,22],[69,22],[92,7]]},"2439":{"position":[[48,3],[146,3],[161,8],[258,30],[339,32],[372,37],[410,3],[433,1],[435,3],[439,4],[444,1],[454,1],[462,1],[464,4],[469,3]]},"2441":{"position":[[24,2],[27,8],[50,5],[76,5],[97,6]]},"2443":{"position":[[0,2],[85,2],[313,1],[324,1],[348,1],[404,1],[422,1],[433,1],[435,4],[447,1],[458,1],[460,4],[508,1],[510,6],[527,1],[533,1],[539,1],[623,2],[628,1],[630,12],[654,1],[676,1],[702,1],[738,1],[740,7],[748,1],[767,9],[782,1],[821,1],[890,1],[927,1],[929,7],[969,1],[971,6],[989,1],[1013,1],[1015,4],[1020,2],[1023,9],[1107,2],[1110,9],[1141,5]]},"2445":{"position":[[0,47],[142,5]]},"2448":{"position":[[0,8],[9,30],[40,25]]},"2450":{"position":[[0,8],[9,22],[32,21],[94,15]]},"2452":{"position":[[59,1],[108,1],[171,1],[212,1],[280,1]]},"2454":{"position":[[13,9],[23,8],[32,9],[42,5],[92,5],[159,5],[221,4],[231,33],[543,4],[584,1],[811,7],[834,6],[857,6],[907,11],[974,11],[1009,11],[1044,11],[1073,13],[1371,12],[1429,15],[1455,7],[1554,2],[1667,4],[1687,4],[1705,4],[1770,33],[1826,21],[1848,9],[1926,21],[1973,14],[2017,2]]},"2458":{"position":[[0,29],[30,48]]},"2460":{"position":[[0,16],[17,16],[34,3],[46,5],[52,39],[92,3],[96,2],[99,5],[105,4],[110,30],[199,51],[323,2],[326,5],[332,4],[337,75],[413,25],[505,3],[542,3],[546,2],[549,4],[554,30],[707,2],[710,5],[769,2],[772,5],[778,24],[803,29],[833,14],[848,15],[864,2],[867,7],[875,31]]},"2462":{"position":[[0,2],[3,6],[10,51],[62,27],[90,6],[97,29],[127,23],[151,44],[196,60],[257,7],[321,94],[491,168]]},"2465":{"position":[[0,100]]},"2467":{"position":[[0,73]]},"2469":{"position":[[48,2],[51,4],[56,15],[72,15],[88,22],[111,28],[140,27],[168,25],[194,27],[254,1],[269,1],[298,1],[323,10],[334,27],[367,27],[413,2],[416,24],[441,3],[445,25],[534,3],[546,6],[641,3],[645,5],[651,1],[666,4],[671,17],[689,1],[704,4],[709,10],[720,1],[737,2],[740,12],[753,1],[768,2],[771,11],[783,1],[808,3],[812,1],[828,2],[831,1],[846,2],[849,3],[922,44],[967,45],[1013,15],[1029,8],[1049,2],[1062,2],[1065,11],[1089,2],[1092,12],[1114,4],[1119,10],[1139,4],[1144,17],[1162,1],[1164,12],[1177,17],[1195,27],[1223,26],[1250,7],[1258,25],[1284,25],[1310,25],[1336,3],[1340,2],[1343,2],[1346,30],[1377,21],[1399,4],[1404,28],[1433,34],[1468,4],[1473,28],[1502,33],[1536,33],[1570,20],[1591,4],[1596,28],[1625,33],[1659,11],[1671,2],[1674,5],[1680,27],[1708,6],[1715,27],[1743,22],[1766,23],[1790,1],[1792,17],[1810,51],[1862,28],[1891,10]]},"2471":{"position":[[113,9],[155,2],[158,13],[172,31],[204,32],[237,12],[250,31],[282,11]]},"2473":{"position":[[27,2],[83,26],[110,26],[137,16],[183,2],[227,26],[254,20],[303,16],[349,26],[376,8],[385,2],[468,15]]},"2476":{"position":[[0,6],[11,9],[25,9],[39,19],[59,20],[80,37],[118,25],[144,27],[172,19],[192,5],[198,2],[205,6],[212,84],[297,1],[299,3],[303,3],[307,2],[310,3],[314,2],[317,2],[320,154],[475,20],[537,2],[540,6],[547,25],[573,26],[600,10],[611,15],[627,25],[653,25],[679,20],[700,25],[726,25],[752,24],[777,3],[789,9],[799,23],[823,23],[847,23],[871,7],[879,23],[903,17],[921,34],[956,3]]},"2478":{"position":[[0,15],[16,3],[27,24],[52,3]]},"2480":{"position":[[0,13],[14,2],[17,4],[22,25],[48,11],[106,26],[133,26],[188,6],[195,3],[207,4],[212,25],[238,10],[249,23],[273,23],[297,17],[315,3],[319,2],[322,10],[375,19],[395,5]]},"2482":{"position":[[0,56]]},"2484":{"position":[[0,25],[26,3],[38,5],[44,80],[125,3],[129,4]]},"2486":{"position":[[0,23],[24,22],[47,2],[76,23],[100,23],[124,23],[148,7]]},"2488":{"position":[[0,44],[45,2],[48,8],[121,23],[145,10],[156,2],[159,8],[168,23],[217,19],[237,1],[239,8],[248,20],[269,20],[290,20],[311,59]]},"2490":{"position":[[6,7],[14,2],[17,6],[24,36],[61,10],[72,4],[77,4],[82,7],[90,7],[98,7],[106,10],[174,20],[195,7],[203,20],[224,10],[235,3],[239,42],[282,8],[291,28],[320,2],[447,21],[490,20],[511,21],[533,21],[565,2],[568,13],[582,8],[591,8],[600,6],[607,28],[636,6],[646,23],[670,10],[681,8],[759,14],[818,10],[851,7],[859,23],[883,23],[907,9],[917,3],[921,14],[936,5],[942,31],[974,26],[1001,18],[1020,18],[1039,7],[1047,33]]},"2492":{"position":[[0,8],[9,15],[25,30],[56,28],[85,2],[88,28],[117,9],[127,5],[133,141],[275,5],[281,89],[371,13],[385,13]]},"2495":{"position":[[0,29],[30,28],[59,28],[88,44]]},"2497":{"position":[[0,28],[29,28],[58,28],[87,28],[116,28],[145,28],[174,7],[182,2],[185,6]]},"2499":{"position":[[0,56],[57,14],[72,28],[101,28],[130,5],[136,26],[163,5],[169,38],[208,9],[218,13],[232,31],[264,25],[290,14],[340,39]]},"2501":{"position":[[0,11]]},"2503":{"position":[[0,22],[145,30],[176,109],[286,17],[304,30],[335,6],[345,17],[366,27],[396,21],[418,7],[426,8],[435,8],[444,44]]},"2507":{"position":[[42,2],[45,6]]},"2509":{"position":[[0,93],[94,31],[126,7],[134,2],[137,4],[142,12],[228,22],[251,33],[285,34],[320,31],[352,35],[388,64],[453,7],[461,2],[464,1],[466,4],[471,1],[473,4],[478,1],[480,4],[485,1],[488,1],[490,1],[492,1],[495,1],[497,1],[499,1],[502,1],[504,1],[506,1],[509,1],[558,1],[577,1],[590,1],[592,23],[645,1],[664,1],[677,1],[679,24],[736,1],[755,1],[768,1],[770,5]]},"2511":{"position":[[0,2],[3,10],[182,16],[233,20],[254,31],[286,19],[347,36]]},"2514":{"position":[[0,2],[3,8],[12,23]]},"2516":{"position":[[0,16],[238,23],[262,2],[302,11],[326,4]]},"2519":{"position":[[0,35],[36,79],[116,2],[119,5],[125,12],[138,69],[208,76],[285,44],[330,11],[353,3],[360,10],[384,2],[387,22],[410,37],[448,33],[482,37]]},"2521":{"position":[[0,68],[69,111],[181,3]]},"2525":{"position":[[0,48],[49,23]]},"2527":{"position":[[0,4],[5,2],[151,15]]},"2530":{"position":[[0,58],[59,7],[123,14],[138,5],[144,10],[155,7]]},"2532":{"position":[[0,29],[30,26],[57,4],[62,2]]},"2534":{"position":[[0,7],[8,24],[33,11],[45,10],[87,25],[113,29],[143,12],[163,13],[177,18],[281,25],[382,42],[443,29],[495,8],[532,16],[565,24],[615,35],[695,36],[784,42],[827,3],[879,17]]},"2536":{"position":[[0,23],[24,1],[26,24],[51,39],[91,10],[102,17],[120,40],[161,6],[168,5],[174,36],[211,36],[248,36],[285,18]]},"2539":{"position":[[0,58],[59,7],[123,14],[138,5],[144,10],[155,7]]},"2541":{"position":[[0,29],[30,26],[57,4],[62,2]]},"2543":{"position":[[0,7],[8,24],[33,11],[45,10],[87,25],[113,29],[143,12],[163,13],[177,18],[281,25],[382,42],[443,29],[495,8],[532,16],[565,24],[615,35],[695,36],[784,42],[827,3],[879,17]]},"2545":{"position":[[0,23],[24,1],[26,24],[51,39],[91,10],[102,17],[120,40],[161,6],[168,5],[174,36],[211,36],[248,36],[285,18]]},"2548":{"position":[[0,58],[59,7],[123,14],[138,5],[144,10],[155,7]]},"2550":{"position":[[0,29],[30,26],[57,4],[62,2]]},"2552":{"position":[[0,7],[8,24],[33,11],[45,10],[87,25],[113,29],[143,12],[163,13],[177,18],[281,25],[382,42],[443,29],[495,8],[532,16],[565,24],[615,35],[695,36],[784,42],[827,3],[879,17]]},"2554":{"position":[[0,23],[24,1],[26,24],[51,39],[91,10],[102,17],[120,40],[161,6],[168,5],[174,36],[211,36],[248,36],[285,18]]},"2557":{"position":[[0,5],[6,4]]}}}],["0",{"_index":23,"t":{"10":{"position":[[145,2]]},"101":{"position":[[203,2],[344,2],[347,3],[459,2],[636,2],[639,3],[660,2],[815,2],[818,3],[839,2],[984,1],[1086,2],[1275,1],[1440,1]]},"103":{"position":[[185,2],[353,14],[382,2],[420,10],[444,2],[697,2],[790,2],[803,2],[806,3],[838,2],[1056,2],[1059,3],[1080,2],[1234,2],[1237,3],[1258,2],[1439,2],[1442,3],[1463,2],[1579,2],[2380,2],[2393,2],[2396,3],[2417,2],[2568,2],[2571,3],[2592,2],[2706,2],[2787,2],[2869,2],[2950,2],[3031,2],[3144,1],[3225,2],[3228,3],[3424,2],[3427,3],[3480,2],[3737,2],[3740,4],[3893,2],[3964,2],[3967,3],[4024,2],[4188,2],[4191,3],[4212,2],[4351,1]]},"114":{"position":[[291,1]]},"179":{"position":[[298,1],[314,1],[663,2]]},"198":{"position":[[203,2],[344,2],[347,3],[459,2],[636,2],[639,3],[660,2],[815,2],[818,3],[839,2],[984,1],[1086,2],[1275,1],[1440,1]]},"200":{"position":[[185,2],[353,14],[382,2],[420,10],[444,2],[697,2],[790,2],[803,2],[806,3],[838,2],[1056,2],[1059,3],[1080,2],[1234,2],[1237,3],[1258,2],[1439,2],[1442,3],[1463,2],[1579,2],[2380,2],[2393,2],[2396,3],[2417,2],[2568,2],[2571,3],[2592,2],[2706,2],[2787,2],[2869,2],[2950,2],[3031,2],[3144,1],[3225,2],[3228,3],[3424,2],[3427,3],[3480,2],[3737,2],[3740,4],[3893,2],[3964,2],[3967,3],[4024,2],[4188,2],[4191,3],[4212,2],[4351,1]]},"211":{"position":[[291,1]]},"221":{"position":[[298,1],[314,1],[663,2]]},"245":{"position":[[794,3],[1071,3]]},"255":{"position":[[388,3],[1224,1],[1253,1],[1301,1],[1349,1],[1397,1],[1445,1],[1782,3],[2395,1],[2444,1],[2493,1],[2542,1],[2591,1]]},"257":{"position":[[124,4],[169,4],[285,4],[329,4],[449,2],[482,1],[658,2],[1017,3]]},"289":{"position":[[455,2],[485,2],[622,2],[756,2]]},"295":{"position":[[746,1],[748,1],[767,2],[770,1],[791,2],[794,1],[818,2]]},"363":{"position":[[1402,3],[2569,1],[2598,1],[2646,1],[2694,1],[2742,1],[2790,1]]},"380":{"position":[[836,1],[838,1],[857,2],[860,1],[881,2],[884,1],[908,2]]},"388":{"position":[[379,1]]},"392":{"position":[[257,6],[264,5],[567,2]]},"488":{"position":[[250,2],[477,1]]},"598":{"position":[[348,2],[364,2]]},"604":{"position":[[146,2],[242,2],[258,2]]},"608":{"position":[[87,2]]},"610":{"position":[[92,2]]},"853":{"position":[[246,2],[258,2],[691,1],[1407,3]]},"867":{"position":[[574,22]]},"1094":{"position":[[414,2],[417,2],[748,2],[751,2],[1277,1]]},"1108":{"position":[[180,1],[259,1],[304,1]]},"1118":{"position":[[784,41]]},"1165":{"position":[[298,1],[314,1],[663,2]]},"1223":{"position":[[948,1]]},"1241":{"position":[[130,3],[163,3],[196,3],[234,2]]},"1248":{"position":[[580,2]]},"1255":{"position":[[411,2]]},"1291":{"position":[[98,2]]},"1299":{"position":[[227,2]]},"1301":{"position":[[122,1]]},"1323":{"position":[[247,2]]},"1336":{"position":[[207,14]]},"1340":{"position":[[741,2],[928,2],[931,3]]},"1342":{"position":[[1324,2]]},"1344":{"position":[[203,2],[260,2],[263,4]]},"1346":{"position":[[154,2],[157,3],[216,2],[277,15],[690,3],[735,3]]},"1366":{"position":[[876,3],[977,3]]},"1399":{"position":[[976,2]]},"1404":{"position":[[544,2]]},"1424":{"position":[[647,1]]},"1437":{"position":[[261,1],[537,1]]},"1507":{"position":[[1068,2],[1081,3],[1132,2],[1145,3],[1205,2],[1725,2],[2271,2],[2838,2],[3262,2]]},"1511":{"position":[[207,2],[219,2],[532,2],[541,2],[699,2],[702,2],[771,2],[774,2]]},"1515":{"position":[[1323,1],[1325,1],[1689,2]]},"1518":{"position":[[439,1],[441,1]]},"1626":{"position":[[45,2],[82,1],[194,2],[231,1],[349,2],[442,4],[565,2],[625,1],[648,4]]},"1628":{"position":[[219,2]]},"1636":{"position":[[323,1]]},"1638":{"position":[[738,6],[780,2],[807,2]]},"1695":{"position":[[130,10]]},"1699":{"position":[[163,1]]},"1722":{"position":[[158,8],[189,2],[221,2]]},"1760":{"position":[[142,2]]},"1777":{"position":[[92,2],[139,18]]},"1794":{"position":[[316,5]]},"1842":{"position":[[1279,2]]},"1854":{"position":[[168,3]]},"1872":{"position":[[2512,2]]},"1876":{"position":[[1079,2]]},"1976":{"position":[[178,2]]},"1979":{"position":[[2797,1],[2874,4],[2904,6],[2925,6],[2946,6]]},"1981":{"position":[[1575,5]]},"2003":{"position":[[665,3]]},"2113":{"position":[[266,16]]},"2175":{"position":[[28,22]]},"2181":{"position":[[205,29]]},"2232":{"position":[[690,1]]},"2391":{"position":[[168,1]]},"2443":{"position":[[345,2],[529,3]]},"2488":{"position":[[192,24]]}}}],["0);也就是x为0——200，y为230",{"_index":433,"t":{"101":{"position":[[1089,20]]},"198":{"position":[[1089,20]]}}}],["0)^2+(4",{"_index":6092,"t":{"2441":{"position":[[62,7]]}}}],["0,1,2",{"_index":6181,"t":{"2454":{"position":[[940,14]]}}}],["0,1,2,…,15",{"_index":6050,"t":{"2412":{"position":[[384,55]]}}}],["0,1,2,…,255",{"_index":6052,"t":{"2412":{"position":[[449,34]]}}}],["0,12",{"_index":1004,"t":{"289":{"position":[[759,4]]}}}],["0.0.0.0",{"_index":226,"t":{"45":{"position":[[264,8]]},"2173":{"position":[[58,8],[1093,19]]}}}],["0.00123",{"_index":4246,"t":{"1691":{"position":[[145,7]]},"1718":{"position":[[142,7]]}}}],["0.01",{"_index":6226,"t":{"2469":{"position":[[362,4]]}}}],["0.01,11.65",{"_index":6218,"t":{"2469":{"position":[[222,18]]}}}],["0.02,14.00",{"_index":6219,"t":{"2469":{"position":[[241,12]]}}}],["0.03,16.00",{"_index":6220,"t":{"2469":{"position":[[256,12]]}}}],["0.04,17.74",{"_index":6221,"t":{"2469":{"position":[[271,12]]}}}],["0.05",{"_index":4087,"t":{"1638":{"position":[[203,4],[414,5]]}}}],["0.1",{"_index":4089,"t":{"1638":{"position":[[254,3],[457,3]]}}}],["0.1);}[data",{"_index":2651,"t":{"1094":{"position":[[420,11]]}}}],["0.18,15.94",{"_index":6222,"t":{"2469":{"position":[[284,13]]}}}],["0.19",{"_index":6223,"t":{"2469":{"position":[[300,5]]}}}],["0.1;let",{"_index":4082,"t":{"1638":{"position":[[103,7]]}}}],["0.2",{"_index":4090,"t":{"1638":{"position":[[260,4],[467,6]]}}}],["0.20,20",{"_index":6225,"t":{"2469":{"position":[[313,9]]}}}],["0.25",{"_index":4092,"t":{"1638":{"position":[[426,7]]}}}],["0.2;let",{"_index":4083,"t":{"1638":{"position":[[115,7]]}}}],["0.3",{"_index":2660,"t":{"1094":{"position":[[754,6]]},"1638":{"position":[[317,4],[346,7],[384,7],[444,8],[485,3]]}}}],["0.30000000000000004",{"_index":4091,"t":{"1638":{"position":[[268,19]]}}}],["0.4",{"_index":6276,"t":{"2507":{"position":[[104,5]]}}}],["0.5",{"_index":1453,"t":{"504":{"position":[[85,3]]},"1281":{"position":[[535,3]]},"1468":{"position":[[62,5]]},"1507":{"position":[[427,5],[456,5]]},"1792":{"position":[[71,3]]}}}],["0.5235987755982988",{"_index":1546,"t":{"532":{"position":[[227,18]]}}}],["0.5444085967267008",{"_index":1548,"t":{"534":{"position":[[149,18]]}}}],["0.563",{"_index":3816,"t":{"1511":{"position":[[705,6],[777,6]]}}}],["0.579",{"_index":3818,"t":{"1511":{"position":[[752,6]]}}}],["0.6",{"_index":2050,"t":{"853":{"position":[[414,5]]}}}],["0.632",{"_index":3815,"t":{"1511":{"position":[[680,6]]}}}],["0.7071",{"_index":1524,"t":{"518":{"position":[[271,6]]},"520":{"position":[[271,6]]},"524":{"position":[[331,6]]},"526":{"position":[[340,6]]},"528":{"position":[[298,6]]}}}],["0.7853981633974483",{"_index":1369,"t":{"483":{"position":[[516,18]]},"532":{"position":[[208,18]]}}}],["0.7960235983184115",{"_index":1549,"t":{"534":{"position":[[168,18]]}}}],["00",{"_index":843,"t":{"255":{"position":[[565,4],[1929,4]]},"363":{"position":[[1579,4]]},"2125":{"position":[[1916,2]]}}}],["0000",{"_index":1185,"t":{"392":{"position":[[140,4],[156,4],[546,4],[589,4],[866,4],[999,4]]}}}],["00000",{"_index":895,"t":{"257":{"position":[[137,8],[298,8]]}}}],["000000",{"_index":3196,"t":{"1340":{"position":[[800,10]]}}}],["00000000",{"_index":5636,"t":{"2193":{"position":[[213,9],[299,8],[408,8],[454,8],[507,8],[560,8],[613,8]]}}}],["00000001",{"_index":5556,"t":{"2171":{"position":[[142,8],[151,8]]}}}],["00000001=223.1.1.1",{"_index":5557,"t":{"2171":{"position":[[160,34]]}}}],["00000111",{"_index":5633,"t":{"2193":{"position":[[155,8]]}}}],["0000110",{"_index":5631,"t":{"2193":{"position":[[138,7],[196,7],[232,7]]}}}],["00001110",{"_index":5643,"t":{"2193":{"position":[[390,8],[436,8],[489,8],[542,8],[595,8]]}}}],["0001",{"_index":1188,"t":{"392":{"position":[[197,4],[732,4]]}}}],["00100000",{"_index":5635,"t":{"2193":{"position":[[204,8]]}}}],["00100011",{"_index":5632,"t":{"2193":{"position":[[146,8],[399,8],[445,8]]}}}],["00100111",{"_index":5645,"t":{"2193":{"position":[[498,8]]}}}],["00101011",{"_index":5647,"t":{"2193":{"position":[[551,8]]}}}],["00101111",{"_index":5637,"t":{"2193":{"position":[[240,8],[604,8]]}}}],["0011",{"_index":1183,"t":{"392":{"position":[[126,4],[174,4],[192,4],[211,4],[513,4],[658,4],[727,4],[798,4]]}}}],["005cd6",{"_index":2674,"t":{"1094":{"position":[[1399,7],[1620,8]]}}}],["00:00",{"_index":894,"t":{"257":{"position":[[90,8],[107,8],[251,8],[268,8]]}}}],["00来说，4个字节从高到低依次为00",{"_index":6173,"t":{"2454":{"position":[[648,18]]}}}],["00：00：00if",{"_index":841,"t":{"255":{"position":[[534,10]]},"363":{"position":[[1548,10]]}}}],["01",{"_index":2346,"t":{"1006":{"position":[[101,2]]},"1547":{"position":[[879,2]]},"1565":{"position":[[98,2]]},"1572":{"position":[[198,2]]},"1613":{"position":[[297,2]]},"1618":{"position":[[483,2]]},"1829":{"position":[[340,2]]},"2454":{"position":[[645,2],[667,2]]}}}],["01.j",{"_index":1928,"t":{"782":{"position":[[0,5],[253,5]]}}}],["010",{"_index":4080,"t":{"1638":{"position":[[57,4]]}}}],["02",{"_index":1100,"t":{"359":{"position":[[192,4],[485,4],[668,4]]}}}],["03",{"_index":3990,"t":{"1592":{"position":[[566,2]]}}}],["04",{"_index":1099,"t":{"359":{"position":[[189,2],[482,2],[665,2]]},"1426":{"position":[[240,2],[425,2],[599,2]]},"2454":{"position":[[642,2],[670,2]]}}}],["04.动态参数对象.js`express",{"_index":1967,"t":{"795":{"position":[[290,28]]}}}],["05",{"_index":1102,"t":{"359":{"position":[[220,3],[513,3],[696,3]]},"1049":{"position":[[67,2],[105,2],[136,2]]},"2319":{"position":[[68,2]]}}}],["0571ff",{"_index":2673,"t":{"1094":{"position":[[1355,7],[1582,8]]}}}],["07",{"_index":2352,"t":{"1006":{"position":[[432,2]]}}}],["08",{"_index":1116,"t":{"363":{"position":[[361,2]]},"2319":{"position":[[65,2]]}}}],["08.中间件.j",{"_index":1998,"t":{"825":{"position":[[698,12],[923,12]]}}}],["08:00",{"_index":783,"t":{"245":{"position":[[909,8]]},"257":{"position":[[855,8]]}}}],["09:23:24",{"_index":5166,"t":{"2055":{"position":[[757,8]]}}}],["09:23:24content",{"_index":5161,"t":{"2055":{"position":[[439,15]]}}}],["0=0",{"_index":5281,"t":{"2113":{"position":[[419,28]]}}}],["0=1，0",{"_index":5280,"t":{"2113":{"position":[[413,5]]}}}],["0number",{"_index":4115,"t":{"1640":{"position":[[210,12]]}}}],["0number([1",{"_index":4118,"t":{"1640":{"position":[[285,11]]}}}],["0number(nul",{"_index":4114,"t":{"1640":{"position":[[192,14]]}}}],["0number(undefin",{"_index":4116,"t":{"1640":{"position":[[226,19]]}}}],["0px",{"_index":2063,"t":{"853":{"position":[[559,3],[736,3]]}}}],["0x0000ff",{"_index":42,"t":{"10":{"position":[[727,8]]},"14":{"position":[[68,11]]}}}],["0x10",{"_index":4081,"t":{"1638":{"position":[[76,5]]}}}],["0xff000000）第一个字节为网络号，后三个字节为主机号。该类ip地址的最前面为“0”，所以地址的网络号取值于1~126",{"_index":5563,"t":{"2173":{"position":[[102,74]]}}}],["0xffffff00）前三个字节为网络号，最后一个字节为主机号。该类ip地址的最前面为“110”，所以地址的网络号取值于192~223",{"_index":5568,"t":{"2173":{"position":[[364,79]]}}}],["0xffffff定义的是光照强度。如果设置为0x000000，那么就是没有光照，如果设置为0xffffff，那么就是最大光照。three.js引擎对webgl",{"_index":81,"t":{"16":{"position":[[191,107]]}}}],["0|+|2",{"_index":6090,"t":{"2441":{"position":[[39,5]]}}}],["0|=6",{"_index":6091,"t":{"2441":{"position":[[45,4]]}}}],["0~1/2",{"_index":6271,"t":{"2490":{"position":[[555,9]]}}}],["0~360",{"_index":3267,"t":{"1346":{"position":[[745,13]]}}}],["0~3b）目的是补齐整个首部，符合32位对齐，保证首部长度是4",{"_index":5528,"t":{"2167":{"position":[[832,44]]}}}],["0~40b",{"_index":5527,"t":{"2167":{"position":[[785,46]]}}}],["0~8",{"_index":2949,"t":{"1261":{"position":[[543,28]]}}}],["0分贝的，一般的耳语大约是20分贝，极安静的住宅区40",{"_index":6211,"t":{"2460":{"position":[[631,33]]}}}],["0变1、1变0",{"_index":5896,"t":{"2267":{"position":[[17,47]]}}}],["0变成1，1变成0",{"_index":1191,"t":{"392":{"position":[[297,28]]}}}],["0基础教程，你需要首先具备html、css和一些javascript",{"_index":4786,"t":{"1938":{"position":[[11,39]]}}}],["0度为红色，120°为绿色，240°为蓝色。0°到240°覆盖了所有可见光谱的颜色，240°到300",{"_index":6056,"t":{"2418":{"position":[[88,100]]}}}],["0度的余弦值：1.0",{"_index":1367,"t":{"483":{"position":[[470,10]]}}}],["0开始,在10102中为0i['kcsj'][2",{"_index":909,"t":{"257":{"position":[[1225,28]]}}}],["0开始,在10102中为1",{"_index":910,"t":{"257":{"position":[[1261,16]]}}}],["0或者大于100",{"_index":1820,"t":{"675":{"position":[[0,51]]}}}],["0或者大于150",{"_index":1289,"t":{"443":{"position":[[775,85]]}}}],["0的ip",{"_index":5577,"t":{"2173":{"position":[[1000,26]]}}}],["0的一组字节，直接用一个0",{"_index":5607,"t":{"2181":{"position":[[182,22]]}}}],["0表示灰度图像，为1表示原图def",{"_index":6107,"t":{"2443":{"position":[[350,28]]}}}],["0）=4",{"_index":6096,"t":{"2441":{"position":[[92,4]]}}}],["0，1，……（2^k",{"_index":5314,"t":{"2119":{"position":[[1505,19]]}}}],["0，for",{"_index":903,"t":{"257":{"position":[[497,5]]}}}],["0，l",{"_index":6046,"t":{"2412":{"position":[[265,19]]}}}],["0，你接收正确，那么你必须发送1，之后我开始发下一个数据包（1），如果你发送0给我，那么我就要把0",{"_index":5909,"t":{"2271":{"position":[[203,69]]}}}],["0，则判定这个帧没有差错，就接受(accept",{"_index":5276,"t":{"2113":{"position":[[233,28]]}}}],["0，否则为1",{"_index":1190,"t":{"392":{"position":[[274,20]]}}}],["0，当传输层从ip层收到udp数据报时，根据首部中的目标端口，把udp数据通过相应的端口交给应用进程。若接收方udp发现收到的报文中目的端口号不正确，就丢弃该报文，由icmp",{"_index":5874,"t":{"2252":{"position":[[159,123]]}}}],["0：00",{"_index":991,"t":{"289":{"position":[[372,4]]}}}],["0：11",{"_index":977,"t":{"289":{"position":[[19,4],[255,9],[265,5]]}}}],["1",{"_index":65,"t":{"10":{"position":[[1347,2],[1586,3]]},"18":{"position":[[72,2]]},"20":{"position":[[125,3]]},"101":{"position":[[176,14],[273,5],[939,3]]},"103":{"position":[[158,14],[500,2],[670,14],[3108,3],[4315,3]]},"179":{"position":[[902,2],[1061,1],[1108,1]]},"198":{"position":[[176,14],[273,5],[939,3]]},"200":{"position":[[158,14],[500,2],[670,14],[3108,3],[4315,3]]},"221":{"position":[[902,2],[1061,1],[1108,1]]},"243":{"position":[[62,4],[67,1],[95,1]]},"245":{"position":[[75,3],[935,4]]},"249":{"position":[[236,2]]},"251":{"position":[[271,1]]},"253":{"position":[[115,1]]},"255":{"position":[[306,1],[690,2],[1503,1],[1732,1],[2018,1],[2437,1],[2650,1]]},"257":{"position":[[881,4]]},"259":{"position":[[133,2]]},"289":{"position":[[529,2],[564,2],[719,1],[797,1]]},"293":{"position":[[463,1]]},"295":{"position":[[802,1]]},"363":{"position":[[337,2],[1321,1],[1704,2],[2848,1]]},"365":{"position":[[469,3]]},"376":{"position":[[412,1]]},"380":{"position":[[892,1]]},"388":{"position":[[104,8],[120,8],[371,1],[375,1],[814,2]]},"392":{"position":[[270,1]]},"396":{"position":[[211,1],[244,2]]},"402":{"position":[[9,1],[192,20]]},"422":{"position":[[9,3]]},"424":{"position":[[9,3]]},"483":{"position":[[508,7]]},"488":{"position":[[267,2],[283,2],[475,1],[480,1]]},"563":{"position":[[549,1],[582,2],[609,2],[625,2]]},"565":{"position":[[36,1],[287,1]]},"604":{"position":[[397,2]]},"608":{"position":[[215,2]]},"610":{"position":[[115,2]]},"616":{"position":[[244,2]]},"618":{"position":[[185,1],[332,3]]},"648":{"position":[[105,8]]},"681":{"position":[[199,3],[234,3],[270,3],[287,4],[296,3],[304,3]]},"757":{"position":[[178,1],[285,1],[390,1],[398,1],[461,1],[463,1],[468,1],[475,1],[482,1],[489,1],[498,1],[533,1],[568,1],[603,1],[655,1],[657,1],[659,1],[663,1],[667,1],[671,1],[677,1],[697,1],[717,1],[737,1],[826,61],[1050,52]]},"1108":{"position":[[257,1],[302,1]]},"1144":{"position":[[0,55]]},"1165":{"position":[[902,2],[1061,1],[1108,1]]},"1227":{"position":[[21,2]]},"1229":{"position":[[21,2]]},"1241":{"position":[[134,2],[174,3]]},"1271":{"position":[[58,1]]},"1279":{"position":[[191,3]]},"1287":{"position":[[79,1]]},"1299":{"position":[[364,1]]},"1323":{"position":[[548,2]]},"1342":{"position":[[972,2],[1082,2]]},"1344":{"position":[[156,2]]},"1346":{"position":[[1090,2]]},"1364":{"position":[[219,3]]},"1366":{"position":[[1628,3]]},"1395":{"position":[[547,4]]},"1399":{"position":[[999,2]]},"1404":{"position":[[134,1],[992,1]]},"1406":{"position":[[175,1],[269,2]]},"1418":{"position":[[277,2]]},"1420":{"position":[[1140,2]]},"1424":{"position":[[117,3],[237,3],[662,1]]},"1437":{"position":[[136,2],[399,2]]},"1445":{"position":[[763,3],[1140,2]]},"1487":{"position":[[97,1],[310,1]]},"1507":{"position":[[1100,5],[1164,4]]},"1511":{"position":[[687,3],[759,3],[867,2]]},"1515":{"position":[[1397,2]]},"1555":{"position":[[192,12]]},"1622":{"position":[[187,1]]},"1626":{"position":[[84,1],[233,1],[627,1]]},"1638":{"position":[[527,6],[542,2],[683,2],[716,2],[776,1],[803,1],[853,1],[897,2],[912,2],[927,2]]},"1659":{"position":[[71,1]]},"1695":{"position":[[141,9]]},"1711":{"position":[[90,2],[141,2]]},"1743":{"position":[[240,2],[282,2]]},"1758":{"position":[[82,3]]},"1781":{"position":[[33,1],[194,3]]},"1788":{"position":[[106,4],[184,2],[282,2]]},"1790":{"position":[[399,2]]},"1792":{"position":[[23,2]]},"1794":{"position":[[282,3],[305,3]]},"1838":{"position":[[351,2],[464,2]]},"1872":{"position":[[1282,1]]},"1964":{"position":[[565,1]]},"1981":{"position":[[201,10],[1610,5],[1675,8]]},"1999":{"position":[[114,3]]},"2066":{"position":[[117,7]]},"2109":{"position":[[11,26],[38,26]]},"2111":{"position":[[43,20]]},"2113":{"position":[[177,3],[550,4]]},"2119":{"position":[[674,2]]},"2136":{"position":[[523,6]]},"2138":{"position":[[0,5],[2630,3],[3153,3]]},"2141":{"position":[[0,28],[301,1]]},"2144":{"position":[[686,1]]},"2148":{"position":[[13,1]]},"2164":{"position":[[78,16]]},"2167":{"position":[[881,3]]},"2195":{"position":[[559,2]]},"2208":{"position":[[254,23]]},"2247":{"position":[[1762,8]]},"2256":{"position":[[127,29]]},"2258":{"position":[[94,1]]},"2281":{"position":[[365,6],[459,109]]},"2382":{"position":[[0,3]]},"2384":{"position":[[38,3]]},"2391":{"position":[[197,1]]},"2395":{"position":[[85,12]]},"2409":{"position":[[73,3],[144,14]]},"2412":{"position":[[285,6],[292,2],[359,3]]},"2439":{"position":[[170,6]]},"2443":{"position":[[88,21],[626,1],[1033,13],[1120,8],[1147,8]]},"2454":{"position":[[265,2],[878,11],[1182,23]]},"2460":{"position":[[907,39]]},"2476":{"position":[[7,3]]},"2490":{"position":[[774,19]]}}}],["1)+kd=x/b+kd+(p/b)×(k",{"_index":5258,"t":{"2079":{"position":[[975,21]]}}}],["1),1<=i<=n,n为片数，可以看出第1片的偏移数为0",{"_index":5549,"t":{"2169":{"position":[[760,30]]}}}],["1).如果分别采用gbn、sr和tcp协议，则对应这三个协议，主机a分别总共发了多少个报文段？主机b分别总共发送了多少个ack？它们的序号是什么？(针对3",{"_index":5440,"t":{"2138":{"position":[[2476,87]]}}}],["1);传播时延是kd;故总时延是：（x/p）×(p/b",{"_index":5256,"t":{"2079":{"position":[[936,29]]}}}],["1);当s>(k",{"_index":5259,"t":{"2079":{"position":[[997,8]]}}}],["1)a",{"_index":784,"t":{"245":{"position":[[943,15]]},"257":{"position":[[889,15]]}}}],["1)d，其他片为d+20",{"_index":5550,"t":{"2169":{"position":[[810,13]]}}}],["1)×(p/b)时，电路交换的时延比分组交换的时延大，当x>>p",{"_index":5260,"t":{"2079":{"position":[[1006,36]]}}}],["1)。最小的ip分组首部20b，ip可以封装的最大数据：65535",{"_index":5520,"t":{"2167":{"position":[[365,33]]}}}],["1)次的储存转发延迟,(p/b",{"_index":5255,"t":{"2079":{"position":[[915,17]]}}}],["1,2,3",{"_index":1794,"t":{"644":{"position":[[186,10]]}}}],["1,2,3,4,5,6,7,8,9,0}m",{"_index":1801,"t":{"652":{"position":[[84,22]]}}}],["1,2,3}d2",{"_index":1804,"t":{"654":{"position":[[95,9]]}}}],["1,a),(1,b),(1,c),(2,a),(2,b),(2,c),(3,a),(3,b),(3,c",{"_index":1796,"t":{"644":{"position":[[232,56]]},"654":{"position":[[122,55]]}}}],["1.0",{"_index":1366,"t":{"483":{"position":[[460,9]]},"1547":{"position":[[315,3]]},"2265":{"position":[[13,33]]}}}],["1.0.0",{"_index":582,"t":{"126":{"position":[[133,5]]}}}],["1.0000",{"_index":1527,"t":{"522":{"position":[[271,6]]}}}],["1.5",{"_index":3764,"t":{"1507":{"position":[[44,4],[89,4],[422,4],[451,4]]}}}],["1.535mbps/24=64kbp",{"_index":5404,"t":{"2138":{"position":[[117,19]]}}}],["1.536mbps，每条链路采用时隙数为24的tdm，建立端到端的电路需要500m",{"_index":5403,"t":{"2138":{"position":[[56,52]]}}}],["1.5rem",{"_index":3852,"t":{"1526":{"position":[[60,18]]}}}],["1.6",{"_index":1398,"t":{"490":{"position":[[153,4]]}}}],["1.7976931348623157e+308number.min_valu",{"_index":4095,"t":{"1638":{"position":[[566,40]]}}}],["1.8e+308",{"_index":1582,"t":{"565":{"position":[[232,8]]}}}],["1.9",{"_index":1679,"t":{"604":{"position":[[99,5],[510,3]]},"606":{"position":[[159,5]]}}}],["1.png",{"_index":406,"t":{"101":{"position":[[154,10]]},"198":{"position":[[154,10]]}}}],["1.png\"></imag",{"_index":4710,"t":{"1905":{"position":[[324,15]]}}}],["1.x",{"_index":3619,"t":{"1428":{"position":[[119,3]]}}}],["1.分组头部包含k",{"_index":5928,"t":{"2279":{"position":[[10,9]]}}}],["1.在http响应报文中有一个cooki",{"_index":5142,"t":{"2051":{"position":[[19,25]]}}}],["1.真彩色：图像深度为24，rgb各占用8",{"_index":6071,"t":{"2432":{"position":[[0,34]]}}}],["1.设f和g分别是源图像和处理后的图像,求f的直方图h",{"_index":6136,"t":{"2445":{"position":[[48,28]]}}}],["1.访问北京林业大学网站www.bjfu.edu.cn",{"_index":5951,"t":{"2287":{"position":[[0,27]]}}}],["1.运行bind软件的unix",{"_index":5220,"t":{"2064":{"position":[[71,18]]}}}],["1/（1+5*d1/d2",{"_index":5318,"t":{"2119":{"position":[[1724,13]]}}}],["10",{"_index":606,"t":{"140":{"position":[[164,2]]},"255":{"position":[[765,3],[1768,3],[2633,2]]},"293":{"position":[[456,2]]},"310":{"position":[[416,5]]},"363":{"position":[[1779,3]]},"376":{"position":[[405,2]]},"388":{"position":[[671,3],[675,4],[701,4]]},"390":{"position":[[349,3]]},"396":{"position":[[196,3],[315,2],[349,3]]},"406":{"position":[[120,3]]},"408":{"position":[[280,3]]},"410":{"position":[[366,3]]},"412":{"position":[[215,4]]},"414":{"position":[[152,4],[296,2]]},"416":{"position":[[203,4],[367,2]]},"490":{"position":[[244,3]]},"496":{"position":[[267,3]]},"563":{"position":[[124,7]]},"598":{"position":[[85,3]]},"652":{"position":[[109,2]]},"847":{"position":[[945,2]]},"1108":{"position":[[231,2]]},"1340":{"position":[[247,3],[1044,3]]},"1344":{"position":[[206,4]]},"1426":{"position":[[243,3],[428,2],[602,2]]},"1439":{"position":[[58,6]]},"1626":{"position":[[52,3],[121,2],[201,3],[356,3],[409,2],[412,2],[415,2],[418,2],[421,2],[424,2],[427,2],[430,2],[433,2],[436,2],[486,2],[491,7],[534,6],[572,3]]},"1628":{"position":[[226,3]]},"1638":{"position":[[39,3]]},"1720":{"position":[[156,5],[170,2]]},"1735":{"position":[[165,5]]},"1737":{"position":[[180,5]]},"1743":{"position":[[250,4],[292,4]]},"2141":{"position":[[88,2]]},"2460":{"position":[[475,29]]}}}],["10);}if",{"_index":1079,"t":{"310":{"position":[[124,7],[221,7],[318,7]]}}}],["10,20,30,40,50",{"_index":1232,"t":{"412":{"position":[[472,15]]}}}],["10.0",{"_index":700,"t":{"179":{"position":[[391,5]]},"221":{"position":[[391,5]]},"1165":{"position":[[391,5]]}}}],["10.33parsefloat(\"10",{"_index":4306,"t":{"1737":{"position":[[93,19]]}}}],["100",{"_index":38,"t":{"10":{"position":[[640,4],[645,5]]},"12":{"position":[[63,4],[68,7]]},"103":{"position":[[323,4]]},"200":{"position":[[323,4]]},"257":{"position":[[352,5],[376,5]]},"388":{"position":[[696,4]]},"498":{"position":[[93,4]]},"504":{"position":[[404,4],[579,3]]},"853":{"position":[[269,5]]},"1108":{"position":[[373,3],[411,3]]},"1277":{"position":[[100,4]]},"1323":{"position":[[362,3]]},"1346":{"position":[[859,4]]},"1507":{"position":[[1085,4],[1149,4]]},"1511":{"position":[[241,5],[255,5],[601,5],[615,5]]},"1515":{"position":[[932,5],[1769,4]]},"1720":{"position":[[80,3],[150,3],[222,3]]},"1725":{"position":[[158,3]]},"1733":{"position":[[123,3]]},"1743":{"position":[[235,4],[277,4]]},"1788":{"position":[[90,8],[179,4],[277,4]]},"1790":{"position":[[138,3],[188,8],[221,3],[394,4]]},"1792":{"position":[[18,4]]},"1960":{"position":[[166,5]]},"1976":{"position":[[64,5]]},"1979":{"position":[[2735,5],[2760,5]]}}}],["100);document.getelementbyid(\"demo\").innerhtml",{"_index":4434,"t":{"1803":{"position":[[1155,46]]}}}],["100);function",{"_index":4432,"t":{"1803":{"position":[[913,13]]}}}],["100.0",{"_index":1430,"t":{"498":{"position":[[222,5]]},"500":{"position":[[497,5]]},"502":{"position":[[342,5],[348,5]]}}}],["100.200",{"_index":1447,"t":{"502":{"position":[[218,8]]}}}],["100.500",{"_index":1446,"t":{"502":{"position":[[198,8]]},"504":{"position":[[385,8]]}}}],["100.675",{"_index":1438,"t":{"500":{"position":[[316,8]]},"502":{"position":[[178,8]]},"504":{"position":[[365,8]]}}}],["1000",{"_index":66,"t":{"10":{"position":[[1350,6]]},"101":{"position":[[165,5]]},"103":{"position":[[147,5],[659,5]]},"198":{"position":[[165,5]]},"200":{"position":[[147,5],[659,5]]},"257":{"position":[[533,4]]},"853":{"position":[[1350,5]]},"1108":{"position":[[76,4]]},"1299":{"position":[[469,6]]},"1344":{"position":[[159,6]]}}}],["1000);camera.position.set(200",{"_index":83,"t":{"18":{"position":[[75,30]]}}}],["10000",{"_index":5006,"t":{"1989":{"position":[[428,6],[451,5]]}}}],["10000000",{"_index":5634,"t":{"2193":{"position":[[187,8],[223,8],[381,8],[427,8],[480,8],[533,8],[586,8]]}}}],["1000px",{"_index":3356,"t":{"1366":{"position":[[1248,9]]},"1507":{"position":[[1760,8],[1806,8],[2042,8],[2088,8]]}}}],["1000px,0",{"_index":3792,"t":{"1507":{"position":[[3295,10],[3328,10],[3508,10],[3541,10]]}}}],["1000px,1000px",{"_index":3789,"t":{"1507":{"position":[[2304,15],[2355,15],[2598,15],[2649,15]]}}}],["10086",{"_index":1968,"t":{"798":{"position":[[14,5]]}}}],["100gb的带宽，300",{"_index":2814,"t":{"1220":{"position":[[41,23]]}}}],["100m",{"_index":5101,"t":{"2037":{"position":[[138,7],[189,7],[233,7]]}}}],["100mb",{"_index":3100,"t":{"1323":{"position":[[0,33],[366,11]]}}}],["100px",{"_index":3198,"t":{"1340":{"position":[[835,5]]},"1515":{"position":[[1077,6]]},"1518":{"position":[[245,6]]}}}],["100rpx",{"_index":4932,"t":{"1979":{"position":[[2348,7]]}}}],["100rpx;}.p1",{"_index":4805,"t":{"1960":{"position":[[240,12]]}}}],["100～500hz",{"_index":6258,"t":{"2476":{"position":[[516,20]]}}}],["101",{"_index":781,"t":{"245":{"position":[[858,8]]},"257":{"position":[[804,8]]},"504":{"position":[[571,3],[575,3]]},"616":{"position":[[363,5]]}}}],["101.0",{"_index":1443,"t":{"500":{"position":[[485,5]]},"502":{"position":[[336,5]]}}}],["10101100.00010000.**00**000000.00000000",{"_index":5464,"t":{"2138":{"position":[[3988,40]]}}}],["10101100.00010000.**00**111111.11111111",{"_index":5465,"t":{"2138":{"position":[[4029,39]]}}}],["10101100.00010000.**01**000000.00000000",{"_index":5466,"t":{"2138":{"position":[[4073,40]]}}}],["10101100.00010000.**01**111111.11111111",{"_index":5467,"t":{"2138":{"position":[[4114,39]]}}}],["10101100.00010000.**10**000000.00000000",{"_index":5468,"t":{"2138":{"position":[[4158,40]]}}}],["10101100.00010000.**10**111111.11111111",{"_index":5469,"t":{"2138":{"position":[[4199,39]]}}}],["10101100.00010000.**11**000000.00000000",{"_index":5470,"t":{"2138":{"position":[[4243,40]]}}}],["10101100.00010000.**11**111111.11111111",{"_index":5471,"t":{"2138":{"position":[[4284,39]]}}}],["10102",{"_index":778,"t":{"245":{"position":[[744,8],[997,8]]},"257":{"position":[[943,8],[1153,7]]}}}],["102",{"_index":1735,"t":{"616":{"position":[[369,4]]}}}],["1024",{"_index":3113,"t":{"1323":{"position":[[348,4],[355,4],[404,4],[411,4]]}}}],["103",{"_index":1736,"t":{"616":{"position":[[374,4]]}}}],["104",{"_index":1737,"t":{"616":{"position":[[379,5]]}}}],["107px",{"_index":3337,"t":{"1366":{"position":[[833,6]]}}}],["1080（tcp",{"_index":5837,"t":{"2244":{"position":[[143,9]]}}}],["109",{"_index":1741,"t":{"616":{"position":[[539,5]]}}}],["1092",{"_index":1419,"t":{"494":{"position":[[799,4]]},"496":{"position":[[533,4]]}}}],["10;`fifteen",{"_index":4144,"t":{"1642":{"position":[[640,11],[839,11]]}}}],["10];document.getelementbyid(\"demo\").innerhtml",{"_index":4389,"t":{"1790":{"position":[[409,45]]}}}],["10];points.sort(function(a",{"_index":4382,"t":{"1788":{"position":[[194,27],[292,27]]},"1792":{"position":[[33,27]]}}}],["10]]},method",{"_index":3636,"t":{"1437":{"position":[[429,14]]}}}],["10els",{"_index":878,"t":{"255":{"position":[[1487,7]]},"363":{"position":[[2832,7]]}}}],["10kbps~5mbp",{"_index":5104,"t":{"2037":{"position":[[172,16]]}}}],["10khz时，选择窗宽度n=100~200",{"_index":6272,"t":{"2490":{"position":[[721,37]]}}}],["10m",{"_index":1854,"t":{"698":{"position":[[466,12]]}}}],["10m*10m的格子被划分成一个像素。那么图像的分辨率就为10m",{"_index":6018,"t":{"2399":{"position":[[407,55]]}}}],["10mb",{"_index":1856,"t":{"698":{"position":[[496,15]]}}}],["10ms~30m",{"_index":6269,"t":{"2490":{"position":[[323,59],[383,63]]}}}],["10ms～30m",{"_index":6273,"t":{"2499":{"position":[[305,34]]}}}],["10parsefloat(\"10",{"_index":4307,"t":{"1737":{"position":[[128,16]]}}}],["10parsefloat(\"10.33",{"_index":4305,"t":{"1737":{"position":[[64,22]]}}}],["10parsefloat(\"year",{"_index":4308,"t":{"1737":{"position":[[160,19]]}}}],["10parseint(\"10",{"_index":4302,"t":{"1735":{"position":[[87,14],[117,14]]}}}],["10parseint(\"10.33",{"_index":4301,"t":{"1735":{"position":[[60,20]]}}}],["10parseint(\"year",{"_index":4303,"t":{"1735":{"position":[[147,17]]}}}],["10px",{"_index":2060,"t":{"853":{"position":[[535,4]]},"1366":{"position":[[1024,5]]},"1511":{"position":[[846,4],[851,5]]},"1515":{"position":[[1224,5],[1513,4]]},"1518":{"position":[[340,5]]},"1981":{"position":[[987,6],[1139,5],[1153,7]]}}}],["10px;}.squar",{"_index":2908,"t":{"1248":{"position":[[393,13]]}}}],["10x.tofixed(2",{"_index":4286,"t":{"1729":{"position":[[66,15]]}}}],["10分贝等于强度增加10倍，增加20分贝增加100倍，30分贝则增加1000",{"_index":6210,"t":{"2460":{"position":[[585,45]]}}}],["10时，参数k等于重传次数；当重传次数超过10时，k就不再增大一直等于10",{"_index":5316,"t":{"2119":{"position":[[1558,46]]}}}],["10，前面加0if",{"_index":833,"t":{"255":{"position":[[352,15]]},"363":{"position":[[1367,15]]}}}],["11",{"_index":748,"t":{"204":{"position":[[5,3]]},"289":{"position":[[54,25],[223,3]]},"504":{"position":[[148,3]]},"616":{"position":[[316,3]]},"869":{"position":[[27,3]]},"955":{"position":[[163,2]]},"969":{"position":[[116,4]]},"1293":{"position":[[6,2]]},"1842":{"position":[[2221,2],[2303,3]]}}}],["11,025",{"_index":6231,"t":{"2469":{"position":[[653,6]]}}}],["11.5",{"_index":1456,"t":{"504":{"position":[[136,5]]}}}],["11.635",{"_index":1485,"t":{"510":{"position":[[116,7]]},"512":{"position":[[97,7]]},"514":{"position":[[181,7]]},"516":{"position":[[96,7]]}}}],["11.65",{"_index":6227,"t":{"2469":{"position":[[395,5]]}}}],["11.7",{"_index":1687,"t":{"604":{"position":[[535,4]]}}}],["11.txt",{"_index":2239,"t":{"939":{"position":[[476,6]]}}}],["110",{"_index":3320,"t":{"1366":{"position":[[275,5]]}}}],["1100",{"_index":1184,"t":{"392":{"position":[[131,4],[161,4],[206,4],[518,4],[594,4],[793,4]]},"1334":{"position":[[197,5]]}}}],["1100px",{"_index":3315,"t":{"1366":{"position":[[186,8]]}}}],["1101",{"_index":1186,"t":{"392":{"position":[[145,4],[179,4],[551,4],[663,4]]}}}],["110108",{"_index":1105,"t":{"359":{"position":[[247,8],[540,8],[723,8]]}}}],["11011111",{"_index":5555,"t":{"2171":{"position":[[130,11]]}}}],["110px",{"_index":3835,"t":{"1515":{"position":[[1012,6]]},"1518":{"position":[[180,6]]}}}],["110上的tcp连接后，pop3开始工作。pop3",{"_index":5210,"t":{"2059":{"position":[[221,68]]}}}],["110（tcp",{"_index":5833,"t":{"2244":{"position":[[103,8]]}}}],["1111",{"_index":1195,"t":{"392":{"position":[[861,4],[932,4],[1004,4]]},"939":{"position":[[485,4],[539,4]]},"941":{"position":[[210,8]]}}}],["11110000",{"_index":5640,"t":{"2193":{"position":[[290,8]]}}}],["1111011'a.tostring(8",{"_index":4140,"t":{"1642":{"position":[[534,23]]}}}],["11111111",{"_index":5638,"t":{"2193":{"position":[[249,8],[281,8]]}}}],["11111111.11111100.00000000.00000000",{"_index":5461,"t":{"2138":{"position":[[3727,49]]}}}],["11111111.11111111.11100000.00000000",{"_index":5591,"t":{"2177":{"position":[[281,37]]}}}],["11111111.11111111.11111100.00000000(22位1",{"_index":5764,"t":{"2214":{"position":[[471,46]]}}}],["11111111.11111111.11111111.10000000",{"_index":5767,"t":{"2214":{"position":[[599,35]]}}}],["11123",{"_index":1662,"t":{"598":{"position":[[313,6]]}}}],["112983.831",{"_index":1495,"t":{"510":{"position":[[275,10]]}}}],["11367.373",{"_index":1665,"t":{"598":{"position":[[454,9]]}}}],["11\\111.txt",{"_index":2247,"t":{"941":{"position":[[296,11]]}}}],["11\\\\module.j",{"_index":2303,"t":{"969":{"position":[[173,15]]}}}],["11\\\\node_modul",{"_index":2305,"t":{"969":{"position":[[256,18]]}}}],["11号楼room",{"_index":974,"t":{"287":{"position":[[501,16]]}}}],["12",{"_index":674,"t":{"165":{"position":[[5,3]]},"175":{"position":[[5,3]]},"194":{"position":[[5,3]]},"255":{"position":[[769,3]]},"289":{"position":[[569,2]]},"363":{"position":[[1783,3]]},"392":{"position":[[584,2],[1066,2]]},"492":{"position":[[164,2]]},"616":{"position":[[330,3]]},"623":{"position":[[189,3]]},"1012":{"position":[[53,2]]},"1842":{"position":[[298,2],[1313,2],[1396,3]]},"2072":{"position":[[78,2]]},"2193":{"position":[[164,22]]},"2469":{"position":[[1077,2]]}}}],["12.123",{"_index":1474,"t":{"506":{"position":[[292,6]]}}}],["12.456",{"_index":1471,"t":{"506":{"position":[[232,9]]}}}],["12.5",{"_index":5569,"t":{"2173":{"position":[[444,5]]}}}],["120",{"_index":6213,"t":{"2460":{"position":[[699,7]]}}}],["123",{"_index":1178,"t":{"388":{"position":[[795,7]]},"1725":{"position":[[117,3],[170,3]]},"1733":{"position":[[83,3],[135,3]]}}}],["123'a.tostring(2",{"_index":4139,"t":{"1642":{"position":[[511,19]]}}}],["123(100",{"_index":4277,"t":{"1725":{"position":[[124,7]]},"1733":{"position":[[90,7]]}}}],["123(123).tostr",{"_index":4276,"t":{"1725":{"position":[[89,20]]}}}],["123(123).valueof",{"_index":4298,"t":{"1733":{"position":[[56,19]]}}}],["123.456",{"_index":4124,"t":{"1640":{"position":[[461,7]]}}}],["123.456parsefloat('abc123.456",{"_index":4122,"t":{"1640":{"position":[[392,32]]}}}],["12300000var",{"_index":4244,"t":{"1691":{"position":[[118,11]]},"1718":{"position":[[115,11]]}}}],["12345",{"_index":4188,"t":{"1659":{"position":[[335,9]]},"1661":{"position":[[247,6]]}}}],["12345678901master",{"_index":973,"t":{"287":{"position":[[454,24]]}}}],["123;a.tostr",{"_index":4138,"t":{"1642":{"position":[[490,17]]}}}],["123;x.tostr",{"_index":4275,"t":{"1725":{"position":[[59,17]]}}}],["123;x.valueof",{"_index":4297,"t":{"1733":{"position":[[27,16]]}}}],["123e",{"_index":4245,"t":{"1691":{"position":[[134,4]]},"1718":{"position":[[131,4]]}}}],["123e5",{"_index":4243,"t":{"1691":{"position":[[108,6]]},"1718":{"position":[[105,6]]}}}],["123number('123abc",{"_index":4111,"t":{"1640":{"position":[[129,20]]}}}],["123parseint('abc123",{"_index":4120,"t":{"1640":{"position":[[334,22]]}}}],["127.0.0.1",{"_index":2174,"t":{"879":{"position":[[247,9]]},"885":{"position":[[20,9]]},"2173":{"position":[[1055,9]]},"2179":{"position":[[75,9]]}}}],["127.0.0.1?name=zs&age=20",{"_index":1940,"t":{"784":{"position":[[193,31]]}}}],["127.255.255.254（去掉0和255",{"_index":5600,"t":{"2179":{"position":[[88,24]]}}}],["127.255.255.255)（默认子网掩码：255.0.0.0",{"_index":5562,"t":{"2173":{"position":[[67,34]]}}}],["127，主机号不为全0或者全1",{"_index":5580,"t":{"2175":{"position":[[51,34]]}}}],["128.0.0.0",{"_index":5564,"t":{"2173":{"position":[[183,10]]}}}],["128.14.35.0/20",{"_index":5642,"t":{"2193":{"position":[[332,24],[364,14]]}}}],["128.14.35.0/22",{"_index":5644,"t":{"2193":{"position":[[465,14]]}}}],["128.14.35.7/20=10000000",{"_index":5630,"t":{"2193":{"position":[[114,23]]}}}],["128.14.39.0/22",{"_index":5646,"t":{"2193":{"position":[[518,14]]}}}],["128.14.43.0/22",{"_index":5648,"t":{"2193":{"position":[[571,14]]}}}],["128.14.47.0/22",{"_index":5649,"t":{"2193":{"position":[[624,14]]}}}],["128~127",{"_index":1577,"t":{"565":{"position":[[42,7]]}}}],["128×128,64×64,32×32,16×16",{"_index":6025,"t":{"2403":{"position":[[84,33]]}}}],["12:15",{"_index":846,"t":{"255":{"position":[[702,5]]},"363":{"position":[[1716,5]]}}}],["12，math.round",{"_index":1455,"t":{"504":{"position":[[121,14]]}}}],["13",{"_index":672,"t":{"163":{"position":[[5,3]]},"392":{"position":[[104,17],[534,3],[541,2]]},"1301":{"position":[[93,28]]},"1842":{"position":[[171,2],[367,3]]},"1905":{"position":[[313,2]]},"1960":{"position":[[415,2]]},"2167":{"position":[[506,27]]}}}],["13.2",{"_index":1650,"t":{"598":{"position":[[202,5]]}}}],["130",{"_index":432,"t":{"101":{"position":[[1010,3]]},"198":{"position":[[1010,3]]}}}],["1300",{"_index":502,"t":{"103":{"position":[[3343,4],[3656,4]]},"200":{"position":[[3343,4],[3656,4]]}}}],["1311679880/iphon",{"_index":4708,"t":{"1905":{"position":[[295,17]]}}}],["13:30",{"_index":848,"t":{"255":{"position":[[715,5]]},"363":{"position":[[1729,5]]}}}],["13px",{"_index":3452,"t":{"1380":{"position":[[353,6]]}}}],["13位，一个ip分组片封装原ip分组的相对偏移量。它封装原ip",{"_index":5540,"t":{"2169":{"position":[[435,84]]}}}],["13套，每套都只有一个主根名称服务器。其中10台在美国，2",{"_index":5227,"t":{"2066":{"position":[[200,94]]}}}],["13部分称为ip",{"_index":5529,"t":{"2167":{"position":[[885,14]]}}}],["14",{"_index":4549,"t":{"1860":{"position":[[86,203]]},"2454":{"position":[[65,26],[311,26]]}}}],["14.00",{"_index":6228,"t":{"2469":{"position":[[401,5]]}}}],["140",{"_index":486,"t":{"103":{"position":[[1627,4],[1680,4],[1733,4],[1785,4],[1837,4],[2754,4],[2836,4],[2918,4],[2999,4],[3080,4]]},"200":{"position":[[1627,4],[1680,4],[1733,4],[1785,4],[1837,4],[2754,4],[2836,4],[2918,4],[2999,4],[3080,4]]}}}],["147aff",{"_index":2672,"t":{"1094":{"position":[[1312,7],[1545,8]]}}}],["14px",{"_index":2895,"t":{"1248":{"position":[[221,4]]}}}],["14，即最多有14",{"_index":5925,"t":{"2277":{"position":[[34,40]]}}}],["15",{"_index":609,"t":{"145":{"position":[[5,3]]},"392":{"position":[[927,2],[994,2],[1122,2],[1135,2]]},"565":{"position":[[241,3]]},"1108":{"position":[[177,2]]},"1642":{"position":[[703,2],[902,2]]},"2055":{"position":[[927,2]]}}}],["150",{"_index":413,"t":{"101":{"position":[[339,4]]},"103":{"position":[[3959,4],[4130,5]]},"198":{"position":[[339,4]]},"200":{"position":[[3959,4],[4130,5]]}}}],["1500",{"_index":5353,"t":{"2127":{"position":[[237,8]]}}}],["1500改为1504或1503",{"_index":5552,"t":{"2169":{"position":[[845,32]]}}}],["1526字节，但是实际上我们抓包得到的最大帧是1514字节，为什么不是1526",{"_index":5362,"t":{"2127":{"position":[[1511,54]]}}}],["15:05",{"_index":849,"t":{"255":{"position":[[721,5]]},"363":{"position":[[1735,5]]}}}],["15:20",{"_index":850,"t":{"255":{"position":[[734,5]]},"363":{"position":[[1748,5]]}}}],["15:39:29server",{"_index":5156,"t":{"2055":{"position":[[373,15],[939,15]]}}}],["15rpx",{"_index":4945,"t":{"1979":{"position":[[2688,6]]}}}],["15或0至255，这样就使每一个4位或8",{"_index":6074,"t":{"2434":{"position":[[58,29]]}}}],["15，16",{"_index":5777,"t":{"2218":{"position":[[165,28]]}}}],["16",{"_index":1414,"t":{"494":{"position":[[683,2]]},"496":{"position":[[279,2]]},"1642":{"position":[[16,2],[207,2],[220,2],[239,2],[264,2]]},"1797":{"position":[[71,3],[343,3]]},"1799":{"position":[[113,3],[418,3]]},"1801":{"position":[[104,3],[313,3]]},"1803":{"position":[[144,3],[401,3],[714,3],[867,3],[1110,3]]},"1805":{"position":[[154,3],[382,3]]},"1807":{"position":[[70,3],[278,3]]},"1809":{"position":[[70,3]]},"1811":{"position":[[76,3]]},"1813":{"position":[[79,3]]},"2119":{"position":[[1605,59]]},"2167":{"position":[[410,25]]},"2247":{"position":[[552,4],[572,4],[647,4],[666,4],[1019,10],[1585,8],[1666,6]]},"2469":{"position":[[1052,2]]}}}],["16,0",{"_index":985,"t":{"289":{"position":[[227,4]]}}}],["16.00",{"_index":6229,"t":{"2469":{"position":[[407,5]]}}}],["160",{"_index":417,"t":{"101":{"position":[[535,11],[561,4],[1639,5]]},"103":{"position":[[798,4],[1888,4],[2388,4],[4091,4]]},"198":{"position":[[535,11],[561,4],[1639,5]]},"200":{"position":[[798,4],[1888,4],[2388,4],[4091,4]]}}}],["1654844180475.png](https://jetzihan",{"_index":5913,"t":{"2273":{"position":[[129,37]]}}}],["1654844603717.png](https://jetzihan",{"_index":5915,"t":{"2273":{"position":[[246,37]]}}}],["1697eb",{"_index":4769,"t":{"1933":{"position":[[151,10]]}}}],["16:55",{"_index":851,"t":{"255":{"position":[[740,5]]},"363":{"position":[[1754,5]]}}}],["16x16",{"_index":3912,"t":{"1561":{"position":[[92,24]]}}}],["16位总长度，标识ip数据包的最大长度位2^16，单位为字节。包含了ip的头部和ip",{"_index":5518,"t":{"2167":{"position":[[280,51]]}}}],["16位首部校验和。检测这个数据在传输过程中是否失真。对头部计算校验和时该字段全部置0",{"_index":5525,"t":{"2167":{"position":[[680,77]]}}}],["16色图像，每个字节可以表示2",{"_index":6203,"t":{"2454":{"position":[[1881,21]]}}}],["16色或256色显示系统中，将图像中出现最频繁的16",{"_index":6072,"t":{"2434":{"position":[[0,29]]}}}],["16：11",{"_index":987,"t":{"289":{"position":[[248,6]]}}}],["17",{"_index":4088,"t":{"1638":{"position":[[218,2]]},"1838":{"position":[[147,2]]},"1840":{"position":[[142,2]]},"2125":{"position":[[1919,2]]}}}],["17.7",{"_index":6224,"t":{"2469":{"position":[[306,6]]}}}],["1718.8733853924698",{"_index":1542,"t":{"530":{"position":[[201,18]]}}}],["172.32.1.255？因为子网掩码借走了前面254.去掉主机域全0的和主机域全1的地址称为可分配地址范围。广播地址：主机域全1",{"_index":5598,"t":{"2177":{"position":[[604,75]]}}}],["173'a.tostring(16",{"_index":4141,"t":{"1642":{"position":[[561,20]]}}}],["18",{"_index":611,"t":{"145":{"position":[[16,2]]},"295":{"position":[[772,2],[788,2]]},"380":{"position":[[862,2],[878,2]]},"1646":{"position":[[73,4]]},"1801":{"position":[[64,2],[210,4],[405,4]]},"1807":{"position":[[41,3],[178,4],[372,4]]},"1809":{"position":[[41,3],[178,4]]},"1811":{"position":[[42,2],[183,4]]},"1813":{"position":[[44,2],[191,4]]},"1838":{"position":[[622,4]]},"2138":{"position":[[3777,15]]}}}],["18.456",{"_index":1480,"t":{"508":{"position":[[232,9],[292,6]]}}}],["18:30",{"_index":852,"t":{"255":{"position":[[753,5]]},"363":{"position":[[1767,5]]}}}],["191.255.255.255)（默认子网掩码：255.255.0.0或0xffff0000）前两个字节为网络号，后两个字节为主机号。该类ip地址的最前面为“10”，所以地址的网络号取值于128~191",{"_index":5565,"t":{"2173":{"position":[[194,115]]}}}],["192.0.0.0",{"_index":5566,"t":{"2173":{"position":[[316,10],[976,9]]}}}],["192.0.0.255",{"_index":5576,"t":{"2173":{"position":[[988,11]]}}}],["192.168.0.0内所有主机的ip地址都是本地ip地址192.168.x.x。nat路由器至少要有一个全球ip地址，才能和互联网相连。图中表示出nat路由器有一个全球ip地址172.38.1.5（当然，nat路由器可以有多个全球ip",{"_index":5615,"t":{"2188":{"position":[[0,129]]}}}],["192.168.0.3向互联网发送ip数据报，其tcp端口号选择为30000。napt把源ip地址和tcp端口号都进行转换（如果使用udp，则对udp的端口号进行转换。原理是一样的）。另一台主机192.68.0.4也选择了同样的tcp端口号30000这纯属巧合（端口号仅在本主机中才有意义）。现在napt把专用网内不同的源ip地址都转换为同样的全球ip地址。但对源主机所采用的tcp端口号（不管相同或不同），则转换为不同的新的端口号。因此，当napt路由器收到从互联网发来的应答时，就可以从ip数据报的数据部分找出运输层的端口号，然后根据不同的目的端口号，从napt",{"_index":5621,"t":{"2188":{"position":[[925,312]]}}}],["192.168.1.9:21",{"_index":5981,"t":{"2291":{"position":[[95,20]]}}}],["192000hz",{"_index":6240,"t":{"2469":{"position":[[833,8]]}}}],["199",{"_index":4435,"t":{"1803":{"position":[[1334,7]]}}}],["1990年，美国通用仪器公司研制出高清晰度电视hdtv（high",{"_index":6292,"t":{"2511":{"position":[[14,32]]}}}],["1991",{"_index":3885,"t":{"1547":{"position":[[207,4]]}}}],["1994年美国的netscape公司推出第一款浏览器ncsamosaic（后改名navigator），web1.0时代正式到来（web",{"_index":643,"t":{"152":{"position":[[0,140]]},"321":{"position":[[0,140]]}}}],["1;a",{"_index":4060,"t":{"1628":{"position":[[131,3]]}}}],["1;const",{"_index":4066,"t":{"1630":{"position":[[86,7]]}}}],["1;let",{"_index":4049,"t":{"1624":{"position":[[128,5]]}}}],["1;var",{"_index":4064,"t":{"1630":{"position":[[59,5]]}}}],["1;}console.log(a",{"_index":4045,"t":{"1622":{"position":[[61,18],[165,18]]},"1624":{"position":[[57,18]]},"1628":{"position":[[73,18]]}}}],["1;}test",{"_index":4048,"t":{"1622":{"position":[[253,10],[410,10]]},"1624":{"position":[[303,10]]}}}],["1</p",{"_index":3689,"t":{"1466":{"position":[[162,5]]}}}],["1=0，0",{"_index":5278,"t":{"2113":{"position":[[401,5]]}}}],["1=1，1",{"_index":5279,"t":{"2113":{"position":[[407,5]]}}}],["1]，f∈[0，l",{"_index":6037,"t":{"2412":{"position":[[44,9]]}}}],["1]，y∈[0，n",{"_index":6036,"t":{"2412":{"position":[[34,9]]}}}],["1]，则数字图像可表示成下式形式的一个m×n",{"_index":6038,"t":{"2412":{"position":[[54,30]]}}}],["1a8870",{"_index":2656,"t":{"1094":{"position":[[579,8]]}}}],["1bit",{"_index":5283,"t":{"2113":{"position":[[459,15]]}}}],["1c62a5",{"_index":2686,"t":{"1094":{"position":[[2253,8]]}}}],["1d5578",{"_index":2679,"t":{"1094":{"position":[[1978,8]]}}}],["1elif",{"_index":869,"t":{"255":{"position":[[1295,5]]},"363":{"position":[[2640,5]]}}}],["1fa588",{"_index":2655,"t":{"1094":{"position":[[541,8]]}}}],["1g1q4u2i02398ecf",{"_index":4657,"t":{"1878":{"position":[[219,17]]},"1905":{"position":[[278,16]]}}}],["1g1q4u2i02398ecf.6e61",{"_index":4707,"t":{"1905":{"position":[[249,21]]}}}],["1gbps的链路上每30ms才能发送一个分组=33kb/",{"_index":5922,"t":{"2273":{"position":[[543,33]]}}}],["1gbps的链路，15ms的端到端传播延迟，1kb",{"_index":5918,"t":{"2273":{"position":[[387,29]]}}}],["1k=10^3",{"_index":5410,"t":{"2138":{"position":[[544,11]]}}}],["1kbits，且忽略分组头开销以及报文的拆装开销，则a将2mbits的文件交付给c需要大约多长时间？b将1mbits的文件交付给d",{"_index":5409,"t":{"2138":{"position":[[403,92]]}}}],["1khz",{"_index":6260,"t":{"2480":{"position":[[160,27]]}}}],["1m=10^6",{"_index":5411,"t":{"2138":{"position":[[556,8]]}}}],["1number(fals",{"_index":4113,"t":{"1640":{"position":[[173,15]]}}}],["1px",{"_index":2059,"t":{"853":{"position":[[527,3],[531,3],[563,3]]},"1248":{"position":[[435,3],[548,4],[566,4]]},"1255":{"position":[[266,3],[379,4],[397,4]]}}}],["1s",{"_index":3766,"t":{"1507":{"position":[[224,2],[267,2]]}}}],["1}/${date.getd",{"_index":4696,"t":{"1898":{"position":[[719,22]]}}}],["1、dhcp",{"_index":5672,"t":{"2197":{"position":[[0,6]]}}}],["1、发送方alice调用用户代理并提供接收方bob",{"_index":5187,"t":{"2057":{"position":[[422,59]]}}}],["1、我的名字：czh",{"_index":1778,"t":{"625":{"position":[[247,10]]}}}],["1、源端口：源端口号，需要对方回信时选用，不需要时置0",{"_index":5871,"t":{"2252":{"position":[[24,28]]}}}],["1。在中心是中性（灰）影调，即饱和度为0",{"_index":6057,"t":{"2420":{"position":[[42,66]]}}}],["1位。例如10000要统计位四位，因为0000~1111刚好有10000",{"_index":5454,"t":{"2138":{"position":[[3297,40]]}}}],["1号数据报文段，接收方收到1号报文段后给发送方发回对1号报文段的确认，在1号报文段到达发送方之前，发送方还可以将发送窗口内的2号数据报文段发送出去，接收方收到2号报文段后给发送方发回对2号报文段的确认，在2号报文段到达发送方之前，发送方还可以将发送窗口内的3",{"_index":5822,"t":{"2236":{"position":[[1197,145]]}}}],["1和0",{"_index":6217,"t":{"2469":{"position":[[0,47]]}}}],["1时本课单周上，2",{"_index":788,"t":{"245":{"position":[[1078,25]]},"257":{"position":[[1024,25]]}}}],["1的ip",{"_index":5578,"t":{"2173":{"position":[[1027,27]]}}}],["1的值为true",{"_index":1240,"t":{"424":{"position":[[25,12]]}}}],["1的值为true执行代码}els",{"_index":1237,"t":{"422":{"position":[[23,17]]}}}],["1的网络地址为111.111.111/24，子网2的网络地址为222.222.222/24。假如子网1上的一台主机将向子网2上的一台主机发送数据报。特别是，假设主机111.111.111.111要向主机222.222.222.222发送一个ip数据报。和往常一样，发送主机向它的适配器传递数据报。但是，发送主机还必须向它的适配器指示一个适当的目的mac地址。仔细观察上图，我们可以发现，为了使一个数据报从111.111.111.111到子网2上的主机，这个数据报必须首先发送给路由器接口111.11.111.110，它是通往最终目的路径上的第一跳路由器的ip地址。因此，对于该帧来说，适当的mac地址是路由器接口111.111.111.110的适配器地址，即e6",{"_index":5345,"t":{"2125":{"position":[[1575,337]]}}}],["1秒执行1",{"_index":2093,"t":{"853":{"position":[[1046,12]]}}}],["1第1、2",{"_index":906,"t":{"257":{"position":[[1161,29]]}}}],["1表示后面还有分片，0",{"_index":5522,"t":{"2167":{"position":[[473,32]]}}}],["1表示禁止分片（丢掉，并告诉发送方太大）、=0表示允许分片mf:more",{"_index":5538,"t":{"2169":{"position":[[342,39]]}}}],["1（从0",{"_index":4985,"t":{"1981":{"position":[[1684,18]]}}}],["1）d(p,q)≥0（d(p,q)=0，当且仅当p=q，即p和q",{"_index":6080,"t":{"2439":{"position":[[59,41]]}}}],["1）tcp",{"_index":5504,"t":{"2148":{"position":[[39,6]]}}}],["1）】中随机取一个数，记为r，重传应推后的时间就是r",{"_index":5315,"t":{"2119":{"position":[[1525,32]]}}}],["1）作为被除数，与第三步确定的除数做“模2除法”。得出的余数即fcs校验序列，它的位数也必须是（p",{"_index":5274,"t":{"2113":{"position":[[127,49]]}}}],["1）你的浏览器解析到url对应的ip",{"_index":5431,"t":{"2138":{"position":[[1724,37]]}}}],["1）内，那么表示n是期望收到的，发送确认ack，如果收到的是乱序的分组，那么缓存下来（buff",{"_index":5943,"t":{"2281":{"position":[[258,75]]}}}],["1）掌握html，能够书写语义合理，结构清晰，易维护的html",{"_index":617,"t":{"148":{"position":[[105,34]]},"317":{"position":[[105,34]]}}}],["1）物理层使用的中间设备叫转发器（repeat",{"_index":5510,"t":{"2162":{"position":[[0,27]]}}}],["1）精通jsp，servlet，java",{"_index":622,"t":{"148":{"position":[[318,20]]},"317":{"position":[[318,20]]}}}],["1）若dns缓存中有，那么最短时间是一次查询是本地查询即为rttd，若没有，就需要本地查询、根查询、.cn查询、.com查询、kicker查询共有5rttd",{"_index":5435,"t":{"2138":{"position":[[2000,79]]}}}],["1，2，3",{"_index":1792,"t":{"644":{"position":[[36,41]]}}}],["1，则会告诉浏览器在此框架和其他框架之间绘制边框，这是默认行为。0",{"_index":3989,"t":{"1592":{"position":[[375,33]]}}}],["1，则结果为1，否则为0",{"_index":1189,"t":{"392":{"position":[[225,20]]}}}],["1，约定0word",{"_index":6165,"t":{"2454":{"position":[[410,14]]}}}],["1，那么实际上只用统计为n",{"_index":5453,"t":{"2138":{"position":[[3262,34]]}}}],["1：30",{"_index":1002,"t":{"289":{"position":[[703,5]]}}}],["1：客户端的url",{"_index":1919,"t":{"776":{"position":[[26,13]]},"778":{"position":[[27,13]]}}}],["2",{"_index":419,"t":{"101":{"position":[[575,5]]},"165":{"position":[[16,1]]},"198":{"position":[[575,5]]},"243":{"position":[[69,8]]},"245":{"position":[[424,4],[488,4]]},"255":{"position":[[693,3]]},"363":{"position":[[1707,3]]},"365":{"position":[[487,3]]},"388":{"position":[[383,2],[811,2]]},"392":{"position":[[849,2],[899,1],[921,2],[965,1],[988,2],[1038,1],[1105,1],[1118,1],[1131,1]]},"402":{"position":[[30,1]]},"422":{"position":[[50,3]]},"424":{"position":[[47,3]]},"496":{"position":[[271,2]]},"563":{"position":[[561,1]]},"565":{"position":[[60,1],[260,1]]},"600":{"position":[[54,2]]},"608":{"position":[[188,2],[218,2],[227,4]]},"616":{"position":[[257,2],[292,13]]},"618":{"position":[[336,1]]},"681":{"position":[[203,2],[238,2],[274,2],[312,3],[320,3],[328,3]]},"757":{"position":[[193,1],[300,1],[400,1],[416,1],[470,1],[496,1],[503,1],[505,1],[510,1],[517,1],[524,1],[540,1],[575,1],[610,1],[661,1],[675,1],[679,1],[681,1],[683,1],[687,1],[691,1],[701,1],[721,1],[741,1]]},"776":{"position":[[40,11]]},"778":{"position":[[41,11]]},"853":{"position":[[859,6]]},"1144":{"position":[[56,47]]},"1227":{"position":[[53,4],[80,2]]},"1229":{"position":[[88,6],[135,2],[207,3]]},"1241":{"position":[[137,3],[185,3],[207,3]]},"1267":{"position":[[421,1]]},"1271":{"position":[[235,1]]},"1283":{"position":[[239,2],[276,3]]},"1293":{"position":[[82,46],[149,22]]},"1297":{"position":[[195,1]]},"1342":{"position":[[968,1],[1078,1]]},"1364":{"position":[[252,3]]},"1366":{"position":[[1726,3]]},"1393":{"position":[[420,3],[521,3]]},"1395":{"position":[[563,4]]},"1399":{"position":[[1022,2]]},"1404":{"position":[[292,3]]},"1424":{"position":[[398,3],[543,3]]},"1437":{"position":[[139,2],[255,1],[402,2],[531,1]]},"1445":{"position":[[1176,2]]},"1511":{"position":[[554,2]]},"1547":{"position":[[214,1]]},"1563":{"position":[[151,1]]},"1624":{"position":[[138,2]]},"1626":{"position":[[86,1],[235,1],[629,1]]},"1628":{"position":[[95,1],[137,2]]},"1630":{"position":[[69,4],[98,2]]},"1638":{"position":[[197,2]]},"1640":{"position":[[297,2]]},"1642":{"position":[[672,3],[871,3]]},"1659":{"position":[[93,1]]},"1711":{"position":[[96,2],[147,2]]},"1722":{"position":[[185,1],[217,1]]},"1777":{"position":[[113,25],[284,2]]},"1788":{"position":[[99,3]]},"1799":{"position":[[72,14],[219,5],[278,3]]},"1981":{"position":[[615,5],[1247,3],[1645,5]]},"1999":{"position":[[118,2]]},"2066":{"position":[[295,10]]},"2113":{"position":[[283,12]]},"2127":{"position":[[480,10]]},"2138":{"position":[[974,17],[3420,3]]},"2141":{"position":[[336,33]]},"2144":{"position":[[633,1]]},"2148":{"position":[[33,1]]},"2164":{"position":[[204,15]]},"2193":{"position":[[94,19]]},"2195":{"position":[[660,2]]},"2208":{"position":[[278,28]]},"2247":{"position":[[1819,6]]},"2252":{"position":[[53,26]]},"2256":{"position":[[157,30]]},"2258":{"position":[[127,1]]},"2382":{"position":[[12,5]]},"2409":{"position":[[214,3]]},"2412":{"position":[[299,12],[369,2]]},"2432":{"position":[[35,25]]},"2439":{"position":[[214,6]]},"2443":{"position":[[110,18],[1047,12],[1129,11],[1156,8]]},"2445":{"position":[[77,24]]},"2454":{"position":[[685,2]]},"2460":{"position":[[947,31]]},"2471":{"position":[[39,17]]},"2476":{"position":[[21,3]]},"2490":{"position":[[794,23]]}}}],["2).如果对上述三个协议，超时时间比5rtt长得多，那么哪个协议将在最短的时间间隔内成功交付5",{"_index":5441,"t":{"2138":{"position":[[2564,52]]}}}],["2)^2",{"_index":6093,"t":{"2441":{"position":[[70,5]]}}}],["2)http1.0使用非持续式的链接，一次对象的请求是2rtth，那么1+8即9次，就是18rtth",{"_index":5436,"t":{"2138":{"position":[[2080,51]]}}}],["2.0",{"_index":5902,"t":{"2267":{"position":[[232,7],[282,6]]}}}],["2.0.19[nodemon",{"_index":1959,"t":{"795":{"position":[[140,15]]},"825":{"position":[[549,15],[774,15]]}}}],["2.0版本中加入了深色模式，开箱即用，无需配置。daisyui",{"_index":336,"t":{"76":{"position":[[79,48]]}}}],["2.0致命的缺陷是并没有考虑到如果ack和nak",{"_index":5903,"t":{"2267":{"position":[[289,55]]}}}],["2.1.0",{"_index":3695,"t":{"1470":{"position":[[0,5]]}}}],["2.2.0",{"_index":3648,"t":{"1445":{"position":[[99,6]]}}}],["2.21给出了256×256的256灰度级lena图像的位图文件头中14",{"_index":6169,"t":{"2454":{"position":[[493,49]]}}}],["2.3.0",{"_index":3456,"t":{"1386":{"position":[[0,6],[9,5]]}}}],["2.3.1",{"_index":5553,"t":{"2171":{"position":[[104,5]]}}}],["2.454",{"_index":1500,"t":{"512":{"position":[[256,5]]}}}],["2.484ghz",{"_index":5378,"t":{"2133":{"position":[[34,9]]}}}],["2.4ghz频段（2.412ghz",{"_index":5377,"t":{"2133":{"position":[[0,33]]}}}],["2.6.0",{"_index":3741,"t":{"1493":{"position":[[0,5],[11,5]]},"1503":{"position":[[87,8]]},"1505":{"position":[[103,8]]}}}],["2.6.1",{"_index":5582,"t":{"2177":{"position":[[103,5]]}}}],["2.7183",{"_index":1493,"t":{"510":{"position":[[254,6]]},"512":{"position":[[235,6]]},"514":{"position":[[331,6]]},"516":{"position":[[236,6]]}}}],["2.76",{"_index":1486,"t":{"510":{"position":[[135,5]]},"512":{"position":[[116,5]]},"514":{"position":[[200,5]]},"516":{"position":[[115,5]]}}}],["2.760",{"_index":1508,"t":{"514":{"position":[[350,6]]}}}],["2.9",{"_index":1680,"t":{"604":{"position":[[105,4],[514,3]]},"606":{"position":[[165,4]]}}}],["2.ack",{"_index":5395,"t":{"2136":{"position":[[530,6]]}}}],["2.dns跑在udp之上，使用53",{"_index":5221,"t":{"2064":{"position":[[90,21]]}}}],["2.http",{"_index":5958,"t":{"2287":{"position":[[317,54]]}}}],["2.在http请求报文含有一个cooki",{"_index":5143,"t":{"2051":{"position":[[45,25]]}}}],["2.窗口尺寸为n，即最多允许n",{"_index":5929,"t":{"2279":{"position":[[28,23]]}}}],["20",{"_index":92,"t":{"23":{"position":[[179,4]]},"49":{"position":[[934,6]]},"101":{"position":[[524,10]]},"103":{"position":[[1043,3],[2266,3],[2270,13],[2555,3],[3170,2],[3212,3],[4175,3],[4377,2]]},"198":{"position":[[524,10]]},"200":{"position":[[1043,3],[2266,3],[2270,13],[2555,3],[3170,2],[3212,3],[4175,3],[4377,2]]},"255":{"position":[[210,2],[1662,2]]},"355":{"position":[[487,15]]},"363":{"position":[[1225,2]]},"371":{"position":[[64,14]]},"390":{"position":[[361,3]]},"396":{"position":[[224,6],[249,2],[329,6],[355,2],[448,2]]},"406":{"position":[[135,2]]},"408":{"position":[[369,2]]},"410":{"position":[[374,3]]},"412":{"position":[[220,3]]},"414":{"position":[[157,3],[299,2]]},"416":{"position":[[208,3],[370,2]]},"420":{"position":[[137,2]]},"757":{"position":[[292,2]]},"782":{"position":[[146,3]]},"784":{"position":[[244,4]]},"1340":{"position":[[488,3],[1282,3]]},"1642":{"position":[[714,4],[913,4]]},"1735":{"position":[[102,2]]},"1737":{"position":[[113,2]]}}}],["20)/8]×8",{"_index":5545,"t":{"2169":{"position":[[685,9]]}}}],["20)/d",{"_index":5547,"t":{"2169":{"position":[[732,6]]}}}],["20);rectangletwo=new",{"_index":1271,"t":{"441":{"position":[[148,20]]}}}],["200",{"_index":49,"t":{"10":{"position":[[933,4],[1241,4],[1387,5]]},"16":{"position":[[72,4]]},"18":{"position":[[111,5],[203,16],[220,3]]},"33":{"position":[[530,6]]},"37":{"position":[[416,3],[478,4],[981,4]]},"49":{"position":[[805,6]]},"101":{"position":[[329,4],[334,4],[626,4],[805,4],[1076,4]]},"103":{"position":[[1047,4],[2559,4],[3156,3],[3216,4],[4120,4],[4179,4],[4363,3]]},"198":{"position":[[329,4],[334,4],[626,4],[805,4],[1076,4]]},"200":{"position":[[1047,4],[2559,4],[3156,3],[3216,4],[4120,4],[4179,4],[4363,3]]},"1340":{"position":[[749,5]]},"2049":{"position":[[30,3]]},"2055":{"position":[[345,3]]}}}],["200);和camera.lookat",{"_index":85,"t":{"18":{"position":[[338,20]]}}}],["2000",{"_index":4833,"t":{"1964":{"position":[[646,4]]}}}],["200rpx",{"_index":4869,"t":{"1976":{"position":[[171,6]]}}}],["200，ok",{"_index":192,"t":{"35":{"position":[[275,34]]},"37":{"position":[[1244,12]]}}}],["201.2.3.0，255.255.255.192（借用主机8位中最高位的两个比特，因为要分成四个子网，0~3==00~11",{"_index":5593,"t":{"2177":{"position":[[397,63]]}}}],["201.2.3.0，子网掩码为255.255.255.0，被划分为4个等长的子网（等长，256/4=64",{"_index":5592,"t":{"2177":{"position":[[340,56]]}}}],["201.2.3.128，255.255.255.192",{"_index":5595,"t":{"2177":{"position":[[488,27]]}}}],["201.2.3.192，255.255.255.192",{"_index":5596,"t":{"2177":{"position":[[516,27]]}}}],["201.2.3.64，255.255.255.192",{"_index":5594,"t":{"2177":{"position":[[461,26]]}}}],["201000000",{"_index":257,"t":{"49":{"position":[[667,15],[708,9],[898,12]]}}}],["201002001",{"_index":790,"t":{"249":{"position":[[176,11]]}}}],["201002401password",{"_index":968,"t":{"287":{"position":[[313,23]]}}}],["2011",{"_index":5155,"t":{"2055":{"position":[[368,4],[434,4],[752,4],[934,4]]}}}],["2013",{"_index":2888,"t":{"1244":{"position":[[122,4]]}}}],["2016",{"_index":3616,"t":{"1426":{"position":[[234,5],[420,4],[594,4]]}}}],["2017年，微信正式推出了小程序，允许外部开发者在微信内部运行自己的代码，开展业务，截止2020年6月，小程序数量已经超过了550",{"_index":4787,"t":{"1940":{"position":[[18,76]]}}}],["2019",{"_index":2497,"t":{"1049":{"position":[[62,4],[100,4]]}}}],["2020",{"_index":2500,"t":{"1049":{"position":[[131,4]]}}}],["2021",{"_index":758,"t":{"243":{"position":[[52,4]]},"359":{"position":[[183,5],[476,5],[659,5]]}}}],["2021,12,24,data",{"_index":513,"t":{"105":{"position":[[4,15]]},"202":{"position":[[4,15]]}}}],["2022",{"_index":610,"t":{"145":{"position":[[9,4]]},"163":{"position":[[9,4]]},"165":{"position":[[9,4]]},"175":{"position":[[9,4]]},"194":{"position":[[9,4]]},"204":{"position":[[9,4]]},"243":{"position":[[57,4]]},"249":{"position":[[225,5]]},"363":{"position":[[326,5],[355,5]]},"464":{"position":[[285,10]]},"480":{"position":[[20,10]]},"556":{"position":[[55,10]]},"618":{"position":[[756,10]]},"1006":{"position":[[427,4]]},"1012":{"position":[[46,4]]},"1547":{"position":[[866,10]]},"1565":{"position":[[85,10]]},"1572":{"position":[[185,10]]},"1592":{"position":[[553,10]]},"1613":{"position":[[284,10]]},"1618":{"position":[[470,10]]},"1829":{"position":[[327,10]]},"2319":{"position":[[54,10]]}}}],["2022/06/03",{"_index":5075,"t":{"2018":{"position":[[26,10],[45,10]]}}}],["2022/06/06",{"_index":5076,"t":{"2018":{"position":[[70,10]]}}}],["2022/06/07",{"_index":5073,"t":{"2018":{"position":[[0,10]]}}}],["2022/07/04",{"_index":5077,"t":{"2018":{"position":[[92,10]]}}}],["2022/07/11",{"_index":5078,"t":{"2018":{"position":[[116,10]]}}}],["2022/07/13",{"_index":5079,"t":{"2018":{"position":[[159,10],[181,10]]}}}],["2022/07/14",{"_index":5080,"t":{"2018":{"position":[[208,10]]}}}],["2022/07/22",{"_index":5081,"t":{"2018":{"position":[[237,10]]}}}],["2022/08/03",{"_index":5082,"t":{"2018":{"position":[[258,10]]}}}],["2022/08/06",{"_index":5083,"t":{"2018":{"position":[[283,10]]}}}],["2022/08/08",{"_index":5084,"t":{"2018":{"position":[[306,10]]}}}],["2022/08/11",{"_index":5085,"t":{"2018":{"position":[[328,10]]}}}],["2022/08/16",{"_index":5086,"t":{"2018":{"position":[[351,10]]}}}],["2022/08/20",{"_index":5087,"t":{"2018":{"position":[[373,10]]}}}],["2022/8/6",{"_index":3466,"t":{"1393":{"position":[[617,8]]}}}],["2023",{"_index":792,"t":{"249":{"position":[[231,4]]},"363":{"position":[[332,4]]}}}],["204",{"_index":1036,"t":{"295":{"position":[[628,20]]},"380":{"position":[[715,20]]}}}],["205d3b",{"_index":2642,"t":{"1094":{"position":[[218,8]]}}}],["206.0.01000100.0",{"_index":5765,"t":{"2214":{"position":[[522,16]]}}}],["206.0.68.0",{"_index":5766,"t":{"2214":{"position":[[543,10]]}}}],["206.0.68.0/22",{"_index":5762,"t":{"2214":{"position":[[311,13],[422,31]]}}}],["206.0.71.128",{"_index":5761,"t":{"2214":{"position":[[289,12],[454,12],[582,12],[639,14],[689,12]]}}}],["206.0.71.128/25",{"_index":5763,"t":{"2214":{"position":[[325,15]]}}}],["20:50",{"_index":1568,"t":{"556":{"position":[[71,5]]},"618":{"position":[[772,5]]}}}],["20:55",{"_index":853,"t":{"255":{"position":[[759,5]]},"363":{"position":[[1773,5]]}}}],["20=65515b",{"_index":5521,"t":{"2167":{"position":[[399,10]]}}}],["20hz",{"_index":5994,"t":{"2344":{"position":[[13,9]]},"2460":{"position":[[251,19]]},"2480":{"position":[[60,18]]}}}],["20hz到20khz",{"_index":6207,"t":{"2460":{"position":[[292,30]]}}}],["20khz",{"_index":5995,"t":{"2344":{"position":[[23,10]]},"2460":{"position":[[271,20]]}}}],["20khz；语音感知的强度范围是0－130db",{"_index":6259,"t":{"2480":{"position":[[79,26]]}}}],["20m",{"_index":6274,"t":{"2503":{"position":[[23,121]]}}}],["20px",{"_index":2076,"t":{"853":{"position":[[693,5]]},"1248":{"position":[[767,6]]},"1515":{"position":[[1212,5],[1327,4]]},"1518":{"position":[[328,5],[443,4]]}}}],["20px;}ol",{"_index":2901,"t":{"1248":{"position":[[272,9]]}}}],["20rpx",{"_index":4562,"t":{"1868":{"position":[[501,7]]}}}],["20rpx;}.van",{"_index":4934,"t":{"1979":{"position":[[2409,11],[2710,11]]}}}],["20位全1）：11111111",{"_index":5639,"t":{"2193":{"position":[[258,22]]}}}],["20分钟后的课程second",{"_index":828,"t":{"255":{"position":[[215,16]]},"363":{"position":[[1230,16]]}}}],["20分钟，这样就可以提前20分钟提醒了。（就是说要去查询20",{"_index":824,"t":{"255":{"position":[[55,66]]},"363":{"position":[[1070,66]]}}}],["20后，可能需要进行进位，如果分钟大于60，小时加1，分钟减60if",{"_index":830,"t":{"255":{"position":[[246,37]]},"363":{"position":[[1261,37]]}}}],["21",{"_index":1902,"t":{"757":{"position":[[307,2]]}}}],["21/22",{"_index":5828,"t":{"2244":{"position":[[39,5]]}}}],["210",{"_index":424,"t":{"101":{"position":[[743,4],[922,4],[1024,4],[1301,3],[1466,3]]},"103":{"position":[[4125,4]]},"198":{"position":[[743,4],[922,4],[1024,4],[1301,3],[1466,3]]},"200":{"position":[[4125,4]]}}}],["210px",{"_index":3343,"t":{"1366":{"position":[[956,6]]}}}],["2147483648~2147483647",{"_index":1579,"t":{"565":{"position":[[91,21]]}}}],["216",{"_index":4900,"t":{"1979":{"position":[[994,5],[2388,5],[2671,5]]}}}],["21:36",{"_index":3467,"t":{"1393":{"position":[[626,5]]}}}],["21af90",{"_index":2654,"t":{"1094":{"position":[[504,8]]}}}],["21端口上的命令通道，其他是客户端和服务器每次需要传输数据时建立的数据传输通道。不同的连接使用的是不同的端口号，命令通道采用的是21",{"_index":5984,"t":{"2291":{"position":[[235,107]]}}}],["22",{"_index":1340,"t":{"464":{"position":[[298,2]]},"480":{"position":[[33,2]]},"556":{"position":[[68,2]]},"757":{"position":[[322,2]]}}}],["22,050",{"_index":6232,"t":{"2469":{"position":[[691,6]]}}}],["220",{"_index":5200,"t":{"2057":{"position":[[1222,3]]}}}],["221",{"_index":5202,"t":{"2057":{"position":[[1259,3]]}}}],["223.255.255.255)（子网掩码：255.255.255.0",{"_index":5567,"t":{"2173":{"position":[[327,36]]}}}],["2277c8",{"_index":2685,"t":{"1094":{"position":[[2215,8]]}}}],["22（tcp",{"_index":5835,"t":{"2244":{"position":[[122,7]]}}}],["23",{"_index":995,"t":{"289":{"position":[[490,4]]},"757":{"position":[[337,2]]},"1725":{"position":[[164,2]]},"1733":{"position":[[129,2]]},"2244":{"position":[[58,2]]}}}],["23).tostr",{"_index":4278,"t":{"1725":{"position":[[134,15]]}}}],["23).valueof",{"_index":4299,"t":{"1733":{"position":[[100,14]]}}}],["23.0",{"_index":1473,"t":{"506":{"position":[[277,7],[299,4]]},"508":{"position":[[277,7]]}}}],["23.12",{"_index":1482,"t":{"508":{"position":[[299,5]]}}}],["230",{"_index":421,"t":{"101":{"position":[[631,4],[748,5],[1081,4]]},"198":{"position":[[631,4],[748,5],[1081,4]]}}}],["234",{"_index":3813,"t":{"1511":{"position":[[670,4],[742,4]]}}}],["235",{"_index":5201,"t":{"2057":{"position":[[1248,3]]}}}],["24",{"_index":886,"t":{"255":{"position":[[1915,3]]},"757":{"position":[[352,2]]},"1006":{"position":[[435,2]]},"2469":{"position":[[1038,2]]}}}],["240",{"_index":422,"t":{"101":{"position":[[710,4]]},"198":{"position":[[710,4]]},"392":{"position":[[855,3],[1109,3]]},"1979":{"position":[[989,4],[2383,4],[2666,4]]}}}],["244",{"_index":4936,"t":{"1979":{"position":[[2459,4]]}}}],["246892",{"_index":2678,"t":{"1094":{"position":[[1940,8]]}}}],["247ed4",{"_index":2684,"t":{"1094":{"position":[[2178,8]]}}}],["24px",{"_index":2911,"t":{"1248":{"position":[[475,5]]},"1255":{"position":[[306,5]]}}}],["24位颜色值组成的表称为颜色查找表(look",{"_index":6077,"t":{"2434":{"position":[[144,28]]}}}],["24位颜色值（对应一种颜色的r、g、b",{"_index":6075,"t":{"2434":{"position":[[88,28]]}}}],["24帧连续变化的图像人眼无法分别，所以形成视频。某个物体消失之后，依旧可以在视网膜上停留0.1",{"_index":6275,"t":{"2507":{"position":[[52,51]]}}}],["24时，说明位图文件表示的是一幅最多有2^24=16777216种颜色的图像。位图数据阵列中的每3",{"_index":6191,"t":{"2454":{"position":[[1253,60]]}}}],["24：00：00",{"_index":840,"t":{"255":{"position":[[520,8]]},"363":{"position":[[1534,8]]}}}],["25",{"_index":4317,"t":{"1743":{"position":[[246,3],[288,3]]},"1788":{"position":[[82,4],[190,3],[288,3]]},"1790":{"position":[[405,3]]},"1792":{"position":[[29,3]]},"1811":{"position":[[80,3],[193,2]]},"1813":{"position":[[83,3]]},"2173":{"position":[[310,3]]}}}],["250",{"_index":2085,"t":{"853":{"position":[[849,4],[854,4]]},"1104":{"position":[[186,4]]},"1106":{"position":[[181,4]]},"1979":{"position":[[2454,4],[2612,4]]},"2057":{"position":[[1233,3]]}}}],["250px",{"_index":2047,"t":{"853":{"position":[[369,6]]}}}],["252",{"_index":3814,"t":{"1511":{"position":[[675,4],[747,4]]}}}],["253",{"_index":4943,"t":{"1979":{"position":[[2607,4]]}}}],["255",{"_index":2049,"t":{"853":{"position":[[404,4],[409,4]]}}}],["255.0.0.0",{"_index":5586,"t":{"2177":{"position":[[186,9]]}}}],["255.255.0.0",{"_index":5587,"t":{"2177":{"position":[[207,11]]}}}],["255.255.224.0",{"_index":5590,"t":{"2177":{"position":[[267,13]]}}}],["255.255.255.0",{"_index":5588,"t":{"2177":{"position":[[230,13]]}}}],["255.255.255.255",{"_index":5579,"t":{"2175":{"position":[[4,23]]}}}],["255.255.255.255的后9位全部变为0，即255.255.254.0",{"_index":5458,"t":{"2138":{"position":[[3531,41]]}}}],["256",{"_index":3141,"t":{"1325":{"position":[[374,4],[379,5]]},"1338":{"position":[[331,4],[336,5]]},"2443":{"position":[[535,3]]},"2454":{"position":[[1903,22]]}}}],["256,但空间分辨率依次降低为:256×256",{"_index":6024,"t":{"2403":{"position":[[50,33]]}}}],["256种颜色组成一个颜色表，并将它们分别编号为0",{"_index":6073,"t":{"2434":{"position":[[30,27]]}}}],["256级灰度占用2进制位数为8",{"_index":6031,"t":{"2409":{"position":[[294,19]]}}}],["2578.3100780887044",{"_index":1541,"t":{"530":{"position":[[182,18]]}}}],["25];numbers.foreach(myfunction);funct",{"_index":4408,"t":{"1797":{"position":[[75,40],[347,40]]}}}],["25];var",{"_index":4411,"t":{"1799":{"position":[[117,7],[422,7]]},"1801":{"position":[[108,7],[317,7]]},"1803":{"position":[[148,7],[405,7],[718,7],[871,7],[1114,7]]},"1805":{"position":[[158,7],[386,7]]},"1807":{"position":[[74,7],[282,7]]},"1809":{"position":[[74,7]]}}}],["25c2a0",{"_index":2653,"t":{"1094":{"position":[[469,8]]}}}],["25（tcp",{"_index":5832,"t":{"2244":{"position":[[90,7]]}}}],["260",{"_index":6133,"t":{"2443":{"position":[[921,5]]}}}],["266e9b",{"_index":2677,"t":{"1094":{"position":[[1903,8]]}}}],["277148",{"_index":2640,"t":{"1094":{"position":[[180,8]]}}}],["28",{"_index":1103,"t":{"359":{"position":[[224,4],[517,4],[700,4]]},"1049":{"position":[[70,2]]}}}],["280",{"_index":420,"t":{"101":{"position":[[621,4],[738,4],[1071,4],[1110,5]]},"103":{"position":[[3949,4]]},"198":{"position":[[621,4],[738,4],[1071,4],[1110,5]]},"200":{"position":[[3949,4]]}}}],["29",{"_index":1117,"t":{"363":{"position":[[364,3]]},"618":{"position":[[769,2]]},"1049":{"position":[[108,2]]}}}],["290",{"_index":439,"t":{"101":{"position":[[1315,4]]},"103":{"position":[[3358,3]]},"198":{"position":[[1315,4]]},"200":{"position":[[3358,3]]}}}],["29784c",{"_index":2638,"t":{"1094":{"position":[[143,8]]}}}],["29];var",{"_index":4442,"t":{"1811":{"position":[[84,7]]},"1813":{"position":[[87,7]]}}}],["29d5b0",{"_index":2657,"t":{"1094":{"position":[[615,8]]}}}],["2;if",{"_index":4059,"t":{"1628":{"position":[[49,4]]}}}],["2;while",{"_index":4273,"t":{"1722":{"position":[[71,7]]}}}],["2;}</script></body></html",{"_index":4417,"t":{"1799":{"position":[[577,26]]}}}],["2</p></templat",{"_index":3690,"t":{"1466":{"position":[[181,16]]}}}],["2^53",{"_index":4093,"t":{"1638":{"position":[[520,4],[535,4]]}}}],["2^k",{"_index":6043,"t":{"2412":{"position":[[215,3]]}}}],["2^m",{"_index":6041,"t":{"2412":{"position":[[201,3]]}}}],["2^n",{"_index":6042,"t":{"2412":{"position":[[208,3]]}}}],["2a",{"_index":5336,"t":{"2125":{"position":[[844,3]]}}}],["2a7aac",{"_index":2676,"t":{"1094":{"position":[[1868,8]]}}}],["2bit",{"_index":5284,"t":{"2113":{"position":[[475,15]]}}}],["2d",{"_index":4461,"t":{"1825":{"position":[[284,2]]}}}],["2d/3d",{"_index":4453,"t":{"1821":{"position":[[11,68]]}}}],["2data.a",{"_index":3508,"t":{"1404":{"position":[[278,7]]}}}],["2e8555",{"_index":2637,"t":{"1094":{"position":[[108,8]]}}}],["2e86bd",{"_index":2680,"t":{"1094":{"position":[[2014,8]]}}}],["2m",{"_index":4705,"t":{"1905":{"position":[[39,92]]}}}],["2px",{"_index":3841,"t":{"1515":{"position":[[1518,4]]}}}],["2rtt",{"_index":5121,"t":{"2045":{"position":[[1213,9]]}}}],["2t，具体的争用期时间通常取51.2us,对于10mb/s的以太网，在争用期内可发送512bit，即64",{"_index":5313,"t":{"2119":{"position":[[1437,67]]}}}],["2、所有的dhcp",{"_index":5675,"t":{"2197":{"position":[[85,9]]}}}],["2、用户代理将alice撰写的报文发送到alic",{"_index":5188,"t":{"2057":{"position":[[482,53]]}}}],["2个字节构成1",{"_index":6170,"t":{"2454":{"position":[[548,35]]}}}],["2个确认报文段，发送方收到这两个确认报文后，将拥塞窗口的值加2变为4，发送方此时可连续发送4个报文段，接收方收到4个报文段后，给发送方依次回复4个确认报文，发送方收到确认报文后，将拥塞窗口加4，置为8，发送方此时可以连续发送8个数据报文段，接收方收到该8个数据报文段后，给发送方一次发回8个确认报文段，发送方收到这8个确认报文后，将拥塞窗口的值加8变为16",{"_index":5819,"t":{"2236":{"position":[[732,219]]}}}],["2值图像，但2值图像不一定是0",{"_index":6048,"t":{"2412":{"position":[[336,22]]}}}],["2的18次方减2（**除去全是0的网络地址和全是1广播地址**），即每个子网络最多有262142",{"_index":5462,"t":{"2138":{"position":[[3793,64]]}}}],["2的值为true",{"_index":1241,"t":{"424":{"position":[[63,12]]}}}],["2的值为true执行代码}els",{"_index":1238,"t":{"422":{"position":[[64,17]]}}}],["2的角度值：90.0",{"_index":1370,"t":{"483":{"position":[[535,12]]}}}],["2色黑白图像，每个字节可以表示8",{"_index":6202,"t":{"2454":{"position":[[1858,22]]}}}],["2除法”与“算术除法”类似，但它既不向上位借位，也不比较除数和被除数的相同位数值的大小，只要以相同位数进行相除即可。模2加法运算为：1+1=0，0+1=1，0+0=0，无进位，也无借位；模2减法运算为：1",{"_index":5277,"t":{"2113":{"position":[[296,104]]}}}],["2）d(p,q)=d(q",{"_index":6081,"t":{"2439":{"position":[[101,14]]}}}],["2）掌握css",{"_index":618,"t":{"148":{"position":[[140,36]]},"317":{"position":[[140,36]]}}}],["2）数据链路层使用的中间设备叫做网桥或者桥接器（bridg",{"_index":5511,"t":{"2162":{"position":[[28,32]]}}}],["2）练使用oracle、sqlserver、mysql",{"_index":624,"t":{"148":{"position":[[440,49]]},"317":{"position":[[440,49]]}}}],["2）若浏览器没有配置并行tcp连接，则基于http1.0获取url链接web",{"_index":5432,"t":{"2138":{"position":[[1762,76]]}}}],["2）采用tcp协议可在最短的时间间隔内成功交付5个报文段，因为tcp有快速重传机制，即在未超时情况下就开始重传丢失的2",{"_index":5450,"t":{"2138":{"position":[[3076,65]]}}}],["2，4",{"_index":6095,"t":{"2441":{"position":[[88,3]]}}}],["2，约定0dword",{"_index":6167,"t":{"2454":{"position":[[438,15]]}}}],["2，输出2",{"_index":1611,"t":{"579":{"position":[[224,7]]}}}],["3",{"_index":425,"t":{"101":{"position":[[754,5]]},"198":{"position":[[754,5]]},"255":{"position":[[708,2],[2486,1]]},"363":{"position":[[1722,2]]},"388":{"position":[[808,2]]},"396":{"position":[[0,61]]},"402":{"position":[[52,1]]},"422":{"position":[[91,3]]},"457":{"position":[[453,2]]},"563":{"position":[[588,1]]},"616":{"position":[[220,13],[270,2]]},"618":{"position":[[540,1]]},"681":{"position":[[241,2],[336,3],[344,3],[352,3]]},"757":{"position":[[209,1],[315,1],[407,1],[409,1],[477,1],[512,1],[531,1],[538,1],[545,1],[547,1],[552,1],[559,1],[582,1],[617,1],[665,1],[685,1],[695,1],[699,1],[703,1],[705,1],[707,1],[711,1],[725,1],[745,1]]},"1104":{"position":[[211,2]]},"1106":{"position":[[206,2]]},"1108":{"position":[[145,1]]},"1241":{"position":[[141,3],[167,2]]},"1273":{"position":[[141,43]]},"1275":{"position":[[140,27]]},"1283":{"position":[[242,4]]},"1336":{"position":[[147,3]]},"1364":{"position":[[314,3]]},"1366":{"position":[[1824,3]]},"1395":{"position":[[33,3],[101,3],[572,7]]},"1404":{"position":[[323,1]]},"1437":{"position":[[142,2],[405,2]]},"1445":{"position":[[1217,2]]},"1587":{"position":[[609,1]]},"1626":{"position":[[88,1],[237,1],[631,1]]},"1638":{"position":[[127,3]]},"1640":{"position":[[300,4]]},"1642":{"position":[[322,1]]},"1665":{"position":[[375,1],[576,4]]},"1667":{"position":[[79,1]]},"1711":{"position":[[153,2]]},"1718":{"position":[[63,2]]},"1781":{"position":[[198,3],[321,3]]},"1797":{"position":[[254,1]]},"1801":{"position":[[224,1]]},"1807":{"position":[[203,1]]},"1813":{"position":[[201,1]]},"1999":{"position":[[121,2]]},"2057":{"position":[[126,9],[351,7]]},"2066":{"position":[[390,10]]},"2072":{"position":[[100,1]]},"2138":{"position":[[1839,1],[3575,3]]},"2141":{"position":[[1562,20]]},"2144":{"position":[[607,1]]},"2148":{"position":[[82,1]]},"2164":{"position":[[381,7]]},"2167":{"position":[[436,16]]},"2195":{"position":[[748,2]]},"2208":{"position":[[307,45]]},"2227":{"position":[[0,112]]},"2247":{"position":[[1958,6]]},"2258":{"position":[[217,1]]},"2409":{"position":[[360,3]]},"2412":{"position":[[440,2]]},"2439":{"position":[[332,6]]},"2443":{"position":[[129,10],[1060,46],[1165,15]]},"2454":{"position":[[1557,2]]},"2460":{"position":[[979,125]]},"2476":{"position":[[35,3]]},"2490":{"position":[[829,21]]}}}],["3)http1.0使用非持续式的链接，最开始的链接和index需要2个rtth，在第二轮并行rtt中，5个一组同时进行，只需要2个rtth，后面剩余3张图并行，也是2个rtth，所以总共需要6个rtth",{"_index":5437,"t":{"2138":{"position":[[2132,102]]}}}],["3*3",{"_index":1810,"t":{"654":{"position":[[308,3]]}}}],["3,3",{"_index":4211,"t":{"1665":{"position":[[502,5]]}}}],["3,5",{"_index":1005,"t":{"289":{"position":[[803,4]]}}}],["3.1.1",{"_index":5838,"t":{"2247":{"position":[[0,5]]}}}],["3.1.2",{"_index":5848,"t":{"2247":{"position":[[520,5]]}}}],["3.1.3",{"_index":5864,"t":{"2247":{"position":[[1747,5]]}}}],["3.12",{"_index":229,"t":{"47":{"position":[[67,4]]}}}],["3.14",{"_index":4252,"t":{"1699":{"position":[[211,4]]},"1718":{"position":[[39,5]]}}}],["3.141592653589793",{"_index":1371,"t":{"483":{"position":[[548,17]]}}}],["3.1416",{"_index":1523,"t":{"518":{"position":[[252,6]]},"520":{"position":[[252,6]]},"522":{"position":[[252,6]]},"524":{"position":[[324,6]]},"526":{"position":[[333,6]]},"528":{"position":[[291,6]]}}}],["3.2.1时隙aloha",{"_index":5302,"t":{"2119":{"position":[[92,13]]}}}],["3.2.3",{"_index":5309,"t":{"2119":{"position":[[693,5]]}}}],["3.2.4",{"_index":5310,"t":{"2119":{"position":[[1034,5]]}}}],["3.3",{"_index":1648,"t":{"598":{"position":[[185,4]]}}}],["3.4",{"_index":446,"t":{"103":{"position":[[0,11]]},"200":{"position":[[0,11]]},"604":{"position":[[110,4],[518,3]]},"606":{"position":[[170,4]]}}}],["3.411",{"_index":1514,"t":{"516":{"position":[[258,5]]}}}],["3.4e+38f（6~7",{"_index":1581,"t":{"565":{"position":[[191,12]]}}}],["3.5",{"_index":1681,"t":{"604":{"position":[[115,5],[522,3],[547,3]]},"606":{"position":[[175,5]]}}}],["3.png",{"_index":448,"t":{"103":{"position":[[136,10],[648,10]]},"200":{"position":[[136,10],[648,10]]}}}],["3.rts/ct",{"_index":5396,"t":{"2136":{"position":[[537,28]]}}}],["3.功能丰富。突破了20",{"_index":2757,"t":{"1144":{"position":[[104,54]]}}}],["3.在用户端系统中保留有一个cooki",{"_index":5144,"t":{"2051":{"position":[[71,32]]}}}],["3.找出访问www.bjfu.edu.cn的第一个tcp连接的三次握手报文，你是如何判断这是此次访问的第一个tcp",{"_index":5961,"t":{"2287":{"position":[[526,86]]}}}],["3.累计确认ack（n），确认到序列号n（包含n）的分组均被正确接收。可以收到重复ack",{"_index":5931,"t":{"2279":{"position":[[95,74]]}}}],["3.计算图像各灰度级的累积分布hp",{"_index":6138,"t":{"2445":{"position":[[109,18]]}}}],["30",{"_index":414,"t":{"101":{"position":[[427,5]]},"198":{"position":[[427,5]]},"289":{"position":[[715,3],[793,3]]},"295":{"position":[[821,2]]},"380":{"position":[[911,2]]},"396":{"position":[[231,2],[254,3],[336,2],[360,3],[429,2]]},"412":{"position":[[224,3]]},"414":{"position":[[161,3],[206,2],[224,2]]},"416":{"position":[[212,3],[258,2]]},"420":{"position":[[125,3]]},"563":{"position":[[274,7]]},"1049":{"position":[[139,2]]},"1380":{"position":[[237,3]]},"1507":{"position":[[3800,3],[4240,3]]},"1735":{"position":[[105,5]]},"1737":{"position":[[116,5]]},"2218":{"position":[[110,22]]}}}],["30.0",{"_index":1538,"t":{"530":{"position":[[87,5]]},"532":{"position":[[113,5]]}}}],["300",{"_index":50,"t":{"10":{"position":[[938,5],[1382,4]]},"16":{"position":[[77,5]]},"18":{"position":[[106,4],[228,3],[333,4]]},"101":{"position":[[996,3],[1287,3],[1452,3]]},"103":{"position":[[1219,4],[3409,4]]},"198":{"position":[[996,3],[1287,3],[1452,3]]},"200":{"position":[[1219,4],[3409,4]]},"1340":{"position":[[744,4]]},"1605":{"position":[[73,3],[217,3]]}}}],["300hz~3400hz",{"_index":6267,"t":{"2490":{"position":[[117,33]]}}}],["300rpx",{"_index":4804,"t":{"1960":{"position":[[180,7]]}}}],["300—3400hz",{"_index":5996,"t":{"2344":{"position":[[34,16]]}}}],["301",{"_index":5135,"t":{"2049":{"position":[[59,3]]}}}],["304",{"_index":5149,"t":{"2055":{"position":[[197,3],[900,3]]}}}],["304的状态码，意思是not",{"_index":5173,"t":{"2055":{"position":[[1077,28]]}}}],["308cc6",{"_index":2681,"t":{"1094":{"position":[[2052,8]]}}}],["30px",{"_index":2064,"t":{"853":{"position":[[567,4]]},"1515":{"position":[[1027,5],[1237,5],[1251,5]]},"1518":{"position":[[195,5],[353,5],[367,5]]}}}],["30px;}.board",{"_index":2903,"t":{"1248":{"position":[[301,12]]}}}],["30时，跳过下面的语句，执行下一次循环(跳过了30",{"_index":1235,"t":{"416":{"position":[[280,30]]}}}],["30转为二进制表示为11110，这个数据有5位，也就是说需要借用5",{"_index":5452,"t":{"2138":{"position":[[3217,44]]}}}],["31",{"_index":997,"t":{"289":{"position":[[534,4]]},"2287":{"position":[[1005,33]]}}}],["310",{"_index":427,"t":{"101":{"position":[[810,4],[927,5],[1634,4]]},"103":{"position":[[1328,4]]},"198":{"position":[[810,4],[927,5],[1634,4]]},"200":{"position":[[1328,4]]}}}],["314",{"_index":4251,"t":{"1699":{"position":[[186,3]]}}}],["32",{"_index":5554,"t":{"2171":{"position":[[116,13]]},"2247":{"position":[[592,4],[619,4]]}}}],["32);}document.getelementbyid(\"demo\").innerhtml",{"_index":4266,"t":{"1713":{"position":[[289,46]]},"1715":{"position":[[111,46]]}}}],["32,000",{"_index":6234,"t":{"2469":{"position":[[722,6]]}}}],["320",{"_index":428,"t":{"101":{"position":[[889,4]]},"198":{"position":[[889,4]]}}}],["320px",{"_index":3387,"t":{"1366":{"position":[[2528,7]]}}}],["324",{"_index":4096,"t":{"1638":{"position":[[613,3]]}}}],["32768~32767",{"_index":1578,"t":{"565":{"position":[[66,11]]}}}],["32d8b4",{"_index":2658,"t":{"1094":{"position":[[653,8]]}}}],["32位源ip地址和32位目的ip",{"_index":5526,"t":{"2167":{"position":[[758,26]]}}}],["32比特的字为单位的tcp首部长度，表示该tcp头部有多少个32位bit(有多少个4字节)，所以tcp头部大长度是15",{"_index":5853,"t":{"2247":{"position":[[1068,62]]}}}],["32比特的序号字段和32",{"_index":5850,"t":{"2247":{"position":[[740,19]]}}}],["338bff",{"_index":2671,"t":{"1094":{"position":[[1269,7],[1510,8]]}}}],["33925d",{"_index":2643,"t":{"1094":{"position":[[254,8]]}}}],["33～100",{"_index":6270,"t":{"2490":{"position":[[469,20]]}}}],["34",{"_index":477,"t":{"103":{"position":[[1149,3],[2661,3],[4281,3]]},"200":{"position":[[1149,3],[2661,3],[4281,3]]},"1691":{"position":[[67,3]]}}}],["34.0",{"_index":1656,"t":{"598":{"position":[[256,5]]}}}],["34.00",{"_index":4241,"t":{"1691":{"position":[[44,6]]}}}],["34.33",{"_index":1654,"t":{"598":{"position":[[237,6]]}}}],["34px",{"_index":2913,"t":{"1248":{"position":[[513,5],[527,5]]},"1255":{"position":[[344,5],[358,5],[441,6]]}}}],["34px;}.square:focu",{"_index":2914,"t":{"1248":{"position":[[610,19]]}}}],["35.2644",{"_index":1537,"t":{"528":{"position":[[311,7]]}}}],["350",{"_index":480,"t":{"103":{"position":[[1229,4],[3372,4],[3419,4]]},"200":{"position":[[1229,4],[3372,4],[3419,4]]},"1108":{"position":[[57,3]]}}}],["354",{"_index":5203,"t":{"2057":{"position":[[1269,3]]}}}],["359962",{"_index":2645,"t":{"1094":{"position":[[292,8]]}}}],["36",{"_index":6172,"t":{"2454":{"position":[[632,9],[673,11]]}}}],["360",{"_index":426,"t":{"101":{"position":[[800,4],[917,4]]},"103":{"position":[[3671,3]]},"198":{"position":[[800,4],[917,4]]},"200":{"position":[[3671,3]]},"1346":{"position":[[739,5]]}}}],["3600",{"_index":3265,"t":{"1346":{"position":[[694,6],[704,13]]}}}],["368cdd",{"_index":2683,"t":{"1094":{"position":[[2143,8]]}}}],["370",{"_index":441,"t":{"101":{"position":[[1480,4]]},"103":{"position":[[1424,4],[3722,4]]},"198":{"position":[[1480,4]]},"200":{"position":[[1424,4],[3722,4]]}}}],["380",{"_index":483,"t":{"103":{"position":[[1533,4]]},"200":{"position":[[1533,4]]}}}],["3cad6",{"_index":2647,"t":{"1094":{"position":[[331,8]]}}}],["3d",{"_index":4,"t":{"2":{"position":[[47,2],[79,2],[100,2]]},"4":{"position":[[34,2],[66,2],[87,2]]},"1332":{"position":[[0,14]]},"1825":{"position":[[289,2]]}}}],["3elif",{"_index":872,"t":{"255":{"position":[[1343,5]]},"363":{"position":[[2688,5]]}}}],["3f",{"_index":1505,"t":{"514":{"position":[[278,5]]}}}],["3f%n",{"_index":1491,"t":{"510":{"position":[[215,8]]},"512":{"position":[[196,8]]},"514":{"position":[[286,8]]},"516":{"position":[[196,8]]}}}],["3px",{"_index":3840,"t":{"1515":{"position":[[1449,4],[1462,4]]}}}],["3vm.a",{"_index":3509,"t":{"1404":{"position":[[311,5]]}}}],["3},b={4",{"_index":1667,"t":{"600":{"position":[[57,8]]}}}],["3}r",{"_index":1824,"t":{"681":{"position":[[277,3]]}}}],["3}，",{"_index":1822,"t":{"681":{"position":[[206,4]]}}}],["3、dhcp",{"_index":5690,"t":{"2197":{"position":[[385,6]]}}}],["3、头部长度：udp的数据报长度（包含首部和数据），最小值为8",{"_index":5872,"t":{"2252":{"position":[[80,40]]}}}],["3、运行在alice的邮件服务器的smtp客户端发现报文队列中的这个报文后将会创建一个到运行在bob邮件服务器的smtp服务器的tcp",{"_index":5189,"t":{"2057":{"position":[[536,70]]}}}],["3个连续的针对2号报文段的重复确认，立即重传3号报文段，接收方收到后，给发送方发回针对6号报文的确认，表明，序号到6为至的报文都收到了，这样就不会造成发送方对3",{"_index":5824,"t":{"2236":{"position":[[1715,110]]}}}],["3标准对wave",{"_index":6254,"t":{"2473":{"position":[[412,11]]}}}],["3比特划分子网的子网b",{"_index":5589,"t":{"2177":{"position":[[244,22]]}}}],["3的值为true执行代码}els",{"_index":1239,"t":{"422":{"position":[[105,17]]}}}],["3）d(p,r",{"_index":6082,"t":{"2439":{"position":[[120,9]]}}}],["3）熟悉javascript，了解ecmascript基础内容，掌握1~2种js框架，如vue、react",{"_index":619,"t":{"148":{"position":[[177,53]]},"317":{"position":[[177,53]]}}}],["3）熟悉maven项目配置管理工具，熟悉tomcat、jboss",{"_index":625,"t":{"148":{"position":[[490,66]]},"317":{"position":[[490,66]]}}}],["3）网络层使用的中间设备叫做路由器（router",{"_index":5512,"t":{"2162":{"position":[[61,26]]}}}],["3，1，2，6，4",{"_index":1695,"t":{"608":{"position":[[176,9]]}}}],["4",{"_index":200,"t":{"37":{"position":[[389,1],[454,1],[957,1]]},"148":{"position":[[231,30]]},"317":{"position":[[231,30]]},"402":{"position":[[79,1]]},"563":{"position":[[615,1]]},"565":{"position":[[85,1],[183,1]]},"608":{"position":[[224,2]]},"618":{"position":[[656,1]]},"757":{"position":[[222,1],[330,1],[396,1],[405,1],[414,1],[418,1],[423,1],[425,1],[432,1],[484,1],[519,1],[554,1],[566,1],[573,1],[580,1],[587,1],[589,1],[594,1],[624,1],[669,1],[689,1],[709,1],[715,1],[719,1],[723,1],[727,1],[729,1],[731,1],[749,1]]},"1092":{"position":[[3563,5]]},"1144":{"position":[[159,116]]},"1241":{"position":[[145,2],[178,2],[200,2],[211,2]]},"1275":{"position":[[112,7]]},"1364":{"position":[[355,3]]},"1366":{"position":[[1921,3]]},"1395":{"position":[[350,3],[451,3]]},"1437":{"position":[[145,2],[408,2]]},"1445":{"position":[[1259,1]]},"1626":{"position":[[90,1],[239,1],[633,1]]},"1754":{"position":[[109,1]]},"1797":{"position":[[65,2],[337,2]]},"1799":{"position":[[107,2],[412,2]]},"1801":{"position":[[98,2],[307,2]]},"1803":{"position":[[138,2],[395,2],[619,1],[708,2],[861,2],[1104,2]]},"1805":{"position":[[148,2],[287,1],[376,2]]},"1807":{"position":[[64,2],[272,2]]},"1809":{"position":[[64,2]]},"1811":{"position":[[69,3]]},"1813":{"position":[[72,3]]},"1983":{"position":[[120,24]]},"1999":{"position":[[124,2]]},"2055":{"position":[[849,24]]},"2066":{"position":[[501,10]]},"2138":{"position":[[1892,1]]},"2144":{"position":[[582,1]]},"2148":{"position":[[126,1]]},"2167":{"position":[[60,20]]},"2208":{"position":[[353,78]]},"2247":{"position":[[1057,10],[1133,1]]},"2258":{"position":[[302,1]]},"2279":{"position":[[460,10]]},"2287":{"position":[[873,29]]},"2441":{"position":[[36,2],[56,5]]},"2443":{"position":[[140,13],[1181,15]]},"2454":{"position":[[1344,26],[1445,9],[1745,2]]},"2469":{"position":[[1130,1]]}}}],["4)http1.1使用持续式链接，即不需要断开。建立和返回index需要2个rtth，剩余8个各1个rtth，所以需要10个rtth。如果是流水式的，则一遇到引用就全部同时发送并全部返回。共需要3",{"_index":5438,"t":{"2138":{"position":[[2235,100]]}}}],["4.0",{"_index":1652,"t":{"598":{"position":[[220,4]]}}}],["4.1.1",{"_index":5320,"t":{"2125":{"position":[[0,5]]}}}],["4.1.2",{"_index":5328,"t":{"2125":{"position":[[539,5]]}}}],["4.1.3",{"_index":5343,"t":{"2125":{"position":[[1329,5]]}}}],["4.16.0",{"_index":2020,"t":{"847":{"position":[[55,18],[108,18]]}}}],["4.3.1",{"_index":5365,"t":{"2129":{"position":[[218,5]]}}}],["4.5",{"_index":1646,"t":{"598":{"position":[[168,4]]}}}],["4.为传输分组设置计时器（timer），若超时timeout事件：如果n这个序列号发生了超时事件那么就要重传序列号大于等于n且还未收到ack的所有分组(n+1、n+2、n+3",{"_index":5932,"t":{"2279":{"position":[[170,103]]}}}],["4.在web",{"_index":5145,"t":{"2051":{"position":[[104,16]]}}}],["4.求出新图形g",{"_index":6139,"t":{"2445":{"position":[[128,13]]}}}],["40",{"_index":36,"t":{"10":{"position":[[576,3],[580,4]]},"12":{"position":[[130,3],[134,4]]},"412":{"position":[[228,3]]},"414":{"position":[[165,3]]},"416":{"position":[[216,3],[373,2]]},"853":{"position":[[476,4]]},"1743":{"position":[[272,4]]},"1788":{"position":[[174,4],[272,4]]},"1790":{"position":[[133,2],[185,2],[213,2],[389,4]]},"1792":{"position":[[13,4]]},"2454":{"position":[[116,42],[738,42]]}}}],["400",{"_index":4966,"t":{"1981":{"position":[[778,6]]},"2049":{"position":[[141,3]]}}}],["400px",{"_index":2046,"t":{"853":{"position":[[354,6]]}}}],["404",{"_index":2181,"t":{"887":{"position":[[18,3]]},"914":{"position":[[13,12]]},"2049":{"position":[[181,3]]}}}],["4058",{"_index":2253,"t":{"946":{"position":[[373,5]]}}}],["4096m",{"_index":941,"t":{"275":{"position":[[29,5]]}}}],["40b",{"_index":5604,"t":{"2181":{"position":[[10,9]]}}}],["40px",{"_index":3838,"t":{"1515":{"position":[[1318,4]]},"1518":{"position":[[434,4]]}}}],["40rpx",{"_index":4926,"t":{"1979":{"position":[[2248,6]]}}}],["40rpx;}.part1",{"_index":4927,"t":{"1979":{"position":[[2267,14]]}}}],["420",{"_index":482,"t":{"103":{"position":[[1434,4],[3732,4]]},"200":{"position":[[1434,4],[3732,4]]}}}],["430",{"_index":507,"t":{"103":{"position":[[3685,4]]},"200":{"position":[[3685,4]]}}}],["4300",{"_index":508,"t":{"103":{"position":[[3795,5]]},"200":{"position":[[3795,5]]}}}],["435.8nm",{"_index":6060,"t":{"2424":{"position":[[33,11]]}}}],["44,100",{"_index":6235,"t":{"2469":{"position":[[755,6]]}}}],["44100×16/8×60×2=10584kb",{"_index":6245,"t":{"2471":{"position":[[131,23]]}}}],["443（tcp",{"_index":5830,"t":{"2244":{"position":[[67,8]]}}}],["443（udp",{"_index":5831,"t":{"2244":{"position":[[76,8]]}}}],["4499mm",{"_index":4160,"t":{"1649":{"position":[[73,8]]}}}],["45",{"_index":4407,"t":{"1797":{"position":[[60,4],[332,4]]},"1799":{"position":[[102,4],[407,4]]},"1801":{"position":[[93,4],[302,4]]},"1803":{"position":[[133,4],[390,4],[703,4],[856,4],[1099,4]]},"1805":{"position":[[143,4],[371,4]]},"1807":{"position":[[59,4],[267,4]]},"1809":{"position":[[59,4]]}}}],["45.0",{"_index":1516,"t":{"518":{"position":[[76,5],[259,4]]},"520":{"position":[[76,5],[259,4]]},"522":{"position":[[76,5],[259,4]]},"524":{"position":[[108,5]]},"526":{"position":[[117,5]]},"528":{"position":[[76,5]]},"530":{"position":[[70,5]]},"532":{"position":[[96,5]]}}}],["45.0000",{"_index":1532,"t":{"524":{"position":[[345,7]]},"526":{"position":[[354,7]]}}}],["45.45",{"_index":1658,"t":{"598":{"position":[[274,6]]}}}],["45491625",{"_index":4409,"t":{"1797":{"position":[[234,10]]}}}],["459bd2;}[data",{"_index":2682,"t":{"1094":{"position":[[2091,14]]}}}],["46",{"_index":5352,"t":{"2127":{"position":[[229,7]]}}}],["46字节，也就是以太网帧最小是6＋6＋2＋46＋4＝64。除去4个字节的fcs，因此，抓包时就是60字节。当数据字段的长度小于46字节时，mac子层就会在数据字段的后面填充以满足数据帧长不小于64字节。由于填充数据是由mac",{"_index":5364,"t":{"2127":{"position":[[1791,145]]}}}],["48,000",{"_index":6236,"t":{"2469":{"position":[[785,6]]}}}],["48。mac地址不可更改，但是可以更改通信时的mac地址，也相当于“更改”了mac",{"_index":5324,"t":{"2125":{"position":[[166,44]]}}}],["48个1组成的字符串，换算成十六进制是“ffffffffffff",{"_index":5327,"t":{"2125":{"position":[[456,82]]}}}],["49",{"_index":1193,"t":{"392":{"position":[[722,2],[1088,2]]}}}],["4;\"></view",{"_index":4976,"t":{"1981":{"position":[[1180,11]]}}}],["4b。发送主机通过arp获取111.111.111.110的mac地址。一旦发送适配器有了这个mac地址，它创建一个帧（包含了寻址到222.222.222.222的数据报），并把该帧发送到子网1中。在子网1上的路由器适配器看到该链路层帧是向它寻址的，因此把这个帧传递给路由器的网络层。路由器现在必须决定该数据报要被转发的正确接口。这是通过查询路由器中的转发表来完成的。转发表告诉这台路由器该数据报要通过路由器接口222.222.222.220转发。然后该接口把这个数据报传递给它的适配器，适配器把该数据报封装到一个新的帧中，并且将帧发送进子网2中。这时，该帧的目的mac地址确实是最终目的地mac地址。路由器接下来通过arp获取这个mac",{"_index":5348,"t":{"2125":{"position":[[1925,322]]}}}],["4e99e1",{"_index":2687,"t":{"1094":{"position":[[2289,8]]}}}],["4f",{"_index":1530,"t":{"524":{"position":[[232,4]]},"526":{"position":[[241,4]]},"528":{"position":[[199,4]]}}}],["4f%n",{"_index":1488,"t":{"510":{"position":[[166,8]]},"512":{"position":[[147,8]]},"514":{"position":[[231,8]]},"516":{"position":[[146,8]]},"518":{"position":[[150,8],[200,8]]},"520":{"position":[[150,8],[200,8]]},"522":{"position":[[150,8],[200,8]]},"524":{"position":[[182,8]]},"526":{"position":[[191,8]]},"528":{"position":[[150,8]]}}}],["4fddbf",{"_index":2659,"t":{"1094":{"position":[[692,8]]}}}],["4khz",{"_index":5250,"t":{"2079":{"position":[[403,68]]}}}],["4mb，则传输该文件到主机b",{"_index":5426,"t":{"2138":{"position":[[1414,30]]}}}],["4x",{"_index":604,"t":{"137":{"position":[[87,3]]}}}],["4、dhcp",{"_index":5698,"t":{"2197":{"position":[[529,6]]}}}],["4、校验和：检测udp",{"_index":5873,"t":{"2252":{"position":[[121,28]]}}}],["4、经过smtp握手后，smtp客户端通过tcp",{"_index":5190,"t":{"2057":{"position":[[607,34]]}}}],["4个字节的是32位的双字。每个双字的前一个字是该双字的低16位，后一个字是该字的高16",{"_index":6171,"t":{"2454":{"position":[[586,45]]}}}],["4位或8",{"_index":6076,"t":{"2434":{"position":[[117,26]]}}}],["4位版本号。标识当前的协议版本，比如ipv4",{"_index":5515,"t":{"2167":{"position":[[36,23]]}}}],["4号数据报文段发送出去，接收方收到后，发现这不是按序到达的报文段，因此给发送方发送针对2号报文段的重复确认，表明我现在希望收到的是3号报文段，但是我没有收到3号报文段，而收到了未按序到达的报文段，发送方还可以将发送窗口中的5号报文段发送出去,接收方收到后，发现这不是按序到达的报文段，因此给发送方发送针对2号报文段的重复确认，表明我现在希望收到的是3号报文段，但是我没有收到3号报文段，而收到了未按序到达的报文段,，发送方还可以将发送窗口内的最后一个数据段即6号数据报文段发送出去，接收方收到后，发现这不是按序到达的报文段，因此给发送方发送针对2号报文段的重复确认，表明我现在希望收到的是3号报文段，但是我没有收到3",{"_index":5823,"t":{"2236":{"position":[[1343,371]]}}}],["4时，说明位图文件表示的是一幅16",{"_index":6189,"t":{"2454":{"position":[[1206,22]]}}}],["4）在网络层以上使用的中间设备叫做网关（gateway",{"_index":5513,"t":{"2162":{"position":[[88,55]]}}}],["4）精通面向对象分析和设计技术，包括设计模式、uml",{"_index":626,"t":{"148":{"position":[[557,29]]},"317":{"position":[[557,29]]}}}],["4，发送方发送数据包0，1，2，3，然后进入等待状态，其中数据包2丢失，接收方返回ack0，1，窗口滑动继续发送包4，5，此时包2计时超时，默认数据包2没有收到，按照gbn，发送方重新发送数据包2，3，4，5",{"_index":5935,"t":{"2279":{"position":[[471,123]]}}}],["5",{"_index":847,"t":{"255":{"position":[[711,3]]},"295":{"position":[[804,1]]},"363":{"position":[[1725,3]]},"380":{"position":[[894,1]]},"402":{"position":[[103,1]]},"486":{"position":[[398,2],[575,1],[581,1]]},"488":{"position":[[357,2]]},"490":{"position":[[229,2],[258,3],[272,2]]},"492":{"position":[[71,2],[159,1]]},"563":{"position":[[631,1]]},"600":{"position":[[66,3]]},"757":{"position":[[237,1],[345,1],[427,1],[434,1],[491,1],[526,1],[561,1],[596,1],[601,1],[608,1],[615,1],[622,1],[629,1],[631,1],[673,1],[693,1],[713,1],[733,1],[735,1],[739,1],[743,1],[747,1],[751,1],[753,1]]},"1241":{"position":[[148,3],[189,2]]},"1244":{"position":[[129,1]]},"1364":{"position":[[427,3]]},"1397":{"position":[[72,3],[184,3]]},"1437":{"position":[[148,1],[411,1]]},"1507":{"position":[[3674,2],[4114,2]]},"1511":{"position":[[712,4],[784,4]]},"1626":{"position":[[92,1],[241,1],[635,1]]},"1632":{"position":[[16,1]]},"1673":{"position":[[186,1]]},"1691":{"position":[[139,2]]},"1718":{"position":[[136,2]]},"1743":{"position":[[243,2],[285,2]]},"1767":{"position":[[232,1]]},"1771":{"position":[[153,1]]},"1788":{"position":[[187,2],[285,2]]},"1790":{"position":[[402,2]]},"1792":{"position":[[26,2]]},"1842":{"position":[[1950,2]]},"1999":{"position":[[127,2]]},"2090":{"position":[[0,16]]},"2141":{"position":[[227,1]]},"2144":{"position":[[521,1]]},"2148":{"position":[[149,1]]},"2258":{"position":[[406,1]]},"2443":{"position":[[154,16]]}}}],["5.0",{"_index":1387,"t":{"486":{"position":[[577,3]]},"494":{"position":[[790,3]]},"496":{"position":[[529,3]]}}}],["5.2",{"_index":6256,"t":{"2476":{"position":[[201,3]]}}}],["5.6",{"_index":1644,"t":{"598":{"position":[[151,4]]}}}],["5.任选一个tcp报文段，说明它是对哪个tcp",{"_index":5967,"t":{"2287":{"position":[[970,34]]}}}],["5/9",{"_index":4264,"t":{"1713":{"position":[[269,5]]},"1715":{"position":[[91,5]]}}}],["50",{"_index":1226,"t":{"412":{"position":[[232,4]]},"414":{"position":[[169,4]]},"416":{"position":[[220,4],[376,2]]},"757":{"position":[[493,2],[528,2],[563,2],[598,2],[633,2]]},"853":{"position":[[466,4],[503,4],[509,5]]},"1515":{"position":[[1301,4],[1538,4]]},"1518":{"position":[[417,4]]},"2109":{"position":[[65,45]]},"2141":{"position":[[231,2]]},"2173":{"position":[[177,3]]}}}],["50%时刻处，dhcp",{"_index":5718,"t":{"2197":{"position":[[1006,18]]}}}],["500",{"_index":503,"t":{"103":{"position":[[3523,4],[3841,4]]},"200":{"position":[[3523,4],[3841,4]]},"1420":{"position":[[1060,4]]},"2057":{"position":[[1291,3]]}}}],["500,注意scrolli",{"_index":504,"t":{"103":{"position":[[3528,45]]},"200":{"position":[[3528,45]]}}}],["5004",{"_index":172,"t":{"33":{"position":[[642,6]]}}}],["500let",{"_index":4085,"t":{"1638":{"position":[[183,6]]}}}],["500mb",{"_index":1855,"t":{"698":{"position":[[479,16]]}}}],["500mb，存储空间自动增长量为5mb",{"_index":1860,"t":{"698":{"position":[[580,20]]}}}],["500表示为2进制。111110100",{"_index":5457,"t":{"2138":{"position":[[3498,21]]}}}],["505",{"_index":5140,"t":{"2049":{"position":[[210,3]]}}}],["50px",{"_index":3386,"t":{"1366":{"position":[[2509,5]]},"1981":{"position":[[1124,5]]}}}],["50分贝，交谈约60分贝，交通繁忙地区85",{"_index":6212,"t":{"2460":{"position":[[665,33]]}}}],["50场/",{"_index":6289,"t":{"2509":{"position":[[666,10],[757,10]]}}}],["50～250hz",{"_index":6257,"t":{"2476":{"position":[[496,19]]}}}],["51",{"_index":4479,"t":{"1838":{"position":[[306,2]]}}}],["512mb",{"_index":216,"t":{"41":{"position":[[20,5]]}}}],["512的图像中，每隔一行删去一行和每隔一列删去一列而得到的256×256的图像。图(c）、(d)、(e)、(f",{"_index":6021,"t":{"2401":{"position":[[56,68]]}}}],["52582，服务器端口：80",{"_index":5970,"t":{"2287":{"position":[[1198,26]]}}}],["525行、帧率30",{"_index":6283,"t":{"2509":{"position":[[560,16]]}}}],["529cff",{"_index":2670,"t":{"1094":{"position":[[1233,7],[1656,8]]}}}],["550",{"_index":5204,"t":{"2057":{"position":[[1301,3]]}}}],["56",{"_index":5335,"t":{"2125":{"position":[[841,2]]}}}],["5700",{"_index":867,"t":{"255":{"position":[[1191,32],[1282,5],[1378,5],[1426,5],[2424,5],[2522,5],[2571,5]]},"363":{"position":[[2536,32],[2627,5],[2723,5],[2771,5]]}}}],["59",{"_index":994,"t":{"289":{"position":[[460,4]]}}}],["59a0e3",{"_index":2688,"t":{"1094":{"position":[[2327,8]]}}}],["5;let",{"_index":4143,"t":{"1642":{"position":[[630,5],[829,5]]}}}],["5deg",{"_index":3795,"t":{"1507":{"position":[[3824,6],[3853,6],[3886,6],[4011,6],[4040,6],[4073,6],[4264,6],[4293,6],[4326,6],[4451,6],[4480,6],[4513,6]]}}}],["5e",{"_index":4086,"t":{"1638":{"position":[[194,2],[610,2]]}}}],["5e2",{"_index":4084,"t":{"1638":{"position":[[175,4]]}}}],["5g，wifi",{"_index":5478,"t":{"2141":{"position":[[1592,91]]}}}],["5mb",{"_index":1859,"t":{"698":{"position":[[568,11]]}}}],["5min",{"_index":2593,"t":{"1092":{"position":[[1633,4]]}}}],["5s",{"_index":3842,"t":{"1515":{"position":[[1559,2]]},"1522":{"position":[[165,2]]}}}],["5、dhcp",{"_index":5705,"t":{"2197":{"position":[[687,6]]}}}],["5、在bob的邮件服务器上，smtp服务器接收到报文后，邮件服务器将报文放入bob",{"_index":5191,"t":{"2057":{"position":[[642,46]]}}}],["5个并行tcp连接，则基于http1.0获取url链接web",{"_index":5433,"t":{"2138":{"position":[[1843,48]]}}}],["5之后不发了，是因为必须要等2",{"_index":5947,"t":{"2281":{"position":[[429,22]]}}}],["5）对性能有一定的要求，了解yahoo",{"_index":620,"t":{"148":{"position":[[262,39]]},"317":{"position":[[262,39]]}}}],["5）熟悉网络编程，具有设计和开发对外api接口经验和能力，同时具备跨平台的api规范设计以及api",{"_index":627,"t":{"148":{"position":[[587,57]]},"317":{"position":[[587,57]]}}}],["6",{"_index":621,"t":{"148":{"position":[[302,8],[645,8]]},"175":{"position":[[16,1]]},"255":{"position":[[727,2],[2535,1]]},"289":{"position":[[627,1]]},"295":{"position":[[824,1],[839,1]]},"317":{"position":[[302,8],[645,8]]},"363":{"position":[[1741,2]]},"380":{"position":[[914,1],[929,1]]},"402":{"position":[[127,1]]},"608":{"position":[[221,2]]},"1241":{"position":[[152,3],[170,3],[214,3]]},"1364":{"position":[[474,3]]},"1397":{"position":[[470,3],[558,3]]},"1437":{"position":[[416,3]]},"1561":{"position":[[274,1]]},"1626":{"position":[[94,1],[243,1],[637,1]]},"1632":{"position":[[11,1]]},"1642":{"position":[[601,1]]},"1644":{"position":[[20,1]]},"1646":{"position":[[20,1]]},"1842":{"position":[[306,1],[713,1],[2041,2]]},"2072":{"position":[[61,1]]},"2127":{"position":[[419,10]]},"2144":{"position":[[475,1]]},"2181":{"position":[[26,14]]},"2247":{"position":[[1238,8]]},"2258":{"position":[[506,1]]}}}],["6)\">试一试</button></body></html",{"_index":4229,"t":{"1675":{"position":[[303,30]]}}}],["6);\">点击显示</button></body></html",{"_index":4232,"t":{"1677":{"position":[[106,32]]}}}],["6);</script></body></html",{"_index":4226,"t":{"1675":{"position":[[117,26]]},"1679":{"position":[[108,26]]}}}],["6.25",{"_index":5571,"t":{"2173":{"position":[[524,5],[589,5]]}}}],["6.5.1",{"_index":6266,"t":{"2490":{"position":[[0,5]]}}}],["6.选一个由你的主机发送给服务器的tcp",{"_index":5968,"t":{"2287":{"position":[[1039,58]]}}}],["60",{"_index":832,"t":{"255":{"position":[[294,3],[318,2],[1186,2],[1720,3],[1744,2]]},"363":{"position":[[1309,3],[1333,2],[2531,2]]},"392":{"position":[[501,3],[508,2]]},"757":{"position":[[486,2],[521,2],[556,2],[591,2],[626,2]]},"1340":{"position":[[251,3],[255,4],[1048,3],[1052,4]]},"1507":{"position":[[3895,3],[4335,3]]},"1790":{"position":[[198,7]]}}}],["600",{"_index":3154,"t":{"1334":{"position":[[223,4]]}}}],["60。根据该部分可以将tcp报头和有效载荷分离。tcp报文默认大小为20",{"_index":5854,"t":{"2247":{"position":[[1137,40]]}}}],["60场/",{"_index":6284,"t":{"2509":{"position":[[579,10]]}}}],["60度的正切值：1.7320508075688767",{"_index":1368,"t":{"483":{"position":[[481,26]]}}}],["60，b",{"_index":1182,"t":{"392":{"position":[[97,4]]}}}],["60，小时加1，分钟减60",{"_index":885,"t":{"255":{"position":[[1687,19]]}}}],["61",{"_index":1192,"t":{"392":{"position":[[653,2],[788,2],[1077,2],[1097,2]]}}}],["61a5ff",{"_index":2669,"t":{"1094":{"position":[[1191,7],[1694,8]]}}}],["62",{"_index":4176,"t":{"1653":{"position":[[146,2]]},"1749":{"position":[[153,4]]}}}],["625行、帧率25",{"_index":6288,"t":{"2509":{"position":[[647,16],[738,16]]}}}],["635a918c1be53239a161f777",{"_index":260,"t":{"49":{"position":[[863,28]]}}}],["64",{"_index":391,"t":{"95":{"position":[[200,2]]},"1146":{"position":[[270,18]]},"1944":{"position":[[283,18]]}}}],["640kb/64kps=10",{"_index":5405,"t":{"2138":{"position":[[137,20]]}}}],["65",{"_index":2724,"t":{"1108":{"position":[[355,2]]}}}],["66);//也可以把声明对象和创建对象合在一起进行rect",{"_index":1273,"t":{"441":{"position":[[178,29]]}}}],["67",{"_index":5668,"t":{"2195":{"position":[[923,2]]},"2197":{"position":[[76,8]]}}}],["678",{"_index":4178,"t":{"1655":{"position":[[99,4]]}}}],["68",{"_index":5671,"t":{"2195":{"position":[[957,2]]}}}],["6;</script></body></html",{"_index":4224,"t":{"1673":{"position":[[190,25]]}}}],["6elif",{"_index":874,"t":{"255":{"position":[[1391,5]]},"363":{"position":[[2736,5]]}}}],["6px",{"_index":2051,"t":{"853":{"position":[[435,4]]}}}],["6、bob",{"_index":5192,"t":{"2057":{"position":[[689,26]]}}}],["6、dhcp",{"_index":5714,"t":{"2197":{"position":[[904,6]]}}}],["7",{"_index":749,"t":{"204":{"position":[[16,1]]},"251":{"position":[[267,1]]},"255":{"position":[[730,3]]},"295":{"position":[[796,1],[816,1]]},"363":{"position":[[1744,3]]},"380":{"position":[[886,1],[906,1]]},"402":{"position":[[153,1]]},"426":{"position":[[238,1]]},"464":{"position":[[296,1]]},"480":{"position":[[31,1]]},"556":{"position":[[66,1]]},"618":{"position":[[767,1]]},"1012":{"position":[[51,1]]},"1241":{"position":[[156,2],[181,3]]},"1271":{"position":[[47,1]]},"1399":{"position":[[606,3],[943,3]]},"1437":{"position":[[420,2]]},"1626":{"position":[[96,1],[245,1],[639,1]]},"1683":{"position":[[54,2]]},"1687":{"position":[[50,2]]},"1699":{"position":[[237,3],[262,2]]},"1842":{"position":[[165,1],[371,3]]},"1852":{"position":[[280,1]]},"2055":{"position":[[428,1],[746,1]]},"2144":{"position":[[420,1]]},"2258":{"position":[[659,1]]},"2534":{"position":[[61,8],[75,3],[85,1],[161,1],[201,13],[220,27],[262,18],[312,7],[336,33],[737,21],[864,14]]},"2543":{"position":[[61,8],[75,3],[85,1],[161,1],[201,13],[220,27],[262,18],[312,7],[336,33],[737,21],[864,14]]},"2552":{"position":[[61,8],[75,3],[85,1],[161,1],[201,13],[220,27],[262,18],[312,7],[336,33],[737,21],[864,14]]}}}],["7.在此次访问中，除了http协议消息和tcp",{"_index":5971,"t":{"2287":{"position":[[1225,67]]}}}],["70",{"_index":1907,"t":{"757":{"position":[[479,2],[514,2],[549,2],[584,2],[619,2]]},"1346":{"position":[[341,3]]},"1515":{"position":[[1722,3]]}}}],["700",{"_index":402,"t":{"101":{"position":[[88,5],[171,4]]},"103":{"position":[[79,5],[153,4],[591,5],[665,4]]},"198":{"position":[[88,5],[171,4]]},"200":{"position":[[79,5],[153,4],[591,5],[665,4]]}}}],["7000",{"_index":3128,"t":{"1323":{"position":[[924,5]]},"1327":{"position":[[285,5]]}}}],["700nm(红)、546.1nm",{"_index":6059,"t":{"2424":{"position":[[13,19]]}}}],["700px",{"_index":3354,"t":{"1366":{"position":[[1155,8]]}}}],["70px",{"_index":2074,"t":{"853":{"position":[[657,5]]}}}],["70rpx",{"_index":4806,"t":{"1960":{"position":[[264,6]]}}}],["72",{"_index":4543,"t":{"1852":{"position":[[196,2]]}}}],["750rpx（即750个物理像素），在所有设备上都是如此，无论在iphone13pro上还是iphon",{"_index":4809,"t":{"1960":{"position":[[351,63]]}}}],["750）px，其中screenwidth为手机屏幕的实际的宽度（单位px），例如iphone6的screenwidth=375px，则在iphone6中1rpx=0.5px。在后面的开发中，请广泛使用rpx",{"_index":4811,"t":{"1960":{"position":[[448,104]]}}}],["7b",{"_index":4142,"t":{"1642":{"position":[[585,4]]}}}],["7db4e9",{"_index":2689,"t":{"1094":{"position":[[2366,9]]}}}],["7位ascii",{"_index":5186,"t":{"2057":{"position":[[401,13]]}}}],["7处理过程的一种高度抽象示意图，用于解释mpeg",{"_index":6333,"t":{"2534":{"position":[[839,24]]},"2543":{"position":[[839,24]]},"2552":{"position":[[839,24]]}}}],["8",{"_index":18,"t":{"10":{"position":[[79,3]]},"140":{"position":[[152,1]]},"255":{"position":[[746,2],[2584,1]]},"289":{"position":[[358,9],[394,19]]},"295":{"position":[[750,1],[765,1]]},"363":{"position":[[1760,2]]},"380":{"position":[[840,1],[855,1]]},"402":{"position":[[179,1]]},"496":{"position":[[274,2]]},"498":{"position":[[78,2],[220,1]]},"565":{"position":[[122,1],[224,1]]},"853":{"position":[[65,3]]},"912":{"position":[[310,4]]},"914":{"position":[[505,4]]},"1104":{"position":[[232,2]]},"1106":{"position":[[227,2]]},"1223":{"position":[[952,1]]},"1241":{"position":[[159,3],[192,3],[203,3]]},"1437":{"position":[[423,2]]},"1511":{"position":[[47,3]]},"1515":{"position":[[57,3]]},"1547":{"position":[[90,3],[658,4],[678,1],[690,1],[877,1]]},"1549":{"position":[[69,3],[242,3]]},"1551":{"position":[[49,3]]},"1555":{"position":[[23,3],[66,1],[294,22]]},"1565":{"position":[[96,1]]},"1572":{"position":[[196,1]]},"1592":{"position":[[564,1]]},"1613":{"position":[[295,1]]},"1618":{"position":[[481,1]]},"1626":{"position":[[98,1],[247,1],[641,1]]},"1699":{"position":[[267,2]]},"1713":{"position":[[143,3]]},"1829":{"position":[[338,1]]},"2055":{"position":[[362,1]]},"2127":{"position":[[853,10]]},"2167":{"position":[[534,39]]},"2169":{"position":[[520,12]]},"2409":{"position":[[57,11]]},"2439":{"position":[[421,5]]},"2469":{"position":[[1105,1]]},"2471":{"position":[[0,38]]}}}],["8.0.30.0.msi",{"_index":1799,"t":{"648":{"position":[[91,13]]}}}],["8.比较http",{"_index":5973,"t":{"2287":{"position":[[1324,18]]}}}],["80",{"_index":475,"t":{"103":{"position":[[1052,3],[2564,3],[3221,3],[4184,3],[4390,3]]},"200":{"position":[[1052,3],[2564,3],[3221,3],[4184,3],[4390,3]]},"757":{"position":[[472,2],[507,2],[542,2],[577,2],[612,2]]},"906":{"position":[[51,2]]},"1340":{"position":[[781,4]]},"2045":{"position":[[96,6]]}}}],["80.0",{"_index":1418,"t":{"494":{"position":[[794,4]]}}}],["80/8080/3128/8081/9098",{"_index":5827,"t":{"2244":{"position":[[12,22]]}}}],["800",{"_index":468,"t":{"103":{"position":[[793,4],[2383,4],[3954,4]]},"200":{"position":[[793,4],[2383,4],[3954,4]]},"1344":{"position":[[57,4],[82,4]]}}}],["800*600的24位图象要多少存储空间？（24位真彩色.bmp",{"_index":6033,"t":{"2409":{"position":[[364,39]]}}}],["800*600的256级灰度的图象要多少存储空间？（256级灰度.bmp",{"_index":6030,"t":{"2409":{"position":[[218,43]]}}}],["800×600的黑白图像需要多少的存储空间？（.bmp",{"_index":6027,"t":{"2409":{"position":[[77,34]]}}}],["800✖600✖1/8=60000byte≈60kb",{"_index":6029,"t":{"2409":{"position":[[164,26]]}}}],["800✖600✖24/8=800✖600✖3",{"_index":6034,"t":{"2409":{"position":[[436,24]]}}}],["800✖600✖8/8=480000byte",{"_index":6032,"t":{"2409":{"position":[[314,22]]}}}],["802.11协议族、hiperlan",{"_index":5376,"t":{"2131":{"position":[[96,23]]}}}],["802.11标准的wlan。wlan（wireless",{"_index":5374,"t":{"2131":{"position":[[29,27]]}}}],["87.5%时刻处，dhcp",{"_index":5726,"t":{"2197":{"position":[[1184,20]]}}}],["8700",{"_index":871,"t":{"255":{"position":[[1330,5],[1474,5],[2473,5],[2620,5]]},"363":{"position":[[2675,5],[2819,5]]}}}],["874.008",{"_index":1509,"t":{"514":{"position":[[359,7]]}}}],["8859",{"_index":3897,"t":{"1555":{"position":[[187,4]]}}}],["89",{"_index":2260,"t":{"950":{"position":[[62,5]]}}}],["890",{"_index":501,"t":{"103":{"position":[[3329,3],[3642,3]]},"200":{"position":[[3329,3],[3642,3]]}}}],["8:00",{"_index":844,"t":{"255":{"position":[[680,4],[1166,4],[2000,4]]},"363":{"position":[[1694,4],[2511,4]]}}}],["8elif",{"_index":876,"t":{"255":{"position":[[1439,5]]},"363":{"position":[[2784,5]]}}}],["8fbfff",{"_index":2668,"t":{"1094":{"position":[[1147,7],[1733,9]]}}}],["8gceb5nt124c014d&rid=4&modulename=&tabid=file\"><img",{"_index":3390,"t":{"1366":{"position":[[2672,51]]}}}],["8khz",{"_index":6268,"t":{"2490":{"position":[[151,22]]}}}],["8位协议。记录上层协议这条数据需要交付给传输层哪个协议。它实现了ip",{"_index":5524,"t":{"2167":{"position":[[636,43]]}}}],["8位服务类型（tos），前三位标识优先级（已经弃用），接下来四位是最小延迟、最大吞吐、最高可能性、最小成本。剩下一位是保留位。1998",{"_index":5517,"t":{"2167":{"position":[[186,93]]}}}],["8字节的前同步码字段开始。该前同步码的前7字节的值都是10101010；最后一个字节是10101011。前同步码字段的前7字节用于“唤醒”接收适配器，并且将它们的时钟和发送方的时钟同步。为什么这些时钟会不同步呢？记住适配器a的目的是根据以太局域网类型的不同，分别以10mbps、100mbps或者1gbps的速率传输帧。但是适配器a不会以精确的额定速率传输帧；相对于额定速率总有一些漂移，局域网上的其他适配器不会预先知道这种漂移。接收适配器只需通过锁定前同步码的前7字节的比特，就能够锁定适配器a的时钟。前同步码的第8个字节的最后两个比特（第一个出现的是两个连续的1）警告适配器b",{"_index":5359,"t":{"2127":{"position":[[864,311]]}}}],["8时，说明位图文件表示的是一幅256",{"_index":6190,"t":{"2454":{"position":[[1229,23]]}}}],["8：00",{"_index":992,"t":{"289":{"position":[[388,5]]}}}],["8：00和20：00",{"_index":1003,"t":{"289":{"position":[[728,21]]}}}],["8：10",{"_index":978,"t":{"289":{"position":[[48,5]]}}}],["8：11",{"_index":988,"t":{"289":{"position":[[271,4]]}}}],["9",{"_index":747,"t":{"194":{"position":[[16,1]]},"255":{"position":[[749,3]]},"363":{"position":[[1763,3]]},"494":{"position":[[788,1]]},"496":{"position":[[527,1]]},"654":{"position":[[314,2]]},"853":{"position":[[1399,1]]},"1070":{"position":[[12,2]]},"1223":{"position":[[71,1],[542,1]]},"1241":{"position":[[409,1]]},"1437":{"position":[[426,2]]},"1507":{"position":[[1245,1],[1514,1],[3737,1],[4177,1]]},"1626":{"position":[[643,1]]},"1797":{"position":[[68,2],[340,2]]},"1799":{"position":[[110,2],[415,2]]},"1801":{"position":[[101,2],[310,2]]},"1803":{"position":[[141,2],[398,2],[711,2],[864,2],[1107,2]]},"1805":{"position":[[151,2],[379,2]]},"1807":{"position":[[67,2],[275,2]]},"1809":{"position":[[67,2]]},"1811":{"position":[[73,2]]},"1813":{"position":[[76,2]]},"2138":{"position":[[3520,10]]},"2287":{"position":[[1375,21]]}}}],["9.65600",{"_index":4296,"t":{"1731":{"position":[[156,7]]}}}],["9.656000",{"_index":4289,"t":{"1729":{"position":[[138,8]]}}}],["9.656000e+0",{"_index":4283,"t":{"1727":{"position":[[167,11]]}}}],["9.6560e+0x.toexponential(6",{"_index":4282,"t":{"1727":{"position":[[132,28]]}}}],["9.6560x.tofixed(6",{"_index":4288,"t":{"1729":{"position":[[112,19]]}}}],["9.656;x.toexponential(2",{"_index":4280,"t":{"1727":{"position":[[67,25]]}}}],["9.656;x.tofixed(0",{"_index":4285,"t":{"1729":{"position":[[40,19]]}}}],["9.656;x.toprecis",{"_index":4292,"t":{"1731":{"position":[[42,22]]}}}],["9.656x.toprecision(2",{"_index":4293,"t":{"1731":{"position":[[71,22]]}}}],["9.656x.toprecision(6",{"_index":4295,"t":{"1731":{"position":[[127,22]]}}}],["9.66e+0x.toexponential(4",{"_index":4281,"t":{"1727":{"position":[[99,26]]}}}],["9.66x.tofixed(4",{"_index":4287,"t":{"1729":{"position":[[88,17]]}}}],["9.7x.toprecision(4",{"_index":4294,"t":{"1731":{"position":[[100,20]]}}}],["90",{"_index":473,"t":{"103":{"position":[[996,3],[2508,3],[3183,3]]},"200":{"position":[[996,3],[2508,3],[3183,3]]},"483":{"position":[[457,2]]},"500":{"position":[[336,3]]},"504":{"position":[[583,2]]},"757":{"position":[[465,2],[500,2],[535,2],[570,2],[605,2]]},"950":{"position":[[50,5],[68,5]]},"1340":{"position":[[493,3],[1287,4]]},"1507":{"position":[[3987,3],[4427,3]]}}}],["90,8,18,32,50",{"_index":4418,"t":{"1799":{"position":[[633,13]]}}}],["90,小红:98,小绿:89,小兰:90处理后的字符串小明:90小红:98小绿:89小兰:90",{"_index":2276,"t":{"950":{"position":[[1006,54]]}}}],["90,小红=98,小绿=89,小兰=90",{"_index":2275,"t":{"950":{"position":[[976,29]]}}}],["90.0",{"_index":1431,"t":{"498":{"position":[[228,4]]},"500":{"position":[[492,4],[504,4]]}}}],["900",{"_index":479,"t":{"103":{"position":[[1224,4],[1429,4],[3414,4],[3727,4]]},"200":{"position":[[1224,4],[1429,4],[3414,4],[3727,4]]}}}],["9000",{"_index":3106,"t":{"1323":{"position":[[119,13]]}}}],["901",{"_index":975,"t":{"287":{"position":[[520,10]]}}}],["90f",{"_index":1426,"t":{"498":{"position":[[109,4]]},"504":{"position":[[419,4]]}}}],["90vh",{"_index":3833,"t":{"1515":{"position":[[946,5]]}}}],["90小红:98小绿:89小兰:90",{"_index":2277,"t":{"950":{"position":[[1077,20]]}}}],["90小红：98小绿：89小兰：90",{"_index":2261,"t":{"950":{"position":[[93,20]]}}}],["911",{"_index":4158,"t":{"1649":{"position":[[50,5]]},"1651":{"position":[[114,4]]},"1685":{"position":[[74,3],[122,5]]},"1689":{"position":[[27,5],[64,5]]}}}],["9223372036854775808l~9223372036854775807l",{"_index":1580,"t":{"565":{"position":[[128,41]]}}}],["95",{"_index":445,"t":{"101":{"position":[[1630,3]]},"198":{"position":[[1630,3]]},"255":{"position":[[1181,2]]},"363":{"position":[[2526,2]]},"1094":{"position":[[362,4]]}}}],["96,000",{"_index":6238,"t":{"2469":{"position":[[814,6]]}}}],["98",{"_index":2259,"t":{"950":{"position":[[56,5]]}}}],["99",{"_index":4430,"t":{"1803":{"position":[[603,6]]}}}],["99.993",{"_index":1660,"t":{"598":{"position":[[293,7]]}}}],["999",{"_index":2910,"t":{"1248":{"position":[[445,5]]},"1255":{"position":[[276,5]]}}}],["9:35",{"_index":782,"t":{"245":{"position":[[884,7]]},"255":{"position":[[685,4],[1171,4],[2007,4]]},"257":{"position":[[830,7]]},"363":{"position":[[1699,4],[2516,4]]}}}],["9:50",{"_index":845,"t":{"255":{"position":[[697,4]]},"363":{"position":[[1711,4]]}}}],["9}console.log(i",{"_index":4055,"t":{"1626":{"position":[[100,17],[249,17]]}}}],["_.capitalize(response.data.answ",{"_index":3598,"t":{"1420":{"position":[[1334,34]]}}}],["_.debounc",{"_index":3586,"t":{"1420":{"position":[[817,12],[926,12]]}}}],["_.debounce(this.getansw",{"_index":3591,"t":{"1420":{"position":[[1033,26]]}}}],["_.throttl",{"_index":3589,"t":{"1420":{"position":[[948,13]]}}}],["__dirnam",{"_index":2280,"t":{"955":{"position":[[49,9],[72,9]]}}}],["__main__",{"_index":184,"t":{"33":{"position":[[1106,11]]},"179":{"position":[[1180,11]]},"221":{"position":[[1180,11]]},"1165":{"position":[[1180,11]]}}}],["__name__",{"_index":183,"t":{"33":{"position":[[1094,8]]},"179":{"position":[[1168,8]]},"221":{"position":[[1168,8]]},"1165":{"position":[[1168,8]]}}}],["_blank",{"_index":2990,"t":{"1271":{"position":[[433,9]]}}}],["_id",{"_index":258,"t":{"49":{"position":[[847,6]]},"1872":{"position":[[2712,4],[2844,3]]},"1876":{"position":[[1442,3]]}}}],["_openid",{"_index":4629,"t":{"1872":{"position":[[2370,8]]},"1876":{"position":[[775,7]]},"1878":{"position":[[331,10]]}}}],["a&&b",{"_index":1198,"t":{"394":{"position":[[329,8]]}}}],["a&b",{"_index":1187,"t":{"392":{"position":[[150,3]]}}}],["a),对指定对象数组根据其元素的自然顺序进行升序排列。同样的方法适用于所有的其他基本数据类型（byte，short，int",{"_index":1756,"t":{"618":{"position":[[691,64]]}}}],["a)给出了一幅灰度级分辨率为256，空间分辨率为512×512",{"_index":6019,"t":{"2401":{"position":[[3,37]]}}}],["a,b,c",{"_index":1795,"t":{"644":{"position":[[201,9]]}}}],["a,b,c,d,",{"_index":4546,"t":{"1854":{"position":[[34,12]]}}}],["a,b,c}d1×d2",{"_index":1805,"t":{"654":{"position":[[107,12]]}}}],["a.b.c.d/x，其中x",{"_index":5626,"t":{"2191":{"position":[[143,27]]}}}],["a.return",{"_index":4215,"t":{"1667":{"position":[[95,8]]}}}],["a.slice(3",{"_index":4216,"t":{"1667":{"position":[[172,12]]}}}],["a.substring(3",{"_index":4218,"t":{"1667":{"position":[[253,16]]}}}],["a.type.tolowercas",{"_index":4404,"t":{"1794":{"position":[[210,21]]}}}],["a.year",{"_index":4402,"t":{"1794":{"position":[[137,6]]}}}],["a/b/c/index.html",{"_index":2338,"t":{"996":{"position":[[14,20]]}}}],["a/b/c/index.html';var",{"_index":2330,"t":{"991":{"position":[[14,23]]}}}],["a/b/c</div",{"_index":3700,"t":{"1470":{"position":[[179,11]]}}}],["a1",{"_index":1827,"t":{"683":{"position":[[50,4]]},"685":{"position":[[49,3]]}}}],["a1,a2,…,an",{"_index":1818,"t":{"658":{"position":[[193,19]]}}}],["a1，0",{"_index":6004,"t":{"2391":{"position":[[181,4]]}}}],["a2",{"_index":1750,"t":{"618":{"position":[[384,11]]},"683":{"position":[[12,3],[55,3]]},"685":{"position":[[53,3],[100,3]]}}}],["a</div><div",{"_index":3697,"t":{"1470":{"position":[[79,11]]}}}],["a='a",{"_index":1584,"t":{"565":{"position":[[310,8]]}}}],["a=0,b=1,c=2,d=3",{"_index":1158,"t":{"388":{"position":[[223,16]]}}}],["a=10",{"_index":1314,"t":{"451":{"position":[[467,5]]},"563":{"position":[[90,5],[228,5]]}}}],["a=10;int",{"_index":1602,"t":{"571":{"position":[[95,8]]}}}],["a=10;long",{"_index":1600,"t":{"571":{"position":[[40,9]]}}}],["a=97",{"_index":1585,"t":{"565":{"position":[[327,5]]}}}],["a===b",{"_index":4201,"t":{"1665":{"position":[[186,8]]}}}],["a=b",{"_index":1668,"t":{"600":{"position":[[78,4]]}}}],["a={1",{"_index":1666,"t":{"600":{"position":[[48,5]]}}}],["a={ai1",{"_index":1829,"t":{"685":{"position":[[2,7]]}}}],["a>mtu",{"_index":5533,"t":{"2169":{"position":[[124,5]]}}}],["a>或者强调元素<em",{"_index":3872,"t":{"1539":{"position":[[173,88]]}}}],["a>的超链接。</p",{"_index":3931,"t":{"1568":{"position":[[60,15]]}}}],["a[1",{"_index":1675,"t":{"600":{"position":[[195,5]]}}}],["a[12];//（错误！）int[12",{"_index":1678,"t":{"602":{"position":[[100,20]]}}}],["a[1]就是b[0",{"_index":1670,"t":{"600":{"position":[[122,11]]}}}],["a[2]=109",{"_index":1738,"t":{"616":{"position":[[434,9]]}}}],["a[2]，而最初分配给b",{"_index":1676,"t":{"600":{"position":[[201,22]]}}}],["a\\b\\d\\",{"_index":2326,"t":{"986":{"position":[[121,8]]}}}],["aa",{"_index":2662,"t":{"1094":{"position":[[922,2],[1407,2]]},"2127":{"position":[[75,2],[78,2],[81,2],[84,2],[464,2],[467,2],[470,2],[473,2],[476,3]]}}}],["aaa",{"_index":4663,"t":{"1878":{"position":[[570,3]]}}}],["aaa111111",{"_index":791,"t":{"249":{"position":[[198,11]]}}}],["aa，接收适配器（即适配器b）的mac地址是bb",{"_index":5350,"t":{"2127":{"position":[[87,24]]}}}],["abc",{"_index":4127,"t":{"1642":{"position":[[76,6]]}}}],["abc\";let",{"_index":4126,"t":{"1642":{"position":[[62,9]]}}}],["abc';a",{"_index":4134,"t":{"1642":{"position":[[360,7]]}}}],["abc';a+b",{"_index":4136,"t":{"1642":{"position":[[393,10]]}}}],["abc';a.length",{"_index":4133,"t":{"1642":{"position":[[303,15]]}}}],["abc';let",{"_index":4125,"t":{"1642":{"position":[[48,9]]}}}],["abc123123123，也就是你的校园网密码nam",{"_index":969,"t":{"287":{"position":[[339,33]]}}}],["abcdefghijklmnopqrstuvwxyz\";var",{"_index":4468,"t":{"1836":{"position":[[38,32]]}}}],["about.html",{"_index":2212,"t":{"914":{"position":[[58,11],[407,14],[632,12]]}}}],["about.wxml",{"_index":2775,"t":{"1154":{"position":[[20,29]]}}}],["absolut",{"_index":2053,"t":{"853":{"position":[[450,9]]},"1507":{"position":[[394,9]]},"1511":{"position":[[517,9],[584,9]]},"1515":{"position":[[1196,9]]},"1518":{"position":[[312,9]]}}}],["abstract",{"_index":1375,"t":{"486":{"position":[[98,8],[149,8],[197,8],[239,8]]}}}],["accept",{"_index":1028,"t":{"295":{"position":[[274,9]]},"380":{"position":[[333,9]]}}}],["access",{"_index":1025,"t":{"293":{"position":[[848,6],[995,6]]},"378":{"position":[[70,6],[217,6]]},"1080":{"position":[[70,6],[217,6]]},"1624":{"position":[[262,6]]},"2104":{"position":[[42,6]]}}}],["access_token",{"_index":300,"t":{"66":{"position":[[536,16]]},"171":{"position":[[536,16]]},"1082":{"position":[[67,12]]},"1084":{"position":[[518,13]]}}}],["access_tokenhead",{"_index":301,"t":{"66":{"position":[[555,19]]},"171":{"position":[[555,19]]}}}],["accesskey",{"_index":737,"t":{"188":{"position":[[0,39],[40,18]]},"230":{"position":[[0,39],[40,18]]},"1174":{"position":[[0,39],[40,18]]}}}],["accesskeyid和accesskeysecret",{"_index":738,"t":{"188":{"position":[[59,40]]},"230":{"position":[[59,40]]},"1174":{"position":[[59,40]]}}}],["access。cdma",{"_index":5290,"t":{"2117":{"position":[[62,46]]}}}],["accordion",{"_index":4884,"t":{"1979":{"position":[[400,9]]}}}],["account/index.wxml",{"_index":2776,"t":{"1154":{"position":[[50,30]]}}}],["ack",{"_index":5394,"t":{"2136":{"position":[[442,64]]},"2247":{"position":[[612,6],[1398,14]]},"2267":{"position":[[240,29]]},"2273":{"position":[[47,67]]},"2287":{"position":[[937,10],[961,8]]}}}],["acknowledgement，ack",{"_index":5899,"t":{"2267":{"position":[[114,44]]}}}],["ack。gbn的接收方不存在缓存，它只需要记住唯一的expectedsequnce。可能产生重复的ack。对于乱序的分组，全部丢弃并重新确认序列号最大的、按序到达的分组。如果我期望的分组的序列号是5，但是此时收到了7，则确认序列号4，将5、7",{"_index":5934,"t":{"2279":{"position":[[303,148]]}}}],["ack丢失了，没有正确到达发送端，因此要再次确认ack（n",{"_index":5946,"t":{"2281":{"position":[[372,46]]}}}],["ack和nak增加校验和，检错并纠错（难度高），添加额外的控制消息（但是控制消息也可能会坏），一旦ack和nak",{"_index":5904,"t":{"2267":{"position":[[345,111]]}}}],["ack对应这一个确认号，它指明下一个期待收到的字节序号，表明该序号之前的所有数据已经正确无误的收到。确认号只有当ack标志为1时才有效。比如建立连接时，syn报文的ack标志位为0",{"_index":5852,"t":{"2247":{"position":[[924,94]]}}}],["ack报文后，检查dhcp",{"_index":5707,"t":{"2197":{"position":[[708,13]]}}}],["ack报文段做出回应，这个报文段里可能包含数据，包的ack置1，序号为客户端的isn+1，确认码为服务端的isn+1，此包发出后，客户端转为established状态，客户端知晓服务端的发包能力正常，服务端的收包能力正常、客户端的收包能力正常。服务器接收到这个包后，也进入established状态，服务端知晓客户端的收包能力正常，至此tcp",{"_index":5805,"t":{"2232":{"position":[[415,208]]}}}],["ack报文，则dhcp",{"_index":5724,"t":{"2197":{"position":[[1154,11],[1334,11]]}}}],["ack报文，则按相应时间延长ip地址租期；如果没有收到dhcp",{"_index":5723,"t":{"2197":{"position":[[1108,31],[1288,31]]}}}],["ack报文，并在选项字段中增加ip",{"_index":5704,"t":{"2197":{"position":[[659,27]]}}}],["ack的信息上加上了期望的顺序号，现在假设情景发送方向接收方发送0号数据包，如果接收方接收到0号数据包，返回（ack，1），发送方接着发送1号数据包。如果接收方接收到0号数据包出现错误，返回（ack，0），发送方重传0",{"_index":5908,"t":{"2271":{"position":[[85,117]]}}}],["ack（确认反馈），rst、syn、fin（用于连接的建立和拆除），【psh（指示接收方应立即将数据交给上层），urg（报文里存在着被发送端上层设为紧急的数据，紧急数据的最后一个字节由一个16比特的紧急数据指针指出）】在实践中，psh和urg",{"_index":5856,"t":{"2247":{"position":[[1247,127]]}}}],["ack，因为收到了ack3，那么说明帧2也正常发送到了（虽然ack2丢失了），也就是说，发送方认为正确传送了0、1、2、3帧，所以超时之后，就重传3之后的所有帧，为4、5、6、7",{"_index":5937,"t":{"2279":{"position":[[699,108]]}}}],["aco",{"_index":1533,"t":{"526":{"position":[[0,6]]}}}],["action",{"_index":961,"t":{"282":{"position":[[18,7]]},"291":{"position":[[34,6]]},"293":{"position":[[33,6],[165,7],[355,7],[492,7]]},"295":{"position":[[665,23]]},"332":{"position":[[108,6],[135,7]]},"334":{"position":[[104,6],[131,7]]},"336":{"position":[[14,7]]},"338":{"position":[[7,6],[85,6]]},"376":{"position":[[114,7],[304,7],[452,7]]},"380":{"position":[[752,23]]},"1076":{"position":[[14,6]]},"1084":{"position":[[161,6]]},"1086":{"position":[[53,7]]},"1118":{"position":[[352,66]]},"1128":{"position":[[103,14]]},"1271":{"position":[[443,7]]},"1972":{"position":[[147,9]]}}}],["action=\"https://google.com/search",{"_index":2997,"t":{"1273":{"position":[[703,35]]}}}],["action@releases/v3",{"_index":2549,"t":{"1084":{"position":[[493,18]]}}}],["actions/checkout@main",{"_index":2545,"t":{"1084":{"position":[[290,21]]}}}],["activ",{"_index":3413,"t":{"1373":{"position":[[60,7],[95,6],[270,7],[500,6],[602,7],[811,7]]},"1375":{"position":[[115,9],[425,7]]},"1377":{"position":[[376,7]]},"1981":{"position":[[42,10],[53,6],[1667,7]]}}}],["active\"></div",{"_index":3420,"t":{"1373":{"position":[[399,14]]}}}],["active\">hi</p",{"_index":3444,"t":{"1377":{"position":[[465,14]]}}}],["active=\"1",{"_index":3348,"t":{"1366":{"position":[[1073,10]]}}}],["activeclass",{"_index":3431,"t":{"1375":{"position":[[102,12],[259,11],[346,12]]}}}],["activecolor",{"_index":3447,"t":{"1380":{"position":[[150,12],[207,12]]}}}],["activenam",{"_index":4885,"t":{"1979":{"position":[[420,10],[1091,11],[2862,11],[2891,12],[3015,11],[3082,12]]}}}],["activenames2",{"_index":4907,"t":{"1979":{"position":[[1398,12],[2911,13],[3150,13]]}}}],["activenames3",{"_index":4910,"t":{"1979":{"position":[[1700,12],[2932,13],[3219,13]]}}}],["adapter）。网络适配器又是又称网卡（network",{"_index":5268,"t":{"2106":{"position":[[24,28]]}}}],["add",{"_index":361,"t":{"90":{"position":[[75,3]]},"126":{"position":[[230,3]]},"287":{"position":[[237,3]]},"365":{"position":[[237,3]]},"700":{"position":[[152,9]]},"1192":{"position":[[37,6]]}}}],["addanim",{"_index":3262,"t":{"1346":{"position":[[601,15]]}}}],["addnewtodo",{"_index":3677,"t":{"1445":{"position":[[1275,11]]}}}],["address",{"_index":3711,"t":{"1472":{"position":[[670,9],[1272,8],[1595,8]]}}}],["address\"></templ",{"_index":3708,"t":{"1472":{"position":[[282,20]]}}}],["address”字段就是dhcp",{"_index":5683,"t":{"2197":{"position":[[239,16]]}}}],["addstyle(200",{"_index":423,"t":{"101":{"position":[[724,13],[903,13]]},"198":{"position":[[724,13],[903,13]]}}}],["addstyle(800",{"_index":510,"t":{"103":{"position":[[4106,13]]},"200":{"position":[[4106,13]]}}}],["adjust",{"_index":2666,"t":{"1094":{"position":[[1091,10]]}}}],["administr",{"_index":1879,"t":{"707":{"position":[[150,58]]}}}],["adob",{"_index":602,"t":{"133":{"position":[[18,23]]},"2450":{"position":[[54,17]]}}}],["adsp·asp·h.245·iso",{"_index":5498,"t":{"2144":{"position":[[538,18]]}}}],["afterread(ev",{"_index":4987,"t":{"1981":{"position":[[1767,16]]}}}],["ag",{"_index":904,"t":{"257":{"position":[[651,6]]},"443":{"position":[[887,4],[921,4],[951,5]]},"445":{"position":[[142,4],[177,5],[291,4],[434,4],[527,5]]},"447":{"position":[[78,4],[162,5],[373,4],[457,5],[687,4],[771,5]]},"449":{"position":[[111,4],[195,5]]},"451":{"position":[[126,4],[210,5],[558,4],[642,5]]},"453":{"position":[[83,4],[167,5]]},"457":{"position":[[179,4]]},"588":{"position":[[51,4]]},"782":{"position":[[141,4]]},"784":{"position":[[239,4]]},"847":{"position":[[940,4]]},"971":{"position":[[167,3],[201,3]]},"1646":{"position":[[68,4]]},"1653":{"position":[[142,3]]}}}],["age:19",{"_index":4322,"t":{"1749":{"position":[[254,8]]}}}],["age:62",{"_index":4172,"t":{"1653":{"position":[[79,7]]},"1697":{"position":[[98,7]]}}}],["age=20;module.exports.usernam",{"_index":2310,"t":{"971":{"position":[[46,30]]}}}],["age>150",{"_index":1293,"t":{"443":{"position":[[969,9]]}}}],["agent",{"_index":697,"t":{"179":{"position":[[358,7]]},"221":{"position":[[358,7]]},"1165":{"position":[[358,7]]},"2047":{"position":[[65,6]]}}}],["agilet",{"_index":2527,"t":{"1062":{"position":[[116,7]]}}}],["ahead",{"_index":2610,"t":{"1092":{"position":[[2674,5]]}}}],["ai",{"_index":279,"t":{"64":{"position":[[0,41]]},"128":{"position":[[59,2]]},"130":{"position":[[55,2]]},"169":{"position":[[0,41]]},"683":{"position":[[90,3]]}}}],["ai1",{"_index":1832,"t":{"685":{"position":[[28,4]]}}}],["ai2",{"_index":1830,"t":{"685":{"position":[[10,4],[33,4]]}}}],["aim",{"_index":3905,"t":{"1557":{"position":[[248,4]]}}}],["ain",{"_index":1831,"t":{"685":{"position":[[20,7],[43,3]]},"1842":{"position":[[920,3]]}}}],["ain,ain,ain",{"_index":4497,"t":{"1842":{"position":[[886,13],[937,13]]}}}],["ain,ain,ain,ain",{"_index":4499,"t":{"1842":{"position":[[1046,17]]}}}],["ajax",{"_index":212,"t":{"37":{"position":[[795,4]]},"1420":{"position":[[232,4],[894,4]]}}}],["alert",{"_index":2952,"t":{"1263":{"position":[[305,5]]}}}],["alert(\"click",{"_index":2959,"t":{"1263":{"position":[[1259,17]]}}}],["alert('click",{"_index":2951,"t":{"1263":{"position":[[198,14],[412,15],[449,15]]}}}],["alert(str.trim",{"_index":4537,"t":{"1850":{"position":[[47,20]]}}}],["algorithm",{"_index":5759,"t":{"2214":{"position":[[30,39]]},"2313":{"position":[[4,9]]}}}],["aliceblu",{"_index":3836,"t":{"1515":{"position":[[1051,10],[1275,10],[1332,10],[1485,10]]},"1518":{"position":[[219,10],[391,10],[448,10]]}}}],["align",{"_index":2070,"t":{"853":{"position":[[625,5]]},"1248":{"position":[[588,6]]},"1255":{"position":[[419,6]]},"1515":{"position":[[904,5]]},"1976":{"position":[[109,5]]}}}],["aliv",{"_index":5068,"t":{"2010":{"position":[[29,8]]}}}],["alive链接，即持久性链接。由下图分析，http客户每碰到一个引用就立即发出一个请求，链接不会关闭，因而http",{"_index":5960,"t":{"2287":{"position":[[403,122]]}}}],["allocation），dhcp服务器为主机指定一个永久性的ip地址，一旦dhcp客户端第一次成功从dhcp服务器端租用到ip",{"_index":5661,"t":{"2195":{"position":[[579,80]]}}}],["allocation），dhcp服务器给主机指定一个具有时间限制的ip",{"_index":5662,"t":{"2195":{"position":[[678,69]]}}}],["allocation），客户端的ip地址是由网络管理员指定的，dhcp服务器只是将指定的ip",{"_index":5664,"t":{"2195":{"position":[[765,56]]}}}],["allover18",{"_index":4437,"t":{"1807":{"position":[[82,9],[290,9]]}}}],["allow",{"_index":4860,"t":{"1972":{"position":[[157,8]]}}}],["allowfullscreen",{"_index":3982,"t":{"1592":{"position":[[106,15],[296,15]]}}}],["aloha",{"_index":5303,"t":{"2119":{"position":[[106,30],[256,13],[520,12],[677,15],[699,7],[904,5],[918,5],[944,5],[958,5],[987,5],[1006,5]]}}}],["aloha最大的优点是如果某个时隙只有一个节点是活跃的，那么他的帧将全速送出。但是，如果发生碰撞，就会有很多的时隙失效。时隙aloha",{"_index":5306,"t":{"2119":{"position":[[533,74]]}}}],["alreadi",{"_index":4051,"t":{"1624":{"position":[[163,7]]}}}],["alright",{"_index":4239,"t":{"1689":{"position":[[131,9]]}}}],["alt",{"_index":1351,"t":{"469":{"position":[[178,3]]},"1017":{"position":[[1876,4]]},"1037":{"position":[[149,4]]},"1366":{"position":[[513,6],[1366,6],[1529,6],[2084,6],[2240,6]]},"1572":{"position":[[147,8]]},"1578":{"position":[[12,3],[191,5]]},"1580":{"position":[[31,36]]},"1582":{"position":[[31,36]]}}}],["alt=\"github",{"_index":3335,"t":{"1366":{"position":[[782,12]]}}}],["alt=\"jet\"></a",{"_index":3380,"t":{"1366":{"position":[[2391,14]]}}}],["alt=\"jetzihan",{"_index":3331,"t":{"1366":{"position":[[644,14]]}}}],["alt=\"power.\"></a",{"_index":3393,"t":{"1366":{"position":[[2757,17]]}}}],["alt=\"th",{"_index":3941,"t":{"1578":{"position":[[99,8]]}}}],["alter",{"_index":1871,"t":{"700":{"position":[[4,5],[101,5]]}}}],["altern",{"_index":6287,"t":{"2509":{"position":[[627,11]]}}}],["ambient",{"_index":52,"t":{"10":{"position":[[992,7]]},"16":{"position":[[128,7]]},"1336":{"position":[[104,7]]}}}],["an)。t[ai",{"_index":1828,"t":{"683":{"position":[[64,9]]}}}],["an)，他的一个关系为r，t",{"_index":1826,"t":{"683":{"position":[[21,14]]}}}],["android",{"_index":945,"t":{"278":{"position":[[56,7]]},"280":{"position":[[2,7]]}}}],["android.os.parcelableexcept",{"_index":936,"t":{"273":{"position":[[256,31]]}}}],["android/build.gradl",{"_index":955,"t":{"280":{"position":[[34,20]]}}}],["android、ios、web、watch等，最接近用户的那一层也就是ui层，然后将其统一起来，就是大前端。大前端最大的特点在于只需一次开发，就能适用于所有平台。开发者不用为一个app需要做android和ios两种模式而担心。大前端不仅会成为移动开发与web",{"_index":633,"t":{"150":{"position":[[526,180]]},"319":{"position":[[526,180]]}}}],["angular",{"_index":556,"t":{"120":{"position":[[240,7]]},"122":{"position":[[236,7]]}}}],["angularj",{"_index":3554,"t":{"1416":{"position":[[88,34]]}}}],["anim",{"_index":1322,"t":{"457":{"position":[[139,6],[260,6]]},"1346":{"position":[[1182,9]]},"1507":{"position":[[24,9],[69,9],[106,9],[152,9],[204,9],[247,9],[282,9],[328,9],[404,10],[433,10],[462,9],[508,9],[566,9],[599,10],[644,9],[680,10],[729,9],[767,10],[817,9],[854,10],[902,9],[938,10],[983,9],[1019,9]]},"1515":{"position":[[1543,10],[1588,9]]},"1522":{"position":[[149,10],[194,9]]}}}],["anonym",{"_index":2314,"t":{"971":{"position":[[334,12]]}}}],["answer",{"_index":3574,"t":{"1420":{"position":[[204,6],[555,7],[585,6]]},"1689":{"position":[[116,6],[156,6],[203,6]]}}}],["answerfunct",{"_index":4204,"t":{"1665":{"position":[[245,14],[525,14]]}}}],["antialia",{"_index":3156,"t":{"1334":{"position":[[277,10]]}}}],["anywhere的理念也得到了记得的赞扬和发展。flutter也在其后诞生，它也可以通过一个技术栈构建多端的代码。2018年，华为、小米、oppo等厂商推出了快应用，运行在系统层面上的小程序。最近，react",{"_index":640,"t":{"150":{"position":[[881,104]]},"319":{"position":[[881,104]]}}}],["an中去除a",{"_index":1834,"t":{"685":{"position":[[109,13]]}}}],["apach",{"_index":2184,"t":{"892":{"position":[[16,6]]}}}],["apache/1.3.0",{"_index":5157,"t":{"2055":{"position":[[389,12],[955,12]]}}}],["api",{"_index":117,"t":{"27":{"position":[[52,3]]},"29":{"position":[[48,3]]},"33":{"position":[[13,3],[261,9]]},"60":{"position":[[4,65]]},"62":{"position":[[0,65]]},"64":{"position":[[70,7]]},"66":{"position":[[61,9]]},"167":{"position":[[0,65]]},"169":{"position":[[70,7]]},"171":{"position":[[61,9]]},"241":{"position":[[21,3],[44,3],[113,3],[176,3]]},"245":{"position":[[24,3],[88,3],[113,3],[149,3],[558,3]]},"247":{"position":[[4,3]]},"249":{"position":[[131,3],[268,3],[368,3],[497,3],[669,3]]},"332":{"position":[[152,3]]},"334":{"position":[[148,3]]},"359":{"position":[[272,3],[565,3],[748,3]]},"363":{"position":[[431,3]]},"490":{"position":[[142,3]]},"762":{"position":[[81,3]]},"768":{"position":[[24,15],[40,10]]},"921":{"position":[[31,3],[76,4]]},"923":{"position":[[81,3]]},"925":{"position":[[18,3]]},"1024":{"position":[[539,26]]},"1068":{"position":[[28,3]]},"1271":{"position":[[11,3],[51,3],[70,3]]},"1273":{"position":[[346,3],[358,3],[426,3],[437,3]]},"1281":{"position":[[75,37]]},"1289":{"position":[[57,19]]},"1295":{"position":[[26,3]]},"1297":{"position":[[352,17]]},"1299":{"position":[[111,3],[135,3]]},"1301":{"position":[[401,5]]},"1402":{"position":[[175,3]]},"1420":{"position":[[1438,4],[1506,51]]},"1428":{"position":[[558,3]]},"1511":{"position":[[333,20]]},"1585":{"position":[[188,3]]},"1592":{"position":[[333,3]]},"1818":{"position":[[151,3]]},"1823":{"position":[[224,3],[348,3]]},"1825":{"position":[[4,3],[65,3],[210,4],[272,3],[393,3]]},"1827":{"position":[[4,3],[49,8],[58,3],[83,8],[92,3]]},"1829":{"position":[[219,12]]},"1872":{"position":[[136,3],[2156,23]]},"1874":{"position":[[172,12]]},"1928":{"position":[[279,5],[376,5],[474,5],[579,5],[650,5]]},"1942":{"position":[[96,6],[184,26]]},"1995":{"position":[[952,3]]}}}],["api.j",{"_index":2226,"t":{"930":{"position":[[51,6]]},"939":{"position":[[255,6]]}}}],["apifox",{"_index":187,"t":{"35":{"position":[[31,20],[171,6],[324,6]]},"245":{"position":[[9,6]]},"782":{"position":[[296,6]]},"784":{"position":[[182,6]]},"810":{"position":[[703,6]]},"825":{"position":[[513,6]]},"847":{"position":[[201,6],[228,6]]}}}],["apifox，创建一个新的接口，接口地址为：/getnam",{"_index":256,"t":{"49":{"position":[[615,36]]}}}],["api和bom",{"_index":4789,"t":{"1942":{"position":[[176,7]]}}}],["api的方式决定页面的结构（如导航栏、页脚、logo",{"_index":2388,"t":{"1015":{"position":[[11,59]]}}}],["api调用师（bushi），那么我们就来快乐地调用api",{"_index":4678,"t":{"1896":{"position":[[0,39]]}}}],["api🖱（geoloc",{"_index":4460,"t":{"1825":{"position":[[192,17]]}}}],["app",{"_index":141,"t":{"31":{"position":[[529,4],[639,3],[678,7]]},"33":{"position":[[291,3]]},"114":{"position":[[591,3],[794,13]]},"211":{"position":[[591,3],[794,13]]},"278":{"position":[[28,4]]},"773":{"position":[[55,3]]},"782":{"position":[[69,3]]},"789":{"position":[[310,3]]},"810":{"position":[[33,3],[529,3]]},"825":{"position":[[138,3]]},"831":{"position":[[216,3]]},"833":{"position":[[96,3]]},"841":{"position":[[42,3]]},"847":{"position":[[321,3],[655,3]]},"1106":{"position":[[60,3]]},"1146":{"position":[[205,30]]},"1248":{"position":[[17,3],[24,3]]},"1312":{"position":[[604,5]]},"1393":{"position":[[84,3],[104,7],[319,5],[515,5]]},"1395":{"position":[[95,5],[445,5]]},"1397":{"position":[[178,5],[552,5]]},"1399":{"position":[[220,3],[937,5],[1284,4],[1304,4],[1315,4],[1343,4],[1371,5]]},"1404":{"position":[[716,7]]},"1918":{"position":[[0,55],[356,3]]},"1922":{"position":[[74,3]]},"1940":{"position":[[14,3]]},"1944":{"position":[[218,30]]},"1950":{"position":[[15,3]]},"2001":{"position":[[110,9],[120,3]]}}}],["app'></div><script",{"_index":530,"t":{"114":{"position":[[517,22]]},"211":{"position":[[517,22]]}}}],["app.do?method=authuser&xh=<studentid>&pwd=<pwd",{"_index":761,"t":{"245":{"position":[[158,52]]}}}],["app.do?method=getkbcxazc&xh=<studentid>&xnxqid=<semester>&zc=<week",{"_index":752,"t":{"241":{"position":[[197,72]]}}}],["app.get",{"_index":1918,"t":{"776":{"position":[[3,9]]},"833":{"position":[[319,32]]},"835":{"position":[[0,12]]},"841":{"position":[[15,9],[89,12]]}}}],["app.get(\"/us",{"_index":1971,"t":{"803":{"position":[[20,16]]}}}],["app.get('/',(req,r",{"_index":1937,"t":{"784":{"position":[[41,24]]}}}],["app.get('/',function(req,res,next",{"_index":1989,"t":{"819":{"position":[[72,35]]}}}],["app.get('/'.function(req,r",{"_index":2015,"t":{"845":{"position":[[38,30]]}}}],["app.get('/user',function(req,r",{"_index":1925,"t":{"780":{"position":[[30,34]]}}}],["app.get('/user/:id',(req,r",{"_index":1943,"t":{"786":{"position":[[26,32]]}}}],["app.get('/user/:username/:id',(req,r",{"_index":1946,"t":{"786":{"position":[[186,42]]}}}],["app.get('请求url',function(req,r",{"_index":1921,"t":{"776":{"position":[[90,34]]}}}],["app.innerhtml",{"_index":533,"t":{"114":{"position":[[632,29]]},"211":{"position":[[632,29]]}}}],["app.j",{"_index":2225,"t":{"930":{"position":[[32,6],[133,6]]},"1922":{"position":[[63,6]]},"1950":{"position":[[68,6]]}}}],["app.jsapp",{"_index":4726,"t":{"1922":{"position":[[119,11]]},"1974":{"position":[[12,11]]}}}],["app.json",{"_index":2774,"t":{"1154":{"position":[[0,19]]},"1868":{"position":[[8,8]]},"1890":{"position":[[7,10],[18,8]]},"1900":{"position":[[20,16]]},"1933":{"position":[[32,8]]},"1935":{"position":[[2,8]]},"1950":{"position":[[83,8]]},"1956":{"position":[[0,11]]},"1985":{"position":[[111,8]]},"1989":{"position":[[12,8],[66,8]]},"1991":{"position":[[23,8]]},"2005":{"position":[[233,9]]}}}],["app.json或index.json中引入组件。如果在app.json中引用，就可以全局使用，如果在某个界面的index.json中引用，则只能那个页面使用，这里我们在app.json",{"_index":4680,"t":{"1898":{"position":[[73,100]]}}}],["app.json的pag",{"_index":4793,"t":{"1956":{"position":[[12,31]]}}}],["app.json的配置项。也就是说，对于单个页面，页面的json优先级大于全局json",{"_index":5010,"t":{"1991":{"position":[[381,60]]}}}],["app.js文件里的kirbyopenid和deeopenid",{"_index":2784,"t":{"1158":{"position":[[231,44]]}}}],["app.listen(80",{"_index":1915,"t":{"773":{"position":[[73,29]]},"782":{"position":[[171,18]]},"789":{"position":[[397,18]]},"810":{"position":[[620,18]]},"825":{"position":[[427,18]]},"831":{"position":[[610,18]]},"833":{"position":[[488,18]]},"847":{"position":[[447,18],[805,18]]}}}],["app.method(path,handl",{"_index":1969,"t":{"801":{"position":[[81,26]]}}}],["app.post",{"_index":1922,"t":{"778":{"position":[[3,10]]},"841":{"position":[[25,10]]}}}],["app.post('请求url',function(req,r",{"_index":1923,"t":{"778":{"position":[[91,35]]}}}],["app.route('/getnam",{"_index":161,"t":{"33":{"position":[[369,22]]},"51":{"position":[[15,22]]}}}],["app.run(debug=tru",{"_index":185,"t":{"33":{"position":[[1118,19]]}}}],["app.us",{"_index":1976,"t":{"810":{"position":[[143,7]]},"825":{"position":[[30,7]]},"833":{"position":[[4,7]]},"841":{"position":[[5,9]]}}}],["app.use('/api',rout",{"_index":1987,"t":{"812":{"position":[[26,22]]}}}],["app.use('/public',express.static('publ",{"_index":1955,"t":{"793":{"position":[[46,43]]}}}],["app.use(express.json())app.use(express.urlencod",{"_index":2023,"t":{"847":{"position":[[127,51]]}}}],["app.use(express.static(\"./clock",{"_index":1952,"t":{"789":{"position":[[347,49]]}}}],["app.use(express.static('publ",{"_index":1947,"t":{"789":{"position":[[65,33]]}}}],["app.use(express.static('public'))app.use(express.static('fil",{"_index":1954,"t":{"791":{"position":[[17,65]]}}}],["app.use(funct",{"_index":1999,"t":{"827":{"position":[[25,16]]},"829":{"position":[[20,16]]}}}],["app.use(mw",{"_index":1993,"t":{"825":{"position":[[54,11]]}}}],["app.use(rout",{"_index":1986,"t":{"810":{"position":[[595,24]]}}}],["app.vu",{"_index":3311,"t":{"1364":{"position":[[478,34]]},"1366":{"position":[[61,7]]}}}],["app.wxss",{"_index":4792,"t":{"1950":{"position":[[102,8]]},"2005":{"position":[[266,8]]}}}],["app.wxss**/.contain",{"_index":4866,"t":{"1976":{"position":[[29,24]]}}}],["app2",{"_index":3464,"t":{"1393":{"position":[[494,4]]}}}],["app3",{"_index":3469,"t":{"1395":{"position":[[74,4]]}}}],["app4",{"_index":3474,"t":{"1395":{"position":[[424,4]]}}}],["app5",{"_index":3476,"t":{"1397":{"position":[[157,4]]}}}],["app6",{"_index":3481,"t":{"1397":{"position":[[531,4]]}}}],["app7",{"_index":3491,"t":{"1399":{"position":[[916,4]]}}}],["app:installdebug",{"_index":924,"t":{"270":{"position":[[0,18]]},"273":{"position":[[44,21]]},"278":{"position":[[178,16]]}}}],["app_id",{"_index":1126,"t":{"365":{"position":[[276,6]]},"367":{"position":[[20,12]]}}}],["app_secret",{"_index":1134,"t":{"367":{"position":[[33,11]]}}}],["app_secretapp_secret",{"_index":1114,"t":{"363":{"position":[[268,20]]}}}],["appid",{"_index":2758,"t":{"1146":{"position":[[152,28]]},"1872":{"position":[[963,6]]},"1944":{"position":[[159,28]]},"1948":{"position":[[0,82]]}}}],["appid你需要修改成上面让你记录的appid",{"_index":2763,"t":{"1150":{"position":[[37,41]]}}}],["appinst",{"_index":4733,"t":{"1922":{"position":[[440,11]]}}}],["appl",{"_index":4270,"t":{"1720":{"position":[[86,8]]},"1754":{"position":[[61,8]]},"1756":{"position":[[30,8]]},"1758":{"position":[[30,8]]},"1760":{"position":[[80,8],[275,8]]},"1762":{"position":[[62,8],[189,8]]},"1765":{"position":[[56,8],[174,8]]},"1767":{"position":[[64,8],[176,8]]},"1769":{"position":[[98,8]]},"1771":{"position":[[81,8]]},"1773":{"position":[[34,8]]},"1775":{"position":[[92,8]]},"1777":{"position":[[57,8],[249,8]]},"1781":{"position":[[98,8],[274,8]]},"1784":{"position":[[79,8]]},"1786":{"position":[[74,8]]},"1788":{"position":[[28,17]]},"1842":{"position":[[189,7],[323,7],[528,7],[644,7]]}}}],["apple\";isnan(x",{"_index":4271,"t":{"1720":{"position":[[228,17]]}}}],["applewebkit/537.36",{"_index":703,"t":{"179":{"position":[[409,18]]},"221":{"position":[[409,18]]},"1165":{"position":[[409,18]]}}}],["applic",{"_index":228,"t":{"47":{"position":[[36,11]]},"1501":{"position":[[168,12]]},"1557":{"position":[[364,15]]},"1823":{"position":[[143,36]]}}}],["application/json",{"_index":4835,"t":{"1966":{"position":[[139,18]]}}}],["application/vnd.github+json",{"_index":1029,"t":{"295":{"position":[[284,30]]},"380":{"position":[[343,30]]}}}],["application/x",{"_index":304,"t":{"66":{"position":[[594,14]]},"171":{"position":[[594,14]]},"1964":{"position":[[452,14]]}}}],["apubl",{"_index":1612,"t":{"581":{"position":[[61,7],[154,7]]}}}],["aqua",{"_index":4807,"t":{"1960":{"position":[[278,6]]}}}],["archiv",{"_index":2534,"t":{"1062":{"position":[[161,7]]}}}],["area",{"_index":3904,"t":{"1557":{"position":[[243,4]]},"2131":{"position":[[63,4]]},"2141":{"position":[[65,4],[135,4],[206,4],[276,4]]}}}],["area/extras/get",{"_index":3877,"t":{"1541":{"position":[[142,19]]}}}],["aren't",{"_index":2410,"t":{"1017":{"position":[[592,6]]},"1279":{"position":[[487,6]]}}}],["arg",{"_index":327,"t":{"70":{"position":[[346,7],[446,7]]},"388":{"position":[[211,5],[524,5]]},"390":{"position":[[333,5]]},"392":{"position":[[485,5]]},"394":{"position":[[251,5]]},"396":{"position":[[174,6]]},"400":{"position":[[227,5]]},"406":{"position":[[104,5]]},"408":{"position":[[265,6]]},"410":{"position":[[346,5]]},"412":{"position":[[191,6]]},"414":{"position":[[127,5]]},"416":{"position":[[178,5]]},"420":{"position":[[108,8]]},"426":{"position":[[825,8]]},"451":{"position":[[1006,5]]},"457":{"position":[[382,5]]},"483":{"position":[[149,7]]},"486":{"position":[[377,8]]},"488":{"position":[[336,8]]},"490":{"position":[[208,8]]},"492":{"position":[[50,8]]},"494":{"position":[[537,8]]},"496":{"position":[[340,8]]},"498":{"position":[[56,8]]},"500":{"position":[[296,8]]},"502":{"position":[[158,8]]},"504":{"position":[[345,8]]},"506":{"position":[[187,8]]},"508":{"position":[[187,8]]},"510":{"position":[[96,8]]},"512":{"position":[[77,8]]},"514":{"position":[[161,8]]},"516":{"position":[[76,8]]},"518":{"position":[[50,8]]},"520":{"position":[[50,8]]},"522":{"position":[[50,8]]},"524":{"position":[[82,8]]},"526":{"position":[[91,8]]},"528":{"position":[[50,8]]},"530":{"position":[[50,8]]},"532":{"position":[[76,8]]},"534":{"position":[[59,8]]},"542":{"position":[[126,6]]},"563":{"position":[[73,6],[207,6],[528,6]]},"565":{"position":[[577,5]]},"569":{"position":[[61,6]]},"579":{"position":[[106,6]]},"598":{"position":[[58,5]]},"604":{"position":[[73,5]]},"606":{"position":[[133,5]]},"616":{"position":[[145,6]]},"621":{"position":[[254,8]]},"623":{"position":[[57,7]]},"625":{"position":[[160,7]]}}}],["arg1",{"_index":1465,"t":{"506":{"position":[[25,5],[60,5],[90,5],[120,5]]},"508":{"position":[[25,5],[60,5],[90,5],[120,5]]}}}],["arg2",{"_index":1466,"t":{"506":{"position":[[38,5],[72,5],[100,5],[131,5]]},"508":{"position":[[38,5],[72,5],[100,5],[131,5]]}}}],["args[0].charat(0",{"_index":1247,"t":{"426":{"position":[[849,18]]}}}],["argument.remov",{"_index":4214,"t":{"1667":{"position":[[53,15]]}}}],["arguments.return",{"_index":4197,"t":{"1665":{"position":[[65,16]]}}}],["argument（参数）.extract",{"_index":4206,"t":{"1665":{"position":[[345,20]]}}}],["around",{"_index":2069,"t":{"853":{"position":[[617,7]]}}}],["arp",{"_index":5340,"t":{"2125":{"position":[[1053,9]]}}}],["arp只为在同一个子网上的ip提供地址解析服务，如果发送端的ip地址和接收端的ip地址不在同一个子网中（例如使用北京海淀的节点去查询浙江绍兴的一个节点），那么arp",{"_index":5337,"t":{"2125":{"position":[[848,99]]}}}],["arp和dn",{"_index":5338,"t":{"2125":{"position":[[948,10]]}}}],["arp表，该表用于解析ip地址与mac地址之间的映射关系。这个arp表也包含一个寿命值（ttl",{"_index":5341,"t":{"2125":{"position":[[1063,81]]}}}],["arq协议（automat",{"_index":5897,"t":{"2267":{"position":[[78,15]]}}}],["arr",{"_index":901,"t":{"257":{"position":[[443,3],[562,3],[630,3]]}}}],["arr1",{"_index":4370,"t":{"1779":{"position":[[234,4]]}}}],["arr1.concat(arr2",{"_index":4375,"t":{"1779":{"position":[[348,17]]}}}],["arr1、arr2",{"_index":4376,"t":{"1779":{"position":[[376,10]]}}}],["arr2",{"_index":4371,"t":{"1779":{"position":[[265,4]]}}}],["arr3",{"_index":4372,"t":{"1779":{"position":[[304,4],[366,6],[389,4]]}}}],["arraryrefvar",{"_index":1635,"t":{"594":{"position":[[126,12]]}}}],["array",{"_index":373,"t":{"92":{"position":[[142,5]]},"606":{"position":[[33,7]]},"608":{"position":[[65,6]]},"1743":{"position":[[35,5],[198,5]]},"1797":{"position":[[141,6]]},"1799":{"position":[[195,6],[553,6]]},"1801":{"position":[[186,6],[269,5]]},"1803":{"position":[[231,6],[544,6],[670,5]]},"1805":{"position":[[246,6],[338,5]]},"1807":{"position":[[154,6]]},"1809":{"position":[[154,6]]},"1811":{"position":[[159,6]]},"1813":{"position":[[167,6]]},"1842":{"position":[[790,5]]},"1876":{"position":[[722,5]]},"1999":{"position":[[107,6]]}}}],["array(\"saab",{"_index":4315,"t":{"1743":{"position":[[157,13]]}}}],["array(40",{"_index":4316,"t":{"1743":{"position":[[225,9]]}}}],["array(9).fill(nul",{"_index":2822,"t":{"1223":{"position":[[648,20],[3150,20]]},"1239":{"position":[[195,20],[832,20]]}}}],["array.filt",{"_index":4419,"t":{"1801":{"position":[[0,14]]}}}],["array.foreach",{"_index":4339,"t":{"1760":{"position":[[208,15]]}}}],["array.length",{"_index":1692,"t":{"608":{"position":[[94,13]]}}}],["array.map()</h1><p>通过对每个数组元素执行函数来创建新数组。</p><p",{"_index":4414,"t":{"1799":{"position":[[324,45]]}}}],["array.reduce()</h1><p>此例确定数组中所有数字的总和：</p><p",{"_index":4426,"t":{"1803":{"position":[[310,43],[1019,43]]}}}],["arrayrefvar",{"_index":1631,"t":{"592":{"position":[[31,12],[60,14],[91,16]]},"594":{"position":[[67,11]]}}}],["arrnew",{"_index":2267,"t":{"950":{"position":[[517,6],[676,8]]}}}],["arrnew.join(\"\\r\\n",{"_index":2272,"t":{"950":{"position":[[710,20]]}}}],["arrnew.push(item.replac",{"_index":2269,"t":{"950":{"position":[[578,29]]}}}],["arrold",{"_index":2265,"t":{"950":{"position":[[439,6],[492,8]]}}}],["arrold.foreach((item",{"_index":2268,"t":{"950":{"position":[[551,21]]}}}],["as1必须学习哪些网络可以通过as2到达，哪些可以通过as1到达。这些学习到的东西必须传播给as1",{"_index":5771,"t":{"2216":{"position":[[230,56]]}}}],["as3有信息需要交给as2，在上图中，就必须由as1",{"_index":5770,"t":{"2216":{"position":[[196,33]]}}}],["ascii",{"_index":5185,"t":{"2057":{"position":[[378,10],[830,23]]}}}],["asin",{"_index":1528,"t":{"524":{"position":[[0,6]]}}}],["ask",{"_index":3570,"t":{"1420":{"position":[[143,3],[602,3]]}}}],["asset",{"_index":3309,"t":{"1364":{"position":[[223,17]]}}}],["assets文件夹，然后选择create>c",{"_index":1039,"t":{"301":{"position":[[8,34]]}}}],["assign",{"_index":4061,"t":{"1628":{"position":[[143,10],[267,10]]}}}],["async",{"_index":4598,"t":{"1872":{"position":[[793,5],[1056,5]]}}}],["as之间进行路由十分困难，因此，外部网关协议bgp",{"_index":5789,"t":{"2222":{"position":[[80,39]]}}}],["as边界的bdp",{"_index":5791,"t":{"2222":{"position":[[180,28]]}}}],["as，autonom",{"_index":5768,"t":{"2216":{"position":[[49,36]]}}}],["atla",{"_index":217,"t":{"41":{"position":[[47,5],[89,5]]},"49":{"position":[[233,5]]}}}],["attach",{"_index":1850,"t":{"698":{"position":[[346,7]]}}}],["attr1",{"_index":2956,"t":{"1263":{"position":[[946,9]]}}}],["attribut",{"_index":3410,"t":{"1370":{"position":[[53,17]]},"1373":{"position":[[213,9]]},"1393":{"position":[[395,9],[657,9],[700,26],[771,9]]},"1395":{"position":[[212,16]]},"1399":{"position":[[469,10]]},"1428":{"position":[[259,10],[360,17],[532,9]]},"1445":{"position":[[811,17]]},"1472":{"position":[[1042,9],[1948,10]]},"1485":{"position":[[22,9],[95,9],[266,9]]},"1489":{"position":[[29,12],[42,9]]},"1491":{"position":[[56,10],[132,9]]},"1497":{"position":[[37,9],[215,9]]},"1501":{"position":[[30,15]]},"1505":{"position":[[184,9]]}}}],["attributenam",{"_index":3743,"t":{"1493":{"position":[[149,13],[240,17]]}}}],["audio",{"_index":3970,"t":{"1590":{"position":[[0,6]]}}}],["auth",{"_index":5197,"t":{"2057":{"position":[[966,4],[973,6]]}}}],["author",{"_index":1030,"t":{"295":{"position":[[315,16]]},"380":{"position":[[374,16]]},"1006":{"position":[[440,14]]},"1426":{"position":[[201,7],[390,7],[564,7]]}}}],["authors.yml",{"_index":2357,"t":{"1008":{"position":[[64,11]]},"1010":{"position":[[2,11],[38,11],[498,11]]}}}],["authus",{"_index":762,"t":{"245":{"position":[[227,9]]}}}],["auto",{"_index":3969,"t":{"1587":{"position":[[629,6]]}}}],["automat",{"_index":5660,"t":{"2195":{"position":[[562,16]]}}}],["autoplay",{"_index":3959,"t":{"1587":{"position":[[41,8],[382,8]]}}}],["autoprefixer@latest",{"_index":345,"t":{"82":{"position":[[62,19]]}}}],["autoreportpeac",{"_index":1006,"t":{"291":{"position":[[50,26]]},"295":{"position":[[393,19]]}}}],["autoreportpeaceon",{"_index":982,"t":{"289":{"position":[[148,18]]}}}],["autos",{"_index":4968,"t":{"1981":{"position":[[801,8]]}}}],["avatar",{"_index":4586,"t":{"1872":{"position":[[400,7]]}}}],["avatar:this.data.avatar",{"_index":4636,"t":{"1872":{"position":[[2741,24]]}}}],["avi",{"_index":6318,"t":{"2527":{"position":[[8,5]]}}}],["avi文件格式是video",{"_index":6319,"t":{"2527":{"position":[[14,13]]}}}],["await",{"_index":4607,"t":{"1872":{"position":[[1129,5],[1135,6]]}}}],["awak",{"_index":1064,"t":{"305":{"position":[[532,5],[554,7]]},"307":{"position":[[70,5],[256,5],[278,7],[486,5],[508,7]]}}}],["awake:只会被调用一次，在start",{"_index":1055,"t":{"305":{"position":[[0,56]]}}}],["awesome!</h1",{"_index":3683,"t":{"1464":{"position":[[78,13]]}}}],["awesome!</h1><h1",{"_index":3684,"t":{"1464":{"position":[[144,16]]}}}],["axi",{"_index":6126,"t":{"2443":{"position":[[777,4]]}}}],["axio",{"_index":3292,"t":{"1353":{"position":[[284,5],[295,8]]}}}],["axios.get('https://yesno.wtf/api",{"_index":3595,"t":{"1420":{"position":[[1259,34]]}}}],["axis.xaxis.set_major_locator(x_dist",{"_index":6130,"t":{"2443":{"position":[[849,40]]}}}],["axishelp",{"_index":3163,"t":{"1336":{"position":[[169,10],[246,12]]}}}],["azur",{"_index":221,"t":{"45":{"position":[[77,5]]}}}],["a||b",{"_index":1199,"t":{"394":{"position":[[371,6]]}}}],["a—>b:第一次握手，a问b你能听到吗(a发起，b",{"_index":5795,"t":{"2230":{"position":[[8,28]]}}}],["a—>b:第三次握手，a回答b",{"_index":5797,"t":{"2230":{"position":[[64,24]]}}}],["a、b",{"_index":4759,"t":{"1928":{"position":[[755,3]]}}}],["a、b、c",{"_index":2790,"t":{"1182":{"position":[[798,29]]},"1909":{"position":[[835,29]]},"2117":{"position":[[495,36]]},"2191":{"position":[[43,14]]}}}],["a、b、c三位学霸来做这套试卷。分别将这三个同学的试卷记为a、b、c。假设老师那里有一张空白试卷m。那么老师就是一个仓库。这张试卷m就是主分支（branch",{"_index":2788,"t":{"1182":{"position":[[376,109]]},"1909":{"position":[[413,109]]}}}],["a上加一个波浪线表示在a1",{"_index":1833,"t":{"685":{"position":[[75,24]]}}}],["a为真，变量b",{"_index":1196,"t":{"394":{"position":[[0,31]]}}}],["a传输到链路b，但是mtu",{"_index":5532,"t":{"2169":{"position":[[101,22]]}}}],["a先发报文所以，a的报文在路由器的队列中排在b的报文前面，所以a交付2mbits报文需要时间为：2/10+2/20+2/10=0.5s=500ms；（3",{"_index":5412,"t":{"2138":{"position":[[581,80]]}}}],["a共发送了6个报文段，首先发送报文段1,2,3,4,5，当报文2丢失后，重发报文段2共6",{"_index":5446,"t":{"2138":{"position":[[2830,51],[2963,51]]}}}],["a共发送了9个报文段，首先发送报文段1,2,3,4,5，当报文2丢失后，重发报文段2,3,4,5**共9",{"_index":5443,"t":{"2138":{"position":[[2654,58]]}}}],["a到b发送一个640，000",{"_index":5402,"t":{"2138":{"position":[[17,38]]}}}],["a到达主机b的路径上有3段链路，其速率分别是r1=500kbps，r2=2mbps，r3=1mbp",{"_index":5425,"t":{"2138":{"position":[[1314,73]]}}}],["a发送了一个分组，但是中途丢失，那么b就不会有任何反应，a",{"_index":5912,"t":{"2273":{"position":[[0,46]]}}}],["a叫过来，大声斥责他说：“这已经有人坐了！”，然后小明重新大喊找座位。这里假定1确实是空的，小明坐了半小时后，小明把服务生叫过来说：“这个座位半小时后到期，我一会还要坐！”，如果服务生说：“好的！”，那就延长租期，如果小明耳聋没听到或者服务生嗓子哑了没说清楚，小明就不做理会，继续坐着，等到87.5",{"_index":5733,"t":{"2197":{"position":[[1752,319]]}}}],["a向主机b",{"_index":5424,"t":{"2138":{"position":[[1298,15]]}}}],["a向主机b发送5个连续的报文段，主机b对每个报文段进行确认，其中第二个报文段丢失，其余报文段以及重传的第二个报文段均被主机b正确接收，主机a正确接收所有ack报文段；报文段从1开始依次连续编号（即1、2、3……），主机a",{"_index":5439,"t":{"2138":{"position":[[2341,134]]}}}],["a和b建立起tcp连接后，那么应用层数据在从a流向b的同时也从b流向a",{"_index":5843,"t":{"2247":{"position":[[181,42]]}}}],["a在t=0时刻开始向c发送一个2mbits的文件；b在t=0.1+e秒（e为无限趋近于0的小正实数）向d发送一个1mbits的文件。忽略传播延迟和结点处理延迟。（14",{"_index":5407,"t":{"2138":{"position":[[213,96]]}}}],["a将2mbits的文件交付给c需要多长时间？b将1mbits的文件交付给d",{"_index":5408,"t":{"2138":{"position":[[333,55]]}}}],["a的元素，使得a的元素与b的元素相同，即a[0",{"_index":1669,"t":{"600":{"position":[[83,38]]}}}],["a相同,但空间分辨率依次降低为:32、16、8、4、2",{"_index":6026,"t":{"2405":{"position":[[50,36]]}}}],["a看到是甲送过来的，就接住，其他的木材就不管了，bc",{"_index":5301,"t":{"2117":{"position":[[649,70]]}}}],["a类ip地址，子网掩码为255.224.0.0",{"_index":5459,"t":{"2138":{"position":[[3595,41]]}}}],["a类ip地址，网络地址是127，这类地址称作环回地址。但是我们经常使用的是127.0.0.1这个地址，且赋给它一个名字：localhost",{"_index":5602,"t":{"2179":{"position":[[214,75]]}}}],["a类地址，所以前8位为1，因此224就是子网号，224为11100000，所以主机号的最高位为111，那么就最多能分配8",{"_index":5460,"t":{"2138":{"position":[[3648,67]]}}}],["a类地址：网络位8位，主机位24位。可容纳主机数：2的24次方减2个，可以划分的子网数：为2的22次方，由于每个网络都存在两个不可用的地址（网络地址和广播地址），所以要想划分的子网可用，最小的子网应该留2味主机位，在此最小的网络中的可用地址数十2个，2的2次方减2",{"_index":5573,"t":{"2173":{"position":[[595,185]]}}}],["a给出了一幅灰度级分辨率为256，空间分辨率为512×512",{"_index":6022,"t":{"2403":{"position":[[3,35]]},"2405":{"position":[[3,35]]}}}],["b",{"_index":459,"t":{"103":{"position":[[440,1],[447,1],[459,4]]},"200":{"position":[[440,1],[447,1],[459,4]]},"245":{"position":[[968,2],[979,2],[1032,5]]},"257":{"position":[[914,2],[925,2],[978,5],[1090,1]]},"388":{"position":[[296,3]]},"390":{"position":[[46,5],[90,2],[133,5],[175,7],[226,5],[274,5],[357,1],[390,1],[404,2],[435,1],[449,2],[479,1],[492,2],[522,1],[535,2],[574,2],[619,2],[643,1],[658,1],[671,1],[685,1],[694,1],[708,1]]},"392":{"position":[[136,1],[170,1],[188,1],[530,1],[578,2],[626,1],[647,2],[695,1],[716,2],[764,1],[1062,1],[1073,1],[1084,1]]},"394":{"position":[[80,5],[128,5],[192,5],[285,1],[321,1],[363,1],[408,2],[424,4],[443,1],[458,1],[474,2]]},"396":{"position":[[189,2],[220,1],[234,1],[288,1],[299,1],[325,1],[339,1],[394,1],[405,1],[422,1],[441,1]]},"400":{"position":[[78,2]]},"426":{"position":[[951,3]]},"439":{"position":[[207,3]]},"494":{"position":[[646,1]]},"496":{"position":[[419,1]]},"581":{"position":[[0,9],[17,3],[42,1],[47,1],[85,1],[149,1],[168,1]]},"621":{"position":[[310,5]]},"644":{"position":[[197,1],[215,1],[228,1]]},"681":{"position":[[217,2],[247,2],[300,3],[324,3],[348,3]]},"986":{"position":[[61,5]]},"1241":{"position":[[272,2]]},"1404":{"position":[[432,1]]},"1470":{"position":[[111,5]]},"1613":{"position":[[156,3]]},"1630":{"position":[[65,1],[94,1]]},"1636":{"position":[[47,1]]},"1638":{"position":[[53,1],[111,1],[190,1],[311,1],[341,1],[378,1],[422,1],[438,1],[463,1],[478,1],[798,1]]},"1642":{"position":[[58,1],[124,8],[389,1],[423,1],[636,1],[661,2],[682,5],[835,1],[860,2],[881,5]]},"1644":{"position":[[80,1],[102,2]]},"1665":{"position":[[59,2],[274,2],[292,3]]},"1713":{"position":[[187,2],[203,2],[218,1]]},"1788":{"position":[[236,4],[330,1]]},"1790":{"position":[[68,2],[619,4]]},"1794":{"position":[[198,3]]},"1833":{"position":[[218,2]]},"2084":{"position":[[211,13]]},"2138":{"position":[[389,2],[726,2]]},"2173":{"position":[[181,1]]},"2177":{"position":[[196,10]]},"2208":{"position":[[129,5],[615,21]]},"2373":{"position":[[16,2]]},"2503":{"position":[[363,2]]}}}],["b){return",{"_index":4383,"t":{"1788":{"position":[[222,9],[320,9]]},"1790":{"position":[[56,9],[605,9]]},"1792":{"position":[[61,9]]},"1794":{"position":[[127,9]]}}}],["b)是从图(a)的512",{"_index":6020,"t":{"2401":{"position":[[41,14]]}}}],["b.type.tolowercas",{"_index":4405,"t":{"1794":{"position":[[240,21]]}}}],["b.year",{"_index":4403,"t":{"1794":{"position":[[146,9]]}}}],["b/",{"_index":5262,"t":{"2084":{"position":[[225,10]]}}}],["b/sec)=8m",{"_index":5920,"t":{"2273":{"position":[[475,10]]}}}],["b3",{"_index":5610,"t":{"2181":{"position":[[266,3]]}}}],["b</div><div",{"_index":3698,"t":{"1470":{"position":[[117,11]]}}}],["b=(int)a",{"_index":1603,"t":{"571":{"position":[[104,9]]}}}],["b=10",{"_index":1613,"t":{"581":{"position":[[91,5]]}}}],["b=20",{"_index":1570,"t":{"563":{"position":[[238,5]]}}}],["b=a",{"_index":1601,"t":{"571":{"position":[[50,4]]},"600":{"position":[[165,4]]}}}],["b>切</b",{"_index":4043,"t":{"1618":{"position":[[404,14]]}}}],["b>夹入</b",{"_index":4044,"t":{"1618":{"position":[[430,28]]}}}],["b[0",{"_index":1672,"t":{"600":{"position":[[170,6]]}}}],["b[1",{"_index":1673,"t":{"600":{"position":[[177,5]]}}}],["b[1]，而最初分配给a",{"_index":1671,"t":{"600":{"position":[[134,22]]}}}],["b[2]就是a[0",{"_index":1674,"t":{"600":{"position":[[183,11]]}}}],["babel",{"_index":3039,"t":{"1293":{"position":[[129,5]]}}}],["babi",{"_index":2038,"t":{"853":{"position":[[231,4]]}}}],["backclick",{"_index":3081,"t":{"1312":{"position":[[797,9]]}}}],["background",{"_index":404,"t":{"101":{"position":[[109,21]]},"103":{"position":[[91,21],[603,21]]},"198":{"position":[[109,21]]},"200":{"position":[[91,21],[603,21]]},"853":{"position":[[275,10],[376,10]]},"1094":{"position":[[1057,11]]},"1248":{"position":[[409,11],[679,11]]},"1255":{"position":[[240,11]]},"1366":{"position":[[840,10]]},"1511":{"position":[[261,12],[354,10],[453,10],[477,10],[621,10],[829,10]]},"1515":{"position":[[832,10],[1033,10],[1257,10],[1467,10]]},"1518":{"position":[[201,10],[373,10]]},"1532":{"position":[[68,10]]},"1979":{"position":[[2356,10],[2427,10],[2580,10],[2639,10]]},"1995":{"position":[[341,10]]}}}],["background);//绘制图像到屏幕，图片左上角坐标为(0,0",{"_index":408,"t":{"101":{"position":[[206,36]]},"103":{"position":[[188,36],[700,36]]},"198":{"position":[[206,36]]},"200":{"position":[[188,36],[700,36]]}}}],["backgroundcolor",{"_index":3010,"t":{"1279":{"position":[[388,16]]},"1281":{"position":[[404,16]]},"1933":{"position":[[132,18]]},"1991":{"position":[[319,18]]}}}],["backgroundtextstyl",{"_index":4781,"t":{"1935":{"position":[[47,22]]},"1970":{"position":[[277,22]]},"1991":{"position":[[349,22]]}}}],["backtop",{"_index":3317,"t":{"1366":{"position":[[223,8]]}}}],["backtop></el",{"_index":3316,"t":{"1366":{"position":[[210,12]]}}}],["bad",{"_index":5138,"t":{"2049":{"position":[[145,3]]}}}],["badvar",{"_index":4063,"t":{"1630":{"position":[[48,6]]}}}],["baiwei=hund",{"_index":1174,"t":{"388":{"position":[[684,11]]}}}],["banana",{"_index":4328,"t":{"1754":{"position":[[40,10]]},"1756":{"position":[[9,10]]},"1758":{"position":[[9,10]]},"1760":{"position":[[59,10],[254,10]]},"1762":{"position":[[41,10],[168,10]]},"1765":{"position":[[35,10],[153,10]]},"1767":{"position":[[43,10],[155,10]]},"1769":{"position":[[77,10],[152,8],[166,8]]},"1771":{"position":[[60,10]]},"1773":{"position":[[13,10]]},"1775":{"position":[[71,10]]},"1777":{"position":[[36,10],[228,10]]},"1781":{"position":[[68,10],[244,10]]},"1784":{"position":[[58,10]]},"1786":{"position":[[53,10]]},"1788":{"position":[[50,8]]},"1842":{"position":[[197,7],[239,19],[331,7],[375,19],[448,15],[536,7],[652,7]]}}}],["bar",{"_index":3441,"t":{"1377":{"position":[[305,3],[461,3]]},"1416":{"position":[[246,6],[268,4],[531,5]]},"1424":{"position":[[289,5],[315,3],[620,5],[664,3]]}}}],["bar\">hi</p",{"_index":3438,"t":{"1377":{"position":[[197,14]]}}}],["bar'}object.freeze(obj)new",{"_index":3517,"t":{"1404":{"position":[[678,27]]}}}],["bar]=\"valu",{"_index":3750,"t":{"1497":{"position":[[96,13]]}}}],["base",{"_index":365,"t":{"90":{"position":[[193,5]]},"92":{"position":[[269,5]]},"514":{"position":[[45,5],[71,4]]},"1024":{"position":[[4,4],[70,4]]},"2279":{"position":[[57,11]]},"2530":{"position":[[83,5]]},"2539":{"position":[[83,5]]},"2548":{"position":[[83,5]]}}}],["base64",{"_index":3088,"t":{"1319":{"position":[[34,15]]},"1325":{"position":[[458,12]]}}}],["base64.b64decode(response.json()['image'])fil",{"_index":312,"t":{"66":{"position":[[752,46]]},"171":{"position":[[752,46]]}}}],["base64.b64encode(f.read",{"_index":297,"t":{"66":{"position":[[413,26]]},"171":{"position":[[413,26]]}}}],["base64import",{"_index":282,"t":{"66":{"position":[[27,12]]},"171":{"position":[[27,12]]}}}],["base64编码var",{"_index":3134,"t":{"1325":{"position":[[159,20]]}}}],["base64编码转图片img",{"_index":311,"t":{"66":{"position":[[735,14]]},"171":{"position":[[735,14]]}}}],["base;@tailwind",{"_index":353,"t":{"86":{"position":[[53,14]]}}}],["baseurl",{"_index":2402,"t":{"1017":{"position":[[383,8]]},"1022":{"position":[[147,7]]},"1024":{"position":[[90,17],[165,8],[298,7],[306,14],[413,7],[421,14],[511,7],[519,14]]}}}],["basic",{"_index":2343,"t":{"1004":{"position":[[64,6]]}}}],["baz",{"_index":3442,"t":{"1377":{"position":[[309,3]]},"1431":{"position":[[175,5]]}}}],["baz'\">chang",{"_index":3519,"t":{"1404":{"position":[[863,13]]}}}],["bb",{"_index":5347,"t":{"2125":{"position":[[1922,2]]},"2127":{"position":[[112,2],[115,2],[118,2],[121,2]]}}}],["bb。发送适配器在一个以太网帧中封装了一个ip数据报，并把该帧传递到物理层。接收适配器从物理层收到这个帧，提取出ip数据报，并将该ip数据报传递给网络层。在这个场景下，我们解释下上图所示的以太网帧的6",{"_index":5351,"t":{"2127":{"position":[[124,104]]}}}],["bd",{"_index":5332,"t":{"2125":{"position":[[832,2]]}}}],["bean，jms，ejb，jdbc，flex开发，或者对相关的工具、类库以及框架非常熟悉，如velocity，spring，hibernate，ibatis，osgi等，对web",{"_index":623,"t":{"148":{"position":[[339,100]]},"317":{"position":[[339,100]]}}}],["befor",{"_index":1051,"t":{"303":{"position":[[207,6]]},"1515":{"position":[[1089,7]]},"1518":{"position":[[4,10]]},"1624":{"position":[[273,6]]}}}],["begin.md",{"_index":2347,"t":{"1006":{"position":[[104,8]]}}}],["beginn",{"_index":3907,"t":{"1557":{"position":[[272,9]]}}}],["behavior",{"_index":3756,"t":{"1501":{"position":[[74,9]]}}}],["beijing.aliyuncs.com/blog/1656914971349.png",{"_index":745,"t":{"192":{"position":[[57,43]]},"234":{"position":[[57,43]]},"1178":{"position":[[57,43]]}}}],["beijing.aliyuncs.com/blog/20220719201318.png",{"_index":3807,"t":{"1511":{"position":[[405,47]]}}}],["beijing.aliyuncs.com/blog/coding.png",{"_index":2480,"t":{"1027":{"position":[[201,40]]},"1037":{"position":[[204,38]]}}}],["beijing.aliyuncs.com/blog/img/006shrs9gy1h2x8crjlfij30r40isjx3.jpg",{"_index":2728,"t":{"1115":{"position":[[136,69],[265,67]]}}}],["beijing.aliyuncs.com/blog/img/006shrs9gy1h335lwrwwdj30re0fgn33.jpg",{"_index":5914,"t":{"2273":{"position":[[178,67]]}}}],["beijing.aliyuncs.com/blog/img/006shrs9gy1h335t8vku1j30qt0fm114.jpg",{"_index":5916,"t":{"2273":{"position":[[295,67]]}}}],["beijing.aliyuncs.com/blog/img/006shrs9gy1h3k9gyh0g2j310f12wdtm.jpg",{"_index":5423,"t":{"2138":{"position":[[1216,67]]}}}],["beijing.aliyuncs.com/blog/img/006shrs9gy1h3p10rb6uwj31400kl7e5.jpg",{"_index":679,"t":{"177":{"position":[[179,67]]},"217":{"position":[[183,67]]},"219":{"position":[[179,67]]},"1163":{"position":[[179,67]]}}}],["beijing.aliyuncs.com/blog/img/006shrs9gy1h3p8r4lj5ej30r20iuwm8.jpg\"></imag",{"_index":4711,"t":{"1905":{"position":[[429,76]]}}}],["beijing.aliyuncs.com/blog/作为前缀的，而微博图床的连接是https://tva1.sinaimg.cn/large/1656914971349.png，由于两者后缀可以一一对应，我们只需要到工程文件中替换前缀即可。使用vscod",{"_index":746,"t":{"192":{"position":[[135,134]]},"234":{"position":[[135,134]]},"1178":{"position":[[135,134]]}}}],["beijing即可，不需要后面的.aliyuncs.com",{"_index":736,"t":{"186":{"position":[[29,30]]},"228":{"position":[[29,30]]},"1172":{"position":[[29,30]]}}}],["bellman",{"_index":5743,"t":{"2208":{"position":[[0,9]]}}}],["below",{"_index":2079,"t":{"853":{"position":[[730,5]]}}}],["between",{"_index":4868,"t":{"1976":{"position":[[153,8]]}}}],["bfoffbit",{"_index":6168,"t":{"2454":{"position":[[454,10]]}}}],["bfreserved1",{"_index":6164,"t":{"2454":{"position":[[397,12]]}}}],["bfreserved2",{"_index":6166,"t":{"2454":{"position":[[425,12]]}}}],["bfsize",{"_index":6163,"t":{"2454":{"position":[[378,7]]}}}],["bftype",{"_index":6161,"t":{"2454":{"position":[[358,7]]}}}],["bg",{"_index":380,"t":{"92":{"position":[[863,2]]},"1094":{"position":[[402,3],[736,3]]}}}],["bgp",{"_index":5790,"t":{"2222":{"position":[[120,50],[171,8],[415,8]]}}}],["bgp发言人与其他自治系统中的bgp发言人要交换信息，首先需要建立tcp连接（端口号179），然后在此连接上交换bgp报文以建立bgp会话，利用bgp会话交换路由信息。所以，bgp协议是应用层协议，借助tcp",{"_index":5793,"t":{"2222":{"position":[[305,109]]}}}],["bgp支持无分类域间路由选择cidr，因此bgp",{"_index":5792,"t":{"2222":{"position":[[239,65]]}}}],["bianliang",{"_index":1569,"t":{"563":{"position":[[28,9],[162,9]]}}}],["bibitcount",{"_index":6179,"t":{"2454":{"position":[[895,11]]}}}],["bibitcount用于指定表示每个像素所需的比特位数，其值是1、4、8或24",{"_index":6188,"t":{"2454":{"position":[[1139,42]]}}}],["biclrimport",{"_index":6186,"t":{"2454":{"position":[[1093,15]]}}}],["biclrus",{"_index":6185,"t":{"2454":{"position":[[1062,10],[1463,26]]}}}],["biclrused的值不为0",{"_index":6193,"t":{"2454":{"position":[[1490,30]]}}}],["biclrused的值为0时，调色板中的颜色数由式（2.16",{"_index":6194,"t":{"2454":{"position":[[1521,32]]}}}],["bicompress",{"_index":6180,"t":{"2454":{"position":[[925,14]]}}}],["big",{"_index":2994,"t":{"1271":{"position":[[590,4]]}}}],["biheight",{"_index":6177,"t":{"2454":{"position":[[847,9]]}}}],["bill",{"_index":4174,"t":{"1653":{"position":[[122,4]]},"1655":{"position":[[66,7]]},"1659":{"position":[[302,7]]},"1661":{"position":[[214,7]]},"1687":{"position":[[72,7]]},"1689":{"position":[[179,8],[226,8]]},"1699":{"position":[[101,6],[129,5]]},"1749":{"position":[[116,5],[135,8],[198,5]]},"1842":{"position":[[2153,5]]}}}],["binarysearch",{"_index":1745,"t":{"618":{"position":[[131,12]]}}}],["binarysearch(object",{"_index":1746,"t":{"618":{"position":[[205,21]]}}}],["bind",{"_index":3411,"t":{"1370":{"position":[[73,4],[124,4]]},"1393":{"position":[[652,4]]},"1399":{"position":[[568,4]]},"1485":{"position":[[47,4],[127,4]]},"1491":{"position":[[33,4],[114,4]]},"1501":{"position":[[209,4]]}}}],["bind:['foo",{"_index":3749,"t":{"1497":{"position":[[82,11]]}}}],["bind:[attributename]=\"url",{"_index":3742,"t":{"1493":{"position":[[108,27]]}}}],["bind:[someattr]=\"valu",{"_index":3752,"t":{"1497":{"position":[[331,24]]}}}],["bind:[someattr]`。除非在实例中有一个名为“someattr",{"_index":3751,"t":{"1497":{"position":[[265,39]]}}}],["bind:aft",{"_index":4970,"t":{"1981":{"position":[[1021,10]]}}}],["bind:change=\"onchang",{"_index":4700,"t":{"1900":{"position":[[155,22]]},"1979":{"position":[[435,22]]}}}],["bind:change=\"onchange2",{"_index":4905,"t":{"1979":{"position":[[1107,24]]}}}],["bind:change=\"onchange3",{"_index":4908,"t":{"1979":{"position":[[1415,24]]}}}],["bind:change=\"onchange4",{"_index":4911,"t":{"1979":{"position":[[1717,24]]}}}],["bind:class",{"_index":3412,"t":{"1373":{"position":[[9,10],[46,13],[186,10],[256,13]]},"1375":{"position":[[14,16],[410,14]]},"1377":{"position":[[362,13]]}}}],["bind:class=\"[activeclass",{"_index":3429,"t":{"1375":{"position":[[48,25]]}}}],["bind:class=\"[isact",{"_index":3435,"t":{"1375":{"position":[[235,21]]}}}],["bind:class=\"classobject\"></div",{"_index":3422,"t":{"1373":{"position":[[547,31],[694,31]]}}}],["bind:click",{"_index":4979,"t":{"1981":{"position":[[1251,10]]}}}],["bind:click=\"ondisplay",{"_index":4687,"t":{"1898":{"position":[[373,22]]}}}],["bind:close=\"onclos",{"_index":4688,"t":{"1898":{"position":[[430,20]]}}}],["bind:confirm=\"onconfirm",{"_index":4689,"t":{"1898":{"position":[[451,24]]}}}],["bind:disabled=\"isbuttondisabled\">button</button",{"_index":3733,"t":{"1485":{"position":[[159,48]]}}}],["bind:href",{"_index":3744,"t":{"1493":{"position":[[278,10]]}}}],["bind:href=\"url\">...</a",{"_index":3739,"t":{"1491":{"position":[[72,23]]},"1503":{"position":[[18,25]]}}}],["bind:id=\"'list",{"_index":3736,"t":{"1487":{"position":[[173,14]]}}}],["bind:id=\"dynamicid\"></div",{"_index":3731,"t":{"1485":{"position":[[63,26]]}}}],["bind:index=\"index",{"_index":3650,"t":{"1445":{"position":[[265,18]]}}}],["bind:item=\"item",{"_index":3649,"t":{"1445":{"position":[[246,16]]}}}],["bind:key=\"item.id",{"_index":3489,"t":{"1399":{"position":[[767,18]]},"1428":{"position":[[299,19]]}}}],["bind:key=\"item.id\"></mi",{"_index":3651,"t":{"1445":{"position":[[286,23]]}}}],["bind:key=\"todo.id",{"_index":3665,"t":{"1445":{"position":[[685,18]]}}}],["bind:styl",{"_index":3445,"t":{"1380":{"position":[[2,10],[129,13]]},"1382":{"position":[[2,10]]},"1384":{"position":[[4,10]]}}}],["bind:style=\"[basestyl",{"_index":3453,"t":{"1382":{"position":[[45,24]]}}}],["bind:style=\"styleobject\"></div",{"_index":3450,"t":{"1380":{"position":[[274,31]]}}}],["bind:title=\"messag",{"_index":3462,"t":{"1393":{"position":[[432,21]]}}}],["bind:title=\"todo.titl",{"_index":3666,"t":{"1445":{"position":[[706,23]]}}}],["bind:todo=\"item",{"_index":3488,"t":{"1399":{"position":[[748,16]]}}}],["bindinput=\"bindkeyinput",{"_index":4560,"t":{"1868":{"position":[[397,24]]},"1872":{"position":[[1610,24]]}}}],["bindinput=\"inputcont",{"_index":4567,"t":{"1868":{"position":[[720,24]]}}}],["bindinput=\"inputrec",{"_index":4566,"t":{"1868":{"position":[[639,22]]}}}],["bindkeyinput",{"_index":4618,"t":{"1872":{"position":[[1735,15]]}}}],["bindtap",{"_index":5065,"t":{"2007":{"position":[[207,7]]}}}],["bindtap=\"changenam",{"_index":4715,"t":{"1918":{"position":[[288,21]]}}}],["bindtap=\"clickme\">点击我</button",{"_index":5064,"t":{"2007":{"position":[[107,30]]}}}],["bindtap=\"login\">点击使用微信登录</button",{"_index":4559,"t":{"1868":{"position":[[356,33]]}}}],["bindtap=\"sendit\">发送</button></view",{"_index":4568,"t":{"1868":{"position":[[803,35]]}}}],["bindtap=\"yes\">注册</button></view",{"_index":4563,"t":{"1868":{"position":[[509,32]]}}}],["bingo",{"_index":5039,"t":{"2001":{"position":[[167,5],[223,18]]}}}],["biplan",{"_index":6178,"t":{"2454":{"position":[[869,8]]}}}],["birthday",{"_index":1101,"t":{"359":{"position":[[208,11],[501,11],[684,11]]}}}],["birthday_left.data",{"_index":1145,"t":{"371":{"position":[[335,22]]}}}],["bisiz",{"_index":6175,"t":{"2454":{"position":[[803,7]]}}}],["bisizeimag",{"_index":6182,"t":{"2454":{"position":[[961,12],[1314,29]]}}}],["bit",{"_index":5508,"t":{"2148":{"position":[[155,4]]},"2214":{"position":[[125,32]]},"2279":{"position":[[20,7]]},"2469":{"position":[[1041,3],[1055,3],[1080,3],[1107,3],[1132,3]]}}}],["bitmap",{"_index":6158,"t":{"2454":{"position":[[268,12],[688,12],[1560,12],[1748,11]]}}}],["bitmapfilehead",{"_index":6154,"t":{"2454":{"position":[[48,16],[294,16],[465,27]]}}}],["bitmapinfohead",{"_index":6187,"t":{"2454":{"position":[[1109,29]]}}}],["bitmapinform",{"_index":6155,"t":{"2454":{"position":[[98,17]]}}}],["biwidth",{"_index":6176,"t":{"2454":{"position":[[825,8],[1384,29]]}}}],["biwidth×biheight",{"_index":6205,"t":{"2454":{"position":[[1988,20]]}}}],["biwidth的4",{"_index":6192,"t":{"2454":{"position":[[1414,14]]}}}],["bixpelspermet",{"_index":6183,"t":{"2454":{"position":[[992,16]]}}}],["biypelspermet",{"_index":6184,"t":{"2454":{"position":[[1027,16]]}}}],["bjfu",{"_index":2617,"t":{"1092":{"position":[[3334,10]]}}}],["black",{"_index":3363,"t":{"1366":{"position":[[1447,8]]},"1933":{"position":[[186,8]]},"1935":{"position":[[195,7],[337,7]]},"1970":{"position":[[441,7]]},"1991":{"position":[[272,8]]}}}],["block",{"_index":3871,"t":{"1539":{"position":[[131,5]]},"1995":{"position":[[289,6],[435,8]]},"2439":{"position":[[244,13]]}}}],["block;}.tab",{"_index":4947,"t":{"1979":{"position":[[2775,12]]}}}],["blog",{"_index":591,"t":{"126":{"position":[[250,4]]},"1008":{"position":[[52,4]]},"1012":{"position":[[95,4]]},"1017":{"position":[[1436,5],[2024,8],[2040,7],[2579,7],[2591,8]]},"1037":{"position":[[327,8],[858,7],[870,8]]},"1039":{"position":[[359,5]]},"1049":{"position":[[44,4]]},"1078":{"position":[[5,4]]}}}],["blue",{"_index":3856,"t":{"1528":{"position":[[64,6]]},"1653":{"position":[[158,4]]}}}],["bmp",{"_index":6028,"t":{"2409":{"position":[[120,23],[270,23],[412,23]]},"2454":{"position":[[0,12],[2009,7]]}}}],["bmp、jpg、png、gif",{"_index":6141,"t":{"2452":{"position":[[0,58]]}}}],["bmp位图文件的第4",{"_index":6201,"t":{"2454":{"position":[[1804,21]]}}}],["bmp格式：位图文件（bitmap",{"_index":6142,"t":{"2452":{"position":[[61,17]]}}}],["bmw",{"_index":4235,"t":{"1683":{"position":[[124,7]]},"1695":{"position":[[103,7]]},"1741":{"position":[[57,7]]},"1743":{"position":[[118,7],[180,7]]}}}],["bmw\"];document.getelementbyid(\"demo\").innerhtml",{"_index":4320,"t":{"1745":{"position":[[140,48]]},"1747":{"position":[[60,48]]}}}],["board",{"_index":2817,"t":{"1223":{"position":[[121,5],[237,5],[252,5],[505,5],[522,5],[557,5],[851,5],[966,5],[1053,5],[1106,5],[1154,5],[1197,5],[1488,5],[1547,5],[1789,5],[2273,10],[2485,5],[2508,5],[2595,5],[2850,5],[3027,5],[3059,5],[3898,5],[3911,5],[3977,5],[4053,5],[4071,5],[4106,23]]},"1239":{"position":[[61,5],[104,5],[298,5],[557,5],[714,5],[741,5]]},"1241":{"position":[[457,5],[565,5]]},"1248":{"position":[[947,5],[1541,7],[1549,6]]},"1257":{"position":[[7,5],[71,5]]},"1259":{"position":[[126,7],[134,6]]},"1261":{"position":[[34,5],[60,5],[139,5],[466,5],[537,5]]}}}],["bob",{"_index":5211,"t":{"2059":{"position":[[290,17]]}}}],["bob的邮件服务器上的报文传给本地的pc",{"_index":5206,"t":{"2059":{"position":[[51,38]]}}}],["bodi",{"_index":21,"t":{"10":{"position":[[130,4],[169,13]]},"31":{"position":[[130,6]]},"92":{"position":[[505,4]]},"847":{"position":[[237,4]]},"1248":{"position":[[208,4]]},"1515":{"position":[[825,4]]},"1547":{"position":[[124,6],[821,44]]},"1549":{"position":[[103,6],[155,6]]},"2055":{"position":[[988,5]]}}}],["body></bodi",{"_index":3894,"t":{"1547":{"position":[[806,14]]}}}],["body></html",{"_index":3884,"t":{"1547":{"position":[[145,14]]},"1549":{"position":[[124,14]]}}}],["body元素中插入canva",{"_index":74,"t":{"10":{"position":[[1647,19]]},"20":{"position":[[185,27]]}}}],["bold",{"_index":2912,"t":{"1248":{"position":[[494,5]]},"1255":{"position":[[325,5]]},"1340":{"position":[[829,5]]}}}],["bom",{"_index":2222,"t":{"921":{"position":[[67,3]]}}}],["boo\"></mi",{"_index":3440,"t":{"1377":{"position":[[258,9]]}}}],["boo\">hi</p",{"_index":3443,"t":{"1377":{"position":[[313,11]]}}}],["bool",{"_index":5986,"t":{"2303":{"position":[[29,22]]}}}],["boolean",{"_index":371,"t":{"92":{"position":[[8,7],[131,7],[275,7],[329,7],[381,7],[450,7]]},"394":{"position":[[259,7],[277,7]]},"565":{"position":[[279,7]]},"567":{"position":[[84,7]]},"618":{"position":[[352,7]]},"1636":{"position":[[0,7],[71,9],[258,7]]}}}],["boolean(0",{"_index":4072,"t":{"1636":{"position":[[95,11]]}}}],["bool值，tru",{"_index":5003,"t":{"1987":{"position":[[200,10]]}}}],["border",{"_index":382,"t":{"92":{"position":[[877,6]]},"853":{"position":[[420,6]]},"1248":{"position":[[427,7]]},"1255":{"position":[[258,7]]},"1366":{"position":[[963,6]]},"1515":{"position":[[1062,6],[1286,6],[1523,6]]},"1518":{"position":[[230,6],[402,6]]},"1592":{"position":[[430,21]]},"1976":{"position":[[193,6]]},"1979":{"position":[[2394,6],[2695,6]]}}}],["border:2px",{"_index":3854,"t":{"1528":{"position":[[47,10]]}}}],["borderstyl",{"_index":4770,"t":{"1933":{"position":[[171,14]]}}}],["both",{"_index":2906,"t":{"1248":{"position":[[333,5]]},"1507":{"position":[[127,4],[173,4],[303,4],[349,4],[483,4],[529,4]]}}}],["bottom",{"_index":2042,"t":{"853":{"position":[[312,6],[780,7]]},"1248":{"position":[[385,7]]},"1515":{"position":[[1652,7]]},"1522":{"position":[[258,7]]},"1933":{"position":[[760,9],[788,6]]},"1979":{"position":[[2340,7]]}}}],["box",{"_index":384,"t":{"92":{"position":[[902,25]]},"312":{"position":[[9,3],[29,3]]},"853":{"position":[[340,4],[515,3],[717,3]]},"1386":{"position":[[105,5]]},"1515":{"position":[[1306,3]]},"1518":{"position":[[422,3]]},"1976":{"position":[[181,3],[200,5]]}}}],["boy=new",{"_index":1639,"t":{"596":{"position":[[122,7]]}}}],["boy={21.3f,23.89f,2.0f,23f,668.8f",{"_index":1638,"t":{"596":{"position":[[72,37]]}}}],["bps的信道划分为不同的频段（每个频段具有r/n",{"_index":5296,"t":{"2117":{"position":[[325,46]]}}}],["bps，但是它存在着主要缺陷：节点的传输速率被限制为r/n",{"_index":5293,"t":{"2117":{"position":[[240,29]]}}}],["bps；节点必须在它的时隙内传输分组。对于特殊情况下，tdm",{"_index":5294,"t":{"2117":{"position":[[270,39]]}}}],["br",{"_index":266,"t":{"49":{"position":[[1066,5]]},"1797":{"position":[[170,7],[428,7]]}}}],["branch",{"_index":2537,"t":{"1078":{"position":[[92,6]]},"1084":{"position":[[109,9],[560,7]]}}}],["branch），并将代码拷贝一份副本在本地，在本地进行自己部分的编码和测试工作，在编码完成后，把这个工程推送（push）到仓库中自己的分支里，并向主分支（main）发起合并请求（pul",{"_index":2786,"t":{"1182":{"position":[[143,180]]},"1909":{"position":[[180,180]]}}}],["brand",{"_index":4818,"t":{"1964":{"position":[[190,6]]},"1981":{"position":[[651,5],[1381,6]]}}}],["break",{"_index":438,"t":{"101":{"position":[[1248,6],[1413,6],[1566,6]]},"103":{"position":[[3302,6],[3615,6],[3855,6],[3868,6],[4471,6]]},"198":{"position":[[1248,6],[1413,6],[1566,6]]},"200":{"position":[[3302,6],[3615,6],[3855,6],[3868,6],[4471,6]]},"414":{"position":[[0,5],[39,5],[231,6]]},"426":{"position":[[83,6],[113,6],[424,5],[454,5],[513,5],[527,5],[562,5],[688,5],[747,22],[939,6],[994,6],[1038,6],[1088,6]]},"1342":{"position":[[1845,6]]}}}],["browser",{"_index":3986,"t":{"1592":{"position":[[214,8]]}}}],["bson",{"_index":242,"t":{"49":{"position":[[174,4]]}}}],["btn",{"_index":379,"t":{"92":{"position":[[793,6],[811,4],[1035,4]]},"95":{"position":[[116,3]]}}}],["bucket",{"_index":734,"t":{"184":{"position":[[0,15],[16,11]]},"190":{"position":[[200,60]]},"192":{"position":[[0,22]]},"226":{"position":[[0,15],[16,11]]},"232":{"position":[[200,60]]},"234":{"position":[[0,22]]},"1170":{"position":[[0,15],[16,11]]},"1176":{"position":[[200,60]]},"1178":{"position":[[0,22]]}}}],["bucket列表，如图，只需要复制oss",{"_index":735,"t":{"186":{"position":[[0,25]]},"228":{"position":[[0,25]]},"1172":{"position":[[0,25]]}}}],["bucket名称，这里填写的是bucket",{"_index":742,"t":{"190":{"position":[[130,44]]},"232":{"position":[[130,44]]},"1176":{"position":[[130,44]]}}}],["bug",{"_index":566,"t":{"124":{"position":[[162,3]]},"1705":{"position":[[112,8]]}}}],["build",{"_index":571,"t":{"124":{"position":[[279,5]]},"287":{"position":[[481,17]]},"1074":{"position":[[235,5],[260,5]]},"1076":{"position":[[63,5]]},"1084":{"position":[[190,5],[365,5],[422,5],[433,5],[585,5],[628,5]]},"1460":{"position":[[8,5]]}}}],["build.gradl",{"_index":954,"t":{"280":{"position":[[15,12]]}}}],["build_script",{"_index":2552,"t":{"1084":{"position":[[591,13]]}}}],["built",{"_index":2466,"t":{"1017":{"position":[[2770,5]]},"1037":{"position":[[1030,5]]}}}],["buna",{"_index":2966,"t":{"1265":{"position":[[64,4]]}}}],["bustest1",{"_index":1571,"t":{"563":{"position":[[380,8]]}}}],["button",{"_index":133,"t":{"31":{"position":[[329,7],[471,6]]},"95":{"position":[[34,7],[97,7],[179,7]]},"114":{"position":[[202,6],[308,8]]},"211":{"position":[[202,6],[308,8]]},"1092":{"position":[[1563,6],[1581,6],[2032,6],[2050,6]]},"1223":{"position":[[2161,7],[2246,9],[2329,8],[2376,6],[2751,8]]},"1237":{"position":[[245,7],[311,9]]},"1248":{"position":[[885,7],[926,9]]},"1255":{"position":[[72,7],[113,9],[162,6]]},"1261":{"position":[[358,7],[405,9]]},"1263":{"position":[[71,6],[148,7],[236,9],[1217,7],[1296,9],[1379,8],[1581,8],[1738,7],[1831,9]]},"1267":{"position":[[123,6],[168,7],[307,6],[490,31],[579,8],[706,6]]},"1269":{"position":[[45,6],[90,9]]},"1271":{"position":[[672,6],[701,6],[746,9]]},"1273":{"position":[[820,7],[874,6],[922,6],[967,7]]},"1279":{"position":[[195,6]]},"1287":{"position":[[66,6],[102,6]]},"1289":{"position":[[117,6],[133,7],[371,6],[481,7]]},"1291":{"position":[[50,6],[194,7],[262,9]]},"1295":{"position":[[517,7]]},"1299":{"position":[[504,7]]},"1397":{"position":[[97,7]]},"1404":{"position":[[837,7]]},"1445":{"position":[[980,7]]},"1472":{"position":[[699,7],[1642,7]]},"1485":{"position":[[149,7],[290,8]]},"1677":{"position":[[72,7]]},"1790":{"position":[[255,7]]},"1816":{"position":[[275,8],[288,7]]},"1868":{"position":[[348,7],[474,7],[795,7]]},"1918":{"position":[[279,8],[320,11]]},"1981":{"position":[[1197,6]]},"1995":{"position":[[227,7],[279,9],[750,7]]},"2007":{"position":[[141,6],[191,6]]}}}],["button></view",{"_index":4981,"t":{"1981":{"position":[[1283,14]]}}}],["button>add</button",{"_index":3662,"t":{"1445":{"position":[[599,20]]}}}],["button>{this.props.label}</button",{"_index":3028,"t":{"1287":{"position":[[153,36]]}}}],["button，你可以这么做reactdom.rend",{"_index":2983,"t":{"1269":{"position":[[158,29]]}}}],["by=\"$index",{"_index":3621,"t":{"1428":{"position":[[131,12]]}}}],["byte",{"_index":1373,"t":{"486":{"position":[[62,4],[82,4],[407,4]]},"488":{"position":[[44,5],[182,5]]},"565":{"position":[[31,4]]},"2454":{"position":[[226,4],[1653,4],[1672,4],[1692,4],[1710,4]]}}}],["bytevalu",{"_index":1374,"t":{"486":{"position":[[67,11]]}}}],["byte、short、int",{"_index":1244,"t":{"426":{"position":[[205,14]]}}}],["byte，short，int",{"_index":1754,"t":{"618":{"position":[[604,51]]}}}],["b—>a:第二次握手，b回答能听到，并反问a",{"_index":5796,"t":{"2230":{"position":[[37,26]]}}}],["b、2)a",{"_index":785,"t":{"245":{"position":[[961,6]]},"257":{"position":[[907,6]]}}}],["b、c、d、e、f",{"_index":6023,"t":{"2403":{"position":[[39,10]]},"2405":{"position":[[39,10]]}}}],["b、g、r值，也即3",{"_index":6204,"t":{"2454":{"position":[[1948,24]]}}}],["b共**发送8个ack**，首先发送ack1,2丢失，因此对于3,4,5都发送ack1共4个ack1，后对于重传的2,3,4,5，则发送ack2，ack3，ack4，ack5，一共8个ack",{"_index":5444,"t":{"2138":{"position":[[2713,98]]}}}],["b共发送5个ack，首先发送4个ack2（因为接收方会确认下一个期待的序号），重传后发送一个ack6一共5个ack",{"_index":5449,"t":{"2138":{"position":[[3015,60]]}}}],["b共发送5个ack，首先发送ack1，ack3，ack4，ack5，对于重发的报文段2，则发送ack2共5个ack",{"_index":5447,"t":{"2138":{"position":[[2882,60]]}}}],["b发送数据帧，就会导致冲突.（设a在b的电磁波范围，c在b电磁波范围内，而a不在c电磁波范围，此时ab可以相互传输数据，bc",{"_index":5384,"t":{"2136":{"position":[[86,76]]}}}],["b向d交付1mbits文件需要时间大约为：1/10+2×1000/10000000=0.1002s≈0.1s。（3",{"_index":5416,"t":{"2138":{"position":[[914,59]]}}}],["b大约需要时间：t=4×8×106/(500×103)=64s。（3",{"_index":5428,"t":{"2138":{"position":[[1492,44]]}}}],["b将1mbits的文件交付给d需要时间为：1/10+2/20(排队时间)+1/20+1/10=0.35s=350ms。（3",{"_index":5413,"t":{"2138":{"position":[[662,63]]}}}],["b收到一个来自适配器a的帧，它对该帧执行crc校验，但是当该帧通过crc校验时它不发送确认帧，而当该帧没有通过crc校验时它也不发送确认帧。当某帧没有通过crc校验，适配器b只是丢弃该帧。因此，适配器a根本不知道它传输的帧是否到达了b并通过了crc",{"_index":5360,"t":{"2127":{"position":[[1176,174]]}}}],["b类地址172.16.0.0划分成30",{"_index":5451,"t":{"2138":{"position":[[3170,35]]}}}],["b类地址172.16.0.0划分成若干子网络，每个子网络能容纳500",{"_index":5456,"t":{"2138":{"position":[[3437,49]]}}}],["b类地址:按上述说法，网络位和主机位都是16位，所以可容纳主机数是2的16次方减2，子网数为2的14",{"_index":5574,"t":{"2173":{"position":[[781,53]]}}}],["b类地址的主机部分的前五位变成全1，得到新的子网掩码：（11111111.11111111.11111000.00000000），255.255.248.0",{"_index":5455,"t":{"2138":{"position":[[3338,79]]}}}],["b类地址，子网掩码为11111111.11111111.11000000.00000000，因此子网号为2位，子网号有四位，将ip地址转换为二进制，10101100.00010000.00000000.00000000",{"_index":5463,"t":{"2138":{"position":[[3869,109]]}}}],["b给a发送应答时，ip数据报的目的ip地址是nat路由器的ip地址172.38.1.5。b并不知道a的专用地址192.168.0.3.实际上，即使知道了，也不能使用，因为互联网上的路由器都不转发目的地址是专用网本地ip地址的ip数据报。当nat路由器收到互联网上的主机b发来的ip数据报时，还要进行一次ip地址的转换。通过nat地址转换表，就可把ip数据报上的旧的目的p地址172.38.1.5，转换为新的目的p地址192.168.0.3（主机a真正的本地ip",{"_index":5617,"t":{"2188":{"position":[[316,238]]}}}],["b，很可能引发一个问题，也就是在a链路中数据报可以完整封装进链路层帧，但是b链路就不行了，所以就有了ip",{"_index":5534,"t":{"2169":{"position":[[130,55]]}}}],["c",{"_index":454,"t":{"103":{"position":[[350,2],[921,1],[1000,3],[1970,3],[2120,3],[2189,3],[2255,3],[2512,3]]},"200":{"position":[[350,2],[921,1],[1000,3],[1970,3],[2120,3],[2189,3],[2255,3],[2512,3]]},"245":{"position":[[982,1]]},"257":{"position":[[928,1]]},"297":{"position":[[152,2],[155,11],[167,1],[189,3]]},"299":{"position":[[142,2],[145,11],[157,1],[179,3]]},"392":{"position":[[563,1],[570,1],[634,1],[639,1],[703,1],[708,1],[772,1],[777,1],[835,1],[840,1],[907,1],[912,1],[973,1],[978,1],[1046,1]]},"426":{"position":[[962,3]]},"430":{"position":[[0,28]]},"494":{"position":[[584,1]]},"496":{"position":[[386,1]]},"545":{"position":[[37,1],[41,3]]},"551":{"position":[[66,18],[85,2]]},"565":{"position":[[593,6]]},"681":{"position":[[220,5],[308,3],[332,3],[356,3]]},"757":{"position":[[358,9]]},"986":{"position":[[67,5],[180,2]]},"1146":{"position":[[292,10]]},"1241":{"position":[[275,2]]},"1340":{"position":[[646,1]]},"1470":{"position":[[149,5]]},"1638":{"position":[[72,1],[123,1]]},"1642":{"position":[[72,1]]},"1928":{"position":[[770,4],[795,1]]},"1944":{"position":[[305,10]]},"2001":{"position":[[242,10]]},"2003":{"position":[[479,21]]},"2138":{"position":[[496,2],[911,2]]},"2173":{"position":[[314,1]]},"2175":{"position":[[92,23]]},"2177":{"position":[[219,10]]},"2373":{"position":[[27,2]]},"2503":{"position":[[394,1]]}}}],["c(x,y)标识结点x到结点i",{"_index":5740,"t":{"2206":{"position":[[66,38]]}}}],["c++,java",{"_index":1249,"t":{"432":{"position":[[0,73]]}}}],["c.fillrect(0",{"_index":3194,"t":{"1340":{"position":[[727,13]]}}}],["c.fillstyl",{"_index":3193,"t":{"1340":{"position":[[691,11],[786,11]]}}}],["c.filltext(text",{"_index":3202,"t":{"1340":{"position":[[911,16]]}}}],["c.font",{"_index":3197,"t":{"1340":{"position":[[820,6]]}}}],["c.textalign",{"_index":3201,"t":{"1340":{"position":[[880,11]]}}}],["c.textbaselin",{"_index":3199,"t":{"1340":{"position":[[853,14]]}}}],["c.translate(160",{"_index":3195,"t":{"1340":{"position":[[764,16]]}}}],["c7",{"_index":5334,"t":{"2125":{"position":[[838,2]]}}}],["c</div><div",{"_index":3699,"t":{"1470":{"position":[[155,11]]}}}],["c[100",{"_index":451,"t":{"103":{"position":[[298,6]]},"200":{"position":[[298,6]]}}}],["cach",{"_index":2523,"t":{"1058":{"position":[[252,5]]},"2055":{"position":[[312,23]]}}}],["cache将这个对象转发给请求的浏览器并且将这个对象缓存到自己的本地存储。重要的是，cach",{"_index":5163,"t":{"2055":{"position":[[491,66]]}}}],["cache请求了相同的对象，并且这个对象仍然在cache里。由于这个对象可能在过去的一周里被修改过，cache就发起一个condit",{"_index":5164,"t":{"2055":{"position":[[558,84]]}}}],["calc",{"_index":3849,"t":{"1522":{"position":[[0,4]]}}}],["calc(15",{"_index":3844,"t":{"1515":{"position":[[1608,8]]},"1522":{"position":[[214,8]]}}}],["calculatewinn",{"_index":2875,"t":{"1241":{"position":[[50,15]]}}}],["calculatewinner(squar",{"_index":2876,"t":{"1241":{"position":[[87,24],[480,24],[943,25]]}}}],["calculatewinner(this.state.squar",{"_index":2884,"t":{"1241":{"position":[[630,36]]}}}],["calendar",{"_index":4683,"t":{"1898":{"position":[[223,10],[403,8]]}}}],["call",{"_index":1050,"t":{"303":{"position":[[200,6],[267,6]]},"1689":{"position":[[172,6],[219,6]]}}}],["callback",{"_index":2234,"t":{"937":{"position":[[94,8]]},"944":{"position":[[39,10],[123,8]]},"1924":{"position":[[770,8]]}}}],["camelcas",{"_index":3040,"t":{"1295":{"position":[[70,9]]},"1380":{"position":[[76,11]]}}}],["camera",{"_index":63,"t":{"10":{"position":[[1287,6]]},"18":{"position":[[12,6]]},"20":{"position":[[247,8]]},"23":{"position":[[50,16],[545,16]]}}}],["camera);//执行渲染操作}render();var",{"_index":106,"t":{"25":{"position":[[322,29]]}}}],["camera);</script></body></html",{"_index":76,"t":{"10":{"position":[[1711,31]]}}}],["camera.lookat(scene.posit",{"_index":68,"t":{"10":{"position":[[1402,30]]},"18":{"position":[[117,38]]}}}],["camera.position.set(200",{"_index":67,"t":{"10":{"position":[[1357,24]]},"18":{"position":[[278,54]]}}}],["camerainit",{"_index":3242,"t":{"1344":{"position":[[22,12]]}}}],["cancelbuttontext",{"_index":3238,"t":{"1342":{"position":[[1554,17]]}}}],["canius",{"_index":5014,"t":{"1995":{"position":[[260,11]]}}}],["canva",{"_index":3175,"t":{"1340":{"position":[[0,28],[131,17],[986,10]]},"1825":{"position":[[253,10]]}}}],["canvastext",{"_index":3176,"t":{"1340":{"position":[[93,10],[595,10],[1299,13]]}}}],["canvastext.getcontext('2d",{"_index":3192,"t":{"1340":{"position":[[650,28]]}}}],["canver",{"_index":3190,"t":{"1340":{"position":[[575,15],[716,10]]}}}],["car",{"_index":4166,"t":{"1651":{"position":[[29,3],[130,3],[143,3]]},"1683":{"position":[[96,4]]},"1695":{"position":[[48,4],[75,4]]},"1703":{"position":[[41,3]]},"1741":{"position":[[32,4]]},"1743":{"position":[[92,4],[146,4]]},"1745":{"position":[[32,4],[74,4],[115,4]]},"1747":{"position":[[35,4],[111,5]]},"1794":{"position":[[4,4]]}}}],["car.brak",{"_index":4164,"t":{"1649":{"position":[[145,15]]}}}],["car.color",{"_index":4161,"t":{"1649":{"position":[[82,13]]}}}],["car.driv",{"_index":4163,"t":{"1649":{"position":[[129,15]]}}}],["car.length",{"_index":4159,"t":{"1649":{"position":[[56,14]]}}}],["car.model",{"_index":4157,"t":{"1649":{"position":[[34,13]]}}}],["car.nam",{"_index":4155,"t":{"1649":{"position":[[13,8]]}}}],["car.start",{"_index":4162,"t":{"1649":{"position":[[115,13]]}}}],["car.stop",{"_index":4165,"t":{"1649":{"position":[[161,14]]}}}],["card，nic",{"_index":5269,"t":{"2106":{"position":[[63,10]]}}}],["carnam",{"_index":4237,"t":{"1689":{"position":[[8,7],[45,7]]}}}],["cars.sort(function(a",{"_index":4401,"t":{"1794":{"position":[[105,21],[176,21]]}}}],["cars[0",{"_index":4318,"t":{"1745":{"position":[[58,8],[87,7],[191,8]]}}}],["case",{"_index":1242,"t":{"426":{"position":[[7,4],[65,4],[95,4],[125,17],[171,4],[270,4],[307,4],[318,4],[338,4],[388,4],[404,4],[489,14],[549,4],[653,4],[705,4],[732,4],[902,4],[946,4],[957,4],[1001,4],[1045,4]]},"1380":{"position":[[102,14]]}}}],["cat",{"_index":3661,"t":{"1445":{"position":[[592,4]]}}}],["catch",{"_index":3241,"t":{"1342":{"position":[[1789,11]]}}}],["catch(",{"_index":4609,"t":{"1872":{"position":[[1202,10]]}}}],["catch(funct",{"_index":3599,"t":{"1420":{"position":[[1372,15]]}}}],["cats的项目进行二次开发，优化了ui，突破20",{"_index":2756,"t":{"1142":{"position":[[22,84]]}}}],["caution",{"_index":1554,"t":{"542":{"position":[[171,7]]},"1200":{"position":[[0,7],[125,7]]},"1204":{"position":[[28,7]]},"1248":{"position":[[52,7]]},"1406":{"position":[[359,7]]},"1576":{"position":[[317,7]]},"1870":{"position":[[61,7]]},"1903":{"position":[[105,7]]},"1944":{"position":[[210,7]]},"2167":{"position":[[81,7]]}}}],["ccd",{"_index":6295,"t":{"2511":{"position":[[199,33]]}}}],["ccd器件、数字信号处理（dsp）芯片、存储器和lcd",{"_index":6296,"t":{"2514":{"position":[[36,42]]}}}],["ccredit",{"_index":1905,"t":{"757":{"position":[[378,7]]}}}],["cd",{"_index":2279,"t":{"953":{"position":[[306,2],[334,2]]},"1248":{"position":[[110,2],[139,11]]},"1360":{"position":[[23,2]]},"2469":{"position":[[732,4],[765,2],[1059,2],[1084,4]]},"2471":{"position":[[57,12],[107,2]]},"2473":{"position":[[424,19]]}}}],["cdma",{"_index":5298,"t":{"2117":{"position":[[388,10]]}}}],["cdn",{"_index":680,"t":{"177":{"position":[[247,76]]},"217":{"position":[[251,76]]},"219":{"position":[[247,76]]},"1163":{"position":[[247,76]]}}}],["cd、蓝光存储）、半导体存储（ram、rom",{"_index":5993,"t":{"2339":{"position":[[0,39]]}}}],["cd协议可以通过线缆的电压变化完成全面的碰撞检测，但是在无线局域网csma",{"_index":5382,"t":{"2136":{"position":[[10,37]]}}}],["cd无法做到360°全面检测碰撞。当a和c",{"_index":5383,"t":{"2136":{"position":[[48,37]]}}}],["cd这个文件夹，执行下面的指令，它会创建一个包含模板文件的新目录。（操作提示，在文件夹空白处按住上档键shift和鼠标右键，打开powershell窗口，并且请准备好ladd",{"_index":2494,"t":{"1047":{"position":[[31,108]]}}}],["cecili",{"_index":4362,"t":{"1779":{"position":[[47,11],[241,11]]}}}],["ceil",{"_index":1432,"t":{"500":{"position":[[0,6]]}}}],["ceil(doubl",{"_index":1434,"t":{"500":{"position":[[99,11]]}}}],["ceil(float",{"_index":1435,"t":{"500":{"position":[[121,10]]}}}],["cell",{"_index":4685,"t":{"1898":{"position":[[269,6],[334,4]]},"1979":{"position":[[2421,5]]},"1981":{"position":[[184,4],[494,4],[598,4],[857,4]]}}}],["center",{"_index":2072,"t":{"853":{"position":[[638,7]]},"1092":{"position":[[3591,8],[3678,6]]},"1248":{"position":[[595,7]]},"1255":{"position":[[426,7]]},"1340":{"position":[[894,9]]},"1515":{"position":[[896,7],[917,7]]},"1960":{"position":[[220,7]]},"1976":{"position":[[122,7]]},"2409":{"position":[[40,6]]},"2412":{"position":[[191,6]]},"2429":{"position":[[54,6]]},"2439":{"position":[[52,6],[414,6]]},"2460":{"position":[[509,6]]},"2478":{"position":[[20,6]]}}}],["centuri",{"_index":2896,"t":{"1248":{"position":[[226,8]]}}}],["chanc",{"_index":1017,"t":{"293":{"position":[[253,6]]},"376":{"position":[[202,6]]}}}],["chang",{"_index":2435,"t":{"1017":{"position":[[1236,6],[1477,6]]},"1039":{"position":[[171,6],[400,6]]},"1918":{"position":[[503,6]]}}}],["changenam",{"_index":4721,"t":{"1918":{"position":[[464,11],[650,10]]}}}],["changspeed(int",{"_index":1253,"t":{"437":{"position":[[78,14]]}}}],["char",{"_index":450,"t":{"103":{"position":[[293,4],[891,23],[915,5]]},"200":{"position":[[293,4],[891,23],[915,5]]},"398":{"position":[[48,4]]},"426":{"position":[[223,6],[834,6],[868,4]]},"565":{"position":[[255,4],[305,4],[319,7],[424,32],[588,4]]},"588":{"position":[[56,4]]},"621":{"position":[[263,6]]}}}],["char)i",{"_index":1592,"t":{"565":{"position":[[741,11]]}}}],["char[1024",{"_index":470,"t":{"103":{"position":[[929,11]]},"200":{"position":[[929,11]]}}}],["charact",{"_index":1202,"t":{"398":{"position":[[0,9],[24,9]]},"1665":{"position":[[377,10]]},"1667":{"position":[[81,10]]}}}],["character.transform.translate(vector3.back",{"_index":1083,"t":{"310":{"position":[[256,42]]}}}],["character.transform.translate(vector3.forward",{"_index":1077,"t":{"310":{"position":[[59,45]]}}}],["character.transform.translate(vector3.left",{"_index":1081,"t":{"310":{"position":[[159,42]]}}}],["character.transform.translate(vector3.right",{"_index":1085,"t":{"310":{"position":[[353,43]]}}}],["characterapi",{"_index":1217,"t":{"402":{"position":[[213,14]]}}}],["charat",{"_index":4538,"t":{"1852":{"position":[[0,8],[12,8],[336,8]]}}}],["charcodeat",{"_index":4541,"t":{"1852":{"position":[[90,12],[106,12]]}}}],["charset=\"utf",{"_index":17,"t":{"10":{"position":[[66,12]]},"853":{"position":[[52,12]]},"1511":{"position":[[34,12]]},"1515":{"position":[[44,12]]},"1547":{"position":[[77,12],[645,12]]},"1549":{"position":[[56,12],[229,12]]},"1551":{"position":[[36,12]]},"1555":{"position":[[10,12]]}}}],["charset=utf",{"_index":2219,"t":{"914":{"position":[[493,11]]}}}],["char类型的，必须先获取char",{"_index":449,"t":{"103":{"position":[[246,46]]},"200":{"position":[[246,46]]}}}],["chatkitti",{"_index":2531,"t":{"1062":{"position":[[139,9]]}}}],["check",{"_index":164,"t":{"33":{"position":[[464,8]]},"1900":{"position":[[131,11],[143,7],[244,8],[294,7],[324,8]]}}}],["checkout",{"_index":2544,"t":{"1084":{"position":[[268,8]]}}}],["cheng",{"_index":2378,"t":{"1010":{"position":[[526,5]]}}}],["chengzihan",{"_index":614,"t":{"145":{"position":[[28,10],[46,10]]},"163":{"position":[[29,10],[47,10]]},"165":{"position":[[27,10],[45,10]]},"175":{"position":[[27,10],[45,10]]},"194":{"position":[[27,10],[45,10]]},"204":{"position":[[27,10],[45,10]]},"1006":{"position":[[455,10]]}}}],["chengzihantag",{"_index":2386,"t":{"1012":{"position":[[127,15]]}}}],["cherri",{"_index":2970,"t":{"1265":{"position":[[186,9]]}}}],["child(odd",{"_index":3862,"t":{"1532":{"position":[[56,11]]}}}],["childen",{"_index":2955,"t":{"1263":{"position":[[866,7]]}}}],["children",{"_index":2304,"t":{"969":{"position":[[204,9]]},"1251":{"position":[[746,8],[800,8]]}}}],["china",{"_index":4467,"t":{"1833":{"position":[[55,5],[61,16],[100,5],[176,5],[182,18]]},"1838":{"position":[[63,5],[218,5],[382,5],[549,5]]},"1840":{"position":[[59,5]]}}}],["china.\";var",{"_index":4474,"t":{"1838":{"position":[[97,11],[252,11],[416,11],[583,11]]},"1840":{"position":[[93,11]]}}}],["chines",{"_index":2420,"t":{"1017":{"position":[[940,8]]},"1058":{"position":[[317,8]]}}}],["chongqin_47:93:85(重庆路由),目的地址是chinamob_9f:ba:58",{"_index":5969,"t":{"2287":{"position":[[1112,58]]}}}],["choos",{"_index":2693,"t":{"1096":{"position":[[325,6]]}}}],["chore",{"_index":574,"t":{"124":{"position":[[327,5]]},"126":{"position":[[18,6],[36,6],[60,6],[84,6],[108,6]]},"1092":{"position":[[2663,7]]}}}],["chrome",{"_index":3785,"t":{"1507":{"position":[[1448,6],[1981,6],[2539,6],[3788,6],[4228,6]]},"1555":{"position":[[223,66]]},"1825":{"position":[[322,6]]}}}],["chrome/87.0.4280.141",{"_index":706,"t":{"179":{"position":[[448,20]]},"221":{"position":[[448,20]]},"1165":{"position":[[448,20]]}}}],["ci",{"_index":573,"t":{"124":{"position":[[313,2]]}}}],["cidr",{"_index":5641,"t":{"2193":{"position":[[308,23]]},"2214":{"position":[[162,4]]}}}],["cidr给出任何一个ip地址就相当于给出了一个cidr地址块。这是由连续的ip地址组成的，所以cidr",{"_index":5628,"t":{"2193":{"position":[[0,65]]}}}],["cie",{"_index":6058,"t":{"2424":{"position":[[0,12]]}}}],["cilp",{"_index":3270,"t":{"1346":{"position":[[875,4]]}}}],["circl",{"_index":1277,"t":{"443":{"position":[[164,7]]}}}],["circle();circle1.radius=10;circl",{"_index":1282,"t":{"443":{"position":[[252,33]]}}}],["circle();circle2.radius=100",{"_index":1284,"t":{"443":{"position":[[298,28]]}}}],["circle.pi=3.14;circl",{"_index":1280,"t":{"443":{"position":[[211,28]]}}}],["circle1=new",{"_index":1281,"t":{"443":{"position":[[240,11]]}}}],["circle2=new",{"_index":1283,"t":{"443":{"position":[[286,11]]}}}],["citi",{"_index":1104,"t":{"359":{"position":[[239,7],[532,7],[715,7]]}}}],["citru",{"_index":4377,"t":{"1781":{"position":[[120,6],[296,6]]}}}],["cityname.data",{"_index":1140,"t":{"371":{"position":[[210,17]]}}}],["class",{"_index":263,"t":{"49":{"position":[[925,8]]},"70":{"position":[[296,5],[396,5]]},"95":{"position":[[19,5]]},"303":{"position":[[160,5]]},"305":{"position":[[495,5]]},"307":{"position":[[218,5],[448,5]]},"388":{"position":[[162,5],[474,5]]},"390":{"position":[[287,5]]},"392":{"position":[[439,5]]},"394":{"position":[[205,5]]},"396":{"position":[[128,5]]},"400":{"position":[[181,5]]},"406":{"position":[[58,5]]},"408":{"position":[[219,5]]},"410":{"position":[[300,5]]},"412":{"position":[[145,5]]},"414":{"position":[[81,5]]},"416":{"position":[[132,5]]},"420":{"position":[[64,5]]},"426":{"position":[[781,5]]},"437":{"position":[[0,5]]},"439":{"position":[[133,5]]},"443":{"position":[[158,5],[625,5],[861,5]]},"445":{"position":[[95,5],[244,5],[387,5]]},"447":{"position":[[31,5],[326,5],[640,5]]},"449":{"position":[[64,5]]},"451":{"position":[[35,5],[413,5],[511,5],[862,5],[961,5]]},"453":{"position":[[36,5],[291,5]]},"457":{"position":[[133,5],[242,5],[336,5]]},"483":{"position":[[104,5]]},"486":{"position":[[334,5]]},"488":{"position":[[293,5]]},"490":{"position":[[165,5]]},"492":{"position":[[7,5]]},"494":{"position":[[495,5]]},"496":{"position":[[297,5]]},"498":{"position":[[13,5]]},"500":{"position":[[253,5]]},"502":{"position":[[115,5]]},"504":{"position":[[302,5]]},"506":{"position":[[144,5]]},"508":{"position":[[144,5]]},"510":{"position":[[53,5]]},"512":{"position":[[34,5]]},"514":{"position":[[118,5]]},"516":{"position":[[33,5]]},"518":{"position":[[7,5]]},"520":{"position":[[7,5]]},"522":{"position":[[7,5]]},"524":{"position":[[39,5]]},"526":{"position":[[41,5]]},"528":{"position":[[7,5]]},"530":{"position":[[7,5]]},"532":{"position":[[33,5]]},"534":{"position":[[16,5]]},"538":{"position":[[23,5]]},"542":{"position":[[75,5]]},"551":{"position":[[187,6]]},"561":{"position":[[18,5],[26,5]]},"563":{"position":[[22,5],[156,5],[374,5]]},"565":{"position":[[527,5]]},"569":{"position":[[14,5]]},"579":{"position":[[59,5]]},"581":{"position":[[69,5],[162,5]]},"583":{"position":[[18,5]]},"585":{"position":[[18,5],[102,5]]},"588":{"position":[[31,5]]},"598":{"position":[[7,5]]},"604":{"position":[[22,5]]},"606":{"position":[[82,5]]},"616":{"position":[[91,5]]},"621":{"position":[[205,5]]},"623":{"position":[[7,5]]},"625":{"position":[[110,5]]},"1096":{"position":[[185,5],[216,5],[244,19]]},"1223":{"position":[[551,5],[2102,5],[3053,5]]},"1237":{"position":[[161,5]]},"1239":{"position":[[98,5],[735,5]]},"1248":{"position":[[826,5],[939,7],[1438,7]]},"1251":{"position":[[143,5]]},"1255":{"position":[[13,5]]},"1257":{"position":[[65,5]]},"1259":{"position":[[25,5]]},"1261":{"position":[[133,5],[299,5]]},"1263":{"position":[[89,5],[794,5],[860,5],[1052,5],[1081,5],[1602,5]]},"1273":{"position":[[400,5]]},"1275":{"position":[[47,6]]},"1287":{"position":[[96,5]]},"1289":{"position":[[365,5]]},"1291":{"position":[[44,5]]},"1293":{"position":[[49,5]]},"1295":{"position":[[338,5]]},"1299":{"position":[[157,5]]},"1370":{"position":[[20,5],[132,5]]},"1373":{"position":[[32,6],[105,5],[207,5],[437,9]]},"1375":{"position":[[31,5],[212,15],[369,5]]},"1377":{"position":[[60,5],[80,5],[112,5],[226,6],[333,5]]},"1522":{"position":[[62,5]]},"1543":{"position":[[38,5]]},"1964":{"position":[[369,6]]},"1981":{"position":[[457,5],[1507,6]]}}}],["class=\"a",{"_index":3324,"t":{"1366":{"position":[[445,9],[1275,9],[1580,9],[1681,9],[1777,9],[1875,9],[1986,9],[2142,9]]}}}],["class=\"act",{"_index":3433,"t":{"1375":{"position":[[162,13]]}}}],["class=\"avatar",{"_index":4557,"t":{"1868":{"position":[[300,14]]}}}],["class=\"baz",{"_index":3439,"t":{"1377":{"position":[[247,10]]}}}],["class=\"box",{"_index":2087,"t":{"853":{"position":[[894,12]]}}}],["class=\"box2\"><van",{"_index":4894,"t":{"1979":{"position":[[845,17]]}}}],["class=\"btn",{"_index":388,"t":{"95":{"position":[[105,10],[187,10]]}}}],["class=\"btn\">button</button",{"_index":387,"t":{"95":{"position":[[42,27]]}}}],["class=\"button",{"_index":134,"t":{"31":{"position":[[337,14]]}}}],["class=\"contain",{"_index":3822,"t":{"1515":{"position":[[231,18]]},"1868":{"position":[[255,18],[593,18],[874,18]]},"1995":{"position":[[184,18]]}}}],["class=\"count",{"_index":4843,"t":{"1966":{"position":[[412,12]]}}}],["class=\"count\">{{item.des}}</text",{"_index":4844,"t":{"1966":{"position":[[441,33]]}}}],["class=\"demo",{"_index":3612,"t":{"1426":{"position":[[53,13]]},"1472":{"position":[[453,13],[1357,13]]}}}],["class=\"divid",{"_index":3639,"t":{"1441":{"position":[[124,15]]}}}],["class=\"dsr",{"_index":3318,"t":{"1366":{"position":[[249,11]]}}}],["class=\"el",{"_index":3351,"t":{"1366":{"position":[[1105,9],[1199,9]]}}}],["class=\"elcol",{"_index":3381,"t":{"1366":{"position":[[2440,13]]}}}],["class=\"foo",{"_index":3437,"t":{"1377":{"position":[[186,10],[294,10],[450,10]]}}}],["class=\"git",{"_index":3334,"t":{"1366":{"position":[[770,11]]}}}],["class=\"git1",{"_index":3330,"t":{"1366":{"position":[[615,12]]}}}],["class=\"icon0",{"_index":4881,"t":{"1979":{"position":[[320,13],[868,13]]}}}],["class=\"inputbox",{"_index":4561,"t":{"1868":{"position":[[434,16],[674,16],[757,16]]},"1872":{"position":[[1647,16]]}}}],["class=\"item",{"_index":4839,"t":{"1966":{"position":[[322,13]]}}}],["class=\"jet",{"_index":3379,"t":{"1366":{"position":[[2378,12]]}}}],["class=\"mailcard",{"_index":4570,"t":{"1868":{"position":[[934,16]]},"1878":{"position":[[599,16]]}}}],["class=\"main",{"_index":123,"t":{"31":{"position":[[151,13],[548,13]]},"1366":{"position":[[87,12]]}}}],["class=\"mask",{"_index":3799,"t":{"1511":{"position":[[92,13]]}}}],["class=\"maxbox",{"_index":3800,"t":{"1511":{"position":[[132,15]]}}}],["class=\"myicon",{"_index":3358,"t":{"1366":{"position":[[1322,14],[1485,14],[2039,14],[2195,14]]}}}],["class=\"mylogo",{"_index":3327,"t":{"1366":{"position":[[498,14]]}}}],["class=\"name\">{{item.name}}</text",{"_index":4842,"t":{"1966":{"position":[[372,33]]}}}],["class=\"numb",{"_index":4840,"t":{"1966":{"position":[[342,13]]}}}],["class=\"p1\">hello",{"_index":4801,"t":{"1960":{"position":[[85,16]]}}}],["class=\"part0\">常见问题</view",{"_index":4883,"t":{"1979":{"position":[[360,25]]}}}],["class=\"part0\">问题导航</view><view",{"_index":4896,"t":{"1979":{"position":[[905,30]]}}}],["class=\"part1\"><van",{"_index":4880,"t":{"1979":{"position":[[296,18]]}}}],["class=\"part2",{"_index":4897,"t":{"1979":{"position":[[936,14]]}}}],["class=\"rain",{"_index":3823,"t":{"1515":{"position":[[255,13]]},"1522":{"position":[[273,13]]}}}],["class=\"rt",{"_index":3392,"t":{"1366":{"position":[[2746,10]]}}}],["class=\"stat",{"_index":3418,"t":{"1373":{"position":[[239,14],[385,13]]}}}],["class=\"tab",{"_index":4898,"t":{"1979":{"position":[[961,11],[1354,10],[1656,10]]}}}],["class=\"text_box",{"_index":4800,"t":{"1960":{"position":[[64,17]]}}}],["class=\"toptip",{"_index":3322,"t":{"1366":{"position":[[370,15]]}}}],["class=\"us",{"_index":5020,"t":{"1995":{"position":[[483,11]]}}}],["class=\"userinfo",{"_index":5012,"t":{"1995":{"position":[[209,17],[380,15]]}}}],["class=\"usermotto",{"_index":5019,"t":{"1995":{"position":[[458,18]]}}}],["classic",{"_index":2429,"t":{"1017":{"position":[[1088,10]]},"1039":{"position":[[32,10]]},"1047":{"position":[[183,10]]}}}],["classic').opt",{"_index":2431,"t":{"1017":{"position":[[1146,18]]},"1039":{"position":[[81,18]]}}}],["classic').themeconfig",{"_index":2445,"t":{"1017":{"position":[[1802,22]]},"1037":{"position":[[87,22]]}}}],["classless",{"_index":5622,"t":{"2191":{"position":[[0,16]]}}}],["classnam",{"_index":2943,"t":{"1251":{"position":[[680,11]]},"1263":{"position":[[1515,9]]},"1271":{"position":[[579,10]]},"1273":{"position":[[387,9]]},"1275":{"position":[[34,9]]}}}],["classname=\"big",{"_index":3000,"t":{"1273":{"position":[[786,14]]}}}],["classname=\"board",{"_index":2849,"t":{"1223":{"position":[[3504,16],[3608,16],[3712,16]]},"1239":{"position":[[1295,16],[1399,16],[1503,16]]},"1248":{"position":[[1121,16],[1225,16],[1329,16]]},"1257":{"position":[[245,16],[349,16],[453,16]]}}}],["classname=\"button",{"_index":2589,"t":{"1092":{"position":[[1545,17],[2014,17]]}}}],["classname=\"contain",{"_index":2583,"t":{"1092":{"position":[[1376,22],[1845,22],[3897,22]]}}}],["classname=\"gam",{"_index":2924,"t":{"1248":{"position":[[1502,17],[1525,15],[1571,15]]},"1259":{"position":[[87,17],[110,15],[156,15]]}}}],["classname=\"hero__subtitle\">{siteconfig.tagline}</p",{"_index":2587,"t":{"1092":{"position":[[1454,51],[1923,51]]}}}],["classname=\"hero__title\">{siteconfig.title}</h1",{"_index":2585,"t":{"1092":{"position":[[1403,47],[1872,47]]}}}],["classname=\"row",{"_index":2628,"t":{"1092":{"position":[[3925,16]]}}}],["classname=\"shop",{"_index":2931,"t":{"1251":{"position":[[228,19]]}}}],["classname=\"squar",{"_index":2836,"t":{"1223":{"position":[[2169,18]]},"1237":{"position":[[253,18]]},"1248":{"position":[[893,19]]},"1255":{"position":[[80,19]]},"1261":{"position":[[366,19]]},"1263":{"position":[[156,18],[1225,18],[1746,18]]}}}],["classname=\"status\">{status}</div",{"_index":2848,"t":{"1223":{"position":[[3465,33]]},"1239":{"position":[[1256,33]]},"1248":{"position":[[1082,33]]},"1257":{"position":[[206,33]]}}}],["classname=\"text",{"_index":2621,"t":{"1092":{"position":[[3574,15],[3661,15]]}}}],["classname={clsx('col",{"_index":2619,"t":{"1092":{"position":[[3537,20]]}}}],["classname={clsx('hero",{"_index":2580,"t":{"1092":{"position":[[1312,21],[1781,21]]}}}],["classname={styles.button",{"_index":2588,"t":{"1092":{"position":[[1511,27],[1980,27]]}}}],["classname={styles.featur",{"_index":2627,"t":{"1092":{"position":[[3863,28]]}}}],["classname={styles.featuresvg",{"_index":2622,"t":{"1092":{"position":[[3605,29]]}}}],["classnum",{"_index":911,"t":{"257":{"position":[[1291,8],[1401,8]]}}}],["classobject",{"_index":3423,"t":{"1373":{"position":[[587,12],[775,12]]}}}],["classpush.pi",{"_index":1108,"t":{"363":{"position":[[9,22],[32,18]]}}}],["class。此外，v",{"_index":3417,"t":{"1373":{"position":[[175,10]]}}}],["clear",{"_index":2905,"t":{"1248":{"position":[[326,6]]},"2136":{"position":[[344,6]]}}}],["clear:both",{"_index":4931,"t":{"1979":{"position":[[2321,11]]}}}],["clear:both;}.tab",{"_index":4939,"t":{"1979":{"position":[[2511,16]]}}}],["cli",{"_index":549,"t":{"118":{"position":[[4,3]]},"215":{"position":[[4,3]]},"1358":{"position":[[4,6]]},"1449":{"position":[[16,3]]}}}],["click",{"_index":524,"t":{"114":{"position":[[342,7]]},"211":{"position":[[342,7]]},"1263":{"position":[[286,18]]},"1271":{"position":[[532,5]]},"1273":{"position":[[760,5]]},"1312":{"position":[[785,5]]},"1918":{"position":[[310,5]]}}}],["click.png",{"_index":4853,"t":{"1970":{"position":[[605,11],[784,11]]}}}],["click=\"dosomething\">...</a",{"_index":3761,"t":{"1505":{"position":[[62,30]]}}}],["click=\"query\">查询</button",{"_index":136,"t":{"31":{"position":[[364,26]]}}}],["click=\"togglelogintype\">toggl",{"_index":3712,"t":{"1472":{"position":[[707,31],[1650,31]]}}}],["clickcount",{"_index":3032,"t":{"1291":{"position":[[83,12]]},"1299":{"position":[[213,13],[325,13]]},"1301":{"position":[[126,12]]}}}],["clickm",{"_index":5066,"t":{"2007":{"position":[[229,7],[257,8]]}}}],["client",{"_index":4454,"t":{"1823":{"position":[[0,10]]},"2068":{"position":[[92,6],[220,6],[249,55],[388,6]]},"2195":{"position":[[895,11]]},"2197":{"position":[[886,17]]}}}],["client_id",{"_index":283,"t":{"66":{"position":[[51,9]]},"171":{"position":[[51,9]]}}}],["client_secret",{"_index":284,"t":{"66":{"position":[[76,13]]},"171":{"position":[[76,13]]}}}],["client以广播的方式（封包的源地址为0.0.0.0目的地址为255.255.255.255）发出dhcp",{"_index":5673,"t":{"2197":{"position":[[7,54]]}}}],["client会以单播形式向dhcp",{"_index":5719,"t":{"2197":{"position":[[1025,17]]}}}],["client会以广播形式向dhcp",{"_index":5727,"t":{"2197":{"position":[[1205,17]]}}}],["client会发出一个广播的dhcp",{"_index":5695,"t":{"2197":{"position":[[462,18]]}}}],["client使用的ip地址，且dhcp",{"_index":5685,"t":{"2197":{"position":[[272,19]]}}}],["client则是使用udp",{"_index":5670,"t":{"2195":{"position":[[943,13]]}}}],["client区分不同的dhcp",{"_index":5687,"t":{"2197":{"position":[[327,15]]}}}],["client发现分配的ip地址已经被使用，则dhcp",{"_index":5710,"t":{"2197":{"position":[[796,26]]}}}],["client发送一个dhcp",{"_index":5680,"t":{"2197":{"position":[[185,14]]}}}],["client发送的dhcp",{"_index":5677,"t":{"2197":{"position":[[112,13]]}}}],["client只能处理其中的一个dhcp",{"_index":5691,"t":{"2197":{"position":[[392,19]]}}}],["client向dhcpserver发出dhcp",{"_index":5711,"t":{"2197":{"position":[[823,23]]}}}],["client响应一个dhcp",{"_index":5703,"t":{"2197":{"position":[[644,14]]}}}],["client在成功获取ip地址后，随时可以通过发送dhcp",{"_index":5715,"t":{"2197":{"position":[[911,29]]}}}],["client处理最先收到的dhcp",{"_index":5693,"t":{"2197":{"position":[[431,17]]}}}],["client成功收到dhcp",{"_index":5721,"t":{"2197":{"position":[[1079,14],[1259,14]]}}}],["client成功获得ip地址并根据ip地址使用租期自动启动续延过程；如果dhcp",{"_index":5709,"t":{"2197":{"position":[[755,40]]}}}],["client才会向dhcp",{"_index":5729,"t":{"2197":{"position":[[1382,13]]}}}],["client接收到dhcp",{"_index":5706,"t":{"2197":{"position":[[694,13]]}}}],["client继续使用这个ip",{"_index":5725,"t":{"2197":{"position":[[1166,17]]}}}],["client继续使用这个ip地址，直到ip地址使用租期到期时，dhcp",{"_index":5728,"t":{"2197":{"position":[[1346,35]]}}}],["cli是vue官方提供的脚手架，具有比较成熟的vue项目架构设计，而且会跟随vu",{"_index":3302,"t":{"1358":{"position":[[15,100]]}}}],["clock",{"_index":1951,"t":{"789":{"position":[[229,5]]},"851":{"position":[[54,5]]},"875":{"position":[[54,5]]},"877":{"position":[[43,11]]},"887":{"position":[[174,10]]}}}],["clock/index.css",{"_index":2138,"t":{"861":{"position":[[202,21]]},"867":{"position":[[720,21]]},"881":{"position":[[156,16]]}}}],["clock/index.html",{"_index":2157,"t":{"865":{"position":[[249,22]]},"867":{"position":[[1435,22]]},"881":{"position":[[116,17]]},"887":{"position":[[113,22]]}}}],["clock/index.j",{"_index":2145,"t":{"863":{"position":[[204,20]]},"867":{"position":[[1068,20]]},"881":{"position":[[137,15]]}}}],["clockweb",{"_index":2180,"t":{"885":{"position":[[5,8]]}}}],["clock写入js成功写入css成功写入html",{"_index":2168,"t":{"869":{"position":[[36,26]]}}}],["clone",{"_index":2739,"t":{"1124":{"position":[[54,7],[83,21]]},"1196":{"position":[[30,6]]}}}],["close",{"_index":3870,"t":{"1537":{"position":[[89,12]]}}}],["closeaccept",{"_index":5126,"t":{"2047":{"position":[[94,11]]}}}],["closed可用状态，开始建立tcp连接之前，服务器端的一个端口已经被被动打开（pass",{"_index":5798,"t":{"2232":{"position":[[0,61]]}}}],["closegraph",{"_index":436,"t":{"101":{"position":[[1194,34],[1377,13],[1542,13]]},"103":{"position":[[4497,22]]},"198":{"position":[[1194,34],[1377,13],[1542,13]]},"200":{"position":[[4497,22]]}}}],["cloud",{"_index":224,"t":{"45":{"position":[[222,20]]},"293":{"position":[[614,5]]},"376":{"position":[[574,5]]},"1872":{"position":[[641,5]]}}}],["cloud.databas",{"_index":4596,"t":{"1872":{"position":[[752,18]]}}}],["cloud.dynamic_current_env",{"_index":4594,"t":{"1872":{"position":[[703,25]]},"1874":{"position":[[65,25]]}}}],["cloud.getwxcontext",{"_index":4600,"t":{"1872":{"position":[[839,20]]}}}],["cloud.init",{"_index":4638,"t":{"1874":{"position":[[35,12]]}}}],["cloudfuct",{"_index":4589,"t":{"1872":{"position":[[528,13]]}}}],["cloudfunct",{"_index":2765,"t":{"1150":{"position":[[173,26]]}}}],["cloudfunctions文件夹下的文件上右键，上传并部署云函数。（cloudfunct",{"_index":2766,"t":{"1150":{"position":[[200,69]]}}}],["cloudfunctions文件夹中getopenid",{"_index":4612,"t":{"1872":{"position":[[1293,52]]}}}],["clsx",{"_index":2561,"t":{"1092":{"position":[[229,4]]}}}],["clsx';import",{"_index":2562,"t":{"1092":{"position":[[239,13]]}}}],["cluster",{"_index":222,"t":{"45":{"position":[[125,7],[149,7]]}}}],["cluster0",{"_index":237,"t":{"49":{"position":[[6,8]]}}}],["cmd",{"_index":2491,"t":{"1045":{"position":[[72,14]]}}}],["cmd控制台，输入ping",{"_index":5952,"t":{"2287":{"position":[[57,15]]}}}],["cmp协议主要用来检测网络通信故障和实现链路追踪，最典型的应用就是ping和traceroout",{"_index":5735,"t":{"2200":{"position":[[50,50]]}}}],["cmy）彩色模型是彩色图象印刷行业使用的彩色空间，在cmi",{"_index":6066,"t":{"2426":{"position":[[0,91]]}}}],["cn",{"_index":678,"t":{"177":{"position":[[176,2]]},"186":{"position":[[26,2]]},"192":{"position":[[54,2],[132,2]]},"217":{"position":[[180,2]]},"219":{"position":[[176,2]]},"228":{"position":[[26,2]]},"234":{"position":[[54,2],[132,2]]},"1027":{"position":[[198,2]]},"1037":{"position":[[201,2]]},"1115":{"position":[[133,2],[262,2]]},"1163":{"position":[[176,2]]},"1172":{"position":[[26,2]]},"1178":{"position":[[54,2],[132,2]]},"1511":{"position":[[402,2]]},"1565":{"position":[[80,4]]},"1572":{"position":[[112,5]]},"1905":{"position":[[426,2]]},"2138":{"position":[[1213,2]]},"2273":{"position":[[175,2],[292,2]]}}}],["cn/\">mozilla",{"_index":3930,"t":{"1568":{"position":[[47,12]]}}}],["cn/docs/glossari",{"_index":3978,"t":{"1592":{"position":[[46,17],[177,18]]}}}],["cn/docusauru",{"_index":2516,"t":{"1056":{"position":[[28,13]]},"1058":{"position":[[159,13]]}}}],["cn/draw",{"_index":396,"t":{"97":{"position":[[45,10]]},"99":{"position":[[29,10]]},"196":{"position":[[29,10]]}}}],["cname",{"_index":1904,"t":{"757":{"position":[[372,5]]}}}],["cno",{"_index":1903,"t":{"757":{"position":[[368,3],[451,3],[651,3]]}}}],["code",{"_index":596,"t":{"126":{"position":[[356,4]]},"303":{"position":[[35,4]]},"946":{"position":[[379,5]]},"1094":{"position":[[346,4],[392,4],[726,4]]},"1118":{"position":[[419,6]]},"1312":{"position":[[655,4],[743,5]]},"2010":{"position":[[54,7]]},"2534":{"position":[[590,11]]},"2543":{"position":[[590,11]]},"2552":{"position":[[590,11]]}}}],["code.c_str",{"_index":492,"t":{"103":{"position":[[1935,15]]},"200":{"position":[[1935,15]]}}}],["code.fun",{"_index":607,"t":{"142":{"position":[[64,16]]}}}],["code>docs</cod",{"_index":2611,"t":{"1092":{"position":[[2708,17]]}}}],["codefun",{"_index":601,"t":{"128":{"position":[[91,7]]},"130":{"position":[[87,7]]},"140":{"position":[[0,7]]},"142":{"position":[[103,8],[226,7]]}}}],["codefunct",{"_index":4198,"t":{"1665":{"position":[[143,12],[440,12]]}}}],["codesandbox",{"_index":3084,"t":{"1312":{"position":[[844,11]]}}}],["codespac",{"_index":1089,"t":{"355":{"position":[[129,49]]}}}],["code”下拉菜单中，选择download",{"_index":2760,"t":{"1148":{"position":[[52,27]]}}}],["coding过程，最后部署到线上。我们会写web网页，但是要想让我们可以通过网页访问，我们需要一个服务器，很长一段时间内，无论大小网页都需要服务器来处理，这个过程就是部署。但是，如果我们的是静态网页呢？不需要任何解析和数据交换，使用服务器还有意义吗？因此，静态网页托管服务出现了，很多大型互联网企业会为用户提供静态网页托管服务，并且大部分是免费的，省去了购买服务器和维护流程，部署上去就完事。github",{"_index":2729,"t":{"1118":{"position":[[0,233]]}}}],["col",{"_index":2620,"t":{"1092":{"position":[[3558,3]]},"1366":{"position":[[906,3],[2427,4],[2436,3],[2784,4]]}}}],["collaps",{"_index":4871,"t":{"1979":{"position":[[56,10],[102,8],[391,8],[465,8],[536,8],[556,8],[626,8],[646,8],[719,8],[739,8],[803,8],[1072,8],[1137,8],[1207,8],[1227,8],[1292,8],[1312,9],[1379,8],[1445,8],[1508,8],[1528,8],[1594,8],[1614,9],[1681,8],[1747,8],[1813,8],[1833,8],[1897,8],[1917,9],[2556,8]]}}}],["collapse></view><view",{"_index":4893,"t":{"1979":{"position":[[823,21]]}}}],["collect",{"_index":4626,"t":{"1872":{"position":[[2217,10],[2281,10]]}}}],["collection.where(condit",{"_index":4625,"t":{"1872":{"position":[[2180,27]]}}}],["collid",{"_index":1086,"t":{"312":{"position":[[13,8],[33,8]]}}}],["color",{"_index":41,"t":{"10":{"position":[[720,6]]},"14":{"position":[[61,6]]},"853":{"position":[[387,6],[807,5]]},"1094":{"position":[[93,5],[123,5],[158,5],[195,5],[233,5],[269,5],[307,5],[454,5],[484,5],[519,5],[556,5],[594,5],[630,5],[668,5],[1037,6],[1124,5],[1169,5],[1213,5],[1255,5],[1293,5],[1334,5],[1377,5],[1495,5],[1525,5],[1560,5],[1597,5],[1635,5],[1671,5],[1709,5],[1853,5],[1883,5],[1918,5],[1955,5],[1993,5],[2029,5],[2067,5],[2128,5],[2158,5],[2193,5],[2230,5],[2268,5],[2304,5],[2342,5]]},"1096":{"position":[[413,6],[430,5],[457,5]]},"1279":{"position":[[374,6]]},"1281":{"position":[[390,6]]},"1366":{"position":[[156,6],[851,6]]},"1380":{"position":[[143,6],[329,6]]},"1515":{"position":[[843,6],[1044,6],[1268,6],[1478,6]]},"1518":{"position":[[212,6],[384,6]]},"1933":{"position":[[66,8]]},"1960":{"position":[[271,6]]},"1979":{"position":[[2367,6],[2438,6],[2591,6],[2650,6]]},"2509":{"position":[[722,5]]}}}],["color:\"whit",{"_index":4169,"t":{"1651":{"position":[[179,15]]}}}],["color:green",{"_index":3863,"t":{"1532":{"position":[[79,13]]}}}],["color=\"#f2826a",{"_index":4902,"t":{"1979":{"position":[[1020,15]]}}}],["color=\"rgb(130",{"_index":4899,"t":{"1979":{"position":[[973,15]]}}}],["colubris</i",{"_index":4032,"t":{"1618":{"position":[[72,13]]}}}],["column",{"_index":4867,"t":{"1976":{"position":[[101,7]]}}}],["com.android.builder.testing.api.deviceexcept",{"_index":930,"t":{"273":{"position":[[107,48]]}}}],["com.android.ddmlib.installexcept",{"_index":931,"t":{"273":{"position":[[156,36]]}}}],["com.jetzihan.day1;import",{"_index":1163,"t":{"388":{"position":[[424,24]]}}}],["com.jetzihan.day1;publ",{"_index":1156,"t":{"388":{"position":[[137,24]]}}}],["com.jetzihan.m2;//显示字符’α’在unicode表中的位置，显示以字符’α’开始的25个字符publ",{"_index":1588,"t":{"565":{"position":[[465,61]]}}}],["com.jetzihan.m2;publ",{"_index":1724,"t":{"616":{"position":[[68,22]]}}}],["comet",{"_index":2718,"t":{"1108":{"position":[[195,6]]}}}],["cometfrequ",{"_index":2716,"t":{"1108":{"position":[[147,14]]}}}],["command",{"_index":951,"t":{"278":{"position":[[150,7]]}}}],["comment",{"_index":589,"t":{"126":{"position":[[234,7]]}}}],["commit",{"_index":554,"t":{"120":{"position":[[29,6],[101,6],[214,6]]},"122":{"position":[[25,6],[97,6],[210,6]]},"124":{"position":[[131,6]]},"126":{"position":[[0,6]]}}}],["committe",{"_index":6282,"t":{"2509":{"position":[[547,10]]}}}],["commun",{"_index":1798,"t":{"648":{"position":[[81,9]]},"1017":{"position":[[2287,12]]}}}],["compareto",{"_index":1388,"t":{"488":{"position":[[0,11],[114,10]]}}}],["compat",{"_index":2035,"t":{"853":{"position":[[163,11]]},"1515":{"position":[[84,11]]}}}],["compon",{"_index":597,"t":{"126":{"position":[[364,9]]},"1235":{"position":[[36,50],[141,10]]},"1364":{"position":[[256,21]]},"1368":{"position":[[443,10],[497,10],[555,10],[608,10],[662,10],[716,10],[771,10]]},"1377":{"position":[[158,11],[237,9],[268,10],[350,9],[401,10]]},"1445":{"position":[[36,9],[88,10],[203,9],[310,10]]}}}],["component_label",{"_index":3857,"t":{"1528":{"position":[[82,15]]}}}],["component_titl",{"_index":3858,"t":{"1528":{"position":[[100,15]]}}}],["componentdidmount",{"_index":3052,"t":{"1297":{"position":[[405,35]]},"1299":{"position":[[376,19]]},"1301":{"position":[[307,17]]}}}],["components;@tailwind",{"_index":354,"t":{"86":{"position":[[68,20]]}}}],["componentwillunmount",{"_index":3053,"t":{"1297":{"position":[[523,52]]}}}],["comprehens",{"_index":900,"t":{"257":{"position":[[412,30]]}}}],["comput",{"_index":1157,"t":{"388":{"position":[[168,7]]},"1412":{"position":[[187,9]]},"1414":{"position":[[396,9]]},"1416":{"position":[[540,9]]},"1418":{"position":[[42,12]]},"1437":{"position":[[150,12]]}}}],["computearea",{"_index":1264,"t":{"439":{"position":[[258,12]]}}}],["computegirth",{"_index":1266,"t":{"439":{"position":[[303,13]]}}}],["com、.cn、.edu、.net、.org",{"_index":5228,"t":{"2066":{"position":[[306,83]]}}}],["com更好记，但其主机名的规范服务器主机名可能更为复杂，dn",{"_index":5224,"t":{"2064":{"position":[[468,52]]}}}],["concat",{"_index":1776,"t":{"625":{"position":[[88,8]]},"1283":{"position":[[187,6]]},"1779":{"position":[[0,8],[172,8],[204,8]]},"1848":{"position":[[0,8],[94,8]]}}}],["concern",{"_index":2692,"t":{"1096":{"position":[[304,9]]}}}],["condit",{"_index":4627,"t":{"1872":{"position":[[2254,10]]}}}],["config",{"_index":362,"t":{"90":{"position":[[136,6]]},"1017":{"position":[[238,6],[557,7],[2881,7]]},"1106":{"position":[[102,6],[139,6],[159,9]]},"1108":{"position":[[2,6]]}}}],["configur",{"_index":2518,"t":{"1058":{"position":[[79,15]]},"2195":{"position":[[24,13]]}}}],["confirmbuttontext",{"_index":3237,"t":{"1342":{"position":[[1529,18]]}}}],["conflict（黄色的c",{"_index":4712,"t":{"1913":{"position":[[166,57]]}}}],["connect",{"_index":227,"t":{"47":{"position":[[3,16],[23,7]]}}}],["connection字段，可看到http报文采用keep",{"_index":5959,"t":{"2287":{"position":[[372,30]]}}}],["consol",{"_index":2229,"t":{"930":{"position":[[150,7]]}}}],["console.log",{"_index":1992,"t":{"823":{"position":[[35,25]]},"825":{"position":[[250,25]]},"827":{"position":[[61,25]]},"831":{"position":[[401,25]]},"833":{"position":[[281,25]]},"879":{"position":[[229,17]]},"939":{"position":[[174,13],[400,13],[738,13]]},"941":{"position":[[108,19],[165,18]]},"948":{"position":[[83,18],[120,23]]},"950":{"position":[[318,22],[372,20],[468,19],[652,19],[853,20],[876,20]]},"953":{"position":[[206,19],[263,18]]},"955":{"position":[[307,19],[364,18]]},"973":{"position":[[202,18]]},"1342":{"position":[[1873,21]]},"1671":{"position":[[76,11]]},"1679":{"position":[[8,11]]},"1876":{"position":[[660,11]]}}}],["console.log(\"express",{"_index":1933,"t":{"782":{"position":[[198,26]]},"789":{"position":[[424,26]]},"810":{"position":[[647,26]]},"825":{"position":[[454,26]]},"831":{"position":[[637,26]]},"833":{"position":[[515,26]]},"847":{"position":[[474,26],[832,26]]}}}],["console.log(\"hello",{"_index":2227,"t":{"930":{"position":[[80,18]]},"971":{"position":[[124,18]]},"973":{"position":[[132,18]]}}}],["console.log(\"openid",{"_index":4621,"t":{"1872":{"position":[[1974,20]]}}}],["console.log(\"serv",{"_index":2200,"t":{"908":{"position":[[609,19]]},"910":{"position":[[677,19]]},"914":{"position":[[556,19]]}}}],["console.log(\"写入css",{"_index":2140,"t":{"861":{"position":[[295,23]]},"867":{"position":[[813,23]]}}}],["console.log(\"写入html",{"_index":2158,"t":{"865":{"position":[[344,24]]},"867":{"position":[[1530,24]]}}}],["console.log(\"写入j",{"_index":2146,"t":{"863":{"position":[[296,22]]},"867":{"position":[[1159,22]]}}}],["console.log(\"处理后的字符串\\n",{"_index":2273,"t":{"950":{"position":[[749,23]]}}}],["console.log(\"读取html",{"_index":2127,"t":{"859":{"position":[[141,25]]},"867":{"position":[[362,25]]}}}],["console.log(\"调用了m1",{"_index":2290,"t":{"964":{"position":[[40,25]]}}}],["console.log(\"路由级中间件\");0",{"_index":2013,"t":{"843":{"position":[[75,23]]}}}],["console.log(\"这是一个中间件函数1",{"_index":2000,"t":{"829":{"position":[[56,26]]}}}],["console.log(\"这是一个中间件函数2",{"_index":2002,"t":{"829":{"position":[[129,26]]}}}],["console.log('a",{"_index":3528,"t":{"1406":{"position":[[222,14]]},"1638":{"position":[[324,14],[361,14]]}}}],["console.log('express",{"_index":1916,"t":{"773":{"position":[[103,20]]}}}],["console.log('form",{"_index":3046,"t":{"1295":{"position":[[427,17]]}}}],["console.log('hello",{"_index":318,"t":{"70":{"position":[[64,19],[120,19]]}}}],["console.log('http",{"_index":2191,"t":{"906":{"position":[[79,17]]}}}],["console.log('someon",{"_index":2188,"t":{"904":{"position":[[102,20]]}}}],["console.log('发生了错误错误'+err.messag",{"_index":2017,"t":{"845":{"position":[[190,35]]}}}],["console.log(__dirnam",{"_index":2282,"t":{"955":{"position":[[96,23]]}}}],["console.log(`click",{"_index":3033,"t":{"1291":{"position":[[123,21]]}}}],["console.log(a",{"_index":4047,"t":{"1622":{"position":[[216,15],[377,15]]},"1624":{"position":[[220,15]]}}}],["console.log(datastr",{"_index":2237,"t":{"939":{"position":[[201,23],[428,21],[766,21]]}}}],["console.log(err",{"_index":2236,"t":{"939":{"position":[[156,17],[382,17],[720,17]]},"946":{"position":[[87,20],[255,20]]}}}],["console.log(err.messag",{"_index":2139,"t":{"861":{"position":[[267,25]]},"863":{"position":[[268,25]]},"865":{"position":[[316,25]]},"867":{"position":[[785,25],[1131,25],[1502,25]]}}}],["console.log(exports);console.log(module.exports);console.log(export",{"_index":2319,"t":{"975":{"position":[[97,68]]}}}],["console.log(i",{"_index":4054,"t":{"1626":{"position":[[63,15],[212,15],[390,15],[606,15]]},"1628":{"position":[[237,15]]}}}],["console.log(item.index",{"_index":4745,"t":{"1924":{"position":[[551,23]]}}}],["console.log(item.pagepath",{"_index":4746,"t":{"1924":{"position":[[575,26]]}}}],["console.log(item.text",{"_index":4747,"t":{"1924":{"position":[[602,22]]}}}],["console.log(modul",{"_index":2300,"t":{"969":{"position":[[30,20]]}}}],["console.log(msg",{"_index":4730,"t":{"1922":{"position":[[276,16]]}}}],["console.log(obj",{"_index":206,"t":{"37":{"position":[[555,17]]}}}],["console.log(r",{"_index":4584,"t":{"1872":{"position":[[360,16],[2863,16]]},"1876":{"position":[[1461,16]]}}}],["console.log(req.bodi",{"_index":2026,"t":{"847":{"position":[[397,22],[755,22]]}}}],["console.log(req.param",{"_index":1944,"t":{"786":{"position":[[74,23],[244,23]]}}}],["console.log(req.queri",{"_index":1939,"t":{"784":{"position":[[155,24]]}}}],["console.log(res.data",{"_index":4830,"t":{"1964":{"position":[[517,22]]},"1966":{"position":[[179,21]]}}}],["console.log(ress",{"_index":4649,"t":{"1876":{"position":[[989,18]]},"1878":{"position":[[366,17]]}}}],["console.log(s",{"_index":3114,"t":{"1323":{"position":[[416,17]]}}}],["console.log(scen",{"_index":55,"t":{"10":{"position":[[1059,18]]}}}],["console.log(scene.children",{"_index":56,"t":{"10":{"position":[[1081,27]]}}}],["console.log(str",{"_index":2194,"t":{"908":{"position":[[216,19]]},"910":{"position":[[587,17]]}}}],["console.log(str);});server.listen(80",{"_index":2199,"t":{"908":{"position":[[563,37]]}}}],["console.log(this.a",{"_index":3532,"t":{"1406":{"position":[[411,19]]}}}],["console.log(this.id",{"_index":211,"t":{"37":{"position":[[718,21]]}}}],["console.log(this.result",{"_index":209,"t":{"37":{"position":[[635,25],[1102,25]]},"1323":{"position":[[860,25],[1128,27]]}}}],["console.log(username);</script",{"_index":2296,"t":{"966":{"position":[[152,31]]}}}],["console.log(vm.reversedmessag",{"_index":3546,"t":{"1412":{"position":[[402,31]]}}}],["const",{"_index":142,"t":{"31":{"position":[[633,5]]},"37":{"position":[[100,5],[500,5],[754,5],[1003,5]]},"773":{"position":[[3,7],[42,12]]},"782":{"position":[[56,12]]},"789":{"position":[[297,12]]},"810":{"position":[[227,11],[516,12],[548,11]]},"823":{"position":[[0,5]]},"825":{"position":[[125,12],[157,11],[204,12]]},"831":{"position":[[203,12],[235,11],[282,12],[344,5]]},"833":{"position":[[83,12],[115,11],[162,12],[224,5]]},"847":{"position":[[308,12],[642,12]]},"857":{"position":[[0,5]]},"861":{"position":[[44,5],[98,5]]},"863":{"position":[[43,5],[98,5]]},"865":{"position":[[73,5]]},"867":{"position":[[8,5],[531,5],[616,5],[909,5],[964,5],[1259,5]]},"879":{"position":[[0,5],[86,10]]},"881":{"position":[[68,5],[173,5]]},"900":{"position":[[18,5]]},"902":{"position":[[0,5]]},"908":{"position":[[134,5],[270,5],[417,5],[462,5],[489,5]]},"910":{"position":[[136,5],[289,5],[440,5],[485,5],[512,5]]},"912":{"position":[[102,5],[147,5],[174,5]]},"914":{"position":[[130,5],[258,5]]},"934":{"position":[[32,5]]},"939":{"position":[[44,5],[271,5],[609,5]]},"941":{"position":[[0,5]]},"946":{"position":[[0,5],[165,5]]},"950":{"position":[[207,5],[433,5],[511,5],[695,5]]},"953":{"position":[[91,5]]},"955":{"position":[[184,5]]},"962":{"position":[[29,5],[73,5],[119,5]]},"964":{"position":[[90,5]]},"971":{"position":[[40,5],[233,5]]},"980":{"position":[[0,5]]},"986":{"position":[[0,5],[199,5]]},"991":{"position":[[0,5]]},"996":{"position":[[0,5],[38,10]]},"1017":{"position":[[15,5],[232,5]]},"1092":{"position":[[803,5],[1250,5],[1719,5],[2214,5],[3041,5]]},"1223":{"position":[[3193,5],[3412,5]]},"1239":{"position":[[355,5],[619,5],[890,5],[1169,5]]},"1241":{"position":[[114,5],[262,5],[615,5],[896,5]]},"1248":{"position":[[1029,5],[1664,45]]},"1257":{"position":[[153,5]]},"1271":{"position":[[376,5]]},"1273":{"position":[[663,5]]},"1277":{"position":[[39,5]]},"1279":{"position":[[323,5]]},"1281":{"position":[[195,5],[337,7]]},"1283":{"position":[[211,5]]},"1323":{"position":[[287,5],[320,5],[378,5],[648,5],[667,5]]},"1325":{"position":[[99,14]]},"1353":{"position":[[500,5]]},"1628":{"position":[[0,5],[39,5],[63,5],[97,5],[121,5],[192,5],[208,6]]},"1630":{"position":[[22,7],[30,5]]},"1872":{"position":[[628,12],[732,14],[821,5],[1076,5],[2054,5]]},"1874":{"position":[[113,5]]},"1878":{"position":[[161,5]]},"1974":{"position":[[49,5]]},"1981":{"position":[[1796,5],[2047,5]]}}}],["constant",{"_index":4062,"t":{"1628":{"position":[[157,8],[281,8]]}}}],["constructor",{"_index":2835,"t":{"1223":{"position":[[2049,26]]},"1263":{"position":[[834,11]]},"1646":{"position":[[107,11]]}}}],["constructor(prop",{"_index":2819,"t":{"1223":{"position":[[589,18],[3091,18]]},"1239":{"position":[[136,18],[773,18]]},"1263":{"position":[[899,19],[1120,18],[1641,18]]},"1289":{"position":[[404,18]]}}}],["constructor方法，一旦定义，就必须使用spuer方法，这不是react规定的而是es6",{"_index":2958,"t":{"1263":{"position":[[970,72]]}}}],["contain",{"_index":3217,"t":{"1342":{"position":[[752,9]]},"1420":{"position":[[1178,7]]},"1515":{"position":[[954,10]]},"1518":{"position":[[122,10]]}}}],["container.getboundingclientrect",{"_index":3220,"t":{"1342":{"position":[[827,34]]}}}],["container.offsetheight",{"_index":3228,"t":{"1342":{"position":[[1052,23]]}}}],["container.offsetwidth",{"_index":3224,"t":{"1342":{"position":[[943,22]]}}}],["container::befor",{"_index":3837,"t":{"1515":{"position":[[1152,18]]},"1518":{"position":[[268,18]]}}}],["content",{"_index":302,"t":{"66":{"position":[[577,9]]},"171":{"position":[[577,9]]},"853":{"position":[[602,8]]},"914":{"position":[[283,7],[363,7],[424,7]]},"1248":{"position":[[339,8]]},"1399":{"position":[[1362,8]]},"1515":{"position":[[887,8],[1118,7],[1173,8]]},"1518":{"position":[[46,7],[289,8]]},"1537":{"position":[[191,32]]},"1557":{"position":[[23,7],[72,7]]},"1872":{"position":[[1378,8],[2545,8],[2908,8]]},"1876":{"position":[[140,11],[218,8],[420,8],[1112,8],[1506,8]]},"1960":{"position":[[211,8]]},"1964":{"position":[[436,8]]},"1966":{"position":[[123,8]]},"1976":{"position":[[138,8]]},"1979":{"position":[[2528,8]]},"2530":{"position":[[67,15]]},"2539":{"position":[[67,15]]},"2548":{"position":[[67,15]]}}}],["content\"><van",{"_index":4904,"t":{"1979":{"position":[[1058,13],[1365,13],[1667,13]]}}}],["content:this.data.cont",{"_index":4654,"t":{"1876":{"position":[[1370,25]]}}}],["content=\"chri",{"_index":3899,"t":{"1557":{"position":[[161,14]]}}}],["content=\"ie=edg",{"_index":2036,"t":{"853":{"position":[[175,18]]},"1515":{"position":[[96,18]]}}}],["content=\"th",{"_index":3902,"t":{"1557":{"position":[[208,12]]}}}],["content=\"width=devic",{"_index":2030,"t":{"853":{"position":[[91,21]]},"1515":{"position":[[137,21]]}}}],["content></app",{"_index":3496,"t":{"1399":{"position":[[1348,13]]}}}],["contentposition=\"left",{"_index":4956,"t":{"1981":{"position":[[92,22],[518,22],[881,22]]}}}],["context",{"_index":1035,"t":{"295":{"position":[[558,9]]},"380":{"position":[[645,9]]},"1872":{"position":[[807,8]]}}}],["continu",{"_index":730,"t":{"179":{"position":[[1110,8]]},"221":{"position":[[1110,8]]},"416":{"position":[[0,8],[49,12],[265,9]]},"1165":{"position":[[1110,8]]}}}],["contrast",{"_index":2663,"t":{"1094":{"position":[[925,8],[1102,8]]}}}],["control",{"_index":107,"t":{"25":{"position":[[352,8]]},"1353":{"position":[[24,8]]},"1585":{"position":[[28,9],[108,8],[142,8]]},"1587":{"position":[[7,8]]},"1590":{"position":[[7,9]]},"2200":{"position":[[24,7]]},"2247":{"position":[[39,7]]}}}],["controlinit",{"_index":3247,"t":{"1346":{"position":[[31,14]]}}}],["controls')(thre",{"_index":3298,"t":{"1353":{"position":[[543,18]]}}}],["controls')(three);...</script",{"_index":3287,"t":{"1353":{"position":[[128,30]]}}}],["controls.addeventlistener('chang",{"_index":112,"t":{"25":{"position":[[618,164]]}}}],["control，mac",{"_index":5266,"t":{"2104":{"position":[[49,24]]}}}],["cooki",{"_index":5141,"t":{"2051":{"position":[[0,18],[124,11]]}}}],["cool",{"_index":2399,"t":{"1017":{"position":[[308,6]]}}}],["copyright",{"_index":2463,"t":{"1017":{"position":[[2701,10],[2712,10]]},"1037":{"position":[[961,10],[972,10]]}}}],["copy发送给请求的brows",{"_index":5175,"t":{"2055":{"position":[[1143,18]]}}}],["cor",{"_index":158,"t":{"33":{"position":[[250,5]]},"762":{"position":[[102,4]]}}}],["corerot",{"_index":3778,"t":{"1507":{"position":[[999,11],[1035,12],[3661,10],[4101,10]]}}}],["corn",{"_index":993,"t":{"289":{"position":[[422,10],[709,5],[750,5],[787,5]]}}}],["corscors(app",{"_index":156,"t":{"33":{"position":[[214,13]]}}}],["corsimport",{"_index":240,"t":{"49":{"position":[[151,10]]}}}],["count",{"_index":521,"t":{"114":{"position":[[284,6],[356,5]]},"211":{"position":[[284,6],[356,5]]},"1613":{"position":[[230,8]]}}}],["count=\"2",{"_index":4972,"t":{"1981":{"position":[[1053,9]]}}}],["counter",{"_index":519,"t":{"114":{"position":[[209,7],[243,9]]},"211":{"position":[[209,7],[243,9]]}}}],["counterbutton",{"_index":3055,"t":{"1299":{"position":[[163,13]]}}}],["countri",{"_index":1311,"t":{"451":{"position":[[79,13]]}}}],["cout<<\"bingo",{"_index":5041,"t":{"2001":{"position":[[282,15]]}}}],["cout<<\"firstname\"<<firstname<<endl",{"_index":5058,"t":{"2003":{"position":[[550,35]]}}}],["cout<<\"lastnam",{"_index":5059,"t":{"2003":{"position":[[586,16]]}}}],["cout<<i+1",{"_index":5033,"t":{"1999":{"position":[[175,11]]}}}],["cover",{"_index":3808,"t":{"1511":{"position":[[470,6]]}}}],["cpu",{"_index":661,"t":{"159":{"position":[[81,36]]},"328":{"position":[[81,36]]}}}],["cpu的闲置状态，缩短cpu",{"_index":1333,"t":{"462":{"position":[[245,50]]}}}],["crawl",{"_index":793,"t":{"249":{"position":[[254,8]]},"363":{"position":[[547,8]]}}}],["crc",{"_index":5282,"t":{"2113":{"position":[[448,10]]},"2127":{"position":[[1566,167]]},"2247":{"position":[[1673,23]]}}}],["crc来检验数据是否正确，正确则响应ack",{"_index":5393,"t":{"2136":{"position":[[406,35]]}}}],["crc（4",{"_index":5357,"t":{"2127":{"position":[[800,9]]}}}],["crc（循环冗余检测）字段的目的是使得接收适配器（适配器b",{"_index":5358,"t":{"2127":{"position":[[810,42]]}}}],["creat",{"_index":219,"t":{"45":{"position":[[21,6],[118,6],[142,6]]},"698":{"position":[[79,6],[601,6]]},"700":{"position":[[43,6]]},"1088":{"position":[[91,6]]},"1122":{"position":[[75,9]]},"1190":{"position":[[91,9]]},"1248":{"position":[[4,6]]},"1406":{"position":[[124,7],[180,8],[396,8]]},"1420":{"position":[[791,8]]}}}],["createel",{"_index":2985,"t":{"1271":{"position":[[15,15],[144,13],[289,13],[338,13]]},"1273":{"position":[[535,13]]}}}],["createnebula",{"_index":2700,"t":{"1104":{"position":[[9,12]]}}}],["createnebula(el",{"_index":2707,"t":{"1104":{"position":[[150,21]]}}}],["credenti",{"_index":2547,"t":{"1084":{"position":[[326,12]]}}}],["credit(number类)，credit设置为0",{"_index":2771,"t":{"1152":{"position":[[116,26]]}}}],["crlf.crlf",{"_index":5194,"t":{"2057":{"position":[[770,16]]}}}],["cron",{"_index":981,"t":{"289":{"position":[[131,4],[217,5]]},"293":{"position":[[585,4]]},"295":{"position":[[736,4]]},"376":{"position":[[545,4]]},"380":{"position":[[826,4]]}}}],["csdn博主「程序媛_婷」，原文链接：https://blog.csdn.net/qq_41431406/article/details/97926927",{"_index":5825,"t":{"2236":{"position":[[1839,77]]}}}],["csdn夏2同学，http://t.csdn.cn/6pwj5",{"_index":733,"t":{"179":{"position":[[1299,33]]},"221":{"position":[[1299,33]]},"1165":{"position":[[1299,33]]}}}],["csma",{"_index":5381,"t":{"2136":{"position":[[0,9]]}}}],["csma(载波监听多路访问)是在aloha协议上面做了更多改进并且应用于现实中mac层截止访问控制（mac",{"_index":5312,"t":{"2119":{"position":[[1066,106]]}}}],["csma/ca",{"_index":5387,"t":{"2136":{"position":[[225,14],[687,33]]}}}],["csma/ca和csma/cd",{"_index":5397,"t":{"2136":{"position":[[566,18]]}}}],["csma/ca的检测方式也不同。csma/cd通过电缆中电压的变化来检测，当数据发生碰撞时，电缆中的电压就会随着发生变化;而csma/ca",{"_index":5399,"t":{"2136":{"position":[[746,72]]}}}],["csma/cd",{"_index":5311,"t":{"2119":{"position":[[1040,25],[1665,9]]},"2136":{"position":[[679,7],[721,24],[901,32]]}}}],["csma/cd与csma/ca机制都从属于csma",{"_index":5398,"t":{"2136":{"position":[[590,75]]}}}],["csma/cd检测冲突，csma/ca",{"_index":5401,"t":{"2136":{"position":[[858,42]]}}}],["css",{"_index":333,"t":{"74":{"position":[[47,3],[73,3]]},"92":{"position":[[426,3],[826,3],[937,3]]},"124":{"position":[[249,3]]},"851":{"position":[[41,3]]},"999":{"position":[[35,3]]},"1049":{"position":[[278,3]]},"1094":{"position":[[1069,3]]},"1096":{"position":[[74,22],[114,5]]},"1248":{"position":[[192,3]]},"1253":{"position":[[62,3]]},"1255":{"position":[[213,3]]},"1279":{"position":[[300,3]]},"1364":{"position":[[241,10]]},"1380":{"position":[[30,10],[52,6]]},"1384":{"position":[[30,3]]},"1474":{"position":[[116,3]]},"1476":{"position":[[156,3]]},"1518":{"position":[[0,3]]},"1520":{"position":[[17,3]]},"1522":{"position":[[16,3],[58,3]]},"1528":{"position":[[135,63]]},"1547":{"position":[[562,38]]},"1563":{"position":[[18,3],[237,3]]},"1587":{"position":[[280,3]]},"1592":{"position":[[426,3]]},"1613":{"position":[[148,7]]},"1825":{"position":[[144,33]]},"1829":{"position":[[21,3],[97,3],[239,3],[290,3]]},"1940":{"position":[[155,3]]},"1950":{"position":[[113,28]]},"1995":{"position":[[24,3],[47,18]]},"2005":{"position":[[0,14],[23,3],[79,3],[338,3]]},"2012":{"position":[[95,10]]}}}],["css3和es5",{"_index":648,"t":{"154":{"position":[[218,8]]},"323":{"position":[[218,8]]}}}],["csspano",{"_index":3305,"t":{"1360":{"position":[[55,7]]}}}],["css、支持任意框架（vue、react、angular",{"_index":334,"t":{"74":{"position":[[111,30]]}}}],["css代码以纯文本的方式读入function",{"_index":2161,"t":{"867":{"position":[[465,30]]}}}],["css技术也在不断发展。这篇文档将记录现代多种css",{"_index":3850,"t":{"1524":{"position":[[0,65]]}}}],["css是一个css样式库，它为我们提供了构建定制设计而无需使用自定义样式所需的所有构建块，在国外开发中十分流行。tailwind",{"_index":335,"t":{"76":{"position":[[14,64]]}}}],["css，或者是<i",{"_index":4019,"t":{"1609":{"position":[[134,18]]}}}],["csv",{"_index":215,"t":{"39":{"position":[[16,3],[70,3]]}}}],["ct",{"_index":5392,"t":{"2136":{"position":[[361,44]]}}}],["ctrl+",{"_index":4794,"t":{"1956":{"position":[[96,40]]},"1958":{"position":[[82,27]]}}}],["current",{"_index":562,"t":{"124":{"position":[[80,8]]}}}],["currenttimestamp",{"_index":3056,"t":{"1299":{"position":[[230,17],[434,17]]},"1301":{"position":[[161,17]]}}}],["custom",{"_index":2286,"t":{"962":{"position":[[79,6]]},"1006":{"position":[[710,8],[727,9]]},"1092":{"position":[[2874,9]]},"1106":{"position":[[132,6]]},"1933":{"position":[[795,9]]}}}],["custom.css",{"_index":2507,"t":{"1049":{"position":[[290,10]]}}}],["customcss",{"_index":2442,"t":{"1017":{"position":[[1686,10]]},"1039":{"position":[[597,10]]}}}],["cv.imread('1.jpg",{"_index":6106,"t":{"2443":{"position":[[326,18]]}}}],["cv2",{"_index":6098,"t":{"2443":{"position":[[208,3]]}}}],["cvimport",{"_index":6099,"t":{"2443":{"position":[[215,8]]}}}],["cwnd",{"_index":5820,"t":{"2236":{"position":[[952,35]]}}}],["cwnd只能线性加一，而不是像慢开始算法时，每个传输轮次，拥塞窗口cwnd按指数增长。同理，16+1……直至到达24，假设24个报文段在传输过程中丢失4个，接收方只收到20个报文段，给发送方依次回复20个确认报文段，一段时间后，丢失的4个报文段的重传计时器超时了，发送发判断可能出现拥塞，更改cwnd和ssthresh",{"_index":5821,"t":{"2236":{"position":[[998,190]]}}}],["cwnd的值为1，而发送窗口swnd等于拥塞窗口cwnd，因此发送方当前只能发送一个数据报文段（拥塞窗口cwnd的值是几，就能发送几个数据报文段），接收方收到该数据报文段后，给发送方回复一个确认报文段，发送方收到该确认报文后，将拥塞窗口的值变为2",{"_index":5818,"t":{"2236":{"position":[[596,135]]}}}],["cwnd的值被设置为1，还需设置慢开始门限ssthresh,在执行慢开始算法时，发送方每收到一个对新报文段的确认时，就把拥塞窗口cwnd的值加一，然后开始下一轮的传输，当拥塞窗口cwnd",{"_index":5817,"t":{"2236":{"position":[[470,118]]}}}],["czh",{"_index":1777,"t":{"625":{"position":[[232,7]]}}}],["czhorange@foxmail.com",{"_index":5089,"t":{"2020":{"position":[[5,21]]}}}],["c}r",{"_index":1823,"t":{"681":{"position":[[250,3]]}}}],["c、3)a",{"_index":786,"t":{"245":{"position":[[971,5]]},"257":{"position":[[917,5]]}}}],["c是a",{"_index":5386,"t":{"2136":{"position":[[205,19]]}}}],["c正在与b通信发送数据，而a无法知道bc",{"_index":5385,"t":{"2136":{"position":[[163,41]]}}}],["c的语法规则。不支持goto，删除了c++中的运算符重载和多重继承的内容。删除了对指针的直接引用，java",{"_index":1331,"t":{"462":{"position":[[0,77]]}}}],["c类地址：网络位24位主机位8位，容纳主机数位2的8次方减2=254（这就是为什么咱们使用c类地址，比如192.168.1.网络地址的设置范围是从1到254了，因为网络地址1.0和广播地址1.255不可用），子网数位2的6",{"_index":5575,"t":{"2173":{"position":[[835,114]]}}}],["c语言中的for",{"_index":5029,"t":{"1999":{"position":[[0,27]]}}}],["d",{"_index":342,"t":{"82":{"position":[[26,1]]},"245":{"position":[[986,2]]},"251":{"position":[[214,4]]},"253":{"position":[[65,1]]},"257":{"position":[[932,2]]},"310":{"position":[[14,1]]},"426":{"position":[[1006,3]]},"498":{"position":[[88,1]]},"500":{"position":[[111,2],[155,2],[312,1]]},"502":{"position":[[58,2],[174,1]]},"504":{"position":[[187,2],[212,1],[361,1]]},"510":{"position":[[43,2]]},"512":{"position":[[24,2]]},"516":{"position":[[23,2]]},"627":{"position":[[208,3],[335,3]]},"652":{"position":[[80,1]]},"658":{"position":[[125,9]]},"986":{"position":[[80,6]]},"1928":{"position":[[780,9]]},"2173":{"position":[[450,1]]},"2214":{"position":[[285,1],[420,1],[563,1]]},"2373":{"position":[[38,2]]},"2439":{"position":[[150,10]]}}}],["d(p,q)+d(q,r",{"_index":6083,"t":{"2439":{"position":[[130,15]]}}}],["d(uz)=min{c(uv)+d(vz),c(ux)+d(xz),c(uw)+d(wz)}=min{2+5,1+3,5+3}=4；故而使用x",{"_index":5748,"t":{"2208":{"position":[[140,77]]}}}],["d(xy)=min{c(x,v)+d(vy)}，由邻居告知我它到达i",{"_index":5746,"t":{"2208":{"position":[[42,38]]}}}],["d(xy)为x到i",{"_index":5745,"t":{"2208":{"position":[[23,18]]}}}],["d.weekday",{"_index":821,"t":{"253":{"position":[[101,11]]}}}],["d1",{"_index":1803,"t":{"654":{"position":[[90,2]]}}}],["d1,d2,...,dn",{"_index":1793,"t":{"644":{"position":[[121,12]]}}}],["d1,d2,…,dn",{"_index":1806,"t":{"654":{"position":[[185,12]]}}}],["d1,d2,…,dn，其笛卡尔积d1×d2×…×dn是由d1中的每个元素d1与d2中的每个元素d2,…,dn中的每个元素dn组成的有序对(d1,d2,…,dn",{"_index":1802,"t":{"654":{"position":[[0,89]]}}}],["d1={李力，王平，刘伟}，d2={男，女}，则d1×d2",{"_index":1811,"t":{"654":{"position":[[317,58]]}}}],["d1×d2",{"_index":1812,"t":{"654":{"position":[[376,5]]}}}],["d1×d2×…×dn上的关系r(d1,d2,…,dn)被称为定义在域d1,d2,…,dn上的n",{"_index":1814,"t":{"656":{"position":[[85,55]]}}}],["d1称为元组的第一个分量，d2称为元组的第二个分量，…，dn称为元组的第n",{"_index":1807,"t":{"654":{"position":[[198,54]]}}}],["d1表示信号在任意两个适配器之间传播的最大时间，d2",{"_index":5317,"t":{"2119":{"position":[[1675,48]]}}}],["d2",{"_index":5333,"t":{"2125":{"position":[[835,2]]}}}],["d4",{"_index":6089,"t":{"2441":{"position":[[8,7]]}}}],["d8",{"_index":6088,"t":{"2441":{"position":[[0,7]]}}}],["d9deac31df566efd2909647e20c4031.png](https://jetzihan",{"_index":5422,"t":{"2138":{"position":[[1149,55]]}}}],["d:\\\\desk\\\\frontend\\\\node_modul",{"_index":2307,"t":{"969":{"position":[[317,35]]}}}],["d:\\\\desk\\\\frontend\\\\test\\\\8",{"_index":2301,"t":{"969":{"position":[[87,28],[144,28],[227,28]]}}}],["d:\\\\desk\\\\frontend\\\\test\\\\node_modul",{"_index":2306,"t":{"969":{"position":[[275,41]]}}}],["d:\\\\desk\\\\node_modul",{"_index":2308,"t":{"969":{"position":[[353,25]]}}}],["d:\\\\node_modul",{"_index":2309,"t":{"969":{"position":[[379,18]]}}}],["d:\\desk\\frontend\\test\\8",{"_index":2167,"t":{"869":{"position":[[3,23]]},"941":{"position":[[271,24]]},"955":{"position":[[139,23]]}}}],["d:\\desk\\test",{"_index":3303,"t":{"1360":{"position":[[0,22]]}}}],["d:\\desk\\testvu",{"_index":3304,"t":{"1360":{"position":[[26,15]]}}}],["d=下取整[(m",{"_index":5544,"t":{"2169":{"position":[[676,8]]}}}],["da",{"_index":6244,"t":{"2471":{"position":[[110,2]]}}}],["dahl于2009年发布了javascript的服务器端运行环境nodejs。它基于谷歌浏览器广受好评的javascript引擎–v8引擎，是一个事件驱动的非阻塞i/o模型。它将所有的客户端请求都交给事件循环机制来处理，从而将i/o代价降到极低。由于单线程的语言机制，它不需要处理复杂的线程同步问题，更不会发生死锁等线程问题。随着es6规范中web",{"_index":663,"t":{"159":{"position":[[282,174]]},"328":{"position":[[282,174]]}}}],["daisi",{"_index":385,"t":{"92":{"position":[[967,11],[1029,5]]}}}],["daisyui",{"_index":331,"t":{"74":{"position":[[16,7]]},"80":{"position":[[30,7]]},"84":{"position":[[6,7],[44,7]]},"86":{"position":[[275,7]]},"90":{"position":[[28,7],[79,7],[128,7],[154,8]]},"92":{"position":[[530,7],[755,7],[951,7]]},"95":{"position":[[2,7],[77,7]]}}}],["daisyuius",{"_index":340,"t":{"78":{"position":[[54,10]]}}}],["danger",{"_index":750,"t":{"236":{"position":[[0,6]]},"266":{"position":[[0,6]]},"1373":{"position":[[294,8],[512,8],[622,8],[855,8]]},"1375":{"position":[[143,8]]},"1483":{"position":[[224,6]]},"1881":{"position":[[0,6]]},"1989":{"position":[[0,6]]},"2005":{"position":[[56,6]]}}}],["danger\"></div",{"_index":3434,"t":{"1375":{"position":[[181,14]]}}}],["dark",{"_index":370,"t":{"90":{"position":[[265,7]]},"92":{"position":[[634,7],[642,25],[690,33]]},"1017":{"position":[[2186,7]]},"1037":{"position":[[480,7]]},"1094":{"position":[[137,5],[498,5],[784,4],[1047,4],[1307,4],[1539,5],[1897,5],[2172,5]]},"1096":{"position":[[353,4]]}}}],["darkcodethem",{"_index":2394,"t":{"1017":{"position":[[109,13],[2841,14]]},"1037":{"position":[[1101,14]]}}}],["darker",{"_index":2639,"t":{"1094":{"position":[[172,7],[533,7],[1348,6],[1574,7],[1932,7],[2207,7]]}}}],["darkest",{"_index":2641,"t":{"1094":{"position":[[209,8],[570,8],[1391,7],[1611,8],[1969,8],[2244,8]]}}}],["darkthem",{"_index":369,"t":{"90":{"position":[[254,10]]},"92":{"position":[[606,10]]},"1017":{"position":[[2830,10]]},"1037":{"position":[[1090,10]]}}}],["dashboard",{"_index":2556,"t":{"1088":{"position":[[202,28]]}}}],["dat",{"_index":6237,"t":{"2469":{"position":[[795,12]]},"2527":{"position":[[167,5]]}}}],["data",{"_index":145,"t":{"31":{"position":[[694,5],[793,4]]},"37":{"position":[[578,4],[1054,4]]},"114":{"position":[[255,5],[850,6]]},"211":{"position":[[255,5],[850,6]]},"295":{"position":[[370,4]]},"380":{"position":[[442,4]]},"695":{"position":[[102,4]]},"944":{"position":[[19,4],[81,4]]},"1096":{"position":[[364,7]]},"1319":{"position":[[0,6]]},"1373":{"position":[[326,5],[332,5],[579,5],[726,5]]},"1375":{"position":[[94,5]]},"1380":{"position":[[199,5],[306,5]]},"1393":{"position":[[112,5],[525,5]]},"1395":{"position":[[105,5],[455,5]]},"1397":{"position":[[188,5],[562,5]]},"1399":{"position":[[947,5]]},"1404":{"position":[[18,4],[122,4],[176,5],[182,8],[365,4],[507,5],[724,5],[980,4],[1030,5],[1055,4]]},"1406":{"position":[[164,5]]},"1412":{"position":[[159,5]]},"1416":{"position":[[210,5],[495,5]]},"1420":{"position":[[533,5]]},"1424":{"position":[[241,5],[547,5]]},"1426":{"position":[[150,5]]},"1437":{"position":[[117,5],[382,5]]},"1445":{"position":[[1100,5]]},"1472":{"position":[[805,5],[1745,5]]},"1493":{"position":[[226,4]]},"1872":{"position":[[1687,5],[2646,4],[2680,5]]},"1876":{"position":[[132,5],[1255,4],[1289,5]]},"1898":{"position":[[522,5]]},"1900":{"position":[[236,5]]},"1918":{"position":[[447,5],[498,4],[716,4]]},"1922":{"position":[[321,5],[513,4]]},"1924":{"position":[[48,5],[76,6],[697,4]]},"1964":{"position":[[136,5]]},"1966":{"position":[[7,5]]},"1979":{"position":[[2854,5]]},"1981":{"position":[[1334,5]]},"1999":{"position":[[99,5]]},"2001":{"position":[[198,5]]},"2003":{"position":[[328,5]]},"2055":{"position":[[476,4],[481,4]]},"2057":{"position":[[1055,4],[1273,17]]},"2263":{"position":[[16,4]]},"2534":{"position":[[320,8]]},"2543":{"position":[[320,8]]},"2552":{"position":[[320,8]]}}}],["data.a",{"_index":3507,"t":{"1404":{"position":[[230,6],[296,12]]}}}],["data.id",{"_index":126,"t":{"31":{"position":[[212,20]]}}}],["data.length",{"_index":4632,"t":{"1872":{"position":[[2441,11]]}}}],["data.var",{"_index":4716,"t":{"1918":{"position":[[383,8]]}}}],["data=\"{{...staffa}}\"></template><templ",{"_index":5045,"t":{"2003":{"position":[[164,41]]}}}],["data=\"{{...staffb}}\"></template><templ",{"_index":5046,"t":{"2003":{"position":[[221,41]]}}}],["data=\"{{...staffc}}\"></templ",{"_index":5047,"t":{"2003":{"position":[[278,32]]}}}],["data=data",{"_index":1033,"t":{"295":{"position":[[517,11]]},"380":{"position":[[604,11]]}}}],["data=param",{"_index":309,"t":{"66":{"position":[[668,12]]},"171":{"position":[[668,12]]}}}],["data[0",{"_index":4647,"t":{"1876":{"position":[[744,7]]}}}],["databas",{"_index":1787,"t":{"634":{"position":[[0,78]]},"639":{"position":[[8,13]]},"695":{"position":[[6,8]]},"698":{"position":[[86,8],[608,8]]},"700":{"position":[[10,8],[50,8]]},"703":{"position":[[0,14]]},"707":{"position":[[134,15]]},"711":{"position":[[0,24]]},"1860":{"position":[[13,13]]}}}],["databaseadd",{"_index":1873,"t":{"700":{"position":[[107,11]]}}}],["datafram",{"_index":6123,"t":{"2443":{"position":[[692,9]]}}}],["dataframe.plot.bar(width=1.1",{"_index":6127,"t":{"2443":{"position":[[784,29]]}}}],["datagram",{"_index":5867,"t":{"2250":{"position":[[16,8]]}}}],["datastr",{"_index":2126,"t":{"859":{"position":[[104,8]]},"867":{"position":[[325,8]]},"883":{"position":[[61,8]]},"939":{"position":[[32,7],[341,8],[679,8]]},"941":{"position":[[70,8],[186,9]]},"950":{"position":[[277,8],[395,9]]},"953":{"position":[[168,8],[284,9]]},"955":{"position":[[269,8],[385,9]]}}}],["datastr.split",{"_index":2266,"t":{"950":{"position":[[448,15]]}}}],["datatyp",{"_index":1630,"t":{"592":{"position":[[20,10],[47,12],[78,12]]},"594":{"position":[[110,15]]}}}],["datatype[arrarys",{"_index":1634,"t":{"594":{"position":[[85,21]]}}}],["data})vm.$data",{"_index":3522,"t":{"1404":{"position":[[1036,14]]}}}],["data中，方便threej",{"_index":3086,"t":{"1317":{"position":[[0,53]]}}}],["data长度是否为0，如果为0",{"_index":4648,"t":{"1876":{"position":[[924,45]]}}}],["data）byt",{"_index":6200,"t":{"2454":{"position":[[1760,9]]}}}],["date",{"_index":462,"t":{"103":{"position":[[475,5]]},"200":{"position":[[475,5]]},"359":{"position":[[175,7],[468,7],[651,7]]},"853":{"position":[[1092,6]]},"1006":{"position":[[417,9]]},"1299":{"position":[[252,7],[456,6]]},"1301":{"position":[[150,6]]},"1487":{"position":[[416,4]]},"1898":{"position":[[364,4],[530,5],[668,4],[792,5]]}}}],["date().getfullyear",{"_index":2464,"t":{"1017":{"position":[[2731,21]]},"1037":{"position":[[991,21]]}}}],["date().tolocalestr",{"_index":3465,"t":{"1393":{"position":[[557,23]]}}}],["date(d",{"_index":4694,"t":{"1898":{"position":[[679,11]]}}}],["date.getmonth",{"_index":4695,"t":{"1898":{"position":[[698,18]]}}}],["date.now",{"_index":2004,"t":{"831":{"position":[[357,11]]},"833":{"position":[[237,11]]},"1289":{"position":[[449,11]]},"1414":{"position":[[376,10],[434,10]]}}}],["date.now;myarray[1",{"_index":4324,"t":{"1751":{"position":[[107,19]]}}}],["datetim",{"_index":810,"t":{"251":{"position":[[53,8],[73,8]]}}}],["datetime.datetime.now",{"_index":813,"t":{"251":{"position":[[128,23]]},"253":{"position":[[69,23]]},"255":{"position":[[136,24],[1569,23]]},"363":{"position":[[1151,24]]}}}],["datetime.datetime.strptime('00:00:00",{"_index":1121,"t":{"363":{"position":[[2137,38]]}}}],["datetime.datetime.strptime('01:50:00",{"_index":1122,"t":{"363":{"position":[[2193,38]]}}}],["datetime.datetime.strptime('05:30:00",{"_index":1123,"t":{"363":{"position":[[2249,38]]}}}],["datetime.datetime.strptime('07:20:00",{"_index":1124,"t":{"363":{"position":[[2305,38]]}}}],["datetime.datetime.strptime('08:00:00",{"_index":855,"t":{"255":{"position":[[792,38]]},"363":{"position":[[1806,38]]}}}],["datetime.datetime.strptime('08:30:00",{"_index":887,"t":{"255":{"position":[[2026,38]]}}}],["datetime.datetime.strptime('09:50:00",{"_index":857,"t":{"255":{"position":[[848,38],[2083,38]]},"363":{"position":[[1862,38]]}}}],["datetime.datetime.strptime('10:30:00",{"_index":1125,"t":{"363":{"position":[[2361,38]]}}}],["datetime.datetime.strptime('13:30:00",{"_index":859,"t":{"255":{"position":[[904,38],[2140,38]]},"363":{"position":[[1918,38]]}}}],["datetime.datetime.strptime('15:20:00",{"_index":861,"t":{"255":{"position":[[960,38],[2197,38]]},"363":{"position":[[1974,38]]}}}],["datetime.datetime.strptime('18:30:00",{"_index":863,"t":{"255":{"position":[[1016,38],[2254,38]]},"363":{"position":[[2030,38]]}}}],["datetime.datetime.strptime(firstday",{"_index":815,"t":{"251":{"position":[[170,36]]}}}],["datetime.datetime.strptime(nowtim",{"_index":866,"t":{"255":{"position":[[1102,35],[2313,35]]},"363":{"position":[[2447,35]]}}}],["dat文件是vcd专用的视频文件格式，也是基于mpeg",{"_index":6325,"t":{"2527":{"position":[[173,43]]}}}],["day",{"_index":453,"t":{"103":{"position":[[344,3],[484,4]]},"200":{"position":[[344,3],[484,4]]},"289":{"position":[[512,3],[606,3]]}}}],["day.c_str",{"_index":499,"t":{"103":{"position":[[2480,13]]},"200":{"position":[[2480,13]]}}}],["day.c_str());//string转化为char",{"_index":472,"t":{"103":{"position":[[951,30]]},"200":{"position":[[951,30]]}}}],["da）的标准采样频率为44.1",{"_index":6242,"t":{"2471":{"position":[[70,15]]}}}],["db",{"_index":4595,"t":{"1872":{"position":[[747,2],[2060,2]]},"1874":{"position":[[119,2]]},"1878":{"position":[[167,2]]}}}],["db)=10*lg",{"_index":6209,"t":{"2460":{"position":[[516,25]]}}}],["db.collection('').add",{"_index":4634,"t":{"1872":{"position":[[2581,21]]}}}],["db.collection('mails').add",{"_index":4651,"t":{"1876":{"position":[[1205,46]]}}}],["db.collection('mails').wher",{"_index":4659,"t":{"1878":{"position":[[263,30]]}}}],["db.collection('testbase').add",{"_index":4635,"t":{"1872":{"position":[[2611,31]]}}}],["db.collection('testbase').wher",{"_index":4628,"t":{"1872":{"position":[[2328,33]]},"1876":{"position":[[492,33],[835,33]]}}}],["db.where.get",{"_index":4624,"t":{"1872":{"position":[[2143,12]]}}}],["dba",{"_index":1872,"t":{"700":{"position":[[19,23]]}}}],["dbm",{"_index":1882,"t":{"716":{"position":[[0,31]]},"725":{"position":[[0,56]]},"735":{"position":[[0,45]]},"737":{"position":[[0,51]]},"739":{"position":[[0,33]]},"741":{"position":[[0,81]]},"746":{"position":[[0,45],[46,31]]}}}],["dbms提供数据定义语言（data",{"_index":1884,"t":{"731":{"position":[[0,17]]}}}],["dbms提供数据操纵语言（data",{"_index":1887,"t":{"733":{"position":[[0,17]]}}}],["dbms的核心部分，它负责把用户的数据操纵语言（dml",{"_index":1890,"t":{"744":{"position":[[0,76]]}}}],["dbms，是一种软件系统，它是数据库系统的核心部分。dbm",{"_index":1883,"t":{"729":{"position":[[0,64]]}}}],["dchp下，管理员来设置分配ip",{"_index":5655,"t":{"2195":{"position":[[267,22]]}}}],["dd",{"_index":5367,"t":{"2129":{"position":[[474,27],[502,2],[505,2],[508,2],[511,2],[540,2],[543,2],[546,2],[549,2],[552,17],[570,8],[579,2],[582,2],[585,2],[588,2],[660,10],[671,2],[674,2],[677,2],[680,2],[712,2],[715,2],[718,2],[721,2],[724,44],[769,10],[780,2],[783,2],[786,2],[789,2]]}}}],["ddd;}.game",{"_index":2919,"t":{"1248":{"position":[[691,11]]}}}],["dd与接口x联系起来。在这种情况下，该帧从包括适配器dd",{"_index":5370,"t":{"2129":{"position":[[683,28]]}}}],["dd与接口y!=x联系起来。在这种情况下，该帧需要被转发到与接口y相连的局域网段。交换机通过将该帧放到接口i",{"_index":5371,"t":{"2129":{"position":[[792,68]]}}}],["dd的帧从交换机接口x到达，交换机用mac地址dd",{"_index":5368,"t":{"2129":{"position":[[514,25]]}}}],["dd的表项。在这种情况下，交换机向除接口x",{"_index":5369,"t":{"2129":{"position":[[591,68]]}}}],["de",{"_index":5418,"t":{"2138":{"position":[[1012,27]]},"2441":{"position":[[16,7]]}}}],["debug.log",{"_index":1062,"t":{"305":{"position":[[346,11],[638,18],[700,16]]},"307":{"position":[[297,21],[336,16],[540,20]]}}}],["debug.log(\"awak",{"_index":1066,"t":{"305":{"position":[[573,19]]}}}],["debug=tru",{"_index":186,"t":{"33":{"position":[[1142,10]]}}}],["dec",{"_index":999,"t":{"289":{"position":[[579,5]]}}}],["decibel",{"_index":6208,"t":{"2460":{"position":[[439,35]]}}}],["declar",{"_index":4052,"t":{"1624":{"position":[[176,8]]}}}],["decline报文，通知dhcp",{"_index":5712,"t":{"2197":{"position":[[847,16]]}}}],["decor",{"_index":4040,"t":{"1618":{"position":[[300,10],[333,10]]}}}],["decreas",{"_index":1016,"t":{"293":{"position":[[240,8]]},"376":{"position":[[189,8]]}}}],["def",{"_index":163,"t":{"33":{"position":[[460,3],[1009,3]]},"49":{"position":[[202,3]]},"70":{"position":[[182,3],[224,3]]},"249":{"position":[[250,3]]},"251":{"position":[[88,13]]},"253":{"position":[[40,10]]},"255":{"position":[[1525,13]]},"259":{"position":[[34,3]]},"295":{"position":[[529,8]]},"363":{"position":[[534,12]]},"380":{"position":[[616,8]]},"1642":{"position":[[370,6]]}}}],["def'let",{"_index":4135,"t":{"1642":{"position":[[380,8]]}}}],["defabc",{"_index":4137,"t":{"1642":{"position":[[407,11]]}}}],["default",{"_index":372,"t":{"92":{"position":[[16,9],[148,9],[283,9],[337,9],[389,9],[458,9],[624,9],[739,9]]},"426":{"position":[[143,7],[588,7],[613,35],[658,23],[1095,7]]},"700":{"position":[[311,8]]},"1092":{"position":[[777,7],[3807,7]]},"1106":{"position":[[52,7],[94,7]]},"1312":{"position":[[587,7]]},"1366":{"position":[[1065,7]]},"1368":{"position":[[385,7]]}}}],["defaultlocal",{"_index":2426,"t":{"1017":{"position":[[1005,14]]},"1029":{"position":[[41,14]]}}}],["defer",{"_index":3923,"t":{"1563":{"position":[[325,5]]}}}],["defer></script",{"_index":3926,"t":{"1563":{"position":[[501,15]]}}}],["defin",{"_index":4046,"t":{"1622":{"position":[[92,7]]},"1624":{"position":[[88,7]]},"1626":{"position":[[279,7]]}}}],["definit",{"_index":1885,"t":{"731":{"position":[[18,10]]},"2511":{"position":[[47,10]]},"2534":{"position":[[670,10]]},"2543":{"position":[[670,10]]},"2552":{"position":[[670,10]]}}}],["degre",{"_index":1515,"t":{"518":{"position":[[66,7],[209,8]]},"520":{"position":[[66,7],[209,8]]},"522":{"position":[[66,7],[209,8]]},"524":{"position":[[98,7]]},"526":{"position":[[107,7]]},"528":{"position":[[66,7]]}}}],["delay",{"_index":1010,"t":{"293":{"position":[[118,7],[263,6]]},"376":{"position":[[67,7],[212,6]]}}}],["dele",{"_index":5215,"t":{"2059":{"position":[[493,7]]}}}],["delet",{"_index":4357,"t":{"1775":{"position":[[43,6],[162,6]]}}}],["delimit",{"_index":563,"t":{"124":{"position":[[89,9]]}}}],["delta",{"_index":4831,"t":{"1964":{"position":[[558,6]]}}}],["demo",{"_index":3353,"t":{"1366":{"position":[[1129,5],[1223,5]]},"1416":{"position":[[201,8],[486,8]]},"1673":{"position":[[249,4]]},"1713":{"position":[[383,4]]},"1825":{"position":[[469,4]]},"1954":{"position":[[28,5]]},"1989":{"position":[[233,7]]}}}],["dep",{"_index":578,"t":{"126":{"position":[[50,4]]}}}],["deploy",{"_index":2409,"t":{"1017":{"position":[[546,10]]},"1084":{"position":[[80,6],[200,7],[450,6],[486,6]]},"1088":{"position":[[167,7]]},"1216":{"position":[[141,8]]}}}],["deploy.yml",{"_index":2539,"t":{"1084":{"position":[[55,10]]}}}],["desc",{"_index":4582,"t":{"1872":{"position":[[306,14]]},"1972":{"position":[[35,7]]},"1981":{"position":[[1581,5],[1616,5],[1651,5]]}}}],["descript",{"_index":2599,"t":{"1092":{"position":[[2333,12],[2583,12],[2846,12],[3151,12],[3273,12],[3415,12],[3507,13]]},"1964":{"position":[[250,12]]},"1981":{"position":[[820,11],[1429,12]]},"2534":{"position":[[504,16],[549,15],[602,12],[651,18]]},"2543":{"position":[[504,16],[549,15],[602,12],[651,18]]},"2552":{"position":[[504,16],[549,15],[602,12],[651,18]]}}}],["description=\"descript",{"_index":2577,"t":{"1092":{"position":[[906,24]]}}}],["descriptor",{"_index":6331,"t":{"2534":{"position":[[473,14]]},"2543":{"position":[[473,14]]},"2552":{"position":[[473,14]]}}}],["descriptor，d",{"_index":6330,"t":{"2534":{"position":[[425,17]]},"2543":{"position":[[425,17]]},"2552":{"position":[[425,17]]}}}],["design",{"_index":2600,"t":{"1092":{"position":[[2366,8]]}}}],["desktop",{"_index":2738,"t":{"1124":{"position":[[9,8],[112,17]]},"1126":{"position":[[102,21]]},"1130":{"position":[[27,23]]},"1132":{"position":[[30,69]]},"1188":{"position":[[113,14]]},"1204":{"position":[[139,19]]}}}],["desktop了，直接在github上coding！将链接中的.com改为.dev，打开线上vscod",{"_index":2744,"t":{"1132":{"position":[[124,65]]}}}],["desktop作为版本控制工具。当然，git也是程序员必备的技能之一，建议学一学。可参考git",{"_index":2795,"t":{"1188":{"position":[[44,49]]}}}],["desktop并安装到桌面，我为什么推荐使用这个呢，因为它是一个简单的桌面版github，可以支持所有的github功能，比如提交代码等等。对于没使用过git工具的人来说，图形界面一定要比命令窗口友好的多，由于本文是从0开始，那么我们就用最简单的。如果你有兴趣使用git工具，参考git",{"_index":2735,"t":{"1120":{"position":[[117,146]]}}}],["desktop，点击选择fil",{"_index":2797,"t":{"1196":{"position":[[13,16]]}}}],["destroy",{"_index":3531,"t":{"1406":{"position":[[318,17]]}}}],["detail",{"_index":879,"t":{"255":{"position":[[1515,7]]},"853":{"position":[[0,7]]},"867":{"position":[[0,7]]},"1248":{"position":[[200,7],[818,7]]},"1329":{"position":[[0,7]]},"1900":{"position":[[273,6],[333,6]]},"2068":{"position":[[821,7],[903,7],[931,7]]},"2079":{"position":[[808,7]]},"2138":{"position":[[109,7],[565,7],[1136,7],[1445,7],[1987,7],[2617,7],[3206,7],[3487,7],[3637,7],[3716,7],[3858,7]]},"2171":{"position":[[321,7]]},"2206":{"position":[[163,7]]},"2230":{"position":[[89,7]]},"2236":{"position":[[253,7]]},"2247":{"position":[[1734,7]]},"2252":{"position":[[428,7]]},"2273":{"position":[[115,7],[417,7]]},"2275":{"position":[[135,7]]},"2279":{"position":[[452,7],[688,7]]},"2409":{"position":[[112,7],[262,7],[404,7]]},"2443":{"position":[[193,7]]},"2471":{"position":[[123,7]]}}}],["dev",{"_index":2800,"t":{"1202":{"position":[[47,3]]},"1362":{"position":[[8,3]]},"2179":{"position":[[34,24]]}}}],["develop",{"_index":946,"t":{"278":{"position":[[64,11]]},"293":{"position":[[813,9],[960,9]]},"378":{"position":[[35,9],[182,9]]},"554":{"position":[[9,11]]},"1080":{"position":[[35,9],[182,9]]},"1557":{"position":[[339,10]]}}}],["df:dont",{"_index":5536,"t":{"2169":{"position":[[324,7]]}}}],["dhcp",{"_index":5657,"t":{"2195":{"position":[[309,8],[413,9]]},"2197":{"position":[[209,4]]}}}],["dhcp、ftp、http、smtp、pop3、telnet、dns、ntp",{"_index":5496,"t":{"2144":{"position":[[436,38]]}}}],["dhcp封包在传输层（transport",{"_index":5665,"t":{"2195":{"position":[[856,20]]}}}],["dhcp支持下，自动分配ip",{"_index":5656,"t":{"2195":{"position":[[290,18]]}}}],["dhcp是一种即插即用的协议（plug",{"_index":5652,"t":{"2195":{"position":[[134,19]]}}}],["dhcp服务器管理着一个包含一系列ip地址的地址池,每当一台新的主机加入时，dhcp",{"_index":5658,"t":{"2195":{"position":[[318,67]]}}}],["dhcp的三种ip",{"_index":5659,"t":{"2195":{"position":[[545,13]]}}}],["dhcp的全称是dynam",{"_index":5650,"t":{"2195":{"position":[[0,18]]}}}],["dhcp自动设置ip",{"_index":5651,"t":{"2195":{"position":[[119,14]]}}}],["differ",{"_index":1018,"t":{"293":{"position":[[305,9]]},"376":{"position":[[254,9]]}}}],["digit",{"_index":6216,"t":{"2462":{"position":[[441,7]]},"2511":{"position":[[159,12]]}}}],["dinosaur",{"_index":2398,"t":{"1017":{"position":[[293,10]]},"1578":{"position":[[128,8]]}}}],["dinosooooor.jpg",{"_index":3946,"t":{"1578":{"position":[[256,31]]}}}],["dir='rtl",{"_index":376,"t":{"92":{"position":[[510,14]]}}}],["direct",{"_index":2920,"t":{"1248":{"position":[[725,10]]},"1342":{"position":[[488,9],[564,9]]},"1483":{"position":[[110,10]]},"1489":{"position":[[3,12]]},"1976":{"position":[[90,10]]}}}],["direction:row",{"_index":4974,"t":{"1981":{"position":[[1097,14]]}}}],["directori",{"_index":2245,"t":{"941":{"position":[[255,10]]},"946":{"position":[[334,10]]},"1092":{"position":[[2726,10]]}}}],["disabl",{"_index":2717,"t":{"1108":{"position":[[182,8]]},"1485":{"position":[[257,8]]},"1545":{"position":[[52,8],[224,8],[274,11],[298,8]]}}}],["disabled=\"dis",{"_index":3881,"t":{"1545":{"position":[[124,20]]}}}],["discord",{"_index":2458,"t":{"1017":{"position":[[2411,10]]},"1037":{"position":[[692,10]]}}}],["discover报文（也就是说子网内的dhcp服务器不止一个），所有的dhcp",{"_index":5678,"t":{"2197":{"position":[[126,39]]}}}],["discover（在udp",{"_index":5674,"t":{"2197":{"position":[[62,13]]}}}],["dish",{"_index":3671,"t":{"1445":{"position":[[1158,8]]}}}],["display",{"_index":2066,"t":{"853":{"position":[[579,8]]},"1248":{"position":[[352,8],[705,8]]},"1386":{"position":[[86,8],[204,8]]},"1474":{"position":[[129,8]]},"1515":{"position":[[864,8],[1373,8]]},"1582":{"position":[[111,7]]},"1960":{"position":[[188,8]]},"1976":{"position":[[70,8]]},"1979":{"position":[[2766,8]]}}}],["display_analyse(t,l",{"_index":440,"t":{"101":{"position":[[1391,21]]},"198":{"position":[[1391,21]]}}}],["display_find(t",{"_index":500,"t":{"103":{"position":[[3282,15],[4451,15]]},"200":{"position":[[3282,15],[4451,15]]}}}],["display_find(t,l",{"_index":437,"t":{"101":{"position":[[1229,18]]},"198":{"position":[[1229,18]]}}}],["display_head(btre",{"_index":398,"t":{"101":{"position":[[17,18]]},"198":{"position":[[17,18]]}}}],["distanc",{"_index":6085,"t":{"2439":{"position":[[204,9]]}}}],["div",{"_index":121,"t":{"31":{"position":[[137,4],[517,3],[534,4],[573,7]]},"49":{"position":[[1027,4]]},"114":{"position":[[507,4],[690,4],[808,5]]},"211":{"position":[[507,4],[690,4],[808,5]]},"853":{"position":[[907,4],[942,4],[977,4]]},"1092":{"position":[[1371,4],[1506,4],[1649,6],[1656,6],[1840,4],[1975,4],[2097,6],[2104,6],[3532,4],[3569,4],[3649,6],[3656,4],[3743,6],[3750,6],[3892,4],[3920,4],[4014,6],[4021,6]]},"1223":{"position":[[3454,5],[3460,4],[3499,4],[3596,6],[3603,4],[3700,6],[3707,4],[3804,6],[3811,6]]},"1239":{"position":[[1245,5],[1251,4],[1290,4],[1387,6],[1394,4],[1491,6],[1498,4],[1595,6],[1602,6]]},"1248":{"position":[[1071,5],[1077,4],[1116,4],[1213,6],[1220,4],[1317,6],[1324,4],[1421,6],[1428,6],[1497,4],[1520,4],[1559,6],[1566,4],[1594,8],[1610,9],[1642,6],[1649,6]]},"1251":{"position":[[223,4],[364,6],[962,8]]},"1257":{"position":[[195,5],[201,4],[240,4],[337,6],[344,4],[441,6],[448,4],[545,6],[552,6]]},"1259":{"position":[[82,4],[105,4],[144,6],[151,4],[179,8],[195,9],[227,6],[234,6]]},"1277":{"position":[[65,5],[107,9]]},"1279":{"position":[[359,4],[429,9]]},"1281":{"position":[[234,5],[298,9],[375,4],[445,9]]},"1283":{"position":[[46,3],[250,5],[280,9]]},"1285":{"position":[[53,3]]},"1299":{"position":[[498,5],[656,6]]},"1366":{"position":[[82,4],[244,4],[365,4],[420,6],[802,6],[809,4],[2799,6]]},"1373":{"position":[[39,4],[77,9],[234,4],[312,9],[380,4],[540,4],[687,4]]},"1375":{"position":[[41,4],[157,4],[228,4],[403,4]]},"1380":{"position":[[122,4],[189,9],[267,4]]},"1382":{"position":[[38,4]]},"1386":{"position":[[71,4],[134,9]]},"1393":{"position":[[45,4],[71,8],[407,4]]},"1395":{"position":[[20,4],[337,4]]},"1397":{"position":[[59,4],[457,4]]},"1399":{"position":[[593,4],[1269,4]]},"1404":{"position":[[780,4]]},"1410":{"position":[[57,4],[116,8]]},"1412":{"position":[[0,4]]},"1416":{"position":[[142,4],[169,8]]},"1420":{"position":[[114,4]]},"1424":{"position":[[715,4]]},"1426":{"position":[[292,4],[351,8],[446,4],[525,8]]},"1428":{"position":[[270,4],[329,7]]},"1439":{"position":[[34,5]]},"1445":{"position":[[412,4]]},"1468":{"position":[[35,4]]},"1470":{"position":[[53,4]]},"1472":{"position":[[428,4],[467,5],[692,6],[1335,4],[1371,5],[1635,6]]},"1485":{"position":[[56,4]]},"1487":{"position":[[164,6]]},"1511":{"position":[[87,4],[120,6],[127,4]]},"1515":{"position":[[226,4],[250,4],[797,6]]},"1522":{"position":[[268,4],[815,6]]},"1995":{"position":[[611,4]]}}}],["div>:</div",{"_index":2089,"t":{"853":{"position":[[929,12],[964,12]]}}}],["div></bodi",{"_index":137,"t":{"31":{"position":[[391,13]]}}}],["div></body><styl",{"_index":3801,"t":{"1511":{"position":[[162,20]]},"1515":{"position":[[804,20]]}}}],["div></templ",{"_index":3394,"t":{"1366":{"position":[[2806,17]]}}}],["div>ent",{"_index":2998,"t":{"1273":{"position":[[739,10]]}}}],["div>hello",{"_index":329,"t":{"70":{"position":[[526,10],[550,10]]},"1312":{"position":[[210,10]]}}}],["div[class^=\"component_",{"_index":3853,"t":{"1528":{"position":[[21,25]]}}}],["divid",{"_index":4955,"t":{"1981":{"position":[[84,7],[159,10],[510,7],[873,7]]}}}],["divider><van",{"_index":4963,"t":{"1981":{"position":[[585,12],[950,12]]}}}],["divis",{"_index":5289,"t":{"2117":{"position":[[44,8]]}}}],["div想象成view",{"_index":4795,"t":{"1958":{"position":[[19,28]]}}}],["div）里，就可以用vu",{"_index":540,"t":{"114":{"position":[[826,23]]},"211":{"position":[[826,23]]}}}],["dn",{"_index":3939,"t":{"1576":{"position":[[275,3]]},"2064":{"position":[[0,10],[11,22],[59,11],[714,24]]},"2068":{"position":[[102,3],[120,15],[204,3],[227,14],[412,3],[509,3],[774,3],[829,5]]},"2072":{"position":[[7,3],[63,14],[89,3],[128,9]]},"2250":{"position":[[142,23]]}}}],["dns为因特网中任何地方的主机解析主机名，而arp只为在同一个子网上的主机和路由器接口解析ip地址。如果一个节点试图用arp为另一个子网中的节点解析mac地址，那么arp",{"_index":5339,"t":{"2125":{"position":[[959,93]]}}}],["dns区域提供名称解析服务而专门配置、建立的名称服务器，可为用户提供最权威的dn",{"_index":5229,"t":{"2066":{"position":[[401,99]]}}}],["dns可以负责负载分配，比如baidu.com这个站点非常繁忙，它背冗余分布在多台服务器上，具有多个ip地址，如当客户对映射到某地址集合的名字发出一个dns请求时，该服务器用ip地址的整个集合进行响应，但在每次回答中循环这些地址次序。因为客户通常总是向ip地址排在最前面的服务器发送http请求报文，所以dns就在所有这些冗余的web",{"_index":5225,"t":{"2064":{"position":[[533,180]]}}}],["dns域名解析工作，dns系统开发者设计了一个与分层dns域名结构类似的层次化的dns名称服务器结构。把所有dns名称服务器自高到低分为4",{"_index":5226,"t":{"2066":{"position":[[0,116]]}}}],["dns服务器拥有因特网上所有主机的映射，这些映射分布在所有的dns服务器上。dn",{"_index":5231,"t":{"2068":{"position":[[0,62]]}}}],["dns查询的过程耗时非常长，但由于dns缓存的存在，通常使得查询路径比理论中的短。因为在一个请求链中，当某dns服务器接受一个dns回答时，它能将映射缓存在本地存储器中，当下次有另一个对相同主机名的查询到达该dns服务器时，该dns服务器就能够提供所需要的ip",{"_index":5245,"t":{"2070":{"position":[[0,149]]}}}],["do",{"_index":5264,"t":{"2092":{"position":[[36,15]]}}}],["do...whil",{"_index":1221,"t":{"410":{"position":[[22,14]]}}}],["doc",{"_index":569,"t":{"124":{"position":[[220,4]]},"126":{"position":[[450,5]]},"293":{"position":[[536,4]]},"376":{"position":[[496,4]]},"1006":{"position":[[2,4]]},"1017":{"position":[[1171,5],[1956,6],[2212,7]]},"1037":{"position":[[263,6]]},"1039":{"position":[[106,5]]},"1049":{"position":[[156,4]]},"1058":{"position":[[306,4]]},"1092":{"position":[[2635,5],[2694,4]]},"1557":{"position":[[229,4]]}}}],["doc1.md",{"_index":2502,"t":{"1049":{"position":[[176,7]]}}}],["doc2.md",{"_index":2503,"t":{"1049":{"position":[[198,8]]}}}],["doc3.md",{"_index":2504,"t":{"1049":{"position":[[211,8]]}}}],["docid",{"_index":2448,"t":{"1017":{"position":[[1963,6]]},"1037":{"position":[[270,6]]}}}],["docs/intro",{"_index":2455,"t":{"1017":{"position":[[2254,14]]},"1037":{"position":[[542,14]]}}}],["docs\\intro.md",{"_index":2345,"t":{"1004":{"position":[[108,13]]}}}],["docs\\tutori",{"_index":2342,"t":{"1004":{"position":[[50,13],[76,13]]}}}],["doctyp",{"_index":13,"t":{"10":{"position":[[22,9]]},"853":{"position":[[8,9]]},"1511":{"position":[[0,9]]},"1515":{"position":[[0,9]]},"1547":{"position":[[42,9],[166,9],[274,9],[423,9]]},"1549":{"position":[[21,9]]},"1659":{"position":[[119,9]]},"1661":{"position":[[78,9]]},"1673":{"position":[[59,9]]},"1675":{"position":[[33,9],[210,9]]},"1677":{"position":[[14,9]]},"1679":{"position":[[27,9]]},"1799":{"position":[[282,9]]},"1803":{"position":[[268,9],[977,9]]},"1842":{"position":[[1569,9]]}}}],["docu",{"_index":5072,"t":{"2012":{"position":[[51,16]]},"2018":{"position":[[224,12]]}}}],["document.body.appendchild(pictur",{"_index":3098,"t":{"1321":{"position":[[322,35]]}}}],["document.body.appendchild(renderer.domel",{"_index":73,"t":{"10":{"position":[[1599,47]]},"20":{"position":[[129,55]]}}}],["document.createel",{"_index":2986,"t":{"1271":{"position":[[94,22],[171,22]]},"1273":{"position":[[560,22]]}}}],["document.createelement(\"canva",{"_index":3191,"t":{"1340":{"position":[[608,33]]}}}],["document.createelement('input",{"_index":3091,"t":{"1321":{"position":[[60,31]]}}}],["document.createelement，react",{"_index":2987,"t":{"1271":{"position":[[258,28]]}}}],["document.getelementbyid(\"demo\").innerhtml",{"_index":4189,"t":{"1659":{"position":[[345,50]]},"1661":{"position":[[329,50]]},"1673":{"position":[[142,41]]},"1790":{"position":[[504,41],[624,41]]}}}],["document.getelementbyid(\"hello",{"_index":3071,"t":{"1312":{"position":[[297,30]]}}}],["document.getelementbyid(\"nebula",{"_index":2704,"t":{"1104":{"position":[[93,31]]}}}],["document.getelementbyid('#app",{"_index":532,"t":{"114":{"position":[[597,34]]},"211":{"position":[[597,34]]}}}],["document.getelementbyid('exampl",{"_index":3524,"t":{"1404":{"position":[[1081,34]]}}}],["document.getelementbyid(id",{"_index":4222,"t":{"1673":{"position":[[14,27]]}}}],["document.queryselector('#hh').innerhtml",{"_index":2102,"t":{"853":{"position":[[1185,39]]}}}],["document.queryselector('#mm').innerhtml",{"_index":2104,"t":{"853":{"position":[[1239,39]]}}}],["document.queryselector('#ss').innerhtml",{"_index":2106,"t":{"853":{"position":[[1293,39]]}}}],["document.writ",{"_index":4220,"t":{"1671":{"position":[[24,16]]},"1675":{"position":[[10,16],[177,16]]}}}],["docusauru",{"_index":2354,"t":{"1006":{"position":[[513,10]]},"1010":{"position":[[105,10],[371,10]]},"1015":{"position":[[0,10]]},"1017":{"position":[[343,10],[759,13],[2781,13]]},"1035":{"position":[[45,15]]},"1037":{"position":[[1041,13]]},"1047":{"position":[[20,10],[149,10]]},"1062":{"position":[[18,10],[29,46]]},"1074":{"position":[[163,10]]},"1092":{"position":[[1611,10],[2351,10],[2601,10],[2922,10]]},"1094":{"position":[[369,10],[703,10],[956,10]]},"2018":{"position":[[145,10]]}}}],["docusaurus.config.j",{"_index":2389,"t":{"1015":{"position":[[71,20]]},"1049":{"position":[[416,20]]},"1058":{"position":[[2,20]]}}}],["docusaurus/link';import",{"_index":2563,"t":{"1092":{"position":[[263,25]]}}}],["docusaurus/templates/shar",{"_index":2440,"t":{"1017":{"position":[[1402,30],[1643,30]]},"1039":{"position":[[325,30],[554,30]]}}}],["docusaurus/usedocusauruscontext';import",{"_index":2565,"t":{"1092":{"position":[[315,41]]}}}],["docusaurus要求您的电脑配置有node.j",{"_index":2488,"t":{"1045":{"position":[[0,26]]}}}],["docusaurus，基于react.js构建，自有功能比vuepress",{"_index":2485,"t":{"1042":{"position":[[393,53]]}}}],["doe",{"_index":3566,"t":{"1418":{"position":[[317,4]]},"1426":{"position":[[215,5],[403,3],[577,3]]}}}],["dog",{"_index":1324,"t":{"457":{"position":[[248,3],[390,3],[394,3],[404,6]]}}}],["dog.ag",{"_index":1327,"t":{"457":{"position":[[443,7]]}}}],["dog.eat",{"_index":1328,"t":{"457":{"position":[[456,10]]}}}],["dog.lookdoor",{"_index":1329,"t":{"457":{"position":[[467,15]]}}}],["dog.nam",{"_index":1326,"t":{"457":{"position":[[426,8]]}}}],["dom",{"_index":544,"t":{"114":{"position":[[1031,18]]},"211":{"position":[[1031,18]]},"658":{"position":[[135,16]]},"921":{"position":[[61,3]]},"1223":{"position":[[2320,3],[2744,3]]},"1251":{"position":[[958,3]]},"1267":{"position":[[150,3],[430,3]]},"1271":{"position":[[84,3]]},"1273":{"position":[[354,3],[433,3],[949,3]]},"1281":{"position":[[71,3]]},"1289":{"position":[[98,3],[175,3]]},"1295":{"position":[[22,3],[229,3],[269,3]]},"1297":{"position":[[298,3],[348,3],[441,3],[484,3],[519,3]]},"1308":{"position":[[79,3]]},"1327":{"position":[[29,27]]},"1342":{"position":[[788,10]]},"1393":{"position":[[36,3],[236,3],[302,3],[727,3]]},"1395":{"position":[[204,3],[229,3]]},"1397":{"position":[[368,8],[377,3]]},"1406":{"position":[[53,3],[67,3]]},"1428":{"position":[[65,3],[174,3],[378,3]]},"1433":{"position":[[226,3],[261,3]]},"1445":{"position":[[829,3]]},"1474":{"position":[[92,3]]},"1489":{"position":[[132,18]]},"1491":{"position":[[178,3]]},"1497":{"position":[[158,3],[242,3]]},"1818":{"position":[[144,3]]},"1825":{"position":[[178,3]]},"1829":{"position":[[215,3]]},"1942":{"position":[[92,3],[103,3],[150,25]]},"1995":{"position":[[868,3],[948,3],[959,3]]}}}],["dom';import",{"_index":2928,"t":{"1248":{"position":[[1884,11]]}}}],["domvar",{"_index":531,"t":{"114":{"position":[[584,6]]},"211":{"position":[[584,6]]}}}],["dom去更新页面很耗资源，他要重新加载新dom树（刷新页面），随着现代前端的发展，一个页面的功能和交互越来越多，当要重新加载新的dom树，就显得尤为浪费，加载的时间就会很长，vu",{"_index":546,"t":{"114":{"position":[[1114,104]]},"211":{"position":[[1114,104]]}}}],["dom（docu",{"_index":4458,"t":{"1825":{"position":[[69,15]]}}}],["dom，j",{"_index":5023,"t":{"1995":{"position":[[1099,6]]}}}],["don't",{"_index":2411,"t":{"1017":{"position":[[623,5],[819,5]]},"1592":{"position":[[228,5]]}}}],["don't</div",{"_index":3694,"t":{"1468":{"position":[[109,11]]}}}],["doubl",{"_index":1259,"t":{"439":{"position":[[145,6],[200,6],[251,6],[296,6]]},"443":{"position":[[179,6],[196,6]]},"486":{"position":[[107,6],[131,6],[462,6]]},"488":{"position":[[188,7]]},"490":{"position":[[110,6]]},"494":{"position":[[577,6]]},"496":{"position":[[379,6]]},"498":{"position":[[81,6]]},"500":{"position":[[92,6],[114,6],[135,6],[158,6],[183,6],[214,6],[305,6]]},"502":{"position":[[39,6],[64,6],[84,6],[167,6],[187,6],[207,6]]},"504":{"position":[[217,6],[354,6],[374,6]]},"506":{"position":[[7,6],[31,6]]},"508":{"position":[[7,6],[31,6]]},"510":{"position":[[25,6],[105,6],[124,6]]},"512":{"position":[[6,6],[86,6],[105,6]]},"514":{"position":[[27,6],[51,6],[170,6],[189,6]]},"516":{"position":[[4,6],[85,6],[104,6]]},"518":{"position":[[59,6],[82,6]]},"520":{"position":[[59,6],[82,6]]},"522":{"position":[[59,6],[82,6]]},"524":{"position":[[7,24],[91,6],[114,6]]},"526":{"position":[[16,6],[100,6],[123,6]]},"528":{"position":[[59,6],[82,6]]},"530":{"position":[[59,6],[76,6]]},"532":{"position":[[85,6],[102,6]]},"565":{"position":[[217,6]]},"583":{"position":[[200,6]]},"592":{"position":[[120,8]]},"598":{"position":[[103,8],[333,6]]},"602":{"position":[[39,6]]},"604":{"position":[[81,8],[227,6],[360,6]]},"606":{"position":[[141,8],[197,7]]}}}],["double.parsedouble(\"5",{"_index":1424,"t":{"496":{"position":[[390,24]]}}}],["double.valueof(5",{"_index":1411,"t":{"494":{"position":[[588,18]]}}}],["double[s",{"_index":1642,"t":{"598":{"position":[[125,13]]},"602":{"position":[[55,12]]}}}],["doubler",{"_index":3024,"t":{"1283":{"position":[[217,7]]}}}],["doublevalu",{"_index":1376,"t":{"486":{"position":[[114,13]]}}}],["download",{"_index":1342,"t":{"467":{"position":[[37,19]]},"648":{"position":[[20,9]]}}}],["download_img",{"_index":691,"t":{"179":{"position":[[270,15],[1217,14]]},"221":{"position":[[270,15],[1217,14]]},"1165":{"position":[[270,15],[1217,14]]}}}],["downloadfil",{"_index":5007,"t":{"1989":{"position":[[435,15]]}}}],["do…whil",{"_index":1218,"t":{"404":{"position":[[25,10]]},"408":{"position":[[55,8],[74,18]]},"416":{"position":[[89,8]]}}}],["dp",{"_index":5417,"t":{"2138":{"position":[[992,11]]}}}],["dp>dt，则t=dt",{"_index":5419,"t":{"2138":{"position":[[1040,27]]}}}],["droid",{"_index":3013,"t":{"1279":{"position":[[498,6]]}}}],["dsl",{"_index":5246,"t":{"2077":{"position":[[104,8]]}}}],["dt",{"_index":2095,"t":{"853":{"position":[[1083,2]]},"2138":{"position":[[1004,7]]},"2519":{"position":[[357,2]]}}}],["dt.gethour",{"_index":2097,"t":{"853":{"position":[[1108,13]]}}}],["dt.getminut",{"_index":2099,"t":{"853":{"position":[[1131,15]]}}}],["dt.getsecond",{"_index":2101,"t":{"853":{"position":[[1156,15]]}}}],["dt1",{"_index":854,"t":{"255":{"position":[[786,3],[2020,3]]},"363":{"position":[[1800,3],[2131,3]]}}}],["dt1).second",{"_index":868,"t":{"255":{"position":[[1267,12],[2378,13],[2409,12]]},"363":{"position":[[2612,12]]}}}],["dt2",{"_index":888,"t":{"255":{"position":[[2077,3]]}}}],["dt2).second",{"_index":870,"t":{"255":{"position":[[1315,12],[2458,12]]},"363":{"position":[[2660,12]]}}}],["dt3",{"_index":889,"t":{"255":{"position":[[2134,3]]}}}],["dt3).second",{"_index":873,"t":{"255":{"position":[[1363,12],[2507,12]]},"363":{"position":[[2708,12]]}}}],["dt4",{"_index":890,"t":{"255":{"position":[[2191,3]]}}}],["dt4).second",{"_index":875,"t":{"255":{"position":[[1411,12],[2556,12]]},"363":{"position":[[2756,12]]}}}],["dt5",{"_index":891,"t":{"255":{"position":[[2248,3]]}}}],["dt5).second",{"_index":877,"t":{"255":{"position":[[1459,12],[2605,12]]},"363":{"position":[[2804,12]]}}}],["dtnow",{"_index":865,"t":{"255":{"position":[[1094,5],[1258,6],[1306,6],[1354,6],[1402,6],[1450,6],[2305,5],[2400,6],[2449,6],[2498,6],[2547,6],[2596,6]]},"363":{"position":[[2439,5],[2603,6],[2651,6],[2699,6],[2747,6],[2795,6]]}}}],["dtv（digit",{"_index":6293,"t":{"2511":{"position":[[88,58]]}}}],["dumb",{"_index":3054,"t":{"1299":{"position":[[27,5]]}}}],["duplex",{"_index":5842,"t":{"2247":{"position":[[165,6]]}}}],["durat",{"_index":3105,"t":{"1323":{"position":[[109,9]]},"1346":{"position":[[848,8],[922,9]]},"1507":{"position":[[34,9],[79,9],[214,9],[257,9]]},"1515":{"position":[[1598,9]]},"1522":{"position":[[204,9]]},"1964":{"position":[[636,9]]}}}],["dure",{"_index":1011,"t":{"293":{"position":[[126,6]]},"376":{"position":[[75,6]]}}}],["dv",{"_index":5753,"t":{"2210":{"position":[[67,80],[178,28],[284,77]]},"2218":{"position":[[65,18]]}}}],["dvd",{"_index":6239,"t":{"2469":{"position":[[824,3],[842,3],[1045,3]]}}}],["dword",{"_index":6162,"t":{"2454":{"position":[[366,11],[797,5],[819,5],[841,5],[919,5],[955,5],[986,5],[1021,5],[1056,5],[1087,5]]}}}],["dx和其邻居的距离向量dv",{"_index":5749,"t":{"2208":{"position":[[472,24]]}}}],["dynam",{"_index":3755,"t":{"1501":{"position":[[65,8]]},"2195":{"position":[[663,14]]}}}],["dyte",{"_index":2528,"t":{"1062":{"position":[[124,4]]}}}],["d中的d个bit被划分为i行j列，对于每行、每列计算奇偶值，产生的i",{"_index":5270,"t":{"2111":{"position":[[0,36]]}}}],["d表示十进制整数（int），f",{"_index":1606,"t":{"577":{"position":[[33,62]]}}}],["d表示域，d中的元素用d(分量)表示。域中所包含元素的个数被称为域的基数，记作m",{"_index":1800,"t":{"652":{"position":[[0,79]]}}}],["d（v）标识从原目的到v",{"_index":5741,"t":{"2206":{"position":[[105,21]]}}}],["e",{"_index":728,"t":{"179":{"position":[[1083,2]]},"221":{"position":[[1083,2]]},"502":{"position":[[194,1]]},"504":{"position":[[381,1]]},"510":{"position":[[6,18],[248,1]]},"512":{"position":[[229,1]]},"514":{"position":[[325,1]]},"516":{"position":[[230,1]]},"1165":{"position":[[1083,2]]},"1283":{"position":[[272,1]]},"1872":{"position":[[1760,3]]},"1876":{"position":[[197,3],[269,3]]},"2173":{"position":[[530,1]]},"2373":{"position":[[49,2]]}}}],["e\");console.log(pathstr",{"_index":2325,"t":{"986":{"position":[[87,26]]}}}],["e.detail.valu",{"_index":4619,"t":{"1872":{"position":[[1793,14]]},"1876":{"position":[[227,14],[296,14]]}}}],["e.tostr",{"_index":4610,"t":{"1872":{"position":[[1229,12]]}}}],["e9",{"_index":5346,"t":{"2125":{"position":[[1913,2]]}}}],["easi",{"_index":2596,"t":{"1092":{"position":[[2245,5]]}}}],["easier",{"_index":2963,"t":{"1265":{"position":[[31,6],[161,6]]}}}],["easili",{"_index":2602,"t":{"1092":{"position":[[2400,6]]}}}],["easyop",{"_index":2515,"t":{"1056":{"position":[[19,8]]}}}],["easyx",{"_index":394,"t":{"97":{"position":[[0,15]]}}}],["eat",{"_index":1323,"t":{"457":{"position":[[196,5]]},"2010":{"position":[[38,6]]}}}],["echo",{"_index":2751,"t":{"1139":{"position":[[19,4]]}}}],["ecmascript",{"_index":4067,"t":{"1632":{"position":[[0,10]]},"1642":{"position":[[590,10]]},"1644":{"position":[[9,10]]},"1646":{"position":[[9,10]]}}}],["ed)、载波检测(c",{"_index":5400,"t":{"2136":{"position":[[819,38]]}}}],["edg/87.0.664.75",{"_index":708,"t":{"179":{"position":[[483,16]]},"221":{"position":[[483,16]]},"1165":{"position":[[483,16]]}}}],["edit",{"_index":2437,"t":{"1017":{"position":[[1291,5],[1532,5]]},"1039":{"position":[[226,5],[455,5]]},"1312":{"position":[[660,7],[699,4],[731,7],[761,4]]}}}],["editor",{"_index":316,"t":{"70":{"position":[[33,6],[175,6],[289,6],[519,6]]}}}],["editurl",{"_index":2438,"t":{"1017":{"position":[[1327,8],[1568,8]]},"1039":{"position":[[250,8],[479,8]]}}}],["eeeeee",{"_index":5009,"t":{"1991":{"position":[[338,10]]}}}],["effect",{"_index":3552,"t":{"1412":{"position":[[763,7]]}}}],["el",{"_index":144,"t":{"31":{"position":[[674,3]]},"1323":{"position":[[183,3],[282,4]]},"1366":{"position":[[206,3],[880,3],[902,3],[981,3],[1056,3],[1169,3],[1293,3],[1380,4],[1411,3],[1605,3],[1637,4],[1703,3],[1733,4],[1801,3],[1831,4],[1898,3],[1928,4],[1959,4],[2010,3],[2098,4],[2166,3],[2252,4],[2283,4],[2406,4],[2422,4],[2432,3],[2779,4],[2789,4]]},"1393":{"position":[[100,3],[511,3]]},"1395":{"position":[[91,3],[441,3]]},"1397":{"position":[[174,3],[548,3]]},"1399":{"position":[[933,3]]},"1404":{"position":[[712,3],[1014,3]]},"1412":{"position":[[143,3]]},"1416":{"position":[[197,3],[482,3]]},"1420":{"position":[[511,3]]},"1424":{"position":[[223,3],[529,3]]},"1426":{"position":[[129,3]]},"1445":{"position":[[1074,3]]},"1472":{"position":[[782,3],[1725,3]]}}}],["el.target",{"_index":3107,"t":{"1323":{"position":[[190,9]]}}}],["el.target.fil",{"_index":3108,"t":{"1323":{"position":[[203,15]]}}}],["el.target.files.length",{"_index":3109,"t":{"1323":{"position":[[222,22]]}}}],["el.target.files[0",{"_index":3110,"t":{"1323":{"position":[[301,18]]}}}],["el:'#app",{"_index":539,"t":{"114":{"position":[[780,10]]},"211":{"position":[[780,10]]}}}],["electron",{"_index":2223,"t":{"923":{"position":[[40,10]]}}}],["element",{"_index":1689,"t":{"606":{"position":[[24,8],[205,8]]},"1104":{"position":[[83,7]]},"1342":{"position":[[1511,17]]},"1537":{"position":[[224,38]]},"1816":{"position":[[183,8]]}}}],["element\");const",{"_index":2705,"t":{"1104":{"position":[[125,15]]}}}],["element\"></div>const",{"_index":2703,"t":{"1104":{"position":[[62,20]]}}}],["element)，简称为像素（pixel）；且一般取m、n和的灰度级l为2的整次幂(m\\n",{"_index":6040,"t":{"2412":{"position":[[126,60]]}}}],["elements）组成，这些元素可以用来包围不同部分的内容，使其以某种方式呈现或者工作。一对标签（tag",{"_index":3869,"t":{"1535":{"position":[[70,105]]}}}],["elif",{"_index":893,"t":{"255":{"position":[[2439,4],[2488,4],[2537,4],[2586,4]]}}}],["else>no",{"_index":3645,"t":{"1443":{"position":[[342,7]]}}}],["else>oh",{"_index":3685,"t":{"1464":{"position":[[163,7]]}}}],["else，v",{"_index":3701,"t":{"1470":{"position":[[197,6]]}}}],["em>glad</em",{"_index":4021,"t":{"1611":{"position":[[8,13]]}}}],["em>late</em>.</p",{"_index":4023,"t":{"1611":{"position":[[34,18]]}}}],["em>（emphasis）元素来标记这样的情况。这样做既可以让文档读起来更有趣，也可以被屏幕阅读器识别出来，并以不同的语调发出。浏览器默认风格为斜体，但你不应该纯粹使用这个标签来获得斜体风格，为了获得斜体风格，你应该使用<span",{"_index":4018,"t":{"1609":{"position":[[7,126]]}}}],["email",{"_index":3707,"t":{"1472":{"position":[[276,5],[664,5],[936,7],[1266,5],[1589,5],[1876,7]]}}}],["emil",{"_index":4365,"t":{"1779":{"position":[[80,8],[272,8]]}}}],["en",{"_index":2422,"t":{"1017":{"position":[[976,4]]},"1029":{"position":[[13,2]]},"1058":{"position":[[387,6]]},"2490":{"position":[[643,2],[690,21],[712,8]]}}}],["encod",{"_index":2022,"t":{"847":{"position":[[100,7]]}}}],["end",{"_index":213,"t":{"37":{"position":[[1152,4]]},"1010":{"position":[[233,3]]},"1507":{"position":[[4527,5]]},"1842":{"position":[[28,4],[50,4]]},"2077":{"position":[[0,43]]}}}],["endi",{"_index":2358,"t":{"1010":{"position":[[50,5]]}}}],["endili",{"_index":2359,"t":{"1010":{"position":[[62,7]]}}}],["endswith",{"_index":4517,"t":{"1842":{"position":[[2088,10]]}}}],["engin",{"_index":2369,"t":{"1010":{"position":[[237,8]]},"1368":{"position":[[69,6],[470,10],[487,9],[508,6]]}}}],["enlarg",{"_index":3769,"t":{"1507":{"position":[[549,14],[582,8],[610,9],[1180,8],[1428,7]]}}}],["enoent",{"_index":2243,"t":{"941":{"position":[[227,11]]},"946":{"position":[[310,7],[385,9]]}}}],["enough",{"_index":939,"t":{"273":{"position":[[342,6],[396,6]]}}}],["ensure_ascii=fals",{"_index":176,"t":{"33":{"position":[[730,19],[935,19]]}}}],["enter",{"_index":1961,"t":{"795":{"position":[[180,5]]},"825":{"position":[[589,5],[814,5]]},"1271":{"position":[[515,6]]},"1312":{"position":[[645,5],[680,6]]}}}],["entiti",{"_index":5171,"t":{"2055":{"position":[[981,6]]}}}],["env",{"_index":4593,"t":{"1872":{"position":[[698,4],[2102,4]]},"1874":{"position":[[60,4],[161,4]]},"1878":{"position":[[206,4]]}}}],["environ",{"_index":947,"t":{"278":{"position":[[76,11]]}}}],["environment，ip",{"_index":225,"t":{"45":{"position":[[243,14]]}}}],["equal",{"_index":1394,"t":{"490":{"position":[[0,8]]},"618":{"position":[[98,6]]},"1665":{"position":[[109,5]]}}}],["equals(long",{"_index":1749,"t":{"618":{"position":[[360,13]]}}}],["equiv=\"x",{"_index":2033,"t":{"853":{"position":[[151,8]]},"1515":{"position":[[72,8]]}}}],["err",{"_index":2125,"t":{"859":{"position":[[98,5],[126,5]]},"861":{"position":[[241,5],[252,5]]},"863":{"position":[[242,5],[253,5]]},"865":{"position":[[290,5],[301,5]]},"867":{"position":[[319,5],[347,5],[759,5],[770,5],[1105,5],[1116,5],[1476,5],[1487,5]]},"883":{"position":[[55,5],[90,5]]},"939":{"position":[[26,3],[335,5],[556,3],[601,3],[673,5]]},"941":{"position":[[64,5],[84,5]]},"946":{"position":[[79,5],[247,5]]},"948":{"position":[[57,5],[68,5]]},"950":{"position":[[271,5],[303,5],[827,5],[838,5]]},"953":{"position":[[162,5],[182,5]]},"955":{"position":[[263,5],[283,5]]},"2059":{"position":[[433,3]]}}}],["err,req,res,next",{"_index":2014,"t":{"845":{"position":[[0,37]]}}}],["err.messag",{"_index":2242,"t":{"941":{"position":[[128,13]]},"948":{"position":[[104,13]]},"950":{"position":[[345,13]]},"953":{"position":[[226,13]]},"955":{"position":[[327,13]]}}}],["errno",{"_index":2252,"t":{"946":{"position":[[365,6]]}}}],["error",{"_index":942,"t":{"278":{"position":[[0,5]]},"845":{"position":[[89,18]]},"946":{"position":[[302,7]]},"1373":{"position":[[750,6]]},"1404":{"position":[[585,6]]},"1420":{"position":[[1388,7],[1410,7],[1447,5]]}}}],["error(flag",{"_index":4616,"t":{"1872":{"position":[[1447,11]]}}}],["error_img",{"_index":692,"t":{"179":{"position":[[286,9],[1095,9],[1205,9]]},"221":{"position":[[286,9],[1095,9],[1205,9]]},"1165":{"position":[[286,9],[1095,9],[1205,9]]}}}],["error_imgif",{"_index":731,"t":{"179":{"position":[[1156,11]]},"221":{"position":[[1156,11]]},"1165":{"position":[[1156,11]]}}}],["errorclass",{"_index":3432,"t":{"1375":{"position":[[125,11],[306,16]]}}}],["errorclass]\"></div",{"_index":3430,"t":{"1375":{"position":[[74,19],[277,19],[445,19]]}}}],["errordisplay",{"_index":3009,"t":{"1279":{"position":[[329,12],[458,13]]},"1281":{"position":[[257,13],[324,12],[345,12]]},"1283":{"position":[[55,12]]}}}],["errormessag",{"_index":3017,"t":{"1281":{"position":[[214,16],[240,13]]},"1283":{"position":[[21,12]]}}}],["errormessage={math.random",{"_index":3019,"t":{"1281":{"position":[[505,27]]}}}],["es6",{"_index":4101,"t":{"1638":{"position":[[966,6]]}}}],["es6了，其中html5为网页提供了诸多能力，包括播放音视频，canvas，svg，多线程，本地存储，离线应用，websocket，web",{"_index":649,"t":{"154":{"position":[[229,69]]},"323":{"position":[[229,69]]}}}],["escap",{"_index":3080,"t":{"1312":{"position":[[716,6],[778,6]]}}}],["euclidean",{"_index":6084,"t":{"2439":{"position":[[177,26]]}}}],["eve.pi",{"_index":1107,"t":{"361":{"position":[[7,6]]}}}],["even",{"_index":2417,"t":{"1017":{"position":[[807,4]]},"1437":{"position":[[446,5]]},"1532":{"position":[[118,4]]}}}],["even(set",{"_index":3635,"t":{"1437":{"position":[[353,13]]}}}],["evening，class",{"_index":1151,"t":{"380":{"position":[[970,42]]}}}],["evennumb",{"_index":3632,"t":{"1437":{"position":[[91,15],[165,12]]}}}],["event",{"_index":1009,"t":{"293":{"position":[[105,5]]},"376":{"position":[[54,5]]},"1295":{"position":[[390,7]]},"1816":{"position":[[192,9],[223,9]]},"1872":{"position":[[799,7],[895,6]]}}}],["event.clienti",{"_index":3226,"t":{"1342":{"position":[[1005,15]]}}}],["event.clientx",{"_index":3222,"t":{"1342":{"position":[[895,15]]}}}],["event.detail",{"_index":4950,"t":{"1979":{"position":[[3027,13],[3095,13],[3164,13],[3233,13]]},"1981":{"position":[[1746,13],[1813,13]]}}}],["event.preventdefault",{"_index":3045,"t":{"1295":{"position":[[403,23]]},"1342":{"position":[[365,23]]},"1499":{"position":[[85,23]]}}}],["event]=\"dosometh",{"_index":3762,"t":{"1505":{"position":[[118,23]]}}}],["event_typ",{"_index":1031,"t":{"295":{"position":[[377,15]]},"380":{"position":[[449,15]]}}}],["eventnam",{"_index":3746,"t":{"1493":{"position":[[372,9]]}}}],["ex",{"_index":683,"t":{"179":{"position":[[137,2],[553,2]]},"221":{"position":[[137,2],[553,2]]},"1165":{"position":[[137,2],[553,2]]}}}],["exampl",{"_index":233,"t":{"47":{"position":[[114,8]]},"1017":{"position":[[915,8]]},"1312":{"position":[[328,11]]},"1404":{"position":[[1018,11]]},"1412":{"position":[[147,11]]},"1420":{"position":[[129,9],[523,9]]},"1424":{"position":[[227,9],[533,9]]},"1445":{"position":[[431,9],[1090,9]]},"1472":{"position":[[444,8],[795,9],[1348,8],[1735,9]]}}}],["example.com",{"_index":5239,"t":{"2068":{"position":[[485,11]]}}}],["example.com，在没有任何缓存的情况下，laptop",{"_index":5236,"t":{"2068":{"position":[[354,30]]}}}],["example1",{"_index":3604,"t":{"1424":{"position":[[202,8]]}}}],["example1.item",{"_index":3628,"t":{"1433":{"position":[[115,14]]}}}],["example1.items.filter(funct",{"_index":3629,"t":{"1433":{"position":[[132,30]]}}}],["example1.items.push",{"_index":3626,"t":{"1431":{"position":[[144,21]]}}}],["example2",{"_index":3608,"t":{"1424":{"position":[[508,8]]}}}],["example2_1",{"_index":1589,"t":{"565":{"position":[[533,11]]}}}],["excel",{"_index":1788,"t":{"637":{"position":[[2,5]]},"639":{"position":[[56,5]]},"1860":{"position":[[61,5],[290,5]]}}}],["except",{"_index":727,"t":{"179":{"position":[[1063,6],[1070,9]]},"221":{"position":[[1063,6],[1070,9]]},"273":{"position":[[210,9]]},"1165":{"position":[[1063,6],[1070,9]]}}}],["exec",{"_index":2162,"t":{"867":{"position":[[569,4]]}}}],["execut",{"_index":935,"t":{"273":{"position":[[235,9]]},"648":{"position":[[125,7]]}}}],["exist",{"_index":2812,"t":{"1216":{"position":[[68,8]]}}}],["exit",{"_index":3079,"t":{"1312":{"position":[[690,4],[752,4]]}}}],["exit_0",{"_index":442,"t":{"101":{"position":[[1556,9]]},"198":{"position":[[1556,9]]}}}],["exp",{"_index":1483,"t":{"510":{"position":[[0,5]]}}}],["exp(11.635",{"_index":1494,"t":{"510":{"position":[[261,11]]}}}],["exp(doubl",{"_index":1484,"t":{"510":{"position":[[32,10]]}}}],["experi",{"_index":4462,"t":{"1825":{"position":[[329,11]]}}}],["expert",{"_index":6150,"t":{"2452":{"position":[[249,7]]}}}],["explor",{"_index":3917,"t":{"1561":{"position":[[265,8]]},"1842":{"position":[[1675,8]]},"1852":{"position":[[271,8]]}}}],["explore上网,她第一次访问了一个使用了cookie的电子商务网站,当最初的http请求到达服务器时，该web站点产生一个唯一的id",{"_index":5147,"t":{"2051":{"position":[[160,92]]}}}],["expon",{"_index":1503,"t":{"514":{"position":[[58,9],[89,8]]}}}],["export",{"_index":2302,"t":{"969":{"position":[[121,8],[430,7]]},"975":{"position":[[37,7]]},"1092":{"position":[[770,6],[3800,6]]},"1312":{"position":[[580,6]]}}}],["exports.main",{"_index":4597,"t":{"1872":{"position":[[771,19]]}}}],["express",{"_index":1154,"t":{"385":{"position":[[27,7]]},"396":{"position":[[75,12]]},"762":{"position":[[32,7],[52,7],[70,7],[90,7]]},"764":{"position":[[0,7],[86,11]]},"766":{"position":[[14,7]]},"773":{"position":[[11,7],[61,11]]},"782":{"position":[[24,7]]},"789":{"position":[[265,7],[316,12]]},"801":{"position":[[0,7],[13,30]]},"810":{"position":[[0,20],[196,7],[484,7],[535,12]]},"817":{"position":[[8,7]]},"825":{"position":[[93,7],[144,12],[711,13],[936,13]]},"831":{"position":[[171,7],[222,12]]},"833":{"position":[[51,7],[102,12]]},"839":{"position":[[0,7],[50,7]]},"847":{"position":[[276,7],[531,13],[610,7],[896,13]]},"923":{"position":[[3,9]]},"2018":{"position":[[389,7]]}}}],["express();app.get(\"/us",{"_index":1931,"t":{"782":{"position":[[75,26]]}}}],["express();app.post(\"/us",{"_index":2024,"t":{"847":{"position":[[327,27]]}}}],["express();app.use(express.json());app.post(\"/us",{"_index":2028,"t":{"847":{"position":[[661,51]]}}}],["express.json",{"_index":2019,"t":{"847":{"position":[[34,12]]}}}],["express.rout",{"_index":1975,"t":{"810":{"position":[[74,16],[248,18]]},"843":{"position":[[4,16]]}}}],["express.stat",{"_index":1912,"t":{"762":{"position":[[3,16]]},"789":{"position":[[0,41],[332,14]]},"847":{"position":[[0,33]]}}}],["express.urlencod",{"_index":2021,"t":{"847":{"position":[[74,18]]}}}],["express@4.17.1",{"_index":1913,"t":{"770":{"position":[[26,14]]}}}],["expressconst",{"_index":1929,"t":{"782":{"position":[[9,14]]},"789":{"position":[[250,14]]},"810":{"position":[[469,14]]},"825":{"position":[[78,14]]},"831":{"position":[[156,14]]},"833":{"position":[[36,14]]},"847":{"position":[[261,14],[595,14]]}}}],["ext",{"_index":2329,"t":{"989":{"position":[[46,3]]}}}],["extend",{"_index":1321,"t":{"457":{"position":[[100,8],[252,7]]},"581":{"position":[[170,7]]},"585":{"position":[[116,7]]},"847":{"position":[[179,9]]},"1092":{"position":[[2864,6],[2940,8]]},"1223":{"position":[[563,7],[2115,7],[3065,7]]},"1239":{"position":[[110,7],[747,7]]},"1248":{"position":[[839,7],[953,7],[1451,7]]},"1251":{"position":[[162,7]]},"1255":{"position":[[26,7]]},"1257":{"position":[[77,7]]},"1259":{"position":[[36,7]]},"1261":{"position":[[145,7],[312,7]]},"1263":{"position":[[102,7],[874,7],[1094,7],[1615,7]]},"1287":{"position":[[109,7]]},"1289":{"position":[[378,7]]},"1291":{"position":[[57,7]]},"1295":{"position":[[349,7]]},"1299":{"position":[[177,7]]},"1312":{"position":[[166,7]]}}}],["extens",{"_index":1965,"t":{"795":{"position":[[241,11]]},"825":{"position":[[649,11],[874,11]]}}}],["extra",{"_index":2344,"t":{"1004":{"position":[[90,6]]}}}],["eybdoog",{"_index":3549,"t":{"1412":{"position":[[507,9]]}}}],["eyecolor",{"_index":4177,"t":{"1653":{"position":[[149,8]]}}}],["eyecolor:\"blu",{"_index":4173,"t":{"1653":{"position":[[87,17]]},"1697":{"position":[[106,17]]}}}],["eyj0",{"_index":765,"t":{"245":{"position":[[330,11]]}}}],["f",{"_index":294,"t":{"66":{"position":[[370,12]]},"171":{"position":[[370,12]]},"400":{"position":[[118,2]]},"426":{"position":[[1050,3]]},"498":{"position":[[104,1]]},"500":{"position":[[132,2],[177,2],[331,1]]},"502":{"position":[[214,1]]},"504":{"position":[[206,2],[240,1],[400,1]]},"627":{"position":[[189,4],[316,4]]},"658":{"position":[[152,14]]},"946":{"position":[[131,2]]},"1642":{"position":[[147,7]]},"1833":{"position":[[225,2]]},"2208":{"position":[[135,4],[637,35]]},"2373":{"position":[[60,2]]}}}],["f(n",{"_index":5987,"t":{"2317":{"position":[[28,19],[87,4]]}}}],["f(x,y)=i(x,y)r(x,i",{"_index":6002,"t":{"2391":{"position":[[148,19]]}}}],["f(x,y)。f",{"_index":5999,"t":{"2391":{"position":[[0,33]]}}}],["f(x,y)的幅值f的均匀量化，实质上就是将图像的灰度取值范围[0，lmax]划分成l个等级（l为正整数，lmax=l",{"_index":6009,"t":{"2395":{"position":[[0,84]]}}}],["f(x,y)表示图像在坐标点(x,y)处的灰度值i",{"_index":6006,"t":{"2391":{"position":[[199,39]]}}}],["f(x,y)表示数字图像。设x∈[0，m",{"_index":6035,"t":{"2412":{"position":[[0,33]]}}}],["f12",{"_index":2690,"t":{"1096":{"position":[[133,3]]},"1679":{"position":[[143,3]]}}}],["f1，f2信道能通过的最高频率，f1",{"_index":5380,"t":{"2133":{"position":[[119,44]]}}}],["f:\\11.txt",{"_index":2251,"t":{"946":{"position":[[350,12]]}}}],["f:\\\\11.txt",{"_index":2255,"t":{"946":{"position":[[418,13]]}}}],["facebook",{"_index":2370,"t":{"1010":{"position":[[248,8]]},"1017":{"position":[[686,11]]},"1244":{"position":[[85,8]]},"1275":{"position":[[301,8]]}}}],["fadeindown",{"_index":3770,"t":{"1507":{"position":[[620,21],[660,11],[1697,11],[1958,10]]}}}],["fadeindown;}/*从下到上进入*/.fadeinupleft",{"_index":3771,"t":{"1507":{"position":[[691,35]]}}}],["fadeinleft",{"_index":3776,"t":{"1507":{"position":[[918,11],[3234,11],[3447,10]]}}}],["fadeinleft;}/*中心旋转*/.corerot",{"_index":3777,"t":{"1507":{"position":[[949,31]]}}}],["fadeinright",{"_index":3774,"t":{"1507":{"position":[[833,12],[2809,12],[3021,11]]}}}],["fadeinright;}/*从左到右进入*/.fadeinleft",{"_index":3775,"t":{"1507":{"position":[[865,34]]}}}],["fadeinupleft",{"_index":3772,"t":{"1507":{"position":[[745,13],[2241,13],[2514,12]]}}}],["fadeinupleft;}/*从右到左进入*/.fadeinright",{"_index":3773,"t":{"1507":{"position":[[778,36]]}}}],["fahrenheit",{"_index":4265,"t":{"1713":{"position":[[277,11]]},"1715":{"position":[[99,11]]}}}],["fail",{"_index":927,"t":{"273":{"position":[[28,6]]},"278":{"position":[[6,6],[158,7]]},"1094":{"position":[[1155,4],[1199,4],[1241,4],[1279,4],[1320,4],[1363,4],[1767,4]]}}}],["failur",{"_index":933,"t":{"273":{"position":[[201,8]]}}}],["fallback",{"_index":3985,"t":{"1592":{"position":[[196,8]]}}}],["fals",{"_index":168,"t":{"33":{"position":[[570,6]]},"90":{"position":[[235,6]]},"92":{"position":[[74,48],[190,8],[468,6]]},"390":{"position":[[647,5],[675,5],[717,5]]},"394":{"position":[[289,6],[447,5]]},"396":{"position":[[115,5]]},"408":{"position":[[205,6]]},"420":{"position":[[34,18]]},"490":{"position":[[103,6],[381,5],[392,5]]},"565":{"position":[[299,5]]},"847":{"position":[[189,5]]},"969":{"position":[[197,6]]},"1084":{"position":[[339,5]]},"1283":{"position":[[88,7]]},"1321":{"position":[[254,6]]},"1323":{"position":[[85,7]]},"1342":{"position":[[1631,6],[1827,6]]},"1346":{"position":[[391,6]]},"1366":{"position":[[131,6]]},"1373":{"position":[[366,6],[631,5]]},"1395":{"position":[[166,5]]},"1404":{"position":[[567,6]]},"1485":{"position":[[249,7]]},"1636":{"position":[[23,6],[51,6],[222,5],[249,5],[271,5]]},"1638":{"position":[[951,14]]},"1644":{"position":[[108,5]]},"1693":{"position":[[16,6],[44,6]]},"1807":{"position":[[188,5]]},"1842":{"position":[[1406,5],[1475,6],[1959,5],[2114,6]]},"1872":{"position":[[1428,5]]},"1898":{"position":[[546,6],[636,5],[785,6]]},"1933":{"position":[[805,5]]},"1987":{"position":[[214,5]]}}}],["falseboolean('a",{"_index":4075,"t":{"1636":{"position":[[150,18]]}}}],["falseboolean(1",{"_index":4073,"t":{"1636":{"position":[[110,16]]}}}],["falseboolean(undefin",{"_index":4077,"t":{"1636":{"position":[[194,24]]}}}],["falseisnan('a",{"_index":4105,"t":{"1638":{"position":[[1043,16]]}}}],["falsenul",{"_index":4257,"t":{"1707":{"position":[[102,9]]}}}],["far",{"_index":3212,"t":{"1342":{"position":[[523,3],[644,3]]}}}],["far近。far不能小于near，其默认值为infin",{"_index":3214,"t":{"1342":{"position":[[651,45]]}}}],["fatal",{"_index":3428,"t":{"1373":{"position":[[898,7]]}}}],["favicon",{"_index":2406,"t":{"1017":{"position":[[492,8]]},"1027":{"position":[[87,8],[163,8]]}}}],["favicon.ico",{"_index":2209,"t":{"910":{"position":[[863,12]]}}}],["favicon，为“favorit",{"_index":3911,"t":{"1561":{"position":[[0,50]]}}}],["fbx",{"_index":3290,"t":{"1353":{"position":[[226,3]]}}}],["fcs之外的数据，其最大值是6＋6＋2＋1500＝1514",{"_index":5363,"t":{"2127":{"position":[[1734,56]]}}}],["fcs校验序列添加至k",{"_index":5275,"t":{"2113":{"position":[[181,24]]}}}],["fdm",{"_index":5249,"t":{"2079":{"position":[[395,7]]},"2117":{"position":[[310,8]]}}}],["fdm和tdm",{"_index":5297,"t":{"2117":{"position":[[372,15]]}}}],["fdm将r",{"_index":5295,"t":{"2117":{"position":[[319,5]]}}}],["fdm：他们约定将河道分成三个部分，河道左边属于甲和a，中间属于乙和b，右边属于丙和c",{"_index":5300,"t":{"2117":{"position":[[597,51]]}}}],["feat",{"_index":564,"t":{"124":{"position":[[142,4]]},"126":{"position":[[262,5],[304,5]]}}}],["feat(blog",{"_index":588,"t":{"126":{"position":[[218,11]]}}}],["featur",{"_index":2631,"t":{"1092":{"position":[[3977,8]]},"2534":{"position":[[370,11]]},"2543":{"position":[[370,11]]},"2552":{"position":[[370,11]]}}}],["feature({svg",{"_index":2618,"t":{"1092":{"position":[[3486,13]]}}}],["featurelist",{"_index":2595,"t":{"1092":{"position":[[2220,11],[3047,11]]}}}],["featurelist.map((prop",{"_index":2629,"t":{"1092":{"position":[[3942,24]]}}}],["feed",{"_index":3660,"t":{"1445":{"position":[[583,4]]}}}],["fext",{"_index":2339,"t":{"996":{"position":[[49,4]]}}}],["ff0000",{"_index":4766,"t":{"1933":{"position":[[75,10]]}}}],["ff05",{"_index":5609,"t":{"2181":{"position":[[260,5]]}}}],["ff05:【0:0:0:0:0:0】:b3",{"_index":5608,"t":{"2181":{"position":[[235,21]]}}}],["fff",{"_index":2061,"t":{"853":{"position":[[540,5]]},"1248":{"position":[[421,5]]},"1255":{"position":[[252,5]]},"1935":{"position":[[117,7]]},"1970":{"position":[[353,7]]}}}],["ffff00",{"_index":4768,"t":{"1933":{"position":[[110,10]]}}}],["ffffff",{"_index":2715,"t":{"1108":{"position":[[104,7]]},"1340":{"position":[[705,10]]},"1366":{"position":[[858,8]]},"1991":{"position":[[235,10]]}}}],["ffffff8a",{"_index":3314,"t":{"1366":{"position":[[163,10]]}}}],["fi=(d/8)×(i",{"_index":5548,"t":{"2169":{"position":[[739,20]]}}}],["field",{"_index":1790,"t":{"639":{"position":[[42,13]]},"1017":{"position":[[863,5]]},"1293":{"position":[[55,5]]},"1860":{"position":[[47,13]]},"1981":{"position":[[221,5],[278,5],[297,5],[381,5],[432,5],[635,5],[682,5],[735,5]]},"2523":{"position":[[34,67]]}}}],["field输入框、cel",{"_index":4982,"t":{"1981":{"position":[[1298,19]]}}}],["fifteen",{"_index":4145,"t":{"1642":{"position":[[691,8],[890,8]]}}}],["file",{"_index":1838,"t":{"695":{"position":[[15,54],[107,11],[149,30],[191,4]]},"700":{"position":[[166,4],[192,4]]},"791":{"position":[[149,5]]},"941":{"position":[[247,4]]},"946":{"position":[[326,4]]},"953":{"position":[[365,4]]},"1058":{"position":[[267,4]]},"1124":{"position":[[47,6]]},"1312":{"position":[[575,4]]},"1321":{"position":[[122,7]]},"1323":{"position":[[293,5]]},"1981":{"position":[[994,4],[1804,4],[1852,4],[1975,7],[2100,8]]},"2452":{"position":[[308,4]]},"2454":{"position":[[281,4]]}}}],["file(具体文件格式)[,...n][to",{"_index":1874,"t":{"700":{"position":[[119,22]]}}}],["file(具体文件格式)|add",{"_index":1877,"t":{"700":{"position":[[211,16]]}}}],["file.css",{"_index":3922,"t":{"1563":{"position":[[241,10]]}}}],["file.j",{"_index":3925,"t":{"1563":{"position":[[492,8]]}}}],["file.url",{"_index":4992,"t":{"1981":{"position":[[1959,9]]}}}],["file_nam",{"_index":719,"t":{"179":{"position":[[874,9],[918,9]]},"221":{"position":[[874,9],[918,9]]},"1165":{"position":[[874,9],[918,9]]}}}],["file_name.split('?')[0",{"_index":721,"t":{"179":{"position":[[930,23]]},"221":{"position":[[930,23]]},"1165":{"position":[[930,23]]}}}],["fileapp.jsclos",{"_index":3075,"t":{"1312":{"position":[[559,15]]}}}],["filegroup",{"_index":1845,"t":{"698":{"position":[[106,10]]},"700":{"position":[[142,9],[228,9],[250,9],[272,9]]}}}],["filegrowth=事务日志文件增长大小)][col",{"_index":1849,"t":{"698":{"position":[[299,31]]}}}],["filegrowth=数据文件增长大小)[log",{"_index":1848,"t":{"698":{"position":[[193,24]]}}}],["filelist",{"_index":4827,"t":{"1964":{"position":[[393,9]]},"1981":{"position":[[1008,8],[1526,9],[2038,8],[2055,8],[2142,8]]}}}],["filelist.push",{"_index":4996,"t":{"1981":{"position":[[2084,15]]}}}],["filenam",{"_index":1846,"t":{"698":{"position":[[139,20],[239,22]]},"969":{"position":[[134,9]]}}}],["filename='d:\\teachdata.ldf",{"_index":1868,"t":{"698":{"position":[[731,28]]}}}],["filename='d:\\teachdata.mdf",{"_index":1863,"t":{"698":{"position":[[643,28]]}}}],["filepath",{"_index":4991,"t":{"1981":{"position":[[1949,9]]}}}],["fileread",{"_index":3121,"t":{"1323":{"position":[[686,13]]}}}],["files.s",{"_index":3112,"t":{"1323":{"position":[[335,10],[391,10]]}}}],["files.type.indexof('imag",{"_index":3116,"t":{"1323":{"position":[[514,28]]}}}],["fileworth=20)log",{"_index":1866,"t":{"698":{"position":[[694,16]]}}}],["fileworth=5",{"_index":1870,"t":{"698":{"position":[[781,12]]}}}],["file）是一种window",{"_index":6143,"t":{"2452":{"position":[[79,28]]}}}],["fill",{"_index":1743,"t":{"618":{"position":[[59,4]]},"1507":{"position":[[116,4],[162,4],[292,4],[338,4],[472,4],[518,4]]}}}],["fill(int",{"_index":1752,"t":{"618":{"position":[[561,10]]}}}],["filter",{"_index":3023,"t":{"1283":{"position":[[178,8]]},"1801":{"position":[[23,8]]}}}],["filter()、concat",{"_index":3627,"t":{"1433":{"position":[[42,17]]}}}],["fin",{"_index":5861,"t":{"2247":{"position":[[1546,9],[1566,18]]}}}],["fin+ack",{"_index":5966,"t":{"2287":{"position":[[924,12],[948,12]]}}}],["final",{"_index":1285,"t":{"443":{"position":[[363,5],[375,35],[411,5],[434,24],[459,30]]},"449":{"position":[[322,9],[382,9]]}}}],["find",{"_index":4441,"t":{"1811":{"position":[[0,6]]}}}],["findindex",{"_index":4444,"t":{"1813":{"position":[[0,11]]}}}],["finit",{"_index":5892,"t":{"2263":{"position":[[315,16]]}}}],["fin则重新发送ack",{"_index":5812,"t":{"2234":{"position":[[146,35]]}}}],["fin控制报文段（seg",{"_index":5809,"t":{"2234":{"position":[[48,17]]}}}],["firecm",{"_index":2532,"t":{"1062":{"position":[[149,7]]}}}],["first",{"_index":1052,"t":{"303":{"position":[[218,5]]},"1012":{"position":[[89,5]]},"1667":{"position":[[73,5]]},"1756":{"position":[[52,5]]},"1811":{"position":[[92,5]]},"1813":{"position":[[95,5]]},"2220":{"position":[[29,14]]}}}],["firstday",{"_index":1109,"t":{"363":{"position":[[134,8],[342,10]]}}}],["firstnam",{"_index":1595,"t":{"567":{"position":[[157,10]]},"1416":{"position":[[218,10],[285,10],[503,10]]},"1653":{"position":[[112,9]]},"1655":{"position":[[55,10]]},"1657":{"position":[[103,9]]},"1659":{"position":[[291,10]]},"1661":{"position":[[203,10]]},"2003":{"position":[[72,10],[83,14],[344,11],[389,11],[436,11]]}}}],["firstname,str",{"_index":5057,"t":{"2003":{"position":[[522,16]]}}}],["firstname:\"bil",{"_index":4170,"t":{"1653":{"position":[[42,18]]},"1683":{"position":[[145,18]]},"1697":{"position":[[61,18]]},"1749":{"position":[[217,18]]}}}],["firstweek",{"_index":814,"t":{"251":{"position":[[158,9]]}}}],["firstweek).day",{"_index":817,"t":{"251":{"position":[[248,15]]}}}],["fix",{"_index":565,"t":{"124":{"position":[[155,3]]},"126":{"position":[[91,3],[142,4],[164,4]]}}}],["fixedupd",{"_index":1069,"t":{"305":{"position":[[841,13]]}}}],["fixedupdate:以固定频率调用的函数(默认0.02",{"_index":1058,"t":{"305":{"position":[[161,32]]}}}],["fi是基于iee",{"_index":5373,"t":{"2131":{"position":[[19,9]]}}}],["flag",{"_index":4200,"t":{"1665":{"position":[[177,5],[235,6]]},"1872":{"position":[[1222,4],[1242,4],[1286,4],[1387,5]]}}}],["flag.indexof('functionnam",{"_index":4611,"t":{"1872":{"position":[[1249,28]]}}}],["flag=fals",{"_index":4203,"t":{"1665":{"position":[[214,11]]}}}],["flag=tru",{"_index":4202,"t":{"1665":{"position":[[195,10]]}}}],["flask",{"_index":115,"t":{"27":{"position":[[4,5],[37,5],[94,5]]},"29":{"position":[[0,5],[33,5],[90,5]]},"33":{"position":[[94,5],[102,5],[139,5],[152,6],[281,5],[1080,5]]},"55":{"position":[[9,5],[33,9],[59,5],[85,5],[104,5]]}}}],["flask(__name__",{"_index":159,"t":{"33":{"position":[[297,15]]}}}],["flask_cor",{"_index":155,"t":{"33":{"position":[[196,10]]},"49":{"position":[[133,10]]}}}],["flen",{"_index":4333,"t":{"1760":{"position":[[42,5],[149,5]]}}}],["flex",{"_index":2067,"t":{"853":{"position":[[588,5]]},"1248":{"position":[[714,5],[720,4]]},"1386":{"position":[[126,7],[213,5]]},"1515":{"position":[[873,5],[1382,5]]},"1960":{"position":[[197,5]]},"1976":{"position":[[79,5],[85,4]]},"1981":{"position":[[1092,4],[1241,5]]}}}],["flexbox",{"_index":3458,"t":{"1386":{"position":[[116,9],[188,15]]}}}],["flip",{"_index":377,"t":{"92":{"position":[[566,4]]}}}],["float",{"_index":1251,"t":{"437":{"position":[[37,5],[51,5],[123,5],[160,5]]},"486":{"position":[[158,5],[180,5]]},"488":{"position":[[205,6]]},"490":{"position":[[119,5]]},"494":{"position":[[607,5]]},"498":{"position":[[98,5]]},"500":{"position":[[192,5],[325,5]]},"504":{"position":[[226,5],[245,5],[394,5],[409,5]]},"506":{"position":[[44,5],[66,5]]},"508":{"position":[[44,5],[66,5]]},"565":{"position":[[177,5]]},"588":{"position":[[69,5],[83,5]]},"596":{"position":[[110,9]]},"1248":{"position":[[451,6]]},"1255":{"position":[[282,6]]},"1342":{"position":[[516,6],[529,5]]}}}],["float.valueof(\"80",{"_index":1412,"t":{"494":{"position":[[617,20]]}}}],["float:left",{"_index":4924,"t":{"1979":{"position":[[2200,11]]}}}],["float:left;}.icon0",{"_index":4921,"t":{"1979":{"position":[[2153,19]]}}}],["float[5];boy[0]=21.3f;boy[1]=23.89f;boy[2]=2.0f;boy[3]=23f;boy[4]=668.8f",{"_index":1640,"t":{"596":{"position":[[130,73]]}}}],["floatvalu",{"_index":1377,"t":{"486":{"position":[[164,12]]}}}],["floatvar",{"_index":1782,"t":{"627":{"position":[[234,9],[359,9]]}}}],["flodlc/nebula",{"_index":2699,"t":{"1101":{"position":[[12,14]]}}}],["flodlc/nebula\";<div",{"_index":2701,"t":{"1104":{"position":[[29,21]]}}}],["flodlc/nebula\";export",{"_index":2713,"t":{"1106":{"position":[[28,23]]}}}],["floor",{"_index":1433,"t":{"500":{"position":[[45,7]]}}}],["floor(doubl",{"_index":1436,"t":{"500":{"position":[[142,12]]}}}],["floor(float",{"_index":1437,"t":{"500":{"position":[[165,11]]}}}],["flow",{"_index":6317,"t":{"2523":{"position":[[29,4]]}}}],["flux",{"_index":3004,"t":{"1275":{"position":[[263,6]]}}}],["fm",{"_index":6233,"t":{"2469":{"position":[[701,2],[1111,2]]}}}],["focu",{"_index":2605,"t":{"1092":{"position":[[2489,6],[2621,5]]},"1493":{"position":[[386,7]]}}}],["folder",{"_index":2551,"t":{"1084":{"position":[[577,7]]}}}],["font",{"_index":2073,"t":{"853":{"position":[[646,4]]},"1094":{"position":[[351,4]]},"1248":{"position":[[215,5],[464,4],[481,4]]},"1255":{"position":[[295,4],[312,4]]},"1530":{"position":[[91,4]]},"1960":{"position":[[253,4]]},"1979":{"position":[[2119,4],[2136,4]]}}}],["fontsiz",{"_index":3448,"t":{"1380":{"position":[[163,9],[173,8],[227,9],[343,9]]}}}],["fontsize=\"16",{"_index":4957,"t":{"1981":{"position":[[115,13],[541,13],[904,13]]}}}],["foo",{"_index":3516,"t":{"1404":{"position":[[673,4],[767,3],[801,3],[821,5]]},"1416":{"position":[[229,6],[263,4],[514,6]]},"1424":{"position":[[269,5],[309,3],[600,5],[649,3]]}}}],["footer",{"_index":2454,"t":{"1017":{"position":[[2162,7]]},"1037":{"position":[[463,7]]},"1092":{"position":[[2983,7]]}}}],["for(int",{"_index":1223,"t":{"410":{"position":[[354,7]]},"412":{"position":[[237,7]]},"414":{"position":[[174,7]]},"416":{"position":[[225,7]]},"565":{"position":[[686,7]]}}}],["for(typ",{"_index":1688,"t":{"606":{"position":[[15,8]]}}}],["for=\"(item",{"_index":3606,"t":{"1424":{"position":[[408,11]]},"1445":{"position":[[215,11]]}}}],["for=\"(todo",{"_index":3664,"t":{"1445":{"position":[[654,11]]}}}],["for=\"(valu",{"_index":3617,"t":{"1426":{"position":[[299,12],[453,12]]}}}],["for=\"item",{"_index":3486,"t":{"1399":{"position":[[720,9]]},"1424":{"position":[[127,9],[722,9]]},"1428":{"position":[[277,9]]},"1441":{"position":[[75,9]]},"1445":{"position":[[48,9]]}}}],["for=\"n",{"_index":3631,"t":{"1437":{"position":[[81,6],[343,6]]},"1439":{"position":[[48,6]]}}}],["for=\"new",{"_index":3654,"t":{"1445":{"position":[[488,8]]}}}],["for=\"set",{"_index":3634,"t":{"1437":{"position":[[318,8]]}}}],["for=\"todo",{"_index":3471,"t":{"1395":{"position":[[365,9]]},"1443":{"position":[[133,9],[295,9]]}}}],["for=\"valu",{"_index":3613,"t":{"1426":{"position":[[73,10]]}}}],["ford",{"_index":5744,"t":{"2208":{"position":[[10,12]]}}}],["foreach",{"_index":4406,"t":{"1797":{"position":[[0,9]]}}}],["fori",{"_index":1344,"t":{"469":{"position":[[27,4]]}}}],["fork",{"_index":964,"t":{"285":{"position":[[59,4],[72,4]]},"287":{"position":[[135,4]]},"353":{"position":[[17,4]]},"365":{"position":[[135,4]]}}}],["form",{"_index":306,"t":{"66":{"position":[[613,4]]},"171":{"position":[[613,4]]},"1271":{"position":[[415,7]]},"1273":{"position":[[681,5],[846,10]]},"1295":{"position":[[344,4],[481,5],[555,7]]},"1445":{"position":[[441,5],[620,7]]},"1499":{"position":[[109,5]]},"1964":{"position":[[471,4]]}}}],["form.j",{"_index":4983,"t":{"1981":{"position":[[1318,8]]}}}],["form.wxml",{"_index":4954,"t":{"1981":{"position":[[0,10]]}}}],["format",{"_index":1780,"t":{"627":{"position":[[27,8],[55,8],[111,8]]},"2452":{"position":[[144,26]]}}}],["formatdate(d",{"_index":4693,"t":{"1898":{"position":[[649,16]]}}}],["format，tiff）是一种灵活的位图格式，主要用来存储包括照片和艺术图在内的图像，扩展名为.tif",{"_index":6153,"t":{"2452":{"position":[[313,51]]}}}],["formdata",{"_index":4993,"t":{"1981":{"position":[[1983,9]]}}}],["forward",{"_index":5757,"t":{"2212":{"position":[[33,38]]}}}],["forwardrefresh",{"_index":3082,"t":{"1312":{"position":[[813,14]]}}}],["for循环中的声明不会被提升，所以在循环结束后，i",{"_index":4057,"t":{"1626":{"position":[[293,29]]}}}],["for循环中的声明会被提升到函数的最前面，所以在循环结束后，i",{"_index":4056,"t":{"1626":{"position":[[130,35]]}}}],["found",{"_index":5139,"t":{"2049":{"position":[[189,5]]}}}],["found</h1",{"_index":2214,"t":{"914":{"position":[[306,12]]}}}],["fp",{"_index":724,"t":{"179":{"position":[[995,3]]},"221":{"position":[[995,3]]},"1165":{"position":[[995,3]]},"2511":{"position":[[306,40]]}}}],["fp.write(img_binari",{"_index":725,"t":{"179":{"position":[[999,20]]},"221":{"position":[[999,20]]},"1165":{"position":[[999,20]]}}}],["fpath",{"_index":2176,"t":{"881":{"position":[[179,5]]},"887":{"position":[[53,5],[84,5],[145,5]]},"991":{"position":[[6,5]]},"996":{"position":[[6,5]]}}}],["fps），每秒钟按隔行扫描处理的图像数称为场率，例如每秒25帧或50场(60场/",{"_index":6277,"t":{"2509":{"position":[[155,72]]}}}],["fr",{"_index":5127,"t":{"2047":{"position":[[116,2]]}}}],["fr(full",{"_index":6297,"t":{"2516":{"position":[[17,25]]}}}],["fragment",{"_index":5537,"t":{"2169":{"position":[[332,9]]}}}],["fragment。//=1表示这不是最后一片，=0",{"_index":5539,"t":{"2169":{"position":[[382,48]]}}}],["frame",{"_index":1053,"t":{"303":{"position":[[224,5],[283,5]]},"2104":{"position":[[0,23]]},"2148":{"position":[[134,8]]}}}],["framebord",{"_index":3988,"t":{"1592":{"position":[[357,11]]}}}],["frameborder=\"0",{"_index":3981,"t":{"1592":{"position":[[90,15]]}}}],["from(transpar",{"_index":2081,"t":{"853":{"position":[[788,18]]}}}],["fromopenid",{"_index":4602,"t":{"1872":{"position":[[928,11],[1112,10],[1512,10]]}}}],["front",{"_index":2368,"t":{"1010":{"position":[[227,5]]}}}],["fruit",{"_index":4327,"t":{"1754":{"position":[[31,6],[97,6]]},"1756":{"position":[[0,6]]},"1758":{"position":[[0,6]]},"1760":{"position":[[28,7],[232,7]]},"1762":{"position":[[32,6],[107,6],[159,6],[245,6]]},"1765":{"position":[[26,6],[93,6],[144,6]]},"1767":{"position":[[34,6],[108,6],[146,6]]},"1769":{"position":[[68,6],[137,6]]},"1771":{"position":[[51,6],[129,6]]},"1773":{"position":[[4,6],[77,6]]},"1775":{"position":[[62,6],[133,6]]},"1777":{"position":[[27,6],[219,6]]},"1781":{"position":[[59,6],[235,6]]},"1784":{"position":[[49,6],[117,6]]},"1786":{"position":[[44,6],[112,6]]}}}],["fruit/kiwi.gif",{"_index":5150,"t":{"2055":{"position":[[253,15],[669,15]]}}}],["fruits.length;text",{"_index":4336,"t":{"1760":{"position":[[105,18]]}}}],["fruits.pop",{"_index":4350,"t":{"1765":{"position":[[200,13]]}}}],["fruits.push(\"kiwi",{"_index":4352,"t":{"1767":{"position":[[202,20]]}}}],["fruits.revers",{"_index":4381,"t":{"1786":{"position":[[119,25]]}}}],["fruits.slice(1",{"_index":4378,"t":{"1781":{"position":[[129,16],[305,15]]}}}],["fruits[0",{"_index":4331,"t":{"1756":{"position":[[60,10]]},"1775":{"position":[[117,10]]}}}],["fruits[fruits.length",{"_index":4332,"t":{"1758":{"position":[[59,20]]}}}],["fruits[i",{"_index":4338,"t":{"1760":{"position":[[179,9]]}}}],["fs",{"_index":2110,"t":{"855":{"position":[[38,2]]},"857":{"position":[[6,2]]},"867":{"position":[[14,2]]},"879":{"position":[[6,2]]},"932":{"position":[[0,2]]},"934":{"position":[[0,2]]},"939":{"position":[[277,2],[615,2]]},"941":{"position":[[6,2]]},"946":{"position":[[6,2],[171,2]]},"950":{"position":[[3,2],[122,2],[213,2]]},"953":{"position":[[97,2]]},"955":{"position":[[190,2]]},"962":{"position":[[35,2]]}}}],["fs.max大于信号中最高频率fmax的2倍时，即：fs.max>=2fmax",{"_index":6230,"t":{"2469":{"position":[[553,87]]}}}],["fs.readfil",{"_index":2230,"t":{"932":{"position":[[39,26]]}}}],["fs.readfile(fpath",{"_index":2177,"t":{"883":{"position":[[19,18]]}}}],["fs.readfile(path",{"_index":2232,"t":{"937":{"position":[[0,16]]},"944":{"position":[[0,16]]}}}],["fs.writefil",{"_index":2137,"t":{"861":{"position":[[167,13]]},"863":{"position":[[169,13]]},"865":{"position":[[214,13]]},"867":{"position":[[685,13],[1400,13]]},"932":{"position":[[66,14]]},"950":{"position":[[784,16]]}}}],["fs.writefile(\"f:/11.txt",{"_index":2256,"t":{"948":{"position":[[0,25]]}}}],["fs.writefile(path.join(__dirnam",{"_index":2165,"t":{"867":{"position":[[1034,33]]}}}],["fs;f",{"_index":1785,"t":{"627":{"position":[[280,5]]}}}],["fs=require('f",{"_index":2231,"t":{"934":{"position":[[38,17]]}}}],["fs=require('fs');fs.readfile('./files/11.txt','utf8',function(err,datastr",{"_index":2235,"t":{"939":{"position":[[50,75]]}}}],["fsm",{"_index":5933,"t":{"2279":{"position":[[274,9],[284,9]]}}}],["fs、path、http",{"_index":2284,"t":{"960":{"position":[[17,12]]}}}],["ftp",{"_index":5096,"t":{"2037":{"position":[[46,4]]},"2141":{"position":[[1684,102]]},"2244":{"position":[[35,3]]},"2291":{"position":[[0,46],[83,11],[411,26]]}}}],["ftth",{"_index":5247,"t":{"2077":{"position":[[171,8]]}}}],["full",{"_index":232,"t":{"47":{"position":[[109,4]]},"1838":{"position":[[50,4],[205,4],[369,4],[536,4]]},"1840":{"position":[[46,4]]}}}],["full\">button</button",{"_index":393,"t":{"95":{"position":[[211,21]]}}}],["fullnam",{"_index":2331,"t":{"991":{"position":[[38,8]]},"1416":{"position":[[160,8],[253,9],[552,9]]},"1418":{"position":[[57,9]]},"1655":{"position":[[104,8],[138,8]]},"1657":{"position":[[46,8]]},"1661":{"position":[[254,8]]}}}],["func",{"_index":397,"t":{"97":{"position":[[56,4]]},"99":{"position":[[40,4]]},"196":{"position":[[40,4]]}}}],["function",{"_index":90,"t":{"23":{"position":[[3,12],[498,12]]},"25":{"position":[[279,8]]},"70":{"position":[[40,8],[96,8]]},"114":{"position":[[261,8]]},"126":{"position":[[420,8]]},"211":{"position":[[261,8]]},"819":{"position":[[8,8]]},"825":{"position":[[222,8]]},"831":{"position":[[300,8]]},"833":{"position":[[180,8]]},"853":{"position":[[1029,8],[1366,8]]},"859":{"position":[[89,8]]},"861":{"position":[[0,8],[232,8]]},"863":{"position":[[0,8],[233,8]]},"865":{"position":[[281,8]]},"867":{"position":[[310,8],[750,8],[1096,8],[1467,8]]},"879":{"position":[[163,8]]},"881":{"position":[[21,8]]},"883":{"position":[[46,8]]},"939":{"position":[[326,8],[664,8]]},"941":{"position":[[55,8]]},"946":{"position":[[70,8],[238,8]]},"948":{"position":[[48,8]]},"950":{"position":[[262,8],[818,8]]},"953":{"position":[[153,8]]},"955":{"position":[[254,8]]},"971":{"position":[[110,8],[324,9]]},"973":{"position":[[118,8]]},"1092":{"position":[[785,8],[1222,8],[1691,8],[3477,8],[3815,8]]},"1223":{"position":[[2726,10]]},"1237":{"position":[[211,8]]},"1241":{"position":[[78,8]]},"1267":{"position":[[114,8]]},"1269":{"position":[[36,8]]},"1271":{"position":[[679,21]]},"1273":{"position":[[901,20]]},"1312":{"position":[[595,8]]},"1323":{"position":[[785,8],[1053,8]]},"1325":{"position":[[268,8]]},"1373":{"position":[[788,8]]},"1397":{"position":[[251,8]]},"1404":{"position":[[1158,8]]},"1406":{"position":[[189,8],[626,8]]},"1412":{"position":[[232,8]]},"1414":{"position":[[119,8],[413,8]]},"1416":{"position":[[296,8],[368,8],[562,8]]},"1418":{"position":[[84,8],[160,8]]},"1420":{"position":[[672,8],[800,8],[1090,8]]},"1437":{"position":[[178,8],[452,8]]},"1445":{"position":[[1287,8]]},"1472":{"position":[[866,8],[1806,8]]},"1622":{"position":[[36,8],[144,8],[199,8],[353,8]]},"1624":{"position":[[203,8]]},"1655":{"position":[[115,10]]},"1661":{"position":[[265,10]]},"1665":{"position":[[17,8],[313,8]]},"1667":{"position":[[17,8],[140,8],[221,8]]},"1709":{"position":[[85,8]]},"1711":{"position":[[8,8],[124,8]]},"1713":{"position":[[229,8]]},"1715":{"position":[[51,8]]},"1799":{"position":[[225,17]]},"1872":{"position":[[219,8],[259,8],[1751,8],[2810,8]]},"1876":{"position":[[188,8],[260,8],[1408,8]]},"1878":{"position":[[132,8]]},"1924":{"position":[[143,10],[182,10],[221,10],[263,10],[309,10],[353,10],[399,8],[444,10],[481,10],[653,10],[738,10]]},"1964":{"position":[[500,8]]},"1966":{"position":[[45,8]]},"1981":{"position":[[2197,8]]},"2007":{"position":[[266,10]]},"2010":{"position":[[0,8]]}}}],["function(",{"_index":4722,"t":{"1918":{"position":[[476,11]]}}}],["function(40,100",{"_index":4385,"t":{"1790":{"position":[[161,17]]}}}],["function(a",{"_index":4384,"t":{"1790":{"position":[[44,11]]}}}],["function(opt",{"_index":4736,"t":{"1924":{"position":[[101,17]]}}}],["function(req,res,next",{"_index":1991,"t":{"823":{"position":[[11,23]]}}}],["futura",{"_index":2898,"t":{"1248":{"position":[[244,7]]}}}],["f方程可是x节点到y节点最低路径费用为2，因此保持不变，x节点到z节点的最低路径费用可进一步减小为3即x节点先到y节点再到z节点。经过上述修改后x的向量表如第一行第二列所示。x节点新的距离向量与以前的发生了变化，因此x节点会将新的距离向量向其邻居节点y和z发送。依次类推，每个节点都不断更新自己的距离向量，直到不在发送变化为止。例如第二行第二列这里的y节点重新计算距离向量后发现这里的距离向量没有发生变化仍然是201",{"_index":5751,"t":{"2208":{"position":[[821,222]]}}}],["f（x，i",{"_index":6000,"t":{"2391":{"position":[[37,43]]}}}],["g",{"_index":1459,"t":{"504":{"position":[[415,1]]},"795":{"position":[[84,1]]},"1449":{"position":[[21,1]]},"1844":{"position":[[647,1]]},"2373":{"position":[[71,2]]}}}],["g(z",{"_index":6261,"t":{"2480":{"position":[[333,13]]}}}],["game",{"_index":2923,"t":{"1248":{"position":[[1446,4]]},"1259":{"position":[[31,4]]}}}],["gate",{"_index":4175,"t":{"1653":{"position":[[136,5]]},"1655":{"position":[[85,8]]},"1659":{"position":[[321,8]]},"1661":{"position":[[233,8]]},"1683":{"position":[[77,8]]},"1699":{"position":[[135,6]]},"1749":{"position":[[144,8]]},"1842":{"position":[[2130,7]]}}}],["gates\";text.endswith(\"g",{"_index":4518,"t":{"1842":{"position":[[2159,29]]}}}],["gateway",{"_index":5769,"t":{"2216":{"position":[[137,13]]},"2222":{"position":[[46,7]]}}}],["gbn",{"_index":5927,"t":{"2279":{"position":[[0,9]]},"2281":{"position":[[3,6]]}}}],["gbn使用累计确认机制，重传时导致很多重传，造成资源浪费，因此sr",{"_index":5938,"t":{"2281":{"position":[[10,96]]}}}],["gbn协议时，由gbn",{"_index":5442,"t":{"2138":{"position":[[2634,19]]}}}],["gbn和sr",{"_index":5926,"t":{"2277":{"position":[[75,12]]}}}],["gecko",{"_index":705,"t":{"179":{"position":[[441,6]]},"221":{"position":[[441,6]]},"1165":{"position":[[441,6]]}}}],["gender",{"_index":1629,"t":{"588":{"position":[[61,7]]},"782":{"position":[[150,7]]}}}],["gener",{"_index":1353,"t":{"469":{"position":[[193,8]]}}}],["geometri",{"_index":34,"t":{"10":{"position":[[536,8],[602,8],[651,21]]},"12":{"position":[[25,8],[90,8]]},"1325":{"position":[[333,8]]},"1338":{"position":[[290,8]]}}}],["geometrytext",{"_index":3180,"t":{"1340":{"position":[[204,12],[1001,12]]}}}],["geometryvar",{"_index":77,"t":{"12":{"position":[[0,24]]}}}],["get().then(ress",{"_index":4631,"t":{"1872":{"position":[[2396,18]]},"1876":{"position":[[554,18],[897,18]]},"1878":{"position":[[342,18]]}}}],["get:传递参数长度受限制，因为传递的参数是直接表示在地址栏中，而特定浏览器和服务器对url的长度是有限制的。因此，get不适合用来传递私密数据，也不适合拿来传递大量数据。一般的http请求大多都是get",{"_index":5131,"t":{"2047":{"position":[[253,103]]}}}],["get_data",{"_index":177,"t":{"33":{"position":[[760,8]]}}}],["get_data.get('id",{"_index":179,"t":{"33":{"position":[[817,18]]}}}],["getag",{"_index":1290,"t":{"443":{"position":[[903,7]]}}}],["getansw",{"_index":3592,"t":{"1420":{"position":[[1079,10]]}}}],["getapp()console.log(appinstance.globaldata",{"_index":4734,"t":{"1922":{"position":[[454,43]]}}}],["getapp.get(\"/us",{"_index":1973,"t":{"808":{"position":[[3,22]]}}}],["getboundingclientrect",{"_index":3219,"t":{"1342":{"position":[[803,21]]}}}],["getboundingclientrect.left",{"_index":3223,"t":{"1342":{"position":[[913,27]]}}}],["getboundingclientrect.top",{"_index":3227,"t":{"1342":{"position":[[1023,26]]}}}],["getchar",{"_index":511,"t":{"103":{"position":[[4486,10]]},"200":{"position":[[4486,10]]}}}],["getclass",{"_index":271,"t":{"51":{"position":[[185,11],[300,9]]}}}],["getheight",{"_index":1257,"t":{"437":{"position":[[166,11]]}}}],["getimg",{"_index":3089,"t":{"1321":{"position":[[0,8]]}}}],["getkbcxazc",{"_index":755,"t":{"243":{"position":[[11,11]]}}}],["getmongo(id",{"_index":181,"t":{"33":{"position":[[882,12],[1013,13]]},"49":{"position":[[206,13]]},"51":{"position":[[106,12],[234,12]]}}}],["getmousemsg",{"_index":429,"t":{"101":{"position":[[958,14]]},"103":{"position":[[3118,14],[4325,14]]},"198":{"position":[[958,14]]},"200":{"position":[[3118,14],[4325,14]]}}}],["getnam",{"_index":160,"t":{"33":{"position":[[359,9]]},"35":{"position":[[178,34]]},"37":{"position":[[255,15]]},"51":{"position":[[58,10],[288,8]]},"443":{"position":[[681,8]]}}}],["getname.pi",{"_index":189,"t":{"35":{"position":[[98,11]]}}}],["getnowclass",{"_index":880,"t":{"255":{"position":[[1539,14]]},"259":{"position":[[63,13]]}}}],["getopenid",{"_index":4590,"t":{"1872":{"position":[[551,9],[585,9],[1062,11],[1190,11]]}}}],["getstart",{"_index":3909,"t":{"1557":{"position":[[323,10]]}}}],["getter",{"_index":3544,"t":{"1412":{"position":[[208,6],[391,6],[741,6]]},"1414":{"position":[[574,25]]},"1418":{"position":[[9,21],[72,6]]}}}],["getweek",{"_index":811,"t":{"251":{"position":[[102,10]]}}}],["getweekday",{"_index":819,"t":{"253":{"position":[[51,13]]},"259":{"position":[[94,12]]}}}],["getweight",{"_index":1256,"t":{"437":{"position":[[129,11]]}}}],["getxxx",{"_index":1350,"t":{"469":{"position":[[169,8]]}}}],["getyour",{"_index":2208,"t":{"910":{"position":[[840,7]]}}}],["get、post、head、put、delete、options、trace、connect",{"_index":5130,"t":{"2047":{"position":[[198,54]]}}}],["get时，web",{"_index":5172,"t":{"2055":{"position":[[994,20]]}}}],["gewei",{"_index":1171,"t":{"388":{"position":[[633,6]]}}}],["gewei=hund%10",{"_index":1172,"t":{"388":{"position":[[640,14]]}}}],["gh",{"_index":2536,"t":{"1078":{"position":[[61,2],[111,2]]},"1084":{"position":[[568,2]]}}}],["gideon",{"_index":5054,"t":{"2003":{"position":[[448,9]]}}}],["gif",{"_index":3914,"t":{"1561":{"position":[[226,4]]}}}],["gif格式：图形交换格式（graph",{"_index":6144,"t":{"2452":{"position":[[110,21]]}}}],["git",{"_index":553,"t":{"120":{"position":[[25,3],[86,3]]},"122":{"position":[[21,3],[82,3]]},"355":{"position":[[74,3]]},"1148":{"position":[[13,38]]},"1364":{"position":[[169,3]]},"1911":{"position":[[88,9]]},"1931":{"position":[[0,39]]}}}],["gite",{"_index":2731,"t":{"1118":{"position":[[459,5]]},"1184":{"position":[[117,5]]}}}],["gitee.com",{"_index":2792,"t":{"1184":{"position":[[161,9]]}}}],["github",{"_index":278,"t":{"57":{"position":[[0,6]]},"268":{"position":[[17,6]]},"282":{"position":[[11,6],[70,6]]},"287":{"position":[[63,6]]},"289":{"position":[[307,6]]},"291":{"position":[[27,6]]},"293":{"position":[[26,6],[158,6],[348,6],[433,6],[485,6],[529,6],[694,30],[728,6],[750,13],[764,6],[782,6],[929,6]]},"295":{"position":[[205,6],[653,6],[871,6]]},"332":{"position":[[101,6],[128,6],[145,6]]},"334":{"position":[[97,6],[124,6],[141,6]]},"336":{"position":[[7,6]]},"338":{"position":[[0,6],[16,6],[35,6],[42,42],[94,6],[117,6]]},"355":{"position":[[91,6],[105,6],[122,6]]},"365":{"position":[[63,6]]},"376":{"position":[[4,6],[107,6],[297,6],[382,6],[445,6],[489,6]]},"378":{"position":[[4,6],[151,6]]},"380":{"position":[[232,6],[281,6],[427,6],[539,6],[740,6]]},"1010":{"position":[[591,6]]},"1017":{"position":[[533,6],[565,6],[605,6],[641,12],[714,6],[736,9],[2124,9],[2612,9]]},"1024":{"position":[[207,6],[234,8],[334,6]]},"1033":{"position":[[3,6]]},"1037":{"position":[[425,9],[891,9]]},"1072":{"position":[[49,6],[77,6]]},"1074":{"position":[[0,6],[36,6],[51,6],[74,6],[372,6]]},"1076":{"position":[[7,6]]},"1078":{"position":[[75,6]]},"1080":{"position":[[4,6],[151,6]]},"1084":{"position":[[87,6]]},"1086":{"position":[[46,6]]},"1088":{"position":[[51,6]]},"1118":{"position":[[312,6],[327,24],[577,6]]},"1120":{"position":[[101,15]]},"1124":{"position":[[0,8],[105,6]]},"1126":{"position":[[93,8]]},"1128":{"position":[[0,23]]},"1130":{"position":[[0,26]]},"1132":{"position":[[100,23]]},"1184":{"position":[[11,6],[123,37],[329,37]]},"1186":{"position":[[101,12]]},"1188":{"position":[[0,43],[94,18]]},"1194":{"position":[[14,24]]},"1196":{"position":[[0,12]]},"1204":{"position":[[130,8]]},"1211":{"position":[[0,129]]},"1216":{"position":[[86,27]]},"2012":{"position":[[0,13]]},"2022":{"position":[[18,7]]}}}],["github.com",{"_index":1091,"t":{"355":{"position":[[222,10]]},"1184":{"position":[[106,10]]}}}],["github.dev",{"_index":1092,"t":{"355":{"position":[[236,10]]}}}],["github/workflow",{"_index":979,"t":{"289":{"position":[[90,17]]}}}],["github\\workflows\\deploy.yml",{"_index":2538,"t":{"1084":{"position":[[0,52]]}}}],["githubapi",{"_index":1023,"t":{"293":{"position":[[634,9]]},"376":{"position":[[594,9]]}}}],["githubconst",{"_index":2393,"t":{"1017":{"position":[[95,13]]}}}],["githubid.github.io",{"_index":2535,"t":{"1078":{"position":[[27,21]]}}}],["githubpag",{"_index":2553,"t":{"1086":{"position":[[83,11]]},"1128":{"position":[[24,20]]}}}],["githubpages后图片加载的速度惨不忍睹。因此我上网搜索一些前辈的经验，这个经验就是建立图床，使用外链引入到markdown",{"_index":675,"t":{"177":{"position":[[3,134]]},"217":{"position":[[7,134]]},"219":{"position":[[3,134]]},"1163":{"position":[[3,134]]}}}],["github上给我们一个star",{"_index":3323,"t":{"1366":{"position":[[388,29]]}}}],["github中下载picgo，并点击安装。在电脑桌面右下角的picgo图标打开软件。在图床设置里面选择阿里云oss",{"_index":739,"t":{"190":{"position":[[0,70]]},"232":{"position":[[0,70]]},"1176":{"position":[[0,70]]}}}],["github中，点击右上角的“+”，选择“new",{"_index":2736,"t":{"1122":{"position":[[0,25]]},"1190":{"position":[[16,25]]}}}],["github处于“半墙”状态，看它主页你就知道为什么了...因此你很可能无法访问，那么你需要一个boost或者ladd",{"_index":2733,"t":{"1120":{"position":[[0,65]]},"1186":{"position":[[0,65]]}}}],["github服务器放在境外，当你把个人博客托管到githubpag",{"_index":2726,"t":{"1111":{"position":[[0,101]]}}}],["github绑定一个待构建的仓库到netlify。进入主页，选择add",{"_index":2810,"t":{"1216":{"position":[[0,44]]}}}],["github给我一个star",{"_index":2785,"t":{"1160":{"position":[[0,34]]}}}],["github采用utc时间，北京时间比utc时间早8小时。所以我们必须把上述时间减去8",{"_index":1120,"t":{"363":{"position":[[2081,49]]}}}],["gitignor",{"_index":2798,"t":{"1200":{"position":[[45,46]]},"1364":{"position":[[158,10]]}}}],["give",{"_index":3578,"t":{"1420":{"position":[[573,4]]}}}],["global",{"_index":552,"t":{"118":{"position":[[94,6]]},"215":{"position":[[94,6]]},"1922":{"position":[[314,6],[506,6]]}}}],["globaldata",{"_index":4731,"t":{"1922":{"position":[[296,11]]},"1974":{"position":[[243,11]]}}}],["go",{"_index":2555,"t":{"1088":{"position":[[196,2]]},"1092":{"position":[[936,2],[2671,2]]},"1312":{"position":[[794,2],[810,2]]}}}],["gold",{"_index":2045,"t":{"853":{"position":[[331,6]]}}}],["good",{"_index":3020,"t":{"1281":{"position":[[546,5]]}}}],["goodbye'console.log(vm.reversedmessag",{"_index":3548,"t":{"1412":{"position":[[460,40]]}}}],["goodlet",{"_index":4065,"t":{"1630":{"position":[[74,7]]}}}],["goodstud",{"_index":1597,"t":{"567":{"position":[[221,12]]}}}],["googl",{"_index":957,"t":{"280":{"position":[[70,8]]},"1576":{"position":[[98,6]]}}}],["goreng</i>（印尼炒饭）以及<i",{"_index":4036,"t":{"1618":{"position":[[193,20]]}}}],["gosuccess",{"_index":4997,"t":{"1981":{"position":[[2221,11]]}}}],["gosuccess\">提交</van",{"_index":4980,"t":{"1981":{"position":[[1262,20]]}}}],["gothic",{"_index":2897,"t":{"1248":{"position":[[235,8]]}}}],["goto",{"_index":505,"t":{"103":{"position":[[3574,4],[3846,4]]},"200":{"position":[[3574,4],[3846,4]]}}}],["grade",{"_index":1246,"t":{"426":{"position":[[841,5],[873,5],[1165,7]]},"757":{"position":[[455,5]]}}}],["gradient(0deg",{"_index":3811,"t":{"1511":{"position":[[646,14]]}}}],["gradient(linear",{"_index":2080,"t":{"853":{"position":[[748,16]]}}}],["gradient(rgba(33",{"_index":3817,"t":{"1511":{"position":[[724,17]]}}}],["gradient(to",{"_index":2041,"t":{"853":{"position":[[300,11]]}}}],["gradlew.bat",{"_index":952,"t":{"278":{"position":[[166,11]]}}}],["graphic",{"_index":6147,"t":{"2452":{"position":[[203,8]]}}}],["gray",{"_index":6013,"t":{"2399":{"position":[[110,10]]}}}],["grid",{"_index":6008,"t":{"2393":{"position":[[0,45]]}}}],["grocerylist",{"_index":3487,"t":{"1399":{"position":[[733,12],[812,11],[955,12]]}}}],["ground",{"_index":2601,"t":{"1092":{"position":[[2384,6]]}}}],["group",{"_index":1843,"t":{"695":{"position":[[196,49]]},"1981":{"position":[[189,6],[603,6]]}}}],["group)开发，后缀为.jpg或.jpeg",{"_index":6151,"t":{"2452":{"position":[[257,22]]}}}],["group><van",{"_index":4961,"t":{"1981":{"position":[[499,10],[862,10]]}}}],["gutter=\"10",{"_index":3338,"t":{"1366":{"position":[[888,13]]}}}],["h",{"_index":4540,"t":{"1852":{"position":[[88,1],[242,1],[454,1]]},"2373":{"position":[[83,2]]}}}],["h(z)=g(z)v(z)r(z",{"_index":6264,"t":{"2480":{"position":[[401,17]]}}}],["h1",{"_index":2584,"t":{"1092":{"position":[[1399,3],[1868,3]]},"1251":{"position":[[743,2]]},"1464":{"position":[[52,3],[118,3],[174,7]]},"1474":{"position":[[36,3]]},"1598":{"position":[[109,4]]}}}],["h1>404",{"_index":2213,"t":{"914":{"position":[[293,8]]}}}],["h1><p>对象方法是一种函数定义，存储为属性值。</p><p",{"_index":4194,"t":{"1661":{"position":[[120,37]]}}}],["h1><p>有两种不同的方法来访问对象属性。</p><p",{"_index":4184,"t":{"1659":{"position":[[161,40]]}}}],["h1>hello",{"_index":3076,"t":{"1312":{"position":[[619,9]]}}}],["h1>shop",{"_index":2932,"t":{"1251":{"position":[[255,12]]}}}],["h1>title</h1",{"_index":3687,"t":{"1466":{"position":[[134,14]]}}}],["h1>、<h2>、<h3>、<h4>、<h5>、<h6",{"_index":3993,"t":{"1598":{"position":[[61,47]]}}}],["h1>三国演义</h1><p>罗贯中</p><h2",{"_index":3998,"t":{"1600":{"position":[[0,30]]}}}],["h1>关于</h1",{"_index":2216,"t":{"914":{"position":[[434,14]]}}}],["h1>我是文章的标题</h1",{"_index":3992,"t":{"1598":{"position":[[29,16]]}}}],["h1>输入姓名查询学号</h1",{"_index":124,"t":{"31":{"position":[[165,17]]}}}],["h1>首页</h1",{"_index":2215,"t":{"914":{"position":[[373,14]]}}}],["h2",{"_index":2355,"t":{"1006":{"position":[[601,2]]}}}],["h2><p",{"_index":4509,"t":{"1842":{"position":[[1611,19]]}}}],["h2><p>且说董卓字仲颖，陇西临洮人也，官拜河东太守，自来骄傲。当日怠慢了玄德，张飞性发，便欲杀之……</p><h3>却说张飞</h3><p>却说张飞饮了数杯闷酒，乘马从馆驿前过，见五六十个老人，皆在门前痛哭。飞问其故，众老人答曰：“督邮逼勒县吏，欲害刘公；我等皆来苦告，不得放入，反遭把门人赶打！”……</p",{"_index":4000,"t":{"1600":{"position":[[124,166]]}}}],["h2><p>话说天下大势，分久必合，合久必分。周末七国分争，并入于秦。及秦灭之后，楚、汉分争，又并入于汉……</p><h2",{"_index":3999,"t":{"1600":{"position":[[40,75]]}}}],["h3",{"_index":2356,"t":{"1006":{"position":[[606,2]]},"1096":{"position":[[205,2],[409,3]]}}}],["h3>{title}</h3",{"_index":2625,"t":{"1092":{"position":[[3705,16]]}}}],["h5",{"_index":4879,"t":{"1979":{"position":[[276,13]]}}}],["h:%m:%",{"_index":864,"t":{"255":{"position":[[1055,11],[1138,11],[2065,11],[2122,11],[2179,11],[2236,11],[2293,11],[2349,11]]},"363":{"position":[[2069,11],[2400,11],[2483,11]]}}}],["h:%m:%s')dt2",{"_index":856,"t":{"255":{"position":[[831,14]]},"363":{"position":[[1845,14],[2176,14]]}}}],["h:%m:%s')dt3",{"_index":858,"t":{"255":{"position":[[887,14]]},"363":{"position":[[1901,14],[2232,14]]}}}],["h:%m:%s')dt4",{"_index":860,"t":{"255":{"position":[[943,14]]},"363":{"position":[[1957,14],[2288,14]]}}}],["h:%m:%s')dt5",{"_index":862,"t":{"255":{"position":[[999,14]]},"363":{"position":[[2013,14],[2344,14]]}}}],["haitan",{"_index":3399,"t":{"1368":{"position":[[141,6],[635,10],[652,9],[673,6]]}}}],["han",{"_index":2424,"t":{"1017":{"position":[[990,6],[1024,6],[1042,7],[1064,7]]},"1029":{"position":[[26,4],[60,6],[81,7]]}}}],["handle[ev",{"_index":2842,"t":{"1223":{"position":[[2948,13]]}}}],["handleclick",{"_index":2839,"t":{"1223":{"position":[[2634,13],[2858,11],[3005,11],[3037,11]]},"1239":{"position":[[308,11]]},"1241":{"position":[[822,11]]},"1291":{"position":[[101,11]]},"1293":{"position":[[16,11]]},"1299":{"position":[[263,11]]},"1301":{"position":[[185,11],[243,11],[450,11]]}}}],["handleclick(i",{"_index":2838,"t":{"1223":{"position":[[2605,14],[3176,14]]},"1239":{"position":[[338,14],[873,14]]},"1241":{"position":[[879,14]]}}}],["handlesubmit",{"_index":3044,"t":{"1295":{"position":[[375,12]]}}}],["haserror",{"_index":3419,"t":{"1373":{"position":[[303,8],[356,9],[428,8],[462,8]]}}}],["hash",{"_index":2520,"t":{"1058":{"position":[[215,8],[285,7]]},"2310":{"position":[[203,40]]},"2532":{"position":[[65,27]]},"2541":{"position":[[65,27]]},"2550":{"position":[[65,27]]}}}],["hash函数一般要求原始相近的数据其哈希编码也要尽可能的相近，而当原始数据发生变化时其hash",{"_index":6328,"t":{"2532":{"position":[[174,80]]},"2541":{"position":[[174,80]]},"2550":{"position":[[174,80]]}}}],["hash编码，不仅能实现时间上的高效（基于xor",{"_index":6327,"t":{"2532":{"position":[[93,80]]},"2541":{"position":[[93,80]]},"2550":{"position":[[93,80]]}}}],["hasownproperty(propertynam",{"_index":4151,"t":{"1646":{"position":[[142,28]]}}}],["havefun",{"_index":5071,"t":{"2010":{"position":[[71,10]]}}}],["head",{"_index":2578,"t":{"1092":{"position":[[958,5]]},"1547":{"position":[[64,6],[116,7],[513,30],[625,6]]},"1549":{"position":[[43,6],[95,7],[144,6],[203,4],[216,6]]},"1551":{"position":[[23,6]]},"1561":{"position":[[303,6]]},"1563":{"position":[[274,6]]},"1578":{"position":[[108,4],[162,4]]},"1598":{"position":[[0,28]]}}}],["head+data+tail，其中的data就是封装的ip分组，mtu=max（data）。不同链路的mtu",{"_index":5531,"t":{"2169":{"position":[[28,63]]}}}],["head></head",{"_index":3891,"t":{"1547":{"position":[[498,14]]}}}],["head><body><script",{"_index":29,"t":{"10":{"position":[[438,22]]}}}],["header",{"_index":695,"t":{"179":{"position":[[340,7]]},"221":{"position":[[340,7]]},"245":{"position":[[578,6]]},"249":{"position":[[629,6]]},"295":{"position":[[262,7]]},"363":{"position":[[856,6]]},"380":{"position":[[321,7]]},"1092":{"position":[[1304,7],[1663,9],[1773,7],[2111,9],[2972,6]]},"1165":{"position":[[340,7]]},"1964":{"position":[[426,7]]},"1966":{"position":[[113,7]]},"2454":{"position":[[286,7]]}}}],["headers=head",{"_index":806,"t":{"249":{"position":[[723,15]]},"295":{"position":[[500,16]]},"363":{"position":[[932,15]]},"380":{"position":[[587,16]]}}}],["headers=headers).cont",{"_index":718,"t":{"179":{"position":[[836,24]]},"221":{"position":[[836,24]]},"1165":{"position":[[836,24]]}}}],["headers=headers).text",{"_index":710,"t":{"179":{"position":[[531,21]]},"221":{"position":[[531,21]]},"1165":{"position":[[531,21]]}}}],["headers=headers)if",{"_index":310,"t":{"66":{"position":[[681,18]]},"171":{"position":[[681,18]]}}}],["header）bitmapinform",{"_index":6174,"t":{"2454":{"position":[[713,24]]}}}],["heading），<h2",{"_index":3994,"t":{"1598":{"position":[[129,13]]}}}],["head、tabbar",{"_index":4765,"t":{"1931":{"position":[[93,43]]}}}],["head：head跟get相似，不过服务端接收到head请求时只返回响应头，不发送响应内容。所以，如果只需要查看某个页面的状态时，用head",{"_index":5134,"t":{"2047":{"position":[[548,99]]}}}],["height",{"_index":59,"t":{"10":{"position":[[1165,6],[1217,7],[1534,18]]},"437":{"position":[[43,7],[187,7]]},"588":{"position":[[75,7]]},"853":{"position":[[261,7],[361,7]]},"1248":{"position":[[505,7],[519,7]]},"1255":{"position":[[336,7],[350,7]]},"1334":{"position":[[214,6],[389,8]]},"1344":{"position":[[73,6],[148,7]]},"1366":{"position":[[178,7],[1147,7],[1240,7]]},"1511":{"position":[[247,7],[607,7]]},"1515":{"position":[[938,7],[1019,7],[1243,7],[1454,7]]},"1518":{"position":[[187,7],[359,7]]},"1587":{"position":[[254,6]]},"1592":{"position":[[520,6]]},"1960":{"position":[[172,7]]},"1976":{"position":[[56,7]]},"1981":{"position":[[1116,7]]},"2443":{"position":[[440,6]]}}}],["height);//设置渲染区域尺寸renderer.setclearcolor(0xb9d3ff",{"_index":89,"t":{"20":{"position":[[74,50]]}}}],["height:100%;width:230px",{"_index":3346,"t":{"1366":{"position":[[1030,25]]}}}],["height:40rpx",{"_index":4923,"t":{"1979":{"position":[[2186,13]]}}}],["height:auto",{"_index":4928,"t":{"1979":{"position":[[2282,12],[2484,12]]}}}],["height=\"341",{"_index":3948,"t":{"1580":{"position":[[80,13]]},"1582":{"position":[[80,12]]}}}],["height=\"400",{"_index":3958,"t":{"1587":{"position":[[28,12]]}}}],["height=\"500",{"_index":3980,"t":{"1592":{"position":[[77,12]]}}}],["heightwidth）。图像分辨率：数字化图像的大小，即该图像的水平与垂直方向的像素总数（heightwidth",{"_index":6011,"t":{"2397":{"position":[[0,93]]}}}],["hello",{"_index":526,"t":{"114":{"position":[[411,5],[423,13],[559,6],[892,20],[956,5]]},"211":{"position":[[411,5],[423,13],[559,6],[892,20],[956,5]]},"542":{"position":[[0,12]]},"1049":{"position":[[111,5]]},"1312":{"position":[[344,5]]},"1393":{"position":[[129,6]]},"1397":{"position":[[205,6],[579,6]]},"1412":{"position":[[176,7]]},"1842":{"position":[[1127,6],[1333,6],[1493,6],[1631,7],[1727,6],[1885,6],[1976,6],[2240,6]]},"1846":{"position":[[40,6],[177,6]]},"1848":{"position":[[136,7]]},"1850":{"position":[[34,5]]},"1852":{"position":[[53,6],[157,6],[214,6],[398,6]]},"1854":{"position":[[220,8]]},"1918":{"position":[[244,5],[619,5],[773,5]]},"1954":{"position":[[0,21],[55,22]]},"1983":{"position":[[0,19]]},"1997":{"position":[[27,5],[120,6],[197,7]]},"2007":{"position":[[171,6],[299,6]]}}}],["hello\".concat",{"_index":4535,"t":{"1848":{"position":[[172,16]]}}}],["hello\";var",{"_index":4531,"t":{"1848":{"position":[[33,11]]}}}],["hello.j",{"_index":1958,"t":{"795":{"position":[[121,8]]}}}],["hello_world",{"_index":321,"t":{"70":{"position":[[186,14],[228,14]]}}}],["helloarray",{"_index":1765,"t":{"621":{"position":[[270,10]]}}}],["hellodata",{"_index":4717,"t":{"1918":{"position":[[392,9],[453,10]]}}}],["hellomessag",{"_index":3068,"t":{"1312":{"position":[[153,12],[265,13],[370,12],[502,12]]}}}],["hellostr",{"_index":1767,"t":{"621":{"position":[[323,11],[381,11]]}}}],["helloworld",{"_index":317,"t":{"70":{"position":[[49,12],[105,12],[302,10],[402,10]]},"542":{"position":[[81,11]]},"946":{"position":[[48,13],[216,13]]},"948":{"position":[[26,13]]},"1393":{"position":[[163,10]]},"1933":{"position":[[292,29]]},"1956":{"position":[[44,30]]}}}],["helloworld.wxss",{"_index":4802,"t":{"1960":{"position":[[120,27]]}}}],["helo",{"_index":5196,"t":{"2057":{"position":[[926,4]]}}}],["hero",{"_index":2581,"t":{"1092":{"position":[[1334,4],[1803,4]]}}}],["het",{"_index":491,"t":{"103":{"position":[[1882,3],[1965,4],[1974,23],[2115,4],[2184,4],[2250,4],[2259,3]]},"200":{"position":[[1882,3],[1965,4],[1974,23],[2115,4],[2184,4],[2250,4],[2259,3]]}}}],["hex",{"_index":2665,"t":{"1094":{"position":[[1087,3]]}}}],["hh",{"_index":2096,"t":{"853":{"position":[[1103,2]]}}}],["hi",{"_index":3511,"t":{"1404":{"position":[[423,4]]}}}],["hidden",{"_index":25,"t":{"10":{"position":[[158,7]]},"1366":{"position":[[291,8]]}}}],["hide",{"_index":2720,"t":{"1108":{"position":[[261,5],[306,5]]}}}],["hidecompletedtodo",{"_index":3514,"t":{"1404":{"position":[[547,19]]}}}],["high",{"_index":1013,"t":{"293":{"position":[[144,4],[188,4]]},"376":{"position":[[93,4],[137,4]]}}}],["highlight",{"_index":2648,"t":{"1094":{"position":[[380,11],[714,11]]}}}],["histogram",{"_index":6097,"t":{"2443":{"position":[[3,81],[957,11]]}}}],["hola.md",{"_index":2498,"t":{"1049":{"position":[[73,7]]}}}],["home",{"_index":2573,"t":{"1092":{"position":[[794,6]]},"1366":{"position":[[1373,6]]}}}],["home/a.jpg",{"_index":2779,"t":{"1156":{"position":[[16,28]]}}}],["homepagefeatur",{"_index":2568,"t":{"1092":{"position":[[392,16],[515,16],[615,25],[712,16],[995,17],[3824,18]]}}}],["homepagehead",{"_index":2579,"t":{"1092":{"position":[[969,15],[1119,15],[1179,14],[1231,16],[1700,16]]}}}],["horiz",{"_index":2624,"t":{"1092":{"position":[[3693,5]]}}}],["host",{"_index":5151,"t":{"2055":{"position":[[278,5]]},"2195":{"position":[[19,4]]}}}],["hostid全部取0",{"_index":5585,"t":{"2177":{"position":[[159,11]]}}}],["hour",{"_index":825,"t":{"255":{"position":[[161,16],[298,4],[1624,4],[1724,4],[1760,4],[1907,4]]},"289":{"position":[[480,4]]},"293":{"position":[[231,5]]},"363":{"position":[[1176,16],[1313,4]]},"376":{"position":[[180,5]]}}}],["hour.schedul",{"_index":1019,"t":{"293":{"position":[[327,13]]},"376":{"position":[[276,13]]}}}],["hour<10",{"_index":1119,"t":{"363":{"position":[[1383,8]]}}}],["hour<=10",{"_index":834,"t":{"255":{"position":[[368,9]]}}}],["hour==24",{"_index":842,"t":{"255":{"position":[[545,9]]},"363":{"position":[[1559,9]]}}}],["href",{"_index":2452,"t":{"1017":{"position":[[2069,5],[2336,5],[2422,5],[2495,5],[2622,5]]},"1027":{"position":[[20,4]]},"1037":{"position":[[370,5],[617,5],[703,5],[776,5],[901,5]]},"1491":{"position":[[100,4],[127,4]]},"1493":{"position":[[258,17]]},"1563":{"position":[[187,4]]}}}],["href=\"./index.css",{"_index":2154,"t":{"865":{"position":[[140,22]]},"867":{"position":[[1326,22]]}}}],["href=\"favicon.ico",{"_index":3919,"t":{"1561":{"position":[[334,18]]}}}],["href=\"https://console.cloud.tencent.com/tcb/hosting/index?envid=nannan",{"_index":3389,"t":{"1366":{"position":[[2601,70]]}}}],["href=\"https://developer.mozilla.org/zh",{"_index":3984,"t":{"1592":{"position":[[138,38]]}}}],["href=\"https://github.com/inannan423/csspano",{"_index":3321,"t":{"1366":{"position":[[303,44],[673,44]]}}}],["href=\"https://inannan423.github.io\"><img",{"_index":3328,"t":{"1366":{"position":[[546,40]]}}}],["href=\"https://jetzihan.netlify.app",{"_index":3377,"t":{"1366":{"position":[[2297,35]]}}}],["href=\"https://www.mozilla.org/en",{"_index":3932,"t":{"1570":{"position":[[80,32]]}}}],["href=\"https://www.mozilla.org/zh",{"_index":3929,"t":{"1568":{"position":[[14,32]]},"1572":{"position":[[79,32]]}}}],["href=\"mi",{"_index":3921,"t":{"1563":{"position":[[228,8]]}}}],["href=\"rabbit320.mp4\">此链接</a>观看</p></video",{"_index":3957,"t":{"1585":{"position":[[65,42]]},"1587":{"position":[[203,42]]}}}],["href=\"url\">...</a",{"_index":3759,"t":{"1503":{"position":[[55,21]]}}}],["href=\"viper.mp3\">此链接</a>收听。</p></audio",{"_index":3975,"t":{"1590":{"position":[[128,39]]}}}],["hs(i",{"_index":6137,"t":{"2445":{"position":[[102,6]]}}}],["hsi",{"_index":6054,"t":{"2416":{"position":[[170,52]]}}}],["hsi与rgb",{"_index":6065,"t":{"2424":{"position":[[398,12]]}}}],["hsi格式反映了人类观察彩色的方式,较之rgb格式更接近人对彩色的认识和解释，因此采用hsi彩色空间表示图像的颜色能够减少彩色图象处理的复杂性，在图象处理中用hsi表示和处理图象的工作量比用rgb",{"_index":6064,"t":{"2424":{"position":[[283,111]]}}}],["hsi空间中的三个分量分别是色调（hue）、饱和度（saturation）、亮度（intens",{"_index":6055,"t":{"2416":{"position":[[225,52]]}}}],["html",{"_index":6,"t":{"6":{"position":[[17,4]]},"70":{"position":[[23,4]]},"74":{"position":[[91,4]]},"114":{"position":[[579,4]]},"211":{"position":[[579,4]]},"241":{"position":[[124,4]]},"851":{"position":[[29,4]]},"853":{"position":[[225,5]]},"855":{"position":[[52,4]]},"914":{"position":[[122,4]]},"996":{"position":[[103,5]]},"1017":{"position":[[900,4],[2694,6]]},"1074":{"position":[[292,4]]},"1092":{"position":[[94,4],[1054,4],[1162,4]]},"1267":{"position":[[522,4],[550,4],[627,4],[656,4],[737,4],[769,14]]},"1273":{"position":[[302,4],[315,4],[524,10],[653,4]]},"1275":{"position":[[14,4],[84,19],[228,4]]},"1281":{"position":[[61,9]]},"1377":{"position":[[279,4],[432,6]]},"1391":{"position":[[15,4]]},"1393":{"position":[[273,4],[339,4]]},"1483":{"position":[[19,4],[35,10],[48,4],[105,4],[173,4],[195,4],[205,4],[244,4],[283,4]]},"1485":{"position":[[17,4]]},"1491":{"position":[[51,4]]},"1497":{"position":[[32,4],[176,4]]},"1505":{"position":[[163,4]]},"1535":{"position":[[0,4],[33,36]]},"1539":{"position":[[2,4]]},"1541":{"position":[[183,4]]},"1547":{"position":[[32,4],[176,6],[199,7],[235,4],[284,4],[433,5],[466,31],[544,4],[557,4]]},"1549":{"position":[[9,4],[139,4]]},"1553":{"position":[[15,4]]},"1561":{"position":[[296,4]]},"1563":{"position":[[343,4],[389,4]]},"1565":{"position":[[44,4],[65,5]]},"1576":{"position":[[70,4],[301,4]]},"1596":{"position":[[2,4]]},"1609":{"position":[[2,4]]},"1613":{"position":[[2,4]]},"1642":{"position":[[730,4]]},"1671":{"position":[[47,4],[68,4]]},"1673":{"position":[[46,4],[241,4]]},"1675":{"position":[[162,4],[203,4]]},"1713":{"position":[[390,4]]},"1816":{"position":[[0,4],[28,4],[42,4],[54,4],[67,4],[141,7],[154,4]]},"1818":{"position":[[15,4],[41,4],[70,4],[98,4]]},"1825":{"position":[[115,21],[137,4]]},"1829":{"position":[[0,20],[90,4],[232,4],[283,4]]},"1833":{"position":[[294,4]]},"1940":{"position":[[174,4]]},"1995":{"position":[[17,4],[42,4],[132,4],[540,4],[592,4],[876,4]]}}}],["html4，css2，javascript4(es4)。三者的关系可以描述为：html告诉浏览器网页上有什么，css告诉浏览器他们长什么样，javascript描述他们有什么行为。直至今日，这三者仍是前端开发的三大核心（以javascript",{"_index":644,"t":{"152":{"position":[[141,192]]},"321":{"position":[[141,192]]}}}],["html5",{"_index":3956,"t":{"1585":{"position":[[50,5]]},"1587":{"position":[[188,5]]},"1590":{"position":[[113,5]]}}}],["html=\"rawhtml\"></span></p",{"_index":3729,"t":{"1483":{"position":[[129,26]]}}}],["html></html",{"_index":3890,"t":{"1547":{"position":[[451,14]]}}}],["html><html",{"_index":14,"t":{"10":{"position":[[32,10]]},"853":{"position":[[18,10]]},"1515":{"position":[[10,10]]},"1547":{"position":[[52,11]]},"1549":{"position":[[31,11]]}}}],["html><html><body><h1>javascript",{"_index":4183,"t":{"1659":{"position":[[129,31]]},"1661":{"position":[[88,31]]},"1799":{"position":[[292,31]]},"1803":{"position":[[278,31],[987,31]]}}}],["html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p",{"_index":4230,"t":{"1677":{"position":[[24,47]]}}}],["html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p><button",{"_index":4227,"t":{"1675":{"position":[[220,54]]}}}],["html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p><p",{"_index":4223,"t":{"1673":{"position":[[69,49]]}}}],["html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p><script>console.log(5",{"_index":4233,"t":{"1679":{"position":[[37,68]]}}}],["html><html><body><h1>我的第一张网页</h1><p>我的第一个段落</p><script>document.write(5",{"_index":4225,"t":{"1675":{"position":[[43,71]]}}}],["html><html><body><h2>javascript",{"_index":4508,"t":{"1842":{"position":[[1579,31]]}}}],["html><html><head",{"_index":3797,"t":{"1511":{"position":[[10,17]]}}}],["htmlmediael",{"_index":4464,"t":{"1825":{"position":[[361,16]]}}}],["htmlstr",{"_index":2150,"t":{"865":{"position":[[89,7]]},"867":{"position":[[1275,7]]}}}],["html中的渲染窗口对接，包含了窗口宽度、窗口高度窗口背景颜色等尺寸。然后使用vue的dom",{"_index":3150,"t":{"1334":{"position":[[19,75]]}}}],["html代码以纯文本的方式读入fs.readfil",{"_index":2122,"t":{"859":{"position":[[6,35]]},"867":{"position":[[229,35]]}}}],["html代码以纯文本的方式读入function",{"_index":2147,"t":{"865":{"position":[[3,31]]},"867":{"position":[[1189,31]]}}}],["html文件中引入orbitcontrols.j",{"_index":102,"t":{"25":{"position":[[127,34]]}}}],["http",{"_index":154,"t":{"33":{"position":[[118,15]]},"37":{"position":[[746,4],[814,4]]},"179":{"position":[[791,7]]},"221":{"position":[[791,7]]},"249":{"position":[[9,4]]},"764":{"position":[[48,4]]},"766":{"position":[[0,4]]},"853":{"position":[[146,4]]},"879":{"position":[[60,4]]},"890":{"position":[[0,4]]},"908":{"position":[[276,4]]},"910":{"position":[[295,4]]},"914":{"position":[[136,4]]},"1165":{"position":[[791,7]]},"1515":{"position":[[67,4]]},"1911":{"position":[[52,12]]},"1964":{"position":[[0,31]]},"2037":{"position":[[102,4]]},"2045":{"position":[[178,9],[440,71],[512,10],[751,9],[969,36]]},"2049":{"position":[[214,4]]},"2053":{"position":[[40,17]]},"2055":{"position":[[126,17]]},"2057":{"position":[[802,5],[854,20]]},"2244":{"position":[[7,4],[61,5]]},"2287":{"position":[[221,28]]},"2289":{"position":[[233,4]]}}}],["http.createserv",{"_index":2171,"t":{"879":{"position":[[106,22]]},"890":{"position":[[37,19]]},"902":{"position":[[15,19]]},"908":{"position":[[314,22]]},"910":{"position":[[333,22]]},"914":{"position":[[174,22]]}}}],["http/1.0",{"_index":5114,"t":{"2045":{"position":[[577,15]]},"2055":{"position":[[168,28]]}}}],["http/1.0的非持久连接，客户端向服务端请求一个对象（somedepartment/home.index），封装成请求报文传给客户端，客户端收到后，检索需要的对象，并将其封装成响应报文，并返回客户端。即刻http关闭tcp连接。客户端检查收到的响应报文后找到n处应用对象，再次发起tcp",{"_index":5115,"t":{"2045":{"position":[[593,157]]}}}],["http/1.1",{"_index":5116,"t":{"2045":{"position":[[811,16]]},"2055":{"position":[[269,8],[336,8],[891,8]]}}}],["http/1.1host",{"_index":5123,"t":{"2047":{"position":[[28,13]]},"2055":{"position":[[685,13]]}}}],["http://127.0.0.0:5000",{"_index":190,"t":{"35":{"position":[[136,34]]}}}],["http://127.0.0.1",{"_index":1917,"t":{"773":{"position":[[142,20]]},"782":{"position":[[225,22]]},"789":{"position":[[451,22]]},"795":{"position":[[319,16]]},"810":{"position":[[674,22]]},"825":{"position":[[481,22],[725,25],[950,34]]},"831":{"position":[[664,22]]},"833":{"position":[[542,22]]},"847":{"position":[[501,22],[859,22],[910,17]]},"906":{"position":[[115,21]]},"908":{"position":[[640,22],[702,16]]},"910":{"position":[[708,22]]},"914":{"position":[[587,22]]}}}],["http://127.0.0.1/index.css",{"_index":1953,"t":{"789":{"position":[[494,26]]}}}],["http://127.0.0.1/index.html",{"_index":2202,"t":{"908":{"position":[[795,27]]}}}],["http://127.0.0.1/public/index.css",{"_index":1956,"t":{"793":{"position":[[90,47]]}}}],["http://127.0.0.1/user",{"_index":1935,"t":{"782":{"position":[[266,24]]}}}],["http://127.0.0.1:5000",{"_index":197,"t":{"37":{"position":[[227,27]]}}}],["http://127.0.0.1:5000/getnam",{"_index":195,"t":{"37":{"position":[[168,31],[842,31]]}}}],["http://127.0.0.1undefin",{"_index":2027,"t":{"847":{"position":[[545,25]]}}}],["http://127.0.0.1your",{"_index":2207,"t":{"910":{"position":[[769,20]]}}}],["http://localhost:3000",{"_index":2929,"t":{"1248":{"position":[[1946,47]]}}}],["http://localhost:3000/css/style.css",{"_index":1949,"t":{"789":{"position":[[148,37]]}}}],["http://localhost:3000/images/bg.jpg",{"_index":1948,"t":{"789":{"position":[[110,37]]}}}],["http://localhost:3000/js/login.j",{"_index":1950,"t":{"789":{"position":[[186,35]]}}}],["http://newjwxt.bjfu.edu.cn",{"_index":1118,"t":{"363":{"position":[[478,29]]}}}],["http://newjwxt.bjfu.edu.cn/app.do?method=authuser&xh",{"_index":795,"t":{"249":{"position":[[284,55]]},"363":{"position":[[568,55]]}}}],["http://newjwxt.bjfu.edu.cn/app.do?method=getkbcxazc&xh",{"_index":802,"t":{"249":{"position":[[512,57]]},"363":{"position":[[753,57]]}}}],["http://newjwxt.bjfu.edu.cn/app.do?method=getkbcxazc&xh=<studentid>&xnxqid=<semester>&zc=<week",{"_index":754,"t":{"241":{"position":[[319,94]]}}}],["http://oschina.net",{"_index":2793,"t":{"1184":{"position":[[240,18]]}}}],["http://t.csdn.cn/ieg2d",{"_index":671,"t":{"161":{"position":[[610,22]]},"330":{"position":[[610,22]]}}}],["http://t.csdn.cn/ozkfg",{"_index":743,"t":{"190":{"position":[[268,22]]},"232":{"position":[[268,22]]},"1176":{"position":[[268,22]]}}}],["http://t.csdn.cn/rrrtk",{"_index":3796,"t":{"1507":{"position":[[4536,22]]}}}],["http=require('http",{"_index":2186,"t":{"900":{"position":[[24,20]]}}}],["https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=你的ak&client_secret=你的sk'respons",{"_index":287,"t":{"66":{"position":[[113,114]]},"171":{"position":[[113,114]]}}}],["https://aip.baidubce.com/rest/2.0/imag",{"_index":292,"t":{"66":{"position":[[306,40]]},"171":{"position":[[306,40]]}}}],["https://api.github.com/repos/<your",{"_index":1148,"t":{"380":{"position":[[197,34]]}}}],["https://api.github.com/repos/你的用户名/reportpeace/dispatch",{"_index":1027,"t":{"295":{"position":[[144,57]]}}}],["https://blog.csdn.net/qq_38738510/article/details/100988518",{"_index":2753,"t":{"1139":{"position":[[142,59]]}}}],["https://blog.csdn.net/spade_kwo/article/details/119464901",{"_index":5814,"t":{"2234":{"position":[[743,60]]}}}],["https://blog.csdn.net/weixin_42374938/article/details/119349738",{"_index":5756,"t":{"2210":{"position":[[362,68]]}}}],["https://cn.bing.com",{"_index":5974,"t":{"2289":{"position":[[0,22]]}}}],["https://developers.weixin.qq.com/miniprogram/dev/framework/sitemap.html",{"_index":4858,"t":{"1972":{"position":[[61,73]]}}}],["https://discordapp.com/invite/docusauru",{"_index":2459,"t":{"1017":{"position":[[2428,43]]},"1037":{"position":[[709,43]]}}}],["https://docs.easyx.cn/zh",{"_index":395,"t":{"97":{"position":[[16,28]]},"99":{"position":[[0,28]]},"196":{"position":[[0,28]]}}}],["https://docusaurus.io",{"_index":2470,"t":{"1022":{"position":[[104,23],[195,26]]}}}],["https://example.weixin.qq.com/upload",{"_index":4990,"t":{"1981":{"position":[[1892,39]]}}}],["https://facebook.github.io",{"_index":2469,"t":{"1022":{"position":[[73,30]]}}}],["https://facebook.github.io/metro",{"_index":2468,"t":{"1022":{"position":[[24,40]]},"1024":{"position":[[29,38]]}}}],["https://git.weixin.qq.com",{"_index":2794,"t":{"1184":{"position":[[302,26]]}}}],["https://github.com/<你的github昵称>/wx_weather_class_push",{"_index":1093,"t":{"355":{"position":[[279,53]]}}}],["https://github.com/endiliey",{"_index":2363,"t":{"1010":{"position":[[121,27],[561,27]]}}}],["https://github.com/endiliey.png",{"_index":2380,"t":{"1010":{"position":[[614,31]]}}}],["https://github.com/endiliey.pngyangshun",{"_index":2365,"t":{"1010":{"position":[[160,40]]}}}],["https://github.com/facebook/docusauru",{"_index":2453,"t":{"1017":{"position":[[2075,41],[2628,41]]},"1037":{"position":[[376,41],[907,41]]}}}],["https://github.com/facebook/docusaurus/tree/main/packages/cr",{"_index":2439,"t":{"1017":{"position":[[1336,65],[1577,65]]},"1039":{"position":[[259,65],[488,65]]}}}],["https://github.com/inannan423/data_struct_easyx",{"_index":515,"t":{"105":{"position":[[27,51]]},"202":{"position":[[27,51]]}}}],["https://github.com/inannan423/reportpeac",{"_index":963,"t":{"285":{"position":[[0,45]]}}}],["https://github.com/slorber.png",{"_index":2376,"t":{"1010":{"position":[[437,30]]}}}],["https://github.com/xitu/gold",{"_index":2967,"t":{"1265":{"position":[[81,35]]}}}],["https://github.com/yangshun",{"_index":2371,"t":{"1010":{"position":[[262,27]]}}}],["https://github.com/yangshun.pngslorb",{"_index":2372,"t":{"1010":{"position":[[301,39]]}}}],["https://github.dev/<你的github昵称>/wx_weather_class_push",{"_index":1094,"t":{"355":{"position":[[338,53]]}}}],["https://google.com/search",{"_index":2991,"t":{"1271":{"position":[[451,27]]}}}],["https://jetzihan",{"_index":2479,"t":{"1027":{"position":[[172,17]]},"1037":{"position":[[175,17]]}}}],["https://juejin.cn/post/6844903900982558734",{"_index":5244,"t":{"2068":{"position":[[842,60]]}}}],["https://lodash.com/docs#debounc",{"_index":3590,"t":{"1420":{"position":[[970,36]]}}}],["https://maven.aliyun.com/repository/googl",{"_index":960,"t":{"280":{"position":[[159,44]]}}}],["https://maven.aliyun.com/repository/jcent",{"_index":959,"t":{"280":{"position":[[97,45]]}}}],["https://mysite.github.io",{"_index":2473,"t":{"1024":{"position":[[256,41]]}}}],["https://mysite.github.io/mysit",{"_index":2475,"t":{"1024":{"position":[[363,49]]}}}],["https://mysite.netlify.app",{"_index":2477,"t":{"1024":{"position":[[478,26]]}}}],["https://reactnative.dev/docs/environ",{"_index":949,"t":{"278":{"position":[[96,40]]}}}],["https://sebastienlorber.com",{"_index":2375,"t":{"1010":{"position":[[398,27]]}}}],["https://stackoverflow.com/questions/tagged/docusauru",{"_index":2457,"t":{"1017":{"position":[[2342,56]]},"1037":{"position":[[623,56]]}}}],["https://test.com",{"_index":4834,"t":{"1966":{"position":[[84,19]]}}}],["https://twitter.com/docusauru",{"_index":2461,"t":{"1017":{"position":[[2501,33]]},"1037":{"position":[[782,33]]}}}],["https://www",{"_index":4815,"t":{"1964":{"position":[[95,15]]}}}],["https://www.cnblogs.com/liluxiang/p/9592003.html",{"_index":2752,"t":{"1139":{"position":[[93,48]]}}}],["https://www.cnblogs.com/tuyang1129/p/12439862.html",{"_index":5826,"t":{"2236":{"position":[[1929,50]]}}}],["https://xxxxxx.oss",{"_index":744,"t":{"192":{"position":[[35,18],[101,30]]},"234":{"position":[[35,18],[101,30]]},"1178":{"position":[[35,18],[101,30]]}}}],["https://your",{"_index":2400,"t":{"1017":{"position":[[329,13]]}}}],["https://zhuanlan.zhihu.com/p/78855665",{"_index":547,"t":{"114":{"position":[[1224,37]]},"211":{"position":[[1224,37]]}}}],["https协议数据传输过程是加密的，也就是http＋tls，安全性较好。http",{"_index":5978,"t":{"2289":{"position":[[150,62]]}}}],["https标准端口443，http标准端口为80",{"_index":5980,"t":{"2289":{"position":[[238,39]]}}}],["https访问和http",{"_index":5975,"t":{"2289":{"position":[[23,37]]}}}],["http、html、ftp、telnet、asn",{"_index":5497,"t":{"2144":{"position":[[496,24]]}}}],["http协议有一种机制，让缓存器证实它的对象是最新的。这种机制就是条件get",{"_index":5148,"t":{"2055":{"position":[[3,89]]}}}],["http协议，https协议的报文出现了很多tls协议，原因在于http",{"_index":5977,"t":{"2289":{"position":[[110,39]]}}}],["http客户端)与web服务器(http服务器server)交换http",{"_index":5111,"t":{"2045":{"position":[[117,52]]}}}],["http报文之前的三次握手过程为访问www.bjfu.edu.cn的第一个tcp",{"_index":5963,"t":{"2287":{"position":[[677,63]]}}}],["http采用tcp",{"_index":5110,"t":{"2045":{"position":[[59,11]]}}}],["http，打开捕获的分组，对照http报文格式，在分组中即可查询到http版本号为http/1.1",{"_index":5957,"t":{"2287":{"position":[[250,66]]}}}],["http：hotmail",{"_index":5208,"t":{"2059":{"position":[[176,13]]}}}],["hu",{"_index":5050,"t":{"2003":{"position":[[374,6]]}}}],["hugo,基于go",{"_index":2483,"t":{"1042":{"position":[[325,31]]}}}],["hulk",{"_index":5049,"t":{"2003":{"position":[[356,7]]}}}],["hund",{"_index":1167,"t":{"388":{"position":[[568,5]]}}}],["hund=in.nextint",{"_index":1170,"t":{"388":{"position":[[610,18]]}}}],["hypertext",{"_index":3867,"t":{"1535":{"position":[[5,10]]}}}],["hz",{"_index":6206,"t":{"2460":{"position":[[141,57]]},"2469":{"position":[[471,62],[660,2],[698,2],[729,2],[762,2],[792,2],[821,2]]}}}],["i(x",{"_index":6310,"t":{"2519":{"position":[[342,4]]}}}],["i(x,i",{"_index":6003,"t":{"2391":{"position":[[172,6]]}}}],["i(x,y)表示照射到观察景物表面(x,y)处的白光强度，r(x,y)表示观察景物表面(x,i",{"_index":6001,"t":{"2391":{"position":[[81,66]]}}}],["i*2",{"_index":1619,"t":{"583":{"position":[[124,4]]}}}],["i+",{"_index":1624,"t":{"583":{"position":[[237,4]]}}}],["i,float",{"_index":1623,"t":{"583":{"position":[[218,7]]}}}],["i18n",{"_index":2425,"t":{"1017":{"position":[[997,5]]},"1029":{"position":[[33,5]]}}}],["i;fruit",{"_index":4334,"t":{"1760":{"position":[[48,8]]}}}],["i=(int)c;i<(int)c+25;i",{"_index":1591,"t":{"565":{"position":[[694,25]]}}}],["i=0;i<5;i",{"_index":5032,"t":{"1999":{"position":[[161,13]]}}}],["i=1,n)mi。在上述例子中，m",{"_index":1809,"t":{"654":{"position":[[286,19]]}}}],["i=f(x,i",{"_index":6007,"t":{"2391":{"position":[[239,8]]}}}],["i=sc.nextint",{"_index":1609,"t":{"579":{"position":[[174,15]]}}}],["i>archilocu",{"_index":4031,"t":{"1618":{"position":[[49,22]]}}}],["i['kcsj'][1",{"_index":908,"t":{"257":{"position":[[1205,12]]}}}],["i['kcsj'][2",{"_index":913,"t":{"257":{"position":[[1321,13],[1431,13]]}}}],["ico",{"_index":3913,"t":{"1561":{"position":[[198,4],[242,3]]}}}],["icon",{"_index":583,"t":{"126":{"position":[[147,4]]},"1561":{"position":[[51,40],[367,6]]},"1964":{"position":[[619,5]]},"1970":{"position":[[617,15],[686,10]]},"1979":{"position":[[232,6],[315,4],[863,4]]}}}],["icon.png",{"_index":3880,"t":{"1541":{"position":[[208,10]]}}}],["iconpath",{"_index":4774,"t":{"1933":{"position":[[372,11],[526,11],[665,11]]},"1970":{"position":[[576,11],[753,11]]}}}],["id",{"_index":143,"t":{"31":{"position":[[658,10],[702,6],[812,2],[861,10]]},"33":{"position":[[804,2],[812,2],[848,2]]},"35":{"position":[[223,2]]},"37":{"position":[[200,8],[271,9],[874,8]]},"49":{"position":[[448,6],[455,3],[661,5],[703,2],[892,5]]},"51":{"position":[[69,2],[197,2]]},"114":{"position":[[512,2]]},"211":{"position":[[512,2]]},"249":{"position":[[171,2],[342,2],[572,2]]},"287":{"position":[[0,62]]},"359":{"position":[[129,11],[422,11],[605,11]]},"363":{"position":[[154,2],[626,2],[813,2]]},"365":{"position":[[0,62],[491,2]]},"371":{"position":[[440,5]]},"786":{"position":[[62,3],[133,3],[152,4],[232,3]]},"969":{"position":[[72,3]]},"1006":{"position":[[229,3],[707,2],[719,7],[737,4],[750,3]]},"1150":{"position":[[114,10]]},"1399":{"position":[[972,3],[995,3],[1018,3]]},"1445":{"position":[[1136,3],[1172,3],[1213,3],[1319,3]]},"1543":{"position":[[44,46]]},"1655":{"position":[[94,2]]},"1659":{"position":[[330,2]]},"1661":{"position":[[242,2]]},"1872":{"position":[[2099,2],[2125,2],[2693,2],[2860,2]]},"1874":{"position":[[158,2]]},"1876":{"position":[[1331,5],[1458,2]]},"1878":{"position":[[203,2]]},"1888":{"position":[[99,12]]},"1911":{"position":[[150,7]]},"1964":{"position":[[351,3]]},"1974":{"position":[[276,42]]},"1981":{"position":[[406,2],[1491,3]]},"2059":{"position":[[638,16]]},"2072":{"position":[[23,37]]},"2169":{"position":[[293,22]]}}}],["id\"></div",{"_index":3737,"t":{"1487":{"position":[[192,10]]}}}],["id.github.io",{"_index":2472,"t":{"1024":{"position":[[243,12]]}}}],["id=\"app",{"_index":122,"t":{"31":{"position":[[142,8],[539,8]]},"1366":{"position":[[100,8]]},"1393":{"position":[[50,9],[412,7]]},"1395":{"position":[[25,7],[342,7]]},"1397":{"position":[[64,7],[462,7]]},"1399":{"position":[[598,7],[1274,9]]},"1404":{"position":[[785,9]]}}}],["id=\"demo",{"_index":3555,"t":{"1416":{"position":[[147,12]]}}}],["id=\"demo\"></p><p>internet",{"_index":4511,"t":{"1842":{"position":[[1649,25]]}}}],["id=\"demo\"></p><script",{"_index":4187,"t":{"1659":{"position":[[246,24]]},"1661":{"position":[[158,24]]},"1673":{"position":[[119,22]]}}}],["id=\"demo\"></p><script>var",{"_index":4388,"t":{"1790":{"position":[[354,25]]},"1799":{"position":[[370,25]]},"1803":{"position":[[354,25],[1063,25]]}}}],["id=\"exampl",{"_index":3537,"t":{"1410":{"position":[[62,13]]},"1412":{"position":[[5,13]]},"1424":{"position":[[105,11],[386,11]]}}}],["id=\"hh\">00</div",{"_index":2088,"t":{"853":{"position":[[912,16]]}}}],["id=\"key",{"_index":3721,"t":{"1472":{"position":[[1340,7]]}}}],["id=\"mm\">00</div",{"_index":2090,"t":{"853":{"position":[[947,16]]}}}],["id=\"nebula",{"_index":2702,"t":{"1104":{"position":[[51,10]]}}}],["id=\"new",{"_index":3658,"t":{"1445":{"position":[[551,7]]}}}],["id=\"no",{"_index":3710,"t":{"1472":{"position":[[433,6]]}}}],["id=\"signin",{"_index":135,"t":{"31":{"position":[[352,11]]}}}],["id=\"ss\">00</div></div><script",{"_index":2091,"t":{"853":{"position":[[982,30]]}}}],["id=\"todo",{"_index":3652,"t":{"1445":{"position":[[417,8]]}}}],["id=\"v",{"_index":3611,"t":{"1426":{"position":[[35,5]]}}}],["id=\"watch",{"_index":3569,"t":{"1420":{"position":[[119,9]]}}}],["id='#app'>{{message}}</div",{"_index":535,"t":{"114":{"position":[[695,33]]},"211":{"position":[[695,33]]}}}],["id={this.id",{"_index":3035,"t":{"1291":{"position":[[202,12]]}}}],["id={this.id}>{this.props.label}</button",{"_index":3031,"t":{"1289":{"position":[[489,41]]}}}],["idapp_id",{"_index":1112,"t":{"363":{"position":[[229,8]]}}}],["idapp_secret",{"_index":1127,"t":{"365":{"position":[[285,18]]}}}],["idea",{"_index":1341,"t":{"467":{"position":[[19,4]]},"540":{"position":[[3,4]]},"542":{"position":[[38,8],[233,4]]}}}],["identifi",{"_index":4050,"t":{"1624":{"position":[[144,10]]}}}],["idtemplate_id_class",{"_index":1129,"t":{"365":{"position":[[373,23]]}}}],["idtemplate_id_ev",{"_index":1130,"t":{"365":{"position":[[399,21]]}}}],["idtemplate_id_noclass",{"_index":1131,"t":{"365":{"position":[[423,25]]}}}],["idtitl",{"_index":2349,"t":{"1006":{"position":[[243,8]]}}}],["iduser_id_1",{"_index":1132,"t":{"365":{"position":[[451,15]]}}}],["iduser_id_2",{"_index":1133,"t":{"365":{"position":[[473,11]]}}}],["idx",{"_index":2630,"t":{"1092":{"position":[[3967,4]]}}}],["id、username、password",{"_index":1791,"t":{"641":{"position":[[101,20]]}}}],["id，信件信息需要存储信件的收件人、内容和发件人id",{"_index":4550,"t":{"1865":{"position":[[0,115]]}}}],["id，点击查询，按f12",{"_index":214,"t":{"37":{"position":[[1200,33]]}}}],["ie",{"_index":3781,"t":{"1507":{"position":[[1242,2],[1511,2],[3734,2],[4174,2]]}}}],["if(age<0",{"_index":1292,"t":{"443":{"position":[[957,8]]}}}],["if(this.data.content===''|this.data.rec",{"_index":4643,"t":{"1876":{"position":[[344,47]]}}}],["if=\"!todo.iscomplet",{"_index":3642,"t":{"1443":{"position":[[155,22]]}}}],["if=\"awesome\">vu",{"_index":3682,"t":{"1464":{"position":[[58,16],[124,16]]}}}],["if=\"logintyp",{"_index":3702,"t":{"1472":{"position":[[99,13],[485,13],[1068,13],[1389,13]]}}}],["if=\"math.random",{"_index":3691,"t":{"1468":{"position":[[42,17]]}}}],["if=\"ok",{"_index":3686,"t":{"1466":{"position":[[125,8]]}}}],["if=\"result",{"_index":265,"t":{"49":{"position":[[1034,12]]}}}],["if=\"seen\">现在你看到我了</p",{"_index":3738,"t":{"1489":{"position":[[156,21]]}}}],["if=\"seen\">现在你看到我了</p></div",{"_index":3468,"t":{"1395":{"position":[[42,27]]}}}],["if=\"todos.length",{"_index":3643,"t":{"1443":{"position":[[270,18]]}}}],["if=\"typ",{"_index":3696,"t":{"1470":{"position":[[60,8],[98,8],[136,8]]}}}],["ifm",{"_index":2636,"t":{"1094":{"position":[[89,3],[119,3],[154,3],[191,3],[229,3],[265,3],[303,3],[342,3],[450,3],[480,3],[515,3],[552,3],[590,3],[626,3],[664,3],[1120,3],[1165,3],[1209,3],[1251,3],[1289,3],[1330,3],[1373,3],[1491,3],[1521,3],[1556,3],[1593,3],[1631,3],[1667,3],[1705,3],[1849,3],[1879,3],[1914,3],[1951,3],[1989,3],[2025,3],[2063,3],[2124,3],[2154,3],[2189,3],[2226,3],[2264,3],[2300,3],[2338,3]]},"1096":{"position":[[426,3],[453,3]]}}}],["ifram",{"_index":3976,"t":{"1592":{"position":[[0,7],[242,7],[282,13],[312,20],[538,6]]}}}],["ifttt、googl",{"_index":1022,"t":{"293":{"position":[[597,16]]},"376":{"position":[[557,16]]}}}],["ii",{"_index":2183,"t":{"892":{"position":[[10,3]]}}}],["illustrator、coreldraw",{"_index":6140,"t":{"2450":{"position":[[72,21]]}}}],["imag",{"_index":403,"t":{"101":{"position":[[103,5]]},"103":{"position":[[85,5],[597,5]]},"198":{"position":[[103,5]]},"200":{"position":[[85,5],[597,5]]},"853":{"position":[[286,6]]},"1325":{"position":[[114,5],[237,6]]},"1511":{"position":[[274,6],[365,6],[632,6]]},"1576":{"position":[[82,6]]},"1868":{"position":[[292,7]]},"1903":{"position":[[64,6]]},"1905":{"position":[[222,6],[389,6]]},"1995":{"position":[[305,6]]},"2452":{"position":[[302,5]]}}}],["image\":img}access_token",{"_index":298,"t":{"66":{"position":[[449,25]]},"171":{"position":[[449,25]]}}}],["image();image.src",{"_index":3132,"t":{"1325":{"position":[[126,17]]}}}],["image.onload",{"_index":3138,"t":{"1325":{"position":[[247,18]]}}}],["image.png",{"_index":3935,"t":{"1572":{"position":[[136,10]]}}}],["image.png](https://jetzihan",{"_index":676,"t":{"177":{"position":[[138,29]]},"217":{"position":[[142,29]]},"219":{"position":[[138,29]]},"1115":{"position":[[224,29]]},"1163":{"position":[[138,29]]}}}],["image/gif(data",{"_index":5162,"t":{"2055":{"position":[[461,14]]}}}],["image/icon_api.png",{"_index":4775,"t":{"1933":{"position":[[384,21],[538,21],[677,21]]}}}],["image/icon_api_hl.png",{"_index":4777,"t":{"1933":{"position":[[434,23],[580,23],[719,23]]}}}],["image_url",{"_index":2364,"t":{"1010":{"position":[[149,10],[290,10],[426,10],[603,10]]}}}],["imap",{"_index":5217,"t":{"2059":{"position":[[556,4],[572,23],[620,17]]}}}],["imap：internet",{"_index":5207,"t":{"2059":{"position":[[132,13]]}}}],["img",{"_index":713,"t":{"179":{"position":[[695,3],[785,3],[801,3]]},"221":{"position":[[695,3],[785,3],[801,3]]},"1049":{"position":[[409,6]]},"1115":{"position":[[98,4]]},"1165":{"position":[[695,3],[785,3],[801,3]]},"1323":{"position":[[275,6]]},"1338":{"position":[[207,3],[406,4]]},"1366":{"position":[[1480,4],[2350,4]]},"1541":{"position":[[96,4]]},"1572":{"position":[[56,5],[118,4]]},"1576":{"position":[[14,4],[134,4],[183,4]]},"1578":{"position":[[68,4]]},"1580":{"position":[[0,4]]},"1582":{"position":[[0,4]]},"1592":{"position":[[475,28]]},"2443":{"position":[[315,8]]}}}],["img.*?src",{"_index":684,"t":{"179":{"position":[[142,23],[558,23]]},"221":{"position":[[142,23],[558,23]]},"1165":{"position":[[142,23],[558,23]]}}}],["img.oss",{"_index":677,"t":{"177":{"position":[[168,7]]},"217":{"position":[[172,7]]},"219":{"position":[[168,7]]},"1027":{"position":[[190,7]]},"1037":{"position":[[193,7]]},"1115":{"position":[[125,7],[254,7]]},"1163":{"position":[[168,7]]},"1511":{"position":[[394,7]]},"1905":{"position":[[418,7]]},"2138":{"position":[[1205,7]]},"2273":{"position":[[167,7],[284,7]]}}}],["img.shap",{"_index":6110,"t":{"2443":{"position":[[406,9]]}}}],["img.split",{"_index":720,"t":{"179":{"position":[[886,15]]},"221":{"position":[[886,15]]},"1165":{"position":[[886,15]]}}}],["img.startswith('http",{"_index":715,"t":{"179":{"position":[[732,23],[759,25]]},"221":{"position":[[732,23],[759,25]]},"1165":{"position":[[732,23],[759,25]]}}}],["img/favicon.ico",{"_index":2407,"t":{"1017":{"position":[[501,18]]},"1027":{"position":[[96,21]]}}}],["img/logo.svg",{"_index":2447,"t":{"1017":{"position":[[1902,15]]}}}],["img/pc/s11.webp",{"_index":3805,"t":{"1511":{"position":[[312,20]]}}}],["img>是用来在元素<img",{"_index":3874,"t":{"1541":{"position":[[0,95]]}}}],["img>标签，因此请使用<imag",{"_index":4704,"t":{"1903":{"position":[[113,32]]}}}],["img_binari",{"_index":716,"t":{"179":{"position":[[805,10]]},"221":{"position":[[805,10]]},"1165":{"position":[[805,10]]}}}],["img_list",{"_index":685,"t":{"179":{"position":[[171,8],[582,8],[633,9],[702,9]]},"221":{"position":[[171,8],[582,8],[633,9],[702,9]]},"1165":{"position":[[171,8],[582,8],[633,9],[702,9]]}}}],["img_pixel",{"_index":6116,"t":{"2443":{"position":[[517,9],[726,11]]}}}],["img_pixel[img[i",{"_index":6119,"t":{"2443":{"position":[[602,16]]}}}],["imgwh",{"_index":6109,"t":{"2443":{"position":[[398,5]]}}}],["imgwh[0",{"_index":6111,"t":{"2443":{"position":[[424,8]]}}}],["imgwh[1",{"_index":6112,"t":{"2443":{"position":[[449,8]]}}}],["img的src",{"_index":3124,"t":{"1323":{"position":[[813,19],[1081,19]]}}}],["import",{"_index":152,"t":{"33":{"position":[[55,8],[145,6],[207,6]]},"49":{"position":[[117,6],[144,6],[179,6]]},"66":{"position":[[20,6]]},"171":{"position":[[20,6]]},"179":{"position":[[242,6]]},"221":{"position":[[242,6]]},"249":{"position":[[69,6]]},"251":{"position":[[66,6]]},"295":{"position":[[221,21]]},"380":{"position":[[295,6]]},"579":{"position":[[25,8]]},"1092":{"position":[[196,6],[508,6]]},"1104":{"position":[[0,6]]},"1106":{"position":[[0,6]]},"1165":{"position":[[242,6]]},"1248":{"position":[[1830,6]]},"1353":{"position":[[277,6],[304,6],[336,6],[397,6],[439,6]]},"1368":{"position":[[41,6]]},"1507":{"position":[[49,11],[94,11],[132,11],[227,11],[270,11],[308,11],[488,11],[534,14]]},"1613":{"position":[[28,11]]},"1979":{"position":[[2799,12]]},"2443":{"position":[[201,6],[290,6]]}}}],["import('@docusaurus/preset",{"_index":2430,"t":{"1017":{"position":[[1118,27],[1774,27]]},"1037":{"position":[[59,27]]},"1039":{"position":[[53,27]]}}}],["import('@docusaurus/types').config",{"_index":2396,"t":{"1017":{"position":[[192,36]]}}}],["important;}.animated02",{"_index":3765,"t":{"1507":{"position":[[178,23]]}}}],["important;}.box2",{"_index":4944,"t":{"1979":{"position":[[2617,18]]}}}],["important;}.part2",{"_index":4937,"t":{"1979":{"position":[[2464,19]]}}}],["important;}/*逐渐显示*/.toshow",{"_index":3767,"t":{"1507":{"position":[[354,27]]}}}],["improv",{"_index":593,"t":{"126":{"position":[[310,7]]}}}],["inannan423",{"_index":2481,"t":{"1033":{"position":[[46,10],[75,15]]}}}],["inc",{"_index":2465,"t":{"1017":{"position":[[2765,4]]},"1037":{"position":[[1025,4]]}}}],["includ",{"_index":231,"t":{"47":{"position":[[100,8]]},"293":{"position":[[204,7]]},"376":{"position":[[153,7]]},"1842":{"position":[[1083,21]]}}}],["index",{"_index":2182,"t":{"887":{"position":[[33,5]]},"991":{"position":[[190,5]]},"1058":{"position":[[261,5]]},"1424":{"position":[[420,6],[463,5]]},"1426":{"position":[[472,6],[494,5]]},"1445":{"position":[[227,6],[666,6]]},"1511":{"position":[[546,6],[859,6]]},"1515":{"position":[[1390,6]]},"1797":{"position":[[134,6]]},"1799":{"position":[[188,6],[546,6]]},"1801":{"position":[[179,6],[261,5]]},"1803":{"position":[[224,6],[537,6],[662,5]]},"1805":{"position":[[239,6],[330,5]]},"1807":{"position":[[147,6]]},"1809":{"position":[[147,6]]},"1811":{"position":[[152,6]]},"1813":{"position":[[160,6]]},"1854":{"position":[[162,5]]},"1872":{"position":[[597,5]]},"2516":{"position":[[166,6],[222,6]]}}}],["index.css",{"_index":357,"t":{"86":{"position":[[114,10]]},"855":{"position":[[86,9]]},"877":{"position":[[72,9]]},"1248":{"position":[[172,9],[1896,14]]}}}],["index.html",{"_index":151,"t":{"31":{"position":[[921,27]]},"37":{"position":[[1186,13]]},"86":{"position":[[184,15]]},"791":{"position":[[115,10]]},"851":{"position":[[4,10]]},"855":{"position":[[163,10]]},"859":{"position":[[63,17]]},"867":{"position":[[286,15]]},"871":{"position":[[3,10]]},"877":{"position":[[58,10]]},"885":{"position":[[41,12]]},"908":{"position":[[852,11]]},"910":{"position":[[805,11]]},"914":{"position":[[37,11],[346,14],[613,13]]},"966":{"position":[[69,10]]}}}],["index.htmlvar",{"_index":2333,"t":{"991":{"position":[[99,13]]}}}],["index.html，否则会出现404错误。并且index.html",{"_index":2740,"t":{"1126":{"position":[[34,58]]}}}],["index.htnl，还需要安装github",{"_index":2743,"t":{"1132":{"position":[[0,29]]}}}],["index.j",{"_index":2113,"t":{"855":{"position":[[124,8]]},"877":{"position":[[85,8]]},"1049":{"position":[[369,8]]},"1074":{"position":[[310,8]]},"1092":{"position":[[761,8],[1213,8]]},"1248":{"position":[[792,8],[1814,8]]},"1364":{"position":[[331,13]]},"1872":{"position":[[1031,8]]},"1900":{"position":[[181,47]]}}}],["index.jsclos",{"_index":3074,"t":{"1312":{"position":[[545,13]]}}}],["index.jspag",{"_index":4735,"t":{"1924":{"position":[[31,16]]}}}],["index.js中加入逻辑代码，这些都是从文档上直接copi",{"_index":4690,"t":{"1898":{"position":[[479,35]]}}}],["index.module.css",{"_index":2570,"t":{"1092":{"position":[[473,21]]}}}],["index.wxml",{"_index":4556,"t":{"1868":{"position":[[221,10],[236,10],[548,10],[857,10]]},"1898":{"position":[[302,26]]},"1900":{"position":[[100,18]]}}}],["index=\"1\"><img",{"_index":3357,"t":{"1366":{"position":[[1307,14]]}}}],["index=\"2",{"_index":3361,"t":{"1366":{"position":[[1423,9],[1619,8],[1717,8],[1815,8],[1912,8]]}}}],["index=\"3\"><img",{"_index":3372,"t":{"1366":{"position":[[2024,14]]}}}],["index=\"4\"><img",{"_index":3375,"t":{"1366":{"position":[[2180,14]]}}}],["indexof",{"_index":4471,"t":{"1838":{"position":[[0,9],[320,9]]},"1840":{"position":[[150,14],[225,9]]}}}],["infin",{"_index":4097,"t":{"1638":{"position":[[632,15],[649,14],[723,8],[745,8],[758,9],[814,8]]},"1722":{"position":[[0,8],[13,10],[92,9],[112,8],[167,9],[233,8],[242,8],[261,8],[288,9]]}}}],["infinit",{"_index":3843,"t":{"1515":{"position":[[1569,9]]},"1522":{"position":[[175,9]]}}}],["infinitylet",{"_index":4099,"t":{"1638":{"position":[[786,11]]}}}],["infinitynumber.min_valu",{"_index":4098,"t":{"1638":{"position":[[689,24]]}}}],["infinityvar",{"_index":4274,"t":{"1722":{"position":[[200,11]]}}}],["info",{"_index":2806,"t":{"1208":{"position":[[15,4]]},"1248":{"position":[[747,4],[1587,6]]},"1259":{"position":[[172,6]]},"1555":{"position":[[205,4]]}}}],["inform",{"_index":5773,"t":{"2218":{"position":[[23,11]]},"2454":{"position":[[701,11]]}}}],["init",{"_index":338,"t":{"78":{"position":[[41,4]]},"82":{"position":[[105,4]]},"126":{"position":[[25,4]]},"1047":{"position":[[144,4]]},"1342":{"position":[[206,7]]},"1360":{"position":[[42,4]]},"1453":{"position":[[4,4]]}}}],["initgraph(1000",{"_index":401,"t":{"101":{"position":[[72,15]]},"103":{"position":[[63,15],[575,15]]},"198":{"position":[[72,15]]},"200":{"position":[[63,15],[575,15]]}}}],["initi",{"_index":2031,"t":{"853":{"position":[[120,7]]},"1515":{"position":[[166,7]]},"1624":{"position":[[280,14]]},"2232":{"position":[[715,7]]}}}],["init异步执行，使threejs等待一段时间，待threedom挂载完成后再开始操作dom",{"_index":3147,"t":{"1327":{"position":[[172,57]]}}}],["innerhtml",{"_index":4221,"t":{"1671":{"position":[[55,9]]}}}],["input",{"_index":125,"t":{"31":{"position":[[206,5],[237,6],[430,5],[441,5],[855,5]]},"179":{"position":[[322,17]]},"221":{"position":[[322,17]]},"579":{"position":[[65,5]]},"1165":{"position":[[322,17]]},"1271":{"position":[[522,5],[595,6]]},"1273":{"position":[[375,5],[750,5],[779,6],[801,6]]},"1397":{"position":[[495,6]]},"1420":{"position":[[166,6]]},"1445":{"position":[[522,6]]},"1472":{"position":[[154,6],[245,6],[325,37],[540,6],[633,6],[1123,6],[1235,6],[1444,6],[1499,7],[1558,6],[1615,7]]},"1545":{"position":[[105,6],[254,7],[324,7]]},"1868":{"position":[[390,6],[632,6],[713,6]]},"1872":{"position":[[1579,5],[1603,6]]}}}],["input\"></templ",{"_index":3720,"t":{"1472":{"position":[[1292,18]]}}}],["input\"></template><templ",{"_index":3718,"t":{"1472":{"position":[[1178,27]]}}}],["input.getkey(keycode.",{"_index":1082,"t":{"310":{"position":[[229,26]]}}}],["input.getkey(keycode.a",{"_index":1080,"t":{"310":{"position":[[132,26]]}}}],["input.getkey(keycode.d",{"_index":1084,"t":{"310":{"position":[[326,26]]}}}],["input.getkey(keycode.w",{"_index":1076,"t":{"310":{"position":[[32,26]]}}}],["input.java",{"_index":1607,"t":{"579":{"position":[[11,10]]}}}],["inputbox(c",{"_index":452,"t":{"103":{"position":[[311,11]]},"200":{"position":[[311,11]]}}}],["inputcont",{"_index":4641,"t":{"1876":{"position":[[174,13]]}}}],["inputform",{"_index":2988,"t":{"1271":{"position":[[382,9],[659,9]]},"1273":{"position":[[16,9],[102,10],[669,9],[857,9]]}}}],["inputformreactdom.render(inputform",{"_index":2995,"t":{"1271":{"position":[[818,35]]},"1273":{"position":[[1038,35]]}}}],["inputrec",{"_index":4642,"t":{"1876":{"position":[[248,11]]}}}],["inputvalu",{"_index":4617,"t":{"1872":{"position":[[1709,11],[1781,11]]}}}],["insert",{"_index":1352,"t":{"469":{"position":[[184,6]]}}}],["instagram",{"_index":2887,"t":{"1244":{"position":[[105,9]]}}}],["instal",{"_index":11,"t":{"6":{"position":[[251,7]]},"25":{"position":[[57,7],[233,7]]},"82":{"position":[[17,7]]},"273":{"position":[[245,10]]},"278":{"position":[[16,7]]},"648":{"position":[[71,9]]},"795":{"position":[[75,7]]},"1056":{"position":[[4,7]]},"1084":{"position":[[353,7],[390,7],[609,7]]},"1092":{"position":[[2407,9]]},"1101":{"position":[[4,7]]},"1200":{"position":[[117,7]]},"1349":{"position":[[15,7]]},"1353":{"position":[[4,7]]},"1449":{"position":[[4,7]]},"1456":{"position":[[4,7]]}}}],["instrument",{"_index":6215,"t":{"2462":{"position":[[430,10]]}}}],["int",{"_index":455,"t":{"103":{"position":[[368,3],[407,3],[435,4],[1878,3]]},"200":{"position":[[368,3],[407,3],[435,4],[1878,3]]},"388":{"position":[[219,3],[564,3],[629,3],[655,3],[680,3]]},"390":{"position":[[341,3],[353,3]]},"392":{"position":[[493,3],[526,3],[559,3]]},"396":{"position":[[181,3]]},"406":{"position":[[112,3]]},"408":{"position":[[272,3]]},"412":{"position":[[198,3]]},"414":{"position":[[135,3]]},"416":{"position":[[186,3]]},"420":{"position":[[117,3]]},"437":{"position":[[26,3]]},"443":{"position":[[417,3],[883,3],[899,3]]},"445":{"position":[[138,3],[287,3],[430,3]]},"447":{"position":[[74,3],[369,3],[683,3]]},"449":{"position":[[107,3]]},"451":{"position":[[122,3],[463,3],[554,3]]},"453":{"position":[[79,3]]},"457":{"position":[[175,3]]},"486":{"position":[[206,3],[224,3]]},"488":{"position":[[110,3]]},"494":{"position":[[187,3],[316,3],[418,3]]},"496":{"position":[[86,3],[116,3],[139,3],[349,3],[415,3]]},"504":{"position":[[190,3]]},"506":{"position":[[78,3],[96,3]]},"508":{"position":[[78,3],[96,3]]},"563":{"position":[[86,3],[224,3],[234,3],[535,3]]},"565":{"position":[[81,3]]},"571":{"position":[[36,3]]},"579":{"position":[[170,3]]},"581":{"position":[[87,3]]},"583":{"position":[[100,3]]},"585":{"position":[[40,3],[50,3],[141,3],[152,3]]},"588":{"position":[[47,3]]},"598":{"position":[[74,3],[355,4]]},"600":{"position":[[40,3]]},"602":{"position":[[9,3],[26,3],[96,3]]},"604":{"position":[[137,4],[249,4],[388,4]]},"608":{"position":[[15,3],[78,4]]},"610":{"position":[[14,5],[42,5],[83,4]]},"614":{"position":[[159,7]]},"616":{"position":[[175,7],[353,5]]},"618":{"position":[[201,3],[575,3],[589,3],[600,3]]},"623":{"position":[[97,3]]},"1999":{"position":[[156,4]]},"2303":{"position":[[52,4]]}}}],["int(i['kcsj'][0",{"_index":916,"t":{"257":{"position":[[1471,17]]}}}],["int(i['kcsj'][1",{"_index":912,"t":{"257":{"position":[[1302,16],[1412,16]]}}}],["int(weekd",{"_index":823,"t":{"253":{"position":[[149,10]]}}}],["int[2",{"_index":1726,"t":{"616":{"position":[[191,9],[284,7]]}}}],["int[2][3",{"_index":1710,"t":{"614":{"position":[[175,10]]}}}],["int[3",{"_index":1728,"t":{"616":{"position":[[212,7]]}}}],["int[]{3",{"_index":1697,"t":{"608":{"position":[[206,8]]}}}],["int[list.length",{"_index":1699,"t":{"610":{"position":[[61,17]]}}}],["integ",{"_index":1383,"t":{"486":{"position":[[386,7]]},"488":{"position":[[56,9],[196,8],[345,7]]},"490":{"position":[[217,7],[232,7],[248,7]]},"492":{"position":[[59,7]]},"494":{"position":[[98,7],[128,7],[161,7],[206,7],[226,7],[283,7],[323,7],[335,7],[380,7],[392,7],[435,7],[546,7],[638,7]]},"498":{"position":[[65,7]]}}}],["integer.parseint(\"444\",16",{"_index":1425,"t":{"496":{"position":[[423,27]]}}}],["integer.parseint(\"9",{"_index":1423,"t":{"496":{"position":[[355,23]]}}}],["integer.valueof(\"444\",16",{"_index":1413,"t":{"494":{"position":[[650,26]]}}}],["integer.valueof(9",{"_index":1410,"t":{"494":{"position":[[556,20]]}}}],["interchang",{"_index":6145,"t":{"2452":{"position":[[132,11]]}}}],["interconnect",{"_index":5482,"t":{"2144":{"position":[[67,15]]}}}],["interconnection)，全称osi/rm(open",{"_index":5481,"t":{"2144":{"position":[[29,30]]}}}],["interdomain",{"_index":5623,"t":{"2191":{"position":[[17,11]]}}}],["interfac",{"_index":4466,"t":{"1829":{"position":[[256,13]]},"2106":{"position":[[53,9]]},"2171":{"position":[[16,60]]},"2462":{"position":[[449,41]]}}}],["interfaces（api",{"_index":4457,"t":{"1823":{"position":[[192,31]]}}}],["intern",{"_index":938,"t":{"273":{"position":[[319,8],[373,8]]},"1017":{"position":[[829,16]]}}}],["internet",{"_index":3916,"t":{"1561":{"position":[[256,8]]},"1852":{"position":[[262,8]]},"2534":{"position":[[759,24]]},"2543":{"position":[[759,24]]},"2552":{"position":[[759,24]]}}}],["internet中，主机由ip地址进行标识，接收进程由端口号（port",{"_index":5094,"t":{"2033":{"position":[[206,83]]}}}],["internet控制报文协议(internet",{"_index":5734,"t":{"2200":{"position":[[0,23]]}}}],["intersect",{"_index":3231,"t":{"1342":{"position":[[1167,10],[1346,11]]}}}],["intersects.length",{"_index":3233,"t":{"1342":{"position":[[1302,18]]}}}],["intro",{"_index":2449,"t":{"1017":{"position":[[1970,8]]},"1037":{"position":[[277,8]]}}}],["intvalu",{"_index":1378,"t":{"486":{"position":[[210,10]]}}}],["intvar",{"_index":1783,"t":{"627":{"position":[[244,7],[369,7]]}}}],["int、long",{"_index":1451,"t":{"504":{"position":[[19,8],[262,32]]}}}],["io",{"_index":1556,"t":{"547":{"position":[[0,35]]},"2152":{"position":[[0,12]]}}}],["ios和安卓两大平台。它的作用就是使用react技术栈（也就是js技术栈）进行开发后，可以同时运行在安卓和ios端。learn",{"_index":637,"t":{"150":{"position":[[788,80]]},"319":{"position":[[788,80]]}}}],["iota",{"_index":2530,"t":{"1062":{"position":[[134,4]]}}}],["ip",{"_index":223,"t":{"45":{"position":[[172,2],[219,2]]},"895":{"position":[[0,42],[43,8]]},"897":{"position":[[4,4]]},"1576":{"position":[[284,2]]},"2029":{"position":[[16,4],[58,7]]},"2031":{"position":[[102,21]]},"2064":{"position":[[115,15]]},"2066":{"position":[[125,74]]},"2068":{"position":[[151,2]]},"2092":{"position":[[80,19]]},"2148":{"position":[[121,4]]},"2159":{"position":[[12,108]]},"2169":{"position":[[216,36],[280,12],[533,7]]},"2171":{"position":[[110,5],[195,12]]},"2177":{"position":[[544,25]]},"2179":{"position":[[59,15],[202,11]]},"2195":{"position":[[59,25],[85,18],[104,14],[386,26]]},"2197":{"position":[[236,2]]},"2287":{"position":[[89,11]]}}}],["ipv4",{"_index":5606,"t":{"2181":{"position":[[130,25]]},"2191":{"position":[[224,14]]}}}],["ipv4地址：202.204.112.10",{"_index":5962,"t":{"2287":{"position":[[613,29]]}}}],["ipv4的ttl",{"_index":5605,"t":{"2181":{"position":[[104,16]]}}}],["ipv6",{"_index":5603,"t":{"2181":{"position":[[0,9],[121,8]]}}}],["ipv6的地址。2001:da8:211:d112:1602:ecff:fe04:ac50",{"_index":5954,"t":{"2287":{"position":[[101,53]]}}}],["ip。rout",{"_index":5237,"t":{"2068":{"position":[[443,9]]}}}],["ip以外的其他网络层协议。事实上，一台给定的主机可以支持多种网络层协议，以对不同的应用采用不同的协议。因此，当以太网帧到达适配器b，适配器b需要知道它应该将数据字段的内容传递给哪个网络层协议（即分解）。ip和其他链路层协议都有它们各自的、标准化的类型编号。此外，arp协议有自己的类型编号，并且如果到达的帧包含arp分组（即类型字段的值为十六进制的0806），则该arp分组将被多路分解给arp",{"_index":5356,"t":{"2127":{"position":[[491,308]]}}}],["ip分组是不允许分片的，那么这个ip",{"_index":5535,"t":{"2169":{"position":[[186,29]]}}}],["ip分组的最大总长度为65535b（2^16",{"_index":5519,"t":{"2167":{"position":[[336,28]]}}}],["ip分组的目的ip",{"_index":5597,"t":{"2177":{"position":[[573,30]]}}}],["ip分组长度为l，待转发的链路mtu=m",{"_index":5541,"t":{"2169":{"position":[[541,23]]}}}],["ip协议共有5行，每行是32位，也就是4个字节，因此首部长度至少是20字节，4位的首部长度最高能标识的长度为15，显然是不够的，因此这里计算出的首部长度必须乘以4",{"_index":5516,"t":{"2167":{"position":[[89,96]]}}}],["ip协议提供的服务为数据报服务，尽力而为的服务，数据单元为ip",{"_index":5514,"t":{"2167":{"position":[[0,35]]}}}],["ip地址、目的ip",{"_index":5885,"t":{"2260":{"position":[[185,19]]}}}],["ip地址为222.222.222.220的主机要向222.222.222.222的主机发送ip数据，在上图中，他们位于同一个子网中。为了发送数据报，该源必须要向它的适配器提供ip数据报和目的主机222.222.222.222的mac地址。然后发送适配器将构造一个包含目的地mac",{"_index":5330,"t":{"2125":{"position":[[585,160]]}}}],["ip地址分为网络号（netid）和主机号（hostid）。在同一个区域网络中的ip地址的网络号一定相同，主机号一定不同。这个区域的网络叫ip",{"_index":5559,"t":{"2171":{"position":[[226,94]]}}}],["ip地址划分为网络号（netid）、子网号（subid）、主机号（hostid",{"_index":5581,"t":{"2177":{"position":[[0,61]]}}}],["ip地址和一个适配器，一台路由器对它的每个接口都有一个ip地址。对路由器的每个接口，（在路由器中）也有一个arp模块和一个适配器。上图的路由器有两个接口，所以它有两个ip地址，两个arp模块和两个适配器，当然，网络中的每个适配器都有自己的mac",{"_index":5344,"t":{"2125":{"position":[[1426,144]]}}}],["ip地址根据网络号和主机号来分，分为a、b、c三类及特殊地址d、e。全0和全1",{"_index":5561,"t":{"2173":{"position":[[0,46]]}}}],["ip地址的最前面为“1110”，所以地址的网络号取值于224~239之间。一般用于多路广播用户[1",{"_index":5570,"t":{"2173":{"position":[[452,69]]}}}],["ip地址的最前面为“1111”，所以地址的网络号取值于240~255",{"_index":5572,"t":{"2173":{"position":[[532,56]]}}}],["ip地址（专用ip",{"_index":5613,"t":{"2186":{"position":[[0,52]]}}}],["ip地址，占32",{"_index":5583,"t":{"2177":{"position":[[115,26]]}}}],["ip地址，这是一个典型的c类地址，但是c类地址是前24为为网络号，这里是23",{"_index":5627,"t":{"2191":{"position":[[175,44]]}}}],["ip地址：128.14.35.7/20",{"_index":5629,"t":{"2193":{"position":[[69,24]]}}}],["ip子网策略（subnet",{"_index":5558,"t":{"2171":{"position":[[208,17]]}}}],["ip报文）传送到正确的网络。ip路由器的主要功能分为ip数据包的转发、路由的计算和更新、icmp",{"_index":5509,"t":{"2154":{"position":[[314,100]]}}}],["ip数据包时，它会将数据包的目的ip地址与自己本地路由表中的所有路由表进行逐位（bit",{"_index":5760,"t":{"2214":{"position":[[70,51]]}}}],["ip数据报(datagram",{"_index":5884,"t":{"2260":{"position":[[164,20]]}}}],["ip数据报。以太网的最大传输单元（mtu）是1500字节。这意味着如果ip数据报超过了1500字节，则主机必须将该数据报分片。数据字段的最小长度是46字节。这意味着如果ip数据报小于46字节，数据报必须被填充到46字节。当采用填充时，传递到网络层的数据报括ip数据报和填充部分。网络层使用ip",{"_index":5354,"t":{"2127":{"position":[[246,172]]}}}],["ip数据报，且这两台主机在相同的以太局域网上。设发送适配器（即适配器a）的mac地址是aa",{"_index":5349,"t":{"2127":{"position":[[12,62]]}}}],["ip服务不能.在ip",{"_index":5108,"t":{"2043":{"position":[[52,144]]}}}],["ip的关系，我们就需要一个网络服务器来解析域名，并将ip地址和域名进行绑定，这就是dns服务器，中文为域名解析服务器。英文全称为domain",{"_index":5219,"t":{"2062":{"position":[[146,78]]}}}],["ip的地址呢？那么它将构造一个arp分组，这个分组包含了发送和接收ip地址和mac地址，arp查询分组和响应分组有相同的格式，这个分组将询问子网上所有的主机和路由器（使用广播的方式ffffffffffff），以确定找出要解析的ip分组的mac地址。一次arp查询等价于一个人在教室里面大喊：“家住清华东路35",{"_index":5342,"t":{"2125":{"position":[[1145,183]]}}}],["ip）与链路层地址（mac",{"_index":5329,"t":{"2125":{"position":[[553,31]]}}}],["is=\"staffnam",{"_index":5044,"t":{"2003":{"position":[[149,14],[206,14],[263,14]]}}}],["is=\"todo",{"_index":3663,"t":{"1445":{"position":[[637,8],[796,8]]}}}],["isact",{"_index":3414,"t":{"1373":{"position":[[68,8],[131,8],[278,9],[340,9],[416,8],[734,9]]},"1375":{"position":[[323,8],[433,8]]},"1377":{"position":[[384,8],[414,8]]}}}],["isbuttondis",{"_index":3734,"t":{"1485":{"position":[[211,16]]}}}],["isdigit",{"_index":1210,"t":{"402":{"position":[[32,9]]}}}],["isdisplay",{"_index":3103,"t":{"1323":{"position":[[72,12]]}}}],["isfind",{"_index":458,"t":{"103":{"position":[[411,6],[491,6],[3882,7]]},"200":{"position":[[411,6],[491,6],[3882,7]]}}}],["islett",{"_index":1209,"t":{"402":{"position":[[11,10]]}}}],["islogin:1",{"_index":4588,"t":{"1872":{"position":[[432,9]]}}}],["islowercas",{"_index":1213,"t":{"402":{"position":[[105,13]]}}}],["islt2m",{"_index":3111,"t":{"1323":{"position":[[326,6],[450,9]]}}}],["isn",{"_index":5807,"t":{"2232":{"position":[[740,3]]}}}],["isnan",{"_index":4106,"t":{"1638":{"position":[[1068,9]]},"1720":{"position":[[194,7]]}}}],["isnan(nan",{"_index":4103,"t":{"1638":{"position":[[1011,11]]}}}],["iso",{"_index":1583,"t":{"565":{"position":[[265,3]]},"1555":{"position":[[183,3]]}}}],["iso/osi",{"_index":5479,"t":{"2144":{"position":[[3,9]]}}}],["isp",{"_index":5238,"t":{"2068":{"position":[[469,11],[497,9]]}}}],["isprototypeof(object",{"_index":4152,"t":{"1646":{"position":[[205,21]]}}}],["isp提供的名称服务器（也就是本地dns服务器），例如我们使用的114.114.114.114，google的8.8.8.8",{"_index":5230,"t":{"2066":{"position":[[512,74]]}}}],["isstud",{"_index":4823,"t":{"1964":{"position":[[286,10]]}}}],["isstudent:fals",{"_index":4984,"t":{"1981":{"position":[[1456,16]]}}}],["isuppercas",{"_index":1212,"t":{"402":{"position":[[81,13]]}}}],["iswhitespac",{"_index":1211,"t":{"402":{"position":[[54,14]]}}}],["is协议和ospf",{"_index":5786,"t":{"2220":{"position":[[146,14]]}}}],["it'",{"_index":4238,"t":{"1689":{"position":[[125,5]]}}}],["it</button></div",{"_index":3520,"t":{"1404":{"position":[[877,17]]}}}],["item",{"_index":2071,"t":{"853":{"position":[[631,6]]},"1017":{"position":[[1931,6],[2220,6],[2300,6],[2561,6]]},"1037":{"position":[[246,6],[512,6],[581,6],[840,6]]},"1342":{"position":[[1338,4]]},"1366":{"position":[[1302,4],[1390,5],[1614,4],[1647,5],[1712,4],[1743,5],[1810,4],[1841,5],[1907,4],[1938,5],[2019,4],[2108,5],[2175,4],[2262,5]]},"1399":{"position":[[149,4],[178,6],[277,4],[419,6],[436,4],[633,4],[713,4],[794,5],[848,6],[1157,5]]},"1424":{"position":[[41,4],[49,5],[66,5],[81,4],[140,6],[249,6],[430,7],[580,6]]},"1428":{"position":[[290,6]]},"1431":{"position":[[124,5]]},"1433":{"position":[[163,6]]},"1441":{"position":[[88,7]]},"1445":{"position":[[61,6],[237,6],[326,4],[646,5],[805,5],[890,5],[939,6]]},"1515":{"position":[[910,6]]},"1976":{"position":[[115,6]]},"1979":{"position":[[111,6],[474,4],[545,5],[565,4],[635,5],[655,4],[728,5],[748,4],[1146,4],[1216,5],[1236,4],[1454,4],[1517,5],[1537,4],[1756,4],[1822,5],[1842,4]]},"1999":{"position":[[65,8]]}}}],["item.messag",{"_index":3602,"t":{"1424":{"position":[[171,12],[477,12]]}}}],["item.message.match(/foo",{"_index":3630,"t":{"1433":{"position":[[179,27]]}}}],["item.msg",{"_index":3638,"t":{"1441":{"position":[[103,8]]}}}],["item.object.nam",{"_index":3234,"t":{"1342":{"position":[[1363,17],[1384,22],[1648,17],[1723,17]]}}}],["item/index",{"_index":4874,"t":{"1979":{"position":[[140,12]]}}}],["item1",{"_index":4313,"t":{"1743":{"position":[[48,7]]}}}],["item2",{"_index":4314,"t":{"1743":{"position":[[56,6]]}}}],["item></ol",{"_index":3485,"t":{"1399":{"position":[[310,10]]}}}],["item></todo",{"_index":3484,"t":{"1399":{"position":[[298,11]]}}}],["item></van",{"_index":4892,"t":{"1979":{"position":[[812,10],[1301,10],[1603,10],[1906,10]]}}}],["item__cont",{"_index":4941,"t":{"1979":{"position":[[2565,14]]}}}],["items\"></div",{"_index":3610,"t":{"1424":{"position":[[735,13]]}}}],["iter",{"_index":5234,"t":{"2068":{"position":[[178,9]]}}}],["j",{"_index":898,"t":{"257":{"position":[[362,1]]},"610":{"position":[[95,1],[140,1]]},"2111":{"position":[[39,1]]},"2439":{"position":[[456,5]]},"2443":{"position":[[582,1],[619,3]]}}}],["jame",{"_index":1228,"t":{"412":{"position":[[348,10]]}}}],["james,larry,tom,laci",{"_index":1233,"t":{"412":{"position":[[488,21]]}}}],["jamesives/github",{"_index":2548,"t":{"1084":{"position":[[463,16]]}}}],["jan",{"_index":998,"t":{"289":{"position":[[575,3]]}}}],["jane",{"_index":3614,"t":{"1426":{"position":[[209,5],[398,4],[572,4]]}}}],["java",{"_index":315,"t":{"70":{"position":[[18,4]]},"297":{"position":[[182,4]]},"299":{"position":[[172,4]]},"385":{"position":[[8,4]]},"396":{"position":[[451,9]]},"400":{"position":[[35,17]]},"404":{"position":[[0,16]]},"410":{"position":[[37,4]]},"426":{"position":[[230,4]]},"447":{"position":[[0,4]]},"449":{"position":[[0,4]]},"457":{"position":[[2,4]]},"460":{"position":[[0,7],[50,7]]},"462":{"position":[[88,4],[93,15],[391,19]]},"464":{"position":[[0,16],[136,51]]},"483":{"position":[[0,4]]},"536":{"position":[[5,66]]},"540":{"position":[[45,27],[92,5]]},"542":{"position":[[208,5]]},"545":{"position":[[0,4]]},"554":{"position":[[103,31]]},"559":{"position":[[0,4]]},"561":{"position":[[32,14]]},"573":{"position":[[0,10]]},"594":{"position":[[0,4]]},"602":{"position":[[0,8],[68,27]]},"923":{"position":[[26,4]]},"1006":{"position":[[28,4],[43,4],[79,4],[233,4],[252,6]]},"2016":{"position":[[0,4]]},"2018":{"position":[[253,4]]}}}],["java.io.ioexcept",{"_index":937,"t":{"273":{"position":[[288,20]]}}}],["java.util.array",{"_index":1742,"t":{"618":{"position":[[0,16]]}}}],["java.util.concurrent.executionexcept",{"_index":929,"t":{"273":{"position":[[66,40]]}}}],["java.util.scanner;publ",{"_index":1164,"t":{"388":{"position":[[449,24]]},"579":{"position":[[34,24]]}}}],["javac程序来编译xxx.java。如果程序没有错误的话，会产生xxx.class",{"_index":1336,"t":{"464":{"position":[[80,55]]}}}],["javascript",{"_index":3,"t":{"2":{"position":[[36,10],[65,10]]},"4":{"position":[[23,10],[52,10]]},"70":{"position":[[0,10]]},"159":{"position":[[173,83]]},"328":{"position":[[173,83]]},"919":{"position":[[18,10]]},"999":{"position":[[15,10]]},"1135":{"position":[[21,41]]},"1223":{"position":[[1733,10]]},"1244":{"position":[[19,10]]},"1251":{"position":[[29,10],[834,10],[886,10]]},"1263":{"position":[[329,10]]},"1267":{"position":[[99,10],[754,10]]},"1273":{"position":[[220,11]]},"1275":{"position":[[67,10]]},"1277":{"position":[[23,10]]},"1279":{"position":[[3,10],[34,10],[104,10],[212,10],[245,10]]},"1281":{"position":[[23,37],[113,10]]},"1283":{"position":[[150,10]]},"1285":{"position":[[35,17]]},"1287":{"position":[[45,10]]},"1289":{"position":[[344,10]]},"1293":{"position":[[33,10]]},"1295":{"position":[[129,10]]},"1301":{"position":[[69,10]]},"1304":{"position":[[17,10]]},"1308":{"position":[[37,10]]},"1380":{"position":[[41,10]]},"1395":{"position":[[484,11],[552,10]]},"1424":{"position":[[696,10]]},"1426":{"position":[[654,10]]},"1435":{"position":[[3,10]]},"1487":{"position":[[67,10],[229,10]]},"1489":{"position":[[60,10]]},"1493":{"position":[[31,10],[170,10]]},"1563":{"position":[[35,10],[302,10],[353,35],[439,10]]},"1585":{"position":[[177,10]]},"1638":{"position":[[492,10]]},"1651":{"position":[[2,10]]},"1653":{"position":[[0,11]]},"1669":{"position":[[0,10]]},"1673":{"position":[[0,10]]},"1683":{"position":[[0,10]]},"1685":{"position":[[91,10],[141,21]]},"1691":{"position":[[0,10]]},"1695":{"position":[[0,10]]},"1697":{"position":[[0,10]]},"1699":{"position":[[5,10],[29,10],[319,10]]},"1701":{"position":[[2,10]]},"1705":{"position":[[2,10],[51,10],[91,10]]},"1709":{"position":[[0,10],[30,10]]},"1713":{"position":[[2,10],[35,22]]},"1718":{"position":[[3,10]]},"1720":{"position":[[7,10],[180,10]]},"1722":{"position":[[24,10]]},"1739":{"position":[[13,10],[73,10]]},"1741":{"position":[[0,10]]},"1743":{"position":[[10,10]]},"1747":{"position":[[3,27]]},"1749":{"position":[[15,10],[57,13]]},"1751":{"position":[[0,10]]},"1775":{"position":[[3,10],[32,10]]},"1816":{"position":[[99,10],[130,10],[233,12]]},"1821":{"position":[[0,10]]},"1823":{"position":[[132,10]]},"1829":{"position":[[27,60],[117,10],[134,10],[154,10],[194,10],[270,10]]},"1833":{"position":[[0,23]]},"1918":{"position":[[110,10]]},"1920":{"position":[[0,22]]},"1940":{"position":[[139,15]]},"1987":{"position":[[149,10]]}}}],["javascript'><el",{"_index":4446,"t":{"1816":{"position":[[202,20]]}}}],["javascript单线程的语言特性以及不具备如java",{"_index":660,"t":{"159":{"position":[[0,80]]},"328":{"position":[[0,80]]}}}],["javascript和nodejs的发展仍有不足，使用nodejs开发完整后端应用的网站仍然微乎其微，但是有相当多的网站使用nodejs来开发中间件，利用其优秀的i/o性能，处理大量的i/o",{"_index":665,"t":{"159":{"position":[[506,103]]},"328":{"position":[[506,103]]}}}],["javascript库——three.js构建的。下面将记录创建threej",{"_index":3149,"t":{"1332":{"position":[[15,45]]}}}],["javascript的这些语言特点，ryan",{"_index":662,"t":{"159":{"position":[[257,24]]},"328":{"position":[[257,24]]}}}],["javascript，constructor",{"_index":3050,"t":{"1297":{"position":[[212,22]]}}}],["java。先将java",{"_index":1557,"t":{"551":{"position":[[172,14]]}}}],["java定义了位运算符，应用于整数类型(int)，长整型(long)，短整型(short)，字符型(char)，和字节型(byt",{"_index":1181,"t":{"392":{"position":[[0,70]]}}}],["java并不生成可执行的机器语言，它由编译器生成一种中介代码bytecode。然后由java解释器来执行字节码，并在内部使用一种抽象机模型来执行该字节码。称为java",{"_index":1334,"t":{"462":{"position":[[296,94]]}}}],["java并选择jdk",{"_index":1551,"t":{"540":{"position":[[17,15]]}}}],["java是sun公司1991",{"_index":1330,"t":{"460":{"position":[[8,41]]}}}],["java虚拟机（jvm",{"_index":1338,"t":{"464":{"position":[[204,26]]}}}],["java虚拟机（jvm）来运行xxx.class文件。jvm",{"_index":1339,"t":{"464":{"position":[[231,53]]}}}],["jb",{"_index":1555,"t":{"545":{"position":[[51,2]]}}}],["jcenter",{"_index":956,"t":{"280":{"position":[[58,9]]}}}],["jdk",{"_index":1397,"t":{"490":{"position":[[146,6]]}}}],["jdk（java",{"_index":1559,"t":{"554":{"position":[[0,8]]}}}],["jeff",{"_index":2863,"t":{"1227":{"position":[[89,7]]},"1229":{"position":[[144,9]]}}}],["jeff'};player.scor",{"_index":2862,"t":{"1227":{"position":[[30,20]]}}}],["jeff'};var",{"_index":2864,"t":{"1229":{"position":[[30,11]]}}}],["jetbrain",{"_index":1040,"t":{"303":{"position":[[3,9]]},"467":{"position":[[3,9]]}}}],["jetzihan",{"_index":1208,"t":{"400":{"position":[[280,13]]},"623":{"position":[[142,13],[176,12]]},"1844":{"position":[[95,12],[138,10],[286,12],[329,8],[458,12],[601,12]]}}}],["jetzihan.com",{"_index":1770,"t":{"623":{"position":[[81,15]]}}}],["jiguang",{"_index":3397,"t":{"1368":{"position":[[104,7],[526,11],[544,10],[566,7]]}}}],["job",{"_index":2541,"t":{"1084":{"position":[[168,8]]}}}],["john",{"_index":3565,"t":{"1418":{"position":[[311,5]]}}}],["join",{"_index":2796,"t":{"1194":{"position":[[39,12]]}}}],["jpeg格式：由联合图像专家组(joint",{"_index":6148,"t":{"2452":{"position":[[214,21]]}}}],["jqueri",{"_index":4790,"t":{"1942":{"position":[[211,7]]}}}],["jquery红极一时，但是终究无法应对越来越复杂的前端开发工作。一方面，jquery大量的优秀特性已经被吸纳为javascript标准。另一方面，占有其60%代码量的dom操作已经被公认为网页的性能杀手，因为dom操作需要反复地操作文档，并触发网页的重绘和重排，这会严重影响网页的性能，最严重的可能导致页面卡死。此外，使用jquery开发的网站，会因为大量的dom",{"_index":667,"t":{"161":{"position":[[0,213]]},"330":{"position":[[0,213]]}}}],["jre",{"_index":1567,"t":{"556":{"position":[[50,4]]}}}],["js",{"_index":529,"t":{"114":{"position":[[499,5]]},"211":{"position":[[499,5]]},"810":{"position":[[57,13]]},"851":{"position":[[36,2]]},"917":{"position":[[5,2]]},"925":{"position":[[0,2]]},"930":{"position":[[18,2]]},"960":{"position":[[45,3]]},"964":{"position":[[17,2]]},"1248":{"position":[[811,2]]},"1265":{"position":[[155,2]]},"1364":{"position":[[345,2]]},"1563":{"position":[[489,2]]},"1622":{"position":[[280,2]]},"1626":{"position":[[658,2]]},"1673":{"position":[[231,2]]},"1711":{"position":[[0,2]]},"1950":{"position":[[162,2]]},"1983":{"position":[[110,2],[117,2]]},"1995":{"position":[[30,2],[66,12],[862,2],[881,44],[935,2],[1091,2]]},"2007":{"position":[[60,2],[218,2]]},"2012":{"position":[[106,9]]}}}],["js,mjs,json",{"_index":1966,"t":{"795":{"position":[[253,11]]},"825":{"position":[[661,11],[886,11]]}}}],["jscomplet",{"_index":2977,"t":{"1267":{"position":[[440,10]]},"1293":{"position":[[172,10]]}}}],["jscore",{"_index":4788,"t":{"1942":{"position":[[143,6],[242,6]]}}}],["jsmc",{"_index":773,"t":{"245":{"position":[[661,7],[850,7]]},"257":{"position":[[69,7],[230,7],[796,7]]}}}],["jsmc.data",{"_index":1137,"t":{"371":{"position":[[125,13]]}}}],["json",{"_index":203,"t":{"37":{"position":[[488,11],[991,11]]},"49":{"position":[[503,14],[776,4]]},"241":{"position":[[169,4]]},"245":{"position":[[626,4]]},"249":{"position":[[46,4],[61,4],[91,4],[379,4],[419,4],[778,4]]},"257":{"position":[[7,4],[40,4],[759,6]]},"363":{"position":[[987,4]]},"780":{"position":[[77,4],[174,4]]},"847":{"position":[[50,4],[213,4]]},"1872":{"position":[[2660,4]]},"1876":{"position":[[1269,4]]},"1950":{"position":[[182,4]]},"1964":{"position":[[334,16]]},"1983":{"position":[[53,4],[62,4]]},"1985":{"position":[[51,4],[56,37]]},"1987":{"position":[[0,18],[35,14],[74,4],[115,33],[265,4]]},"1991":{"position":[[149,38]]}}}],["json.dumps(return_dict",{"_index":175,"t":{"33":{"position":[[706,23],[911,23]]}}}],["json.loads(json_util.dumps(x",{"_index":254,"t":{"49":{"position":[[548,30]]}}}],["json.loads(rep.text",{"_index":799,"t":{"249":{"position":[[430,20]]},"363":{"position":[[681,20]]}}}],["json.loads(res.text",{"_index":808,"t":{"249":{"position":[[750,20]]},"363":{"position":[[959,20]]}}}],["json.parse(request.responsetext",{"_index":205,"t":{"37":{"position":[[512,33],[1015,33]]}}}],["json.stringify(this.data.isstud",{"_index":4824,"t":{"1964":{"position":[[297,36]]}}}],["json_util",{"_index":243,"t":{"49":{"position":[[186,9]]}}}],["jsonfrom",{"_index":239,"t":{"49":{"position":[[124,8]]}}}],["jsonify(result",{"_index":272,"t":{"51":{"position":[[254,15]]}}}],["jsonify(result)@app.route('/getclass",{"_index":270,"t":{"51":{"position":[[126,38]]}}}],["json全称javascript",{"_index":4999,"t":{"1985":{"position":[[0,16]]}}}],["jssj",{"_index":774,"t":{"245":{"position":[[677,7],[876,7]]},"257":{"position":[[82,7],[243,7],[822,7]]}}}],["jsx",{"_index":2940,"t":{"1251":{"position":[[589,5],[821,3]]},"1267":{"position":[[849,7]]},"1269":{"position":[[12,3]]},"1273":{"position":[[503,3],[596,3]]},"1275":{"position":[[120,19],[168,3],[206,21],[344,17]]},"1277":{"position":[[2,3]]},"1279":{"position":[[60,3]]},"1281":{"position":[[142,3]]},"1283":{"position":[[139,3]]},"1289":{"position":[[206,3]]},"1291":{"position":[[33,3]]},"1312":{"position":[[66,17]]}}}],["jsxm",{"_index":772,"t":{"245":{"position":[[645,7],[827,7]]},"257":{"position":[[55,8],[214,10],[773,7]]}}}],["jsxm.data",{"_index":1138,"t":{"371":{"position":[[145,13]]}}}],["jsxsd/xskb/xskb_list.do?ves632dsdyv=new_xsd_pygl",{"_index":751,"t":{"241":{"position":[[53,53]]}}}],["jsx，这是一个javascript",{"_index":2979,"t":{"1267":{"position":[[830,18]]}}}],["js中管理msg",{"_index":5025,"t":{"1997":{"position":[[84,15]]}}}],["js代码以纯文本的方式读入function",{"_index":2163,"t":{"867":{"position":[[845,29]]}}}],["js和一个react",{"_index":2698,"t":{"1099":{"position":[[83,14]]}}}],["js操作html",{"_index":545,"t":{"114":{"position":[[1077,36]]},"211":{"position":[[1077,36]]}}}],["juli",{"_index":608,"t":{"145":{"position":[[0,4]]},"163":{"position":[[0,4]]},"165":{"position":[[0,4]]},"175":{"position":[[0,4]]},"194":{"position":[[0,4]]},"204":{"position":[[0,4]]}}}],["justifi",{"_index":2068,"t":{"853":{"position":[[594,7]]},"1515":{"position":[[879,7]]},"1960":{"position":[[203,7]]},"1976":{"position":[[130,7]]}}}],["jvm",{"_index":1332,"t":{"462":{"position":[[109,3]]},"551":{"position":[[250,3]]}}}],["jvm、linux",{"_index":1558,"t":{"551":{"position":[[240,9]]}}}],["jvm：java",{"_index":1561,"t":{"554":{"position":[[44,8]]}}}],["jx",{"_index":3003,"t":{"1273":{"position":[[897,3]]}}}],["jz",{"_index":262,"t":{"49":{"position":[[919,5]]}}}],["k",{"_index":61,"t":{"10":{"position":[[1205,1],[1330,2],[1337,2]]},"18":{"position":[[55,2],[62,2]]},"2079":{"position":[[933,2]]},"2113":{"position":[[29,1]]},"2519":{"position":[[552,5]]}}}],["k+n",{"_index":5271,"t":{"2113":{"position":[[54,22]]}}}],["k=1",{"_index":6047,"t":{"2412":{"position":[[295,3]]}}}],["k=256",{"_index":6051,"t":{"2412":{"position":[[443,5]]}}}],["k=4，16",{"_index":6049,"t":{"2412":{"position":[[372,11]]}}}],["kanade法，l",{"_index":6314,"t":{"2519":{"position":[[542,9]]}}}],["kbp",{"_index":5099,"t":{"2037":{"position":[[90,9]]}}}],["kbps~10kbp",{"_index":5106,"t":{"2037":{"position":[[220,12]]}}}],["kbps~1mbp",{"_index":5100,"t":{"2037":{"position":[[122,15]]}}}],["kcmc",{"_index":779,"t":{"245":{"position":[[761,7],[1038,7]]},"257":{"position":[[146,7],[307,7],[984,7]]}}}],["kcmc.data",{"_index":1135,"t":{"371":{"position":[[85,13]]}}}],["kcsj",{"_index":777,"t":{"245":{"position":[[736,7],[989,7]]},"257":{"position":[[129,7],[290,7],[935,7],[1055,4],[1145,7]]}}}],["kebab",{"_index":3446,"t":{"1380":{"position":[[95,6]]}}}],["key",{"_index":281,"t":{"64":{"position":[[89,4]]},"66":{"position":[[71,4]]},"169":{"position":[[89,4]]},"171":{"position":[[71,4]]},"351":{"position":[[42,3]]},"365":{"position":[[306,11]]},"1399":{"position":[[672,23]]},"1428":{"position":[[255,3],[356,3],[420,15],[507,17],[528,3],[552,3]]},"1445":{"position":[[125,5]]},"1472":{"position":[[440,3],[791,3],[1038,3],[1729,5],[1944,3]]},"1987":{"position":[[25,3],[50,3],[87,3]]}}}],["key),用二分查找算法在给定数组中搜索给定值的对象(byte,int,doubl",{"_index":1748,"t":{"618":{"position":[[237,84]]}}}],["key=\"email",{"_index":3719,"t":{"1472":{"position":[[1281,10],[1604,10]]}}}],["key=\"item.id\"></mi",{"_index":3647,"t":{"1445":{"position":[[68,19]]}}}],["key=\"item.messag",{"_index":3601,"t":{"1424":{"position":[[147,20]]}}}],["key=\"usernam",{"_index":3717,"t":{"1472":{"position":[[1164,13],[1485,13]]}}}],["key={idx",{"_index":2632,"t":{"1092":{"position":[[3986,9]]}}}],["key]=\"url",{"_index":3760,"t":{"1503":{"position":[[102,13]]}}}],["keyfram",{"_index":3268,"t":{"1346":{"position":[[763,8],[932,12],[950,10]]},"1507":{"position":[[1048,10],[1113,9],[1169,10],[1418,9],[1678,18],[1948,9],[2218,22],[2504,9],[2786,22],[3011,9],[3211,22],[3437,9],[3641,19],[4091,9]]},"1515":{"position":[[1671,10]]}}}],["keyhost",{"_index":286,"t":{"66":{"position":[[103,7]]},"171":{"position":[[103,7]]}}}],["keyld：填写刚刚获得的accesskeyid",{"_index":740,"t":{"190":{"position":[[71,26]]},"232":{"position":[[71,26]]},"1176":{"position":[[71,26]]}}}],["keysecret：填写accesskeyidsecret",{"_index":741,"t":{"190":{"position":[[98,31]]},"232":{"position":[[98,31]]},"1176":{"position":[[98,31]]}}}],["key和secret",{"_index":280,"t":{"64":{"position":[[78,10]]},"169":{"position":[[78,10]]}}}],["khtml",{"_index":704,"t":{"179":{"position":[[428,7]]},"221":{"position":[[428,7]]},"1165":{"position":[[428,7]]}}}],["khz，量化位数为16",{"_index":6243,"t":{"2471":{"position":[[86,20]]}}}],["kit），java",{"_index":1560,"t":{"554":{"position":[[21,22]]}}}],["kiwi",{"_index":4356,"t":{"1773":{"position":[[64,7],[93,6]]},"1777":{"position":[[104,8],[296,8]]}}}],["kkzc",{"_index":776,"t":{"245":{"position":[[713,7],[927,7]]},"257":{"position":[[116,7],[277,7],[873,7]]}}}],["know",{"_index":3908,"t":{"1557":{"position":[[315,4]]}}}],["kssj",{"_index":775,"t":{"245":{"position":[[695,7],[901,7]]},"257":{"position":[[99,7],[260,7],[847,7]]}}}],["k段传输中，有(k",{"_index":5254,"t":{"2079":{"position":[[905,9]]}}}],["k比特的数据添加除数减一个0（p",{"_index":5273,"t":{"2113":{"position":[[109,17]]}}}],["l",{"_index":400,"t":{"101":{"position":[[49,2]]},"103":{"position":[[46,2],[3298,3],[4467,3]]},"198":{"position":[[49,2]]},"200":{"position":[[46,2],[3298,3],[4467,3]]},"2169":{"position":[[716,15],[791,15]]},"2412":{"position":[[212,2]]}}}],["l'oignon</i>（法式洋葱汤）。</p",{"_index":4038,"t":{"1618":{"position":[[232,26]]}}}],["l>m",{"_index":5542,"t":{"2169":{"position":[[565,20]]}}}],["l_k",{"_index":6315,"t":{"2519":{"position":[[558,7]]}}}],["label",{"_index":2450,"t":{"1017":{"position":[[1997,6],[2033,6],[2117,6],[2231,6],[2311,6],[2404,6],[2477,6],[2572,6],[2605,6]]},"1037":{"position":[[304,6],[336,6],[418,6],[523,6],[592,6],[685,6],[758,6],[851,6],[884,6]]},"1269":{"position":[[142,5],[218,6]]},"1271":{"position":[[636,6]]},"1445":{"position":[[481,6]]},"1472":{"position":[[1912,10]]},"1981":{"position":[[259,10],[332,11],[413,10],[467,10],[661,12],[714,12],[836,12]]}}}],["label=\"sav",{"_index":2974,"t":{"1267":{"position":[[274,12]]},"1287":{"position":[[228,12]]},"1289":{"position":[[562,12]]},"1291":{"position":[[306,12]]}}}],["label=\"search",{"_index":3002,"t":{"1273":{"position":[[828,14]]}}}],["label>email</label",{"_index":3706,"t":{"1472":{"position":[[224,20],[612,20],[1214,20],[1537,20]]}}}],["label>username</label",{"_index":3703,"t":{"1472":{"position":[[130,23],[516,23],[1099,23],[1420,23]]}}}],["label是一个props（参数）reactdom.render(<button",{"_index":2973,"t":{"1267":{"position":[[217,56]]}}}],["laci",{"_index":1231,"t":{"412":{"position":[[375,8]]}}}],["ladder之后，进入github",{"_index":2734,"t":{"1120":{"position":[[66,34]]},"1186":{"position":[[66,34]]}}}],["ladder才能访问github，如果你访问不了，可以给我发邮件：czhorange@foxmail.com或者加我的qq：605031236",{"_index":2762,"t":{"1148":{"position":[[102,85]]}}}],["lan",{"_index":5477,"t":{"2141":{"position":[[261,7]]}}}],["lang",{"_index":2419,"t":{"1017":{"position":[[905,5]]},"1565":{"position":[[35,4]]}}}],["lang=\"en\"><head",{"_index":15,"t":{"10":{"position":[[43,16]]},"853":{"position":[[29,16]]},"1515":{"position":[[21,16]]}}}],["lang=\"fr\">soup",{"_index":4037,"t":{"1618":{"position":[[214,15]]}}}],["lang=\"id\">nasi",{"_index":4035,"t":{"1618":{"position":[[178,14]]}}}],["lang=\"uk",{"_index":4033,"t":{"1618":{"position":[[137,8]]}}}],["lang=\"zh",{"_index":3927,"t":{"1565":{"position":[[71,8]]}}}],["languag",{"_index":2525,"t":{"1058":{"position":[[330,10],[377,9]]},"1535":{"position":[[23,9]]},"2047":{"position":[[106,9]]}}}],["language，ddl",{"_index":1886,"t":{"731":{"position":[[29,36]]},"2534":{"position":[[681,13]]},"2543":{"position":[[681,13]]},"2552":{"position":[[681,13]]}}}],["language，dml）来操纵数据库中的数据。例如，sql语言提供查询语句（select）、插入语句（insert）、更新语句（update）和删除语句（delet",{"_index":1889,"t":{"733":{"position":[[31,87]]}}}],["lan地址、物理地址、mac",{"_index":5322,"t":{"2125":{"position":[[13,48]]}}}],["laptop",{"_index":5235,"t":{"2068":{"position":[[339,6]]}}}],["larg",{"_index":3944,"t":{"1578":{"position":[[156,5]]}}}],["larri",{"_index":1229,"t":{"412":{"position":[[359,8]]}}}],["lasa",{"_index":3401,"t":{"1368":{"position":[[176,4],[585,8],[600,7],[619,4]]}}}],["last",{"_index":4207,"t":{"1665":{"position":[[370,4]]},"1758":{"position":[[52,4]]}}}],["lastindexof",{"_index":4477,"t":{"1838":{"position":[[152,13],[332,13]]}}}],["lastnam",{"_index":3556,"t":{"1416":{"position":[[236,9],[358,9],[521,9]]},"1653":{"position":[[127,8]]},"1655":{"position":[[74,8]]},"1659":{"position":[[310,8]]},"1661":{"position":[[222,8]]},"1683":{"position":[[66,8]]},"2003":{"position":[[98,9],[108,12],[364,9],[410,9],[458,9],[539,10]]}}}],["lastname:\"g",{"_index":4171,"t":{"1653":{"position":[[61,17]]},"1683":{"position":[[164,18]]},"1697":{"position":[[80,17]]},"1749":{"position":[[236,17]]}}}],["lastname<<endl;}int",{"_index":5060,"t":{"2003":{"position":[[603,21]]}}}],["late!</p",{"_index":4030,"t":{"1613":{"position":[[274,9]]}}}],["later",{"_index":230,"t":{"47":{"position":[[75,5]]}}}],["latest",{"_index":2542,"t":{"1084":{"position":[[224,6]]}}}],["lateupd",{"_index":1068,"t":{"305":{"position":[[786,12]]}}}],["lateupdate：每当upd",{"_index":1059,"t":{"305":{"position":[[236,29]]}}}],["latn\">vatrushka</i",{"_index":4034,"t":{"1618":{"position":[[146,28]]}}}],["lawn",{"_index":3675,"t":{"1445":{"position":[[1236,5]]}}}],["layer",{"_index":6253,"t":{"2473":{"position":[[406,5]]}}}],["layer)。phys",{"_index":5491,"t":{"2144":{"position":[[281,15]]}}}],["layer)和应用层(appl",{"_index":5490,"t":{"2144":{"position":[[258,22]]}}}],["layer)，会话层(sess",{"_index":5488,"t":{"2144":{"position":[[215,18]]}}}],["layer)，传输层(transport",{"_index":5487,"t":{"2144":{"position":[[194,20]]}}}],["layer)，数据链路层(data",{"_index":5485,"t":{"2144":{"position":[[152,17]]}}}],["layer)，网络层(network",{"_index":5486,"t":{"2144":{"position":[[175,18]]}}}],["layer)，表示层(present",{"_index":5489,"t":{"2144":{"position":[[234,23]]}}}],["layer为osi/rm",{"_index":5495,"t":{"2144":{"position":[[370,30]]}}}],["layer为osi/rm的低三层，负责创建网络通信连接的链路；transport",{"_index":5493,"t":{"2144":{"position":[[311,40]]}}}],["layer到appl",{"_index":5494,"t":{"2144":{"position":[[352,17]]}}}],["layer到network",{"_index":5492,"t":{"2144":{"position":[[297,13]]}}}],["layer）是采用udp",{"_index":5666,"t":{"2195":{"position":[[877,17]]}}}],["layout",{"_index":2566,"t":{"1092":{"position":[[357,6],[857,7],[1024,9],[1059,6],[2897,6]]}}}],["ldf",{"_index":1842,"t":{"695":{"position":[[180,5]]}}}],["learn",{"_index":2962,"t":{"1265":{"position":[[5,13]]},"1557":{"position":[[234,8]]}}}],["left",{"_index":2054,"t":{"853":{"position":[[460,5],[765,4],[775,4]]},"1017":{"position":[[1989,7],[2058,8]]},"1037":{"position":[[296,7],[359,8]]},"1248":{"position":[[295,5],[458,5],[761,5]]},"1255":{"position":[[289,5]]},"1366":{"position":[[2522,5]]},"1511":{"position":[[535,5]]},"1515":{"position":[[1218,5]]},"1518":{"position":[[334,5]]},"1979":{"position":[[2242,5]]}}}],["left!</p",{"_index":3646,"t":{"1443":{"position":[[356,9]]}}}],["left:38rpx",{"_index":4917,"t":{"1979":{"position":[[2089,11]]}}}],["lemon",{"_index":4346,"t":{"1762":{"position":[[122,7],[231,8],[260,7]]},"1771":{"position":[[142,7]]},"1777":{"position":[[95,8],[287,8]]},"1781":{"position":[[89,8],[265,8]]}}}],["lemon”，“kiwi",{"_index":4360,"t":{"1777":{"position":[[158,30]]}}}],["len",{"_index":1771,"t":{"623":{"position":[[101,3],[162,3]]}}}],["len(img_list",{"_index":712,"t":{"179":{"position":[[646,13]]},"221":{"position":[[646,13]]},"1165":{"position":[[646,13]]}}}],["length",{"_index":4132,"t":{"1642":{"position":[[282,6]]},"1683":{"position":[[45,6]]},"1754":{"position":[[0,6]]},"1762":{"position":[[136,6]]},"1836":{"position":[[9,6]]},"1842":{"position":[[69,7]]}}}],["let",{"_index":2608,"t":{"1092":{"position":[[2612,4]]}}}],["level",{"_index":6014,"t":{"2399":{"position":[[121,5]]}}}],["leviding、undead25",{"_index":2971,"t":{"1265":{"position":[[196,21]]}}}],["lg",{"_index":2591,"t":{"1092":{"position":[[1589,3],[2058,3]]}}}],["lg=\"20",{"_index":3385,"t":{"1366":{"position":[[2481,8]]}}}],["lg=\"4",{"_index":3342,"t":{"1366":{"position":[[934,7]]}}}],["li",{"_index":2947,"t":{"1251":{"position":[[971,6]]},"1395":{"position":[[359,3],[402,5]]},"1399":{"position":[[527,7],[545,10],[884,7]]},"1424":{"position":[[121,3],[402,3]]},"1426":{"position":[[67,3]]},"1437":{"position":[[75,3],[109,7],[337,3]]},"1441":{"position":[[96,6],[112,7],[120,3]]},"1443":{"position":[[127,3],[186,7],[289,3]]},"1445":{"position":[[633,3],[767,6],[858,4],[961,5],[1036,6]]},"1530":{"position":[[82,2]]},"1603":{"position":[[116,4]]},"1605":{"position":[[209,7]]},"1607":{"position":[[198,82]]},"1618":{"position":[[399,4],[419,5],[425,4]]},"1760":{"position":[[170,6],[191,9],[387,6],[404,9]]}}}],["li>'})var",{"_index":3490,"t":{"1399":{"position":[[902,13]]}}}],["li></ol",{"_index":4012,"t":{"1605":{"position":[[221,21]]},"1607":{"position":[[374,10]]},"1618":{"position":[[459,10]]}}}],["li></ul",{"_index":3603,"t":{"1424":{"position":[[187,10],[493,10]]},"1426":{"position":[[108,10]]},"1437":{"position":[[369,12]]}}}],["li></ul><p",{"_index":3644,"t":{"1443":{"position":[[327,12]]}}}],["li>first</li",{"_index":4146,"t":{"1642":{"position":[[761,14]]}}}],["li>instagram</li",{"_index":2934,"t":{"1251":{"position":[[305,18]]}}}],["li>oculus</li",{"_index":2936,"t":{"1251":{"position":[[342,15]]}}}],["li>second</li",{"_index":4147,"t":{"1642":{"position":[[776,15]]}}}],["li>whatsapp</li",{"_index":2935,"t":{"1251":{"position":[[324,17]]}}}],["li>先用蛋白一个、盐半茶匙及淀粉两大匙搅拌均匀，调成“腌料”，鸡胸肉切成约一厘米见方的碎丁并用“腌料”搅拌均匀，腌渍半小时。</li",{"_index":4013,"t":{"1607":{"position":[[5,69]]}}}],["li>右转</li",{"_index":4009,"t":{"1605":{"position":[[155,11]]}}}],["li>在第三个十字路口处左转</li",{"_index":4011,"t":{"1605":{"position":[[188,20]]}}}],["li>如果你在北方，可加入黄瓜丁、胡萝卜丁和花生米，翻炒后起锅。</li",{"_index":4017,"t":{"1607":{"position":[[329,38]]}}}],["li>如果你采用正宗川菜做法，最后只需加入花生米，炒拌几下就可以起锅了。</li",{"_index":4016,"t":{"1607":{"position":[[286,42]]}}}],["li>油条</li",{"_index":4004,"t":{"1603":{"position":[[156,11]]}}}],["li>沿着条路走到头</li",{"_index":4008,"t":{"1605":{"position":[[138,16]]}}}],["li>焦圈</li></ul",{"_index":4006,"t":{"1603":{"position":[[180,16]]}}}],["li>用酱油一大匙、淀粉水一大匙、糖半茶匙、盐四分之一茶匙、白醋一茶匙、蒜末半茶匙调拌均匀，调成“综合调味料”。</li",{"_index":4014,"t":{"1607":{"position":[[75,62]]}}}],["li>直行穿过第一个十字路口</li",{"_index":4010,"t":{"1605":{"position":[[167,20]]}}}],["li>豆汁</li",{"_index":4005,"t":{"1603":{"position":[[168,11]]}}}],["li>豆浆</li",{"_index":4003,"t":{"1603":{"position":[[144,11]]}}}],["li>这是个待办项</li>'})var",{"_index":3483,"t":{"1399":{"position":[[197,22]]}}}],["li>鸡丁腌好以后，色拉油下锅烧热，先将鸡丁倒入锅内，用大火快炸半分钟，炸到变色之后，捞出来沥干油汁备用。</li",{"_index":4015,"t":{"1607":{"position":[[138,59]]}}}],["lifescript",{"_index":5067,"t":{"2010":{"position":[[9,13]]}}}],["light",{"_index":374,"t":{"92":{"position":[[199,16]]},"1094":{"position":[[247,6],[608,6],[776,5],[1227,5],[1649,6],[2007,6],[2282,6]]},"1935":{"position":[[70,14]]},"1970":{"position":[[300,8]]},"1991":{"position":[[372,8]]}}}],["lightcodethem",{"_index":2390,"t":{"1017":{"position":[[21,14],[2814,15]]},"1037":{"position":[[1074,15]]}}}],["lighter",{"_index":2644,"t":{"1094":{"position":[[283,8],[644,8],[1183,7],[1685,8],[2043,8],[2318,8]]},"1096":{"position":[[334,7]]}}}],["lightest",{"_index":2646,"t":{"1094":{"position":[[321,9],[682,9],[1138,8],[1723,9],[2081,9],[2356,9]]}}}],["limit",{"_index":4967,"t":{"1981":{"position":[[795,5]]}}}],["lin",{"_index":5055,"t":{"2003":{"position":[[468,6]]}}}],["line",{"_index":2649,"t":{"1094":{"position":[[397,4],[731,4]]},"1241":{"position":[[120,5]]},"1248":{"position":[[500,4]]},"1255":{"position":[[331,4]]},"1618":{"position":[[311,5]]},"2509":{"position":[[639,5]]}}}],["linear",{"_index":2040,"t":{"853":{"position":[[293,6]]},"1511":{"position":[[639,6],[717,6]]},"1515":{"position":[[1562,6]]},"1522":{"position":[[168,6]]}}}],["lines.length",{"_index":2877,"t":{"1241":{"position":[[241,13]]}}}],["lines[i",{"_index":2878,"t":{"1241":{"position":[[280,9]]}}}],["link",{"_index":2152,"t":{"865":{"position":[[116,6]]},"867":{"position":[[1302,6]]},"1017":{"position":[[1308,6],[1549,6],[2194,6]]},"1037":{"position":[[488,6]]},"1039":{"position":[[243,6],[472,6]]},"1092":{"position":[[253,4],[1539,5],[1641,7],[2008,5],[2089,7]]},"1366":{"position":[[440,4],[532,5],[1270,4],[1405,5],[1575,4],[1662,5],[1676,4],[1758,5],[1772,4],[1856,5],[1870,4],[1953,5],[1981,4],[2123,5],[2137,4],[2277,5]]},"1561":{"position":[[317,5]]},"1563":{"position":[[95,6],[120,6],[142,4],[205,5]]},"1592":{"position":[[205,4]]},"2144":{"position":[[170,4]]}}}],["linus\"];var",{"_index":4367,"t":{"1779":{"position":[[99,12],[291,12]]}}}],["liquid",{"_index":4025,"t":{"1613":{"position":[[178,6]]}}}],["list",{"_index":899,"t":{"257":{"position":[[397,14]]},"610":{"position":[[34,5]]},"1251":{"position":[[248,6],[268,4],[702,7]]},"1426":{"position":[[186,5],[377,5],[551,5]]},"1445":{"position":[[426,4],[1085,4]]},"1868":{"position":[[29,7]]},"1933":{"position":[[234,7]]},"1966":{"position":[[25,5],[225,5]]},"1970":{"position":[[484,7]]},"1981":{"position":[[999,8]]},"1989":{"position":[[272,7]]},"2059":{"position":[[466,5]]},"2443":{"position":[[541,13]]}}}],["list.')})router.post('/user/add",{"_index":1982,"t":{"810":{"position":[[333,33]]}}}],["list.length",{"_index":1701,"t":{"610":{"position":[[122,12]]}}}],["list[i",{"_index":1703,"t":{"610":{"position":[[159,8]]}}}],["live",{"_index":149,"t":{"31":{"position":[[896,4]]},"70":{"position":[[28,4],[170,4],[284,4],[514,4]]},"1074":{"position":[[343,4]]}}}],["load",{"_index":320,"t":{"70":{"position":[[159,10],[273,10],[503,10],[581,10]]},"293":{"position":[[149,5],[193,4]]},"376":{"position":[[98,5],[142,4]]},"969":{"position":[[189,7]]}}}],["loader",{"_index":3297,"t":{"1353":{"position":[[491,8]]}}}],["loadernpm",{"_index":3289,"t":{"1353":{"position":[[208,9],[230,9]]}}}],["loadimage(&background",{"_index":405,"t":{"101":{"position":[[131,22]]},"103":{"position":[[113,22],[625,22]]},"198":{"position":[[131,22]]},"200":{"position":[[113,22],[625,22]]}}}],["local",{"_index":2427,"t":{"1017":{"position":[[1050,8]]},"1029":{"position":[[67,8]]},"1056":{"position":[[49,5]]},"1058":{"position":[[180,8]]},"2131":{"position":[[57,5]]},"2141":{"position":[[269,6]]}}}],["localhost:8081",{"_index":2801,"t":{"1202":{"position":[[70,14]]}}}],["lodash",{"_index":3587,"t":{"1420":{"position":[[836,6]]}}}],["log",{"_index":366,"t":{"90":{"position":[[218,5]]},"92":{"position":[[375,5]]},"695":{"position":[[145,3]]},"700":{"position":[[162,3]]},"1974":{"position":[[55,4],[145,5]]}}}],["log(11.635",{"_index":1499,"t":{"512":{"position":[[242,11]]}}}],["log(doubl",{"_index":1496,"t":{"512":{"position":[[13,10]]}}}],["login",{"_index":3713,"t":{"1472":{"position":[[739,5],[1682,5]]},"2057":{"position":[[980,15]]}}}],["login(",{"_index":4578,"t":{"1872":{"position":[[155,8]]}}}],["loginlink",{"_index":794,"t":{"249":{"position":[[272,9]]},"363":{"position":[[556,9]]}}}],["logintyp",{"_index":3709,"t":{"1472":{"position":[[315,9],[813,10],[1753,10]]}}}],["logo",{"_index":2408,"t":{"1017":{"position":[[523,6],[1868,5],[1890,6],[1918,9]]},"1037":{"position":[[141,5],[163,6]]},"1366":{"position":[[27,29]]}}}],["logo区和github",{"_index":3301,"t":{"1356":{"position":[[84,75]]}}}],["logs.json",{"_index":5002,"t":{"1985":{"position":[[165,25]]}}}],["logs.unshift(date.now",{"_index":4862,"t":{"1974":{"position":[[94,24]]}}}],["lone\"];var",{"_index":4363,"t":{"1779":{"position":[[59,11],[253,11]]}}}],["long",{"_index":1379,"t":{"486":{"position":[[248,4],[268,4],[519,4]]},"488":{"position":[[50,5],[212,4]]},"504":{"position":[[169,4]]},"506":{"position":[[106,4],[126,4]]},"508":{"position":[[106,4],[126,4]]},"565":{"position":[[117,4]]},"571":{"position":[[90,4]]},"618":{"position":[[377,6],[396,4]]},"1058":{"position":[[242,4]]},"1578":{"position":[[172,4]]}}}],["longest",{"_index":5758,"t":{"2214":{"position":[[0,16]]}}}],["longvalu",{"_index":1380,"t":{"486":{"position":[[253,11]]}}}],["look",{"_index":3015,"t":{"1279":{"position":[[512,7]]}}}],["lookdoor",{"_index":1325,"t":{"457":{"position":[[281,10]]}}}],["loop",{"_index":3960,"t":{"1587":{"position":[[50,4],[464,4]]}}}],["loopback)不离开主机的数据包(也就是说，这些数据包不会通过外部网络接口)。例如:127.0.0.1",{"_index":5601,"t":{"2179":{"position":[[113,88]]}}}],["lorber",{"_index":2374,"t":{"1010":{"position":[[357,6]]}}}],["love_days.data",{"_index":1144,"t":{"371":{"position":[[307,18]]}}}],["lowercas",{"_index":3041,"t":{"1295":{"position":[[87,13]]}}}],["ls",{"_index":5755,"t":{"2210":{"position":[[233,50]]}}}],["ls分组扩散，每个路由器构造完整的a",{"_index":5784,"t":{"2220":{"position":[[62,23]]}}}],["ls）：需要知道每条链路的费用，需发送o（n",{"_index":5752,"t":{"2210":{"position":[[6,60]]}}}],["ls：需要o（ne）个报文和o（n^2",{"_index":5754,"t":{"2210":{"position":[[153,24]]}}}],["luca",{"_index":6313,"t":{"2519":{"position":[[520,21]]}}}],["l比特组成，时间被划分为l/r",{"_index":5304,"t":{"2119":{"position":[[137,118]]}}}],["m",{"_index":410,"t":{"101":{"position":[[252,2],[954,1]]},"103":{"position":[[60,2],[3114,1],[4321,1]]},"198":{"position":[[252,2],[954,1]]},"200":{"position":[[60,2],[3114,1],[4321,1]]},"251":{"position":[[211,2]]},"654":{"position":[[269,1]]},"2412":{"position":[[198,2]]}}}],["m)/电磁波在信道上的传播速率(m/",{"_index":5263,"t":{"2084":{"position":[[269,30]]}}}],["m.i",{"_index":431,"t":{"101":{"position":[[1003,3],[1017,3],[1294,3],[1308,3],[1459,3],[1473,3]]},"103":{"position":[[3163,3],[3176,3],[3351,3],[3365,3],[3664,3],[3678,3],[4370,3],[4383,3]]},"198":{"position":[[1003,3],[1017,3],[1294,3],[1308,3],[1459,3],[1473,3]]},"200":{"position":[[3163,3],[3176,3],[3351,3],[3365,3],[3664,3],[3678,3],[4370,3],[4383,3]]}}}],["m.umsg",{"_index":434,"t":{"101":{"position":[[1147,7],[1330,7],[1495,7]]},"103":{"position":[[3235,7],[3441,7],[3755,7],[4404,7]]},"198":{"position":[[1147,7],[1330,7],[1495,7]]},"200":{"position":[[3235,7],[3441,7],[3755,7],[4404,7]]}}}],["m.x",{"_index":430,"t":{"101":{"position":[[976,4],[989,3],[1267,4],[1280,3],[1432,4],[1445,3]]},"103":{"position":[[3136,4],[3149,3],[3321,4],[3336,3],[3634,4],[3649,3],[4343,4],[4356,3]]},"198":{"position":[[976,4],[989,3],[1267,4],[1280,3],[1432,4],[1445,3]]},"200":{"position":[[3136,4],[3149,3],[3321,4],[3336,3],[3634,4],[3649,3],[4343,4],[4356,3]]}}}],["m1",{"_index":2292,"t":{"964":{"position":[[96,2],[156,9]]},"971":{"position":[[239,2]]}}}],["m1*m2*…*mn",{"_index":1808,"t":{"654":{"position":[[273,10]]}}}],["m1.j",{"_index":2289,"t":{"964":{"position":[[34,5]]},"971":{"position":[[34,5]]},"973":{"position":[[55,5]]}}}],["m\\n\\k",{"_index":6044,"t":{"2412":{"position":[[219,11]]}}}],["mac",{"_index":5321,"t":{"2125":{"position":[[6,6],[62,8]]},"2129":{"position":[[359,7],[367,14]]},"2148":{"position":[[143,5]]}}}],["machine，fsm）来描述rdt",{"_index":5893,"t":{"2263":{"position":[[338,49]]}}}],["mac地址具有扁平结构，ip地址是分层的。就像人一样，可以将ip地址比作人的家庭住址，那么mac",{"_index":5325,"t":{"2125":{"position":[[211,86]]}}}],["mac地址插入这些帧中，并将这些帧广播到局域网上，当某个适配器接收到这个帧时，对比这个帧内的mac地址是不是自己的mac",{"_index":5326,"t":{"2125":{"position":[[298,157]]}}}],["mac地址有48位（6字节），前三字节（高位24位）由ieee的注册管理机构ra向厂家分配，后三字节（低24位）由厂家自行指派，必须保证生产出的适配器没有重复地址。这种48位地址称为mac",{"_index":5323,"t":{"2125":{"position":[[71,94]]}}}],["mac地址的呢？实际上，它使用了arp，发送端将222.222.222.222的ip地址作为参数送入arp中，它将返回一个对应的mac地址49",{"_index":5331,"t":{"2125":{"position":[[746,85]]}}}],["mac地址而不是基于ip",{"_index":5366,"t":{"2129":{"position":[[393,80]]}}}],["mac地址，在本例中为aa",{"_index":5355,"t":{"2127":{"position":[[430,33]]}}}],["mail",{"_index":5088,"t":{"2020":{"position":[[0,4]]},"2057":{"position":[[16,4],[996,4]]},"2059":{"position":[[197,9]]}}}],["maillist",{"_index":4662,"t":{"1878":{"position":[[488,8],[522,8]]}}}],["maillist:ress.data",{"_index":4661,"t":{"1878":{"position":[[399,18]]}}}],["main",{"_index":1315,"t":{"451":{"position":[[967,5]]},"469":{"position":[[14,4],[19,4]]},"483":{"position":[[136,4]]},"542":{"position":[[27,10],[59,4]]},"565":{"position":[[564,4]]},"1084":{"position":[[121,4],[131,4]]},"1092":{"position":[[988,6],[1016,7]]},"1368":{"position":[[308,4],[435,7],[454,4]]},"1598":{"position":[[124,4]]},"2003":{"position":[[625,7]]}}}],["main(str",{"_index":326,"t":{"70":{"position":[[334,11],[434,11]]},"388":{"position":[[197,13],[510,13]]},"390":{"position":[[319,13]]},"392":{"position":[[471,13]]},"394":{"position":[[237,13]]},"396":{"position":[[160,13]]},"400":{"position":[[213,13]]},"406":{"position":[[90,13]]},"408":{"position":[[251,13]]},"410":{"position":[[332,13]]},"412":{"position":[[177,13]]},"414":{"position":[[113,13]]},"416":{"position":[[164,13]]},"420":{"position":[[96,11]]},"426":{"position":[[813,11]]},"451":{"position":[[992,13]]},"457":{"position":[[368,13]]},"486":{"position":[[365,11]]},"488":{"position":[[324,11]]},"490":{"position":[[196,11]]},"492":{"position":[[38,11]]},"494":{"position":[[525,11]]},"496":{"position":[[328,11]]},"498":{"position":[[44,11]]},"500":{"position":[[284,11]]},"502":{"position":[[146,11]]},"504":{"position":[[333,11]]},"506":{"position":[[175,11]]},"508":{"position":[[175,11]]},"510":{"position":[[84,11]]},"512":{"position":[[65,11]]},"514":{"position":[[149,11]]},"516":{"position":[[64,11]]},"518":{"position":[[38,11]]},"520":{"position":[[38,11]]},"522":{"position":[[38,11]]},"524":{"position":[[70,11]]},"526":{"position":[[79,11]]},"528":{"position":[[38,11]]},"530":{"position":[[38,11]]},"532":{"position":[[64,11]]},"534":{"position":[[47,11]]},"542":{"position":[[112,13]]},"563":{"position":[[59,13],[193,13],[514,13]]},"569":{"position":[[47,13]]},"579":{"position":[[92,13]]},"598":{"position":[[44,13]]},"604":{"position":[[59,13]]},"606":{"position":[[119,13]]},"616":{"position":[[131,13]]},"621":{"position":[[242,11]]},"623":{"position":[[45,11]]},"625":{"position":[[148,11]]}}}],["main.j",{"_index":356,"t":{"86":{"position":[[102,7]]},"1364":{"position":[[431,24]]}}}],["main.yml",{"_index":980,"t":{"289":{"position":[[116,8]]}}}],["main_handler(ev",{"_index":1034,"t":{"295":{"position":[[538,19]]},"380":{"position":[[625,19]]}}}],["mainli",{"_index":4495,"t":{"1842":{"position":[[838,6],[997,6]]}}}],["mainpage/index.j",{"_index":2778,"t":{"1154":{"position":[[110,26]]}}}],["mainpage/index.wxml",{"_index":2777,"t":{"1154":{"position":[[81,28]]}}}],["maintain",{"_index":2362,"t":{"1010":{"position":[[91,10],[382,10]]}}}],["main），试卷a、b、c就是另外三个子分支。老师安排a同学做选择题，b同学做填空题，c做大题，在a做完选择题后，他将卷子交给老师（这叫提交合并请求），老师看了之后觉得没问题，就把a的答案誊抄到空白卷m上（这叫合并），b做完填空题后，手比较痒，就另外做了选择题，他也把卷子交给老师，老师看了之后，发现b的选择题答案和a的不一样（这叫产生了冲突），老师经过仔细判断之后发现a写的是对的，就保留a的选择题答案，忽略b的选择题答案（这叫解决冲突），然后将b的填空题合并上去。c做完大题之后交给老师，老师经过审核发现没有冲突的地方，因此也把c的试卷合并到m",{"_index":2789,"t":{"1182":{"position":[[486,276]]},"1909":{"position":[[523,276]]}}}],["major",{"_index":971,"t":{"287":{"position":[[392,15]]}}}],["make",{"_index":943,"t":{"278":{"position":[[33,4]]}}}],["man",{"_index":5475,"t":{"2141":{"position":[[184,7]]}}}],["manag",{"_index":1844,"t":{"698":{"position":[[0,10],[21,10]]},"711":{"position":[[25,10]]}}}],["manchest",{"_index":3951,"t":{"1582":{"position":[[126,10]]}}}],["mango",{"_index":4349,"t":{"1765":{"position":[[100,17],[223,7]]},"1842":{"position":[[464,5]]}}}],["mango\";var",{"_index":4485,"t":{"1842":{"position":[[205,10],[339,10],[544,10],[660,10]]}}}],["mango\"];delet",{"_index":4358,"t":{"1775":{"position":[[101,15]]}}}],["mango\"];flen",{"_index":4335,"t":{"1760":{"position":[[89,13]]}}}],["mango\"];fruits.length",{"_index":4329,"t":{"1754":{"position":[[70,23]]}}}],["mango\"];fruits.pop",{"_index":4348,"t":{"1765":{"position":[[65,22]]}}}],["mango\"];fruits.push(\"kiwi",{"_index":4351,"t":{"1767":{"position":[[73,29]]}}}],["mango\"];fruits.push(\"lemon",{"_index":4345,"t":{"1762":{"position":[[71,30]]}}}],["mango\"];fruits.shift",{"_index":4353,"t":{"1769":{"position":[[107,24]]}}}],["mango\"];fruits.sort",{"_index":4380,"t":{"1784":{"position":[[88,23]]},"1786":{"position":[[83,23]]}}}],["mango\"];fruits.splice(2",{"_index":4359,"t":{"1777":{"position":[[66,25],[258,25]]}}}],["mango\"];fruits.unshift(\"lemon",{"_index":4354,"t":{"1771":{"position":[[90,33]]}}}],["mango\"];fruits[0",{"_index":4355,"t":{"1773":{"position":[[43,18]]}}}],["mango\"];fruits[fruits.length",{"_index":4347,"t":{"1762":{"position":[[198,30]]}}}],["mango\"];text",{"_index":4341,"t":{"1760":{"position":[[284,13]]}}}],["mango\"];var",{"_index":4330,"t":{"1756":{"position":[[39,12]]},"1758":{"position":[[39,12]]},"1765":{"position":[[183,12]]},"1767":{"position":[[185,12]]},"1781":{"position":[[107,12],[283,12]]}}}],["manipul",{"_index":1888,"t":{"733":{"position":[[18,12]]}}}],["manual",{"_index":5663,"t":{"2195":{"position":[[751,13]]}}}],["map",{"_index":3142,"t":{"1325":{"position":[[443,4]]},"1338":{"position":[[401,4]]},"1340":{"position":[[320,4],[1116,4]]},"1799":{"position":[[0,5],[29,5],[54,5]]}}}],["map、reduc",{"_index":3022,"t":{"1283":{"position":[[161,16]]}}}],["margin",{"_index":22,"t":{"10":{"position":[[137,7]]},"853":{"position":[[238,7]]},"1248":{"position":[[264,7],[378,6],[533,6],[553,6],[754,6]]},"1255":{"position":[[364,6],[384,6]]},"1366":{"position":[[2515,6]]},"1511":{"position":[[199,7]]},"1515":{"position":[[1505,7]]},"1960":{"position":[[228,6]]},"1979":{"position":[[2082,6],[2101,6],[2235,6],[2255,6],[2333,6],[2680,7]]},"1981":{"position":[[1145,7]]}}}],["margin:1.5rem",{"_index":3851,"t":{"1526":{"position":[[44,15]]}}}],["margin:15rpx",{"_index":4929,"t":{"1979":{"position":[[2295,13]]}}}],["margin:30rpx",{"_index":4916,"t":{"1979":{"position":[[2068,13]]}}}],["margin:30rpx;}.van",{"_index":4940,"t":{"1979":{"position":[[2537,18]]}}}],["margin:50rpx",{"_index":4938,"t":{"1979":{"position":[[2497,13]]}}}],["mark",{"_index":3594,"t":{"1420":{"position":[[1197,5]]}}}],["markdown",{"_index":2348,"t":{"1006":{"position":[[139,8],[310,8],[343,8],[367,8]]},"1096":{"position":[[193,9],[394,12]]}}}],["marketlist",{"_index":2767,"t":{"1152":{"position":[[22,13]]}}}],["markup",{"_index":3868,"t":{"1535":{"position":[[16,6]]}}}],["mask",{"_index":3810,"t":{"1511":{"position":[[566,5]]}}}],["master",{"_index":4713,"t":{"1915":{"position":[[25,20]]}}}],["match",{"_index":4492,"t":{"1842":{"position":[[754,7]]},"2214":{"position":[[24,5]]}}}],["materi",{"_index":39,"t":{"10":{"position":[[677,8],[740,14],[791,10]]},"14":{"position":[[18,8]]},"1325":{"position":[[400,8]]},"1338":{"position":[[358,8],[504,10]]}}}],["materialtext",{"_index":3182,"t":{"1340":{"position":[[275,12],[423,14],[1071,12],[1219,14]]}}}],["materialvar",{"_index":78,"t":{"14":{"position":[[0,17]]}}}],["math",{"_index":1354,"t":{"483":{"position":[[7,4],[51,4],[78,4]]},"1487":{"position":[[409,4]]}}}],["math.",{"_index":1489,"t":{"510":{"position":[[175,8]]},"512":{"position":[[156,8]]},"514":{"position":[[240,8]]},"516":{"position":[[155,8]]}}}],["math.atan(1",{"_index":1362,"t":{"483":{"position":[[345,14]]}}}],["math.cos(0",{"_index":1358,"t":{"483":{"position":[[245,13]]}}}],["math.cos(radian",{"_index":1525,"t":{"520":{"position":[[218,19]]},"526":{"position":[[253,18]]},"528":{"position":[[211,18]]}}}],["math.exp(x",{"_index":1492,"t":{"510":{"position":[[227,13]]}}}],["math.floor(math.random",{"_index":3007,"t":{"1277":{"position":[[73,24]]}}}],["math.floor(x+0.5",{"_index":1452,"t":{"504":{"position":[[56,17]]}}}],["math.log(x",{"_index":1498,"t":{"512":{"position":[[208,13]]}}}],["math.pi",{"_index":1520,"t":{"518":{"position":[[159,9]]},"520":{"position":[[159,9]]},"522":{"position":[[159,9]]},"524":{"position":[[191,9]]},"526":{"position":[[200,9]]},"528":{"position":[[159,9]]},"1346":{"position":[[268,8]]}}}],["math.pi,默认为math.pi",{"_index":3254,"t":{"1346":{"position":[[293,19]]}}}],["math.pow(x",{"_index":1506,"t":{"514":{"position":[[301,11]]}}}],["math.random",{"_index":1547,"t":{"534":{"position":[[88,13],[125,13]]},"1792":{"position":[[77,16]]}}}],["math.round(11.5",{"_index":1454,"t":{"504":{"position":[[99,16]]}}}],["math.sin(math.pi/2",{"_index":1356,"t":{"483":{"position":[[192,21]]}}}],["math.sin(radian",{"_index":1522,"t":{"518":{"position":[[218,19]]},"524":{"position":[[244,18]]}}}],["math.sqrt(x",{"_index":1512,"t":{"516":{"position":[[208,14]]}}}],["math.tan(math.pi/3",{"_index":1360,"t":{"483":{"position":[[291,21]]}}}],["math.tan(radian",{"_index":1526,"t":{"522":{"position":[[218,19]]}}}],["math.todegrees(i",{"_index":1540,"t":{"530":{"position":[[154,17]]}}}],["math.todegrees(math.acos(math.sin(radian",{"_index":1535,"t":{"526":{"position":[[272,46]]}}}],["math.todegrees(math.asin(math.sin(radian",{"_index":1531,"t":{"524":{"position":[[263,46]]}}}],["math.todegrees(math.atan(math.sin(radian",{"_index":1536,"t":{"528":{"position":[[230,46]]}}}],["math.todegrees(math.pi/2",{"_index":1364,"t":{"483":{"position":[[392,27]]}}}],["math.todegrees(x",{"_index":1539,"t":{"530":{"position":[[113,17]]}}}],["math.toradians(degre",{"_index":1518,"t":{"518":{"position":[[99,24]]},"520":{"position":[[99,24]]},"522":{"position":[[99,24]]},"524":{"position":[[131,24]]},"526":{"position":[[140,24]]},"528":{"position":[[99,24]]}}}],["math.toradians(i",{"_index":1545,"t":{"532":{"position":[[180,17]]}}}],["math.toradians(x",{"_index":1544,"t":{"532":{"position":[[139,17]]}}}],["matplotlib.pyplot",{"_index":6100,"t":{"2443":{"position":[[224,17]]}}}],["matplotlib.tick",{"_index":6104,"t":{"2443":{"position":[[272,17]]}}}],["matter",{"_index":2606,"t":{"1092":{"position":[[2504,9]]}}}],["maven",{"_index":958,"t":{"280":{"position":[[85,5],[147,5]]}}}],["max",{"_index":1685,"t":{"604":{"position":[[367,3],[442,4],[447,3],[497,5],[540,3]]},"1905":{"position":[[320,3]]},"1981":{"position":[[1049,3]]},"2439":{"position":[[446,7]]}}}],["max(4",{"_index":6094,"t":{"2441":{"position":[[82,5]]}}}],["max(doubl",{"_index":1475,"t":{"508":{"position":[[14,10]]}}}],["max(float",{"_index":1476,"t":{"508":{"position":[[50,9]]}}}],["max(int",{"_index":1477,"t":{"508":{"position":[[82,7]]}}}],["max(long",{"_index":1478,"t":{"508":{"position":[[111,8]]}}}],["max=100",{"_index":1286,"t":{"443":{"position":[[421,8]]}}}],["max_valu",{"_index":4309,"t":{"1739":{"position":[[0,9]]}}}],["maxbox",{"_index":3803,"t":{"1511":{"position":[[224,7]]}}}],["maximum",{"_index":5844,"t":{"2247":{"position":[[279,16]]}}}],["maximun",{"_index":5846,"t":{"2247":{"position":[[368,15]]}}}],["maxlength",{"_index":4965,"t":{"1981":{"position":[[768,9]]}}}],["maxsiz",{"_index":1847,"t":{"698":{"position":[[175,17],[279,19]]}}}],["maxsize=500",{"_index":1865,"t":{"698":{"position":[[681,12],[768,12]]}}}],["maybeerror",{"_index":3016,"t":{"1281":{"position":[[201,10],[308,10],[462,10],[493,11]]},"1283":{"position":[[3,10]]}}}],["mbps，则使带宽时延积刚好为一个分组长度（即512比特）的链路长度m",{"_index":5421,"t":{"2138":{"position":[[1096,39]]}}}],["md",{"_index":2381,"t":{"1012":{"position":[[11,5]]},"1017":{"position":[[479,9]]},"1092":{"position":[[3700,4]]}}}],["md=\"20",{"_index":3384,"t":{"1366":{"position":[[2472,8]]}}}],["md=\"4",{"_index":3341,"t":{"1366":{"position":[[926,7]]}}}],["mdf，其余的数据文件被定义为次数据文件（secondari",{"_index":1839,"t":{"695":{"position":[[70,31]]}}}],["mdn",{"_index":3903,"t":{"1557":{"position":[[221,3]]}}}],["mdx.md",{"_index":2505,"t":{"1049":{"position":[[224,9]]}}}],["me",{"_index":3118,"t":{"1323":{"position":[[588,4]]}}}],["me</div><div",{"_index":3693,"t":{"1468":{"position":[[80,12]]}}}],["mechin",{"_index":1563,"t":{"554":{"position":[[61,12]]}}}],["media",{"_index":5265,"t":{"2104":{"position":[[24,17]]}}}],["media）、多媒体（multimedia",{"_index":5992,"t":{"2330":{"position":[[84,22]]}}}],["memori",{"_index":962,"t":{"282":{"position":[[92,7]]},"2509":{"position":[[728,7]]}}}],["menu",{"_index":3347,"t":{"1366":{"position":[[1060,4],[1115,4],[1173,4],[1209,4],[1297,4],[1385,4],[1609,4],[1642,4],[1707,4],[1738,4],[1805,4],[1836,4],[1902,4],[1933,4],[2014,4],[2103,4],[2170,4],[2257,4],[2288,5]]}}}],["mesh",{"_index":43,"t":{"10":{"position":[[759,4],[802,12]]},"1338":{"position":[[515,14]]}}}],["mesh.rotatey(0.01);//每次绕y轴旋转0.01",{"_index":98,"t":{"23":{"position":[[562,34]]}}}],["mesh.rotatey(0.01);//每次绕y轴旋转0.01弧度}//间隔20ms周期性调用函数fun,20ms也就是刷新频率是50fps(1s/20ms)，每秒渲染50次setinterval(\"rend",{"_index":91,"t":{"23":{"position":[[67,111]]}}}],["mesh.rotatey(0.01);语句使立方体网格模型绕y轴旋转0.01",{"_index":95,"t":{"23":{"position":[[319,51]]}}}],["meshspher",{"_index":3171,"t":{"1338":{"position":[[466,10]]}}}],["meshsphere.nam",{"_index":3172,"t":{"1338":{"position":[[530,15]]}}}],["meshtext",{"_index":3184,"t":{"1340":{"position":[[383,8],[1179,8]]}}}],["meshtext.nam",{"_index":3186,"t":{"1340":{"position":[[438,13],[1234,13]]}}}],["meshtext.position.set(40",{"_index":3187,"t":{"1340":{"position":[[462,25],[1256,25]]}}}],["messag",{"_index":536,"t":{"114":{"position":[[737,7]]},"120":{"position":[[146,7],[221,7]]},"122":{"position":[[142,7],[217,7]]},"126":{"position":[[7,7]]},"211":{"position":[[737,7]]},"1279":{"position":[[344,11],[419,9]]},"1281":{"position":[[360,11],[435,9]]},"1323":{"position":[[133,8]]},"1393":{"position":[[63,7],[120,8],[533,8],[791,7],[828,7]]},"1397":{"position":[[82,7],[196,8],[480,7],[570,8]]},"1410":{"position":[[169,7]]},"1412":{"position":[[31,8],[44,7],[81,8],[167,8]]},"1414":{"position":[[45,8],[288,7]]},"1424":{"position":[[260,8],[280,8],[591,8],[611,8]]},"1431":{"position":[[166,8]]},"1487":{"position":[[360,7]]},"2033":{"position":[[54,28]]},"2148":{"position":[[19,11]]},"2200":{"position":[[32,7]]}}}],["message.split('').reverse().join",{"_index":3538,"t":{"1410":{"position":[[79,36]]},"1487":{"position":[[127,36]]}}}],["message:'hello",{"_index":541,"t":{"114":{"position":[[857,14]]},"211":{"position":[[857,14]]}}}],["message=\"thes",{"_index":3012,"t":{"1279":{"position":[[472,14]]}}}],["message={errormessag",{"_index":3018,"t":{"1281":{"position":[[271,22]]}}}],["message}},此时的message已经被vu",{"_index":542,"t":{"114":{"position":[[919,31]]},"211":{"position":[[919,31]]}}}],["message（提交说明），否则就不允许提交。但是，一般来说，commit",{"_index":555,"t":{"120":{"position":[[108,37]]},"122":{"position":[[104,37]]}}}],["meta",{"_index":16,"t":{"10":{"position":[[60,5]]},"853":{"position":[[46,5],[69,5],[140,5]]},"1092":{"position":[[946,4]]},"1511":{"position":[[28,5]]},"1515":{"position":[[38,5],[61,5],[115,5]]},"1547":{"position":[[71,5],[639,5]]},"1549":{"position":[[50,5],[223,5]]},"1551":{"position":[[30,5]]},"1553":{"position":[[20,29]]},"1555":{"position":[[4,5]]},"1557":{"position":[[3,6],[44,4],[97,4],[141,5]]}}}],["metadata",{"_index":2418,"t":{"1017":{"position":[[886,8]]},"1587":{"position":[[649,10]]}}}],["method",{"_index":132,"t":{"31":{"position":[[316,6],[731,8]]},"243":{"position":[[0,10]]},"245":{"position":[[216,10]]},"801":{"position":[[108,6]]},"908":{"position":[[190,6],[468,6],[541,6],[551,11],[771,6],[877,6]]},"910":{"position":[[192,6],[491,6],[565,6],[575,11],[830,6],[889,6]]},"912":{"position":[[153,6],[227,6],[237,11]]},"1397":{"position":[[224,8]]},"1414":{"position":[[87,12]]},"1420":{"position":[[1068,8]]},"1445":{"position":[[1264,8]]},"1472":{"position":[[838,8],[1778,8]]},"1667":{"position":[[126,6],[198,6]]},"1964":{"position":[[120,7]]},"2047":{"position":[[150,10]]}}}],["methods=['get",{"_index":162,"t":{"33":{"position":[[392,16]]}}}],["methods=['get'])def",{"_index":268,"t":{"51":{"position":[[38,19],[165,19]]}}}],["metro",{"_index":2471,"t":{"1024":{"position":[[81,8]]}}}],["metropolitan",{"_index":5476,"t":{"2141":{"position":[[192,13]]}}}],["mf取值除了最后一位取0外其他全部取0",{"_index":5551,"t":{"2169":{"position":[[824,20]]}}}],["microsoft",{"_index":4522,"t":{"1844":{"position":[[227,9],[342,11],[382,10],[489,10],[681,9]]}}}],["microsoft!\";var",{"_index":4520,"t":{"1844":{"position":[[50,15],[241,15],[413,15],[555,15],[695,15]]}}}],["middl",{"_index":3200,"t":{"1340":{"position":[[870,9]]}}}],["middlewar",{"_index":1988,"t":{"815":{"position":[[0,29]]}}}],["midi",{"_index":5997,"t":{"2359":{"position":[[0,4]]},"2473":{"position":[[186,6],[275,27]]}}}],["midi文件的扩展名为“.mid”。midi",{"_index":6249,"t":{"2473":{"position":[[193,33]]}}}],["midi键盘：（mus",{"_index":6214,"t":{"2462":{"position":[[416,13]]}}}],["midnightblu",{"_index":3832,"t":{"1515":{"position":[[850,13]]}}}],["mills\"><meta",{"_index":3900,"t":{"1557":{"position":[[176,12]]}}}],["min",{"_index":612,"t":{"145":{"position":[[19,3]]},"163":{"position":[[20,3]]},"165":{"position":[[18,3]]},"175":{"position":[[18,3]]},"194":{"position":[[18,3]]},"204":{"position":[[18,3]]},"1366":{"position":[[174,3],[1143,3]]},"1981":{"position":[[1112,3]]}}}],["min(doubl",{"_index":1464,"t":{"506":{"position":[[14,10]]}}}],["min(float",{"_index":1467,"t":{"506":{"position":[[50,9]]}}}],["min(int",{"_index":1468,"t":{"506":{"position":[[82,7]]}}}],["min(long",{"_index":1469,"t":{"506":{"position":[[111,8]]}}}],["min_valu",{"_index":4310,"t":{"1739":{"position":[[60,9]]}}}],["mina",{"_index":4724,"t":{"1918":{"position":[[539,6],[741,31],[779,5]]},"2001":{"position":[[156,10],[212,6]]}}}],["miner/blob/master/todo/learn",{"_index":2968,"t":{"1265":{"position":[[117,31]]}}}],["miniprogram",{"_index":4677,"t":{"1892":{"position":[[221,16]]}}}],["miniprogram/envlist.js\"，将拷贝的云环境id更换原有的envid",{"_index":2764,"t":{"1150":{"position":[[125,47]]}}}],["miniprogram\\imag",{"_index":4701,"t":{"1903":{"position":[[11,18]]}}}],["miniprogram\\images\\miss",{"_index":2780,"t":{"1156":{"position":[[69,77]]}}}],["miniprogramnpmdistdir",{"_index":4676,"t":{"1892":{"position":[[196,24]]}}}],["mini上都是如此。1rpx=（screenwidth",{"_index":4810,"t":{"1960":{"position":[[418,27]]}}}],["minut",{"_index":831,"t":{"255":{"position":[[284,6],[308,6],[1640,6],[1710,6],[1734,6]]},"289":{"position":[[448,6]]},"363":{"position":[[1299,6],[1323,6]]}}}],["missionlist",{"_index":2768,"t":{"1152":{"position":[[36,13]]}}}],["missionlist数据库集合去找自己和女朋友的_openid",{"_index":2781,"t":{"1158":{"position":[[80,68]]}}}],["mm",{"_index":2098,"t":{"853":{"position":[[1126,2]]}}}],["mode",{"_index":2695,"t":{"1096":{"position":[[358,5]]},"1312":{"position":[[668,5],[704,5],[766,5]]},"1507":{"position":[[121,5],[167,5],[297,5],[343,5],[477,5],[523,5]]}}}],["model",{"_index":138,"t":{"31":{"position":[[418,5]]},"1338":{"position":[[88,12]]},"1340":{"position":[[29,12]]},"1397":{"position":[[424,5]]}}}],["model)，意为开放系统互联参考模型。这个模型把网络通信的工作分为7层，它们由低到高分别是物理层(phys",{"_index":5484,"t":{"2144":{"position":[[93,58]]}}}],["model:\"911",{"_index":4168,"t":{"1651":{"position":[[166,12]]}}}],["model=\"id",{"_index":128,"t":{"31":{"position":[[246,10]]}}}],["model=\"message\"></div",{"_index":3480,"t":{"1397":{"position":[[504,22]]}}}],["model=\"newtodotext",{"_index":3657,"t":{"1445":{"position":[[531,19]]}}}],["model=\"quest",{"_index":3573,"t":{"1420":{"position":[[175,17]]}}}],["modelnumb",{"_index":4820,"t":{"1964":{"position":[[214,12]]},"1981":{"position":[[698,11],[1402,12]]}}}],["model）api",{"_index":4459,"t":{"1825":{"position":[[92,10]]}}}],["modifi",{"_index":1876,"t":{"700":{"position":[[197,13],[238,11],[260,11]]},"1499":{"position":[[4,10]]},"2055":{"position":[[147,8],[205,8],[413,9],[725,8],[771,8]]}}}],["modifiedd",{"_index":5169,"t":{"2055":{"position":[[908,13]]}}}],["modified。这也就告知了缓存它可以继续了，将这个对象的cach",{"_index":5174,"t":{"2055":{"position":[[1106,36]]}}}],["modified的值。这个条件get",{"_index":5168,"t":{"2055":{"position":[[797,51]]}}}],["modul",{"_index":1550,"t":{"538":{"position":[[8,6]]},"969":{"position":[[63,6]]}}}],["module.export",{"_index":349,"t":{"84":{"position":[[57,14]]},"90":{"position":[[47,14]]},"810":{"position":[[116,14],[413,22]]},"971":{"position":[[0,13],[178,14]]},"973":{"position":[[28,14],[232,14],[286,14]]},"975":{"position":[[5,14],[75,14],[170,16]]},"1017":{"position":[[2859,19]]},"1020":{"position":[[40,14]]},"1022":{"position":[[171,14]]},"1024":{"position":[[146,14]]},"1027":{"position":[[68,14],[144,14]]},"1031":{"position":[[6,14]]},"1033":{"position":[[15,14]]},"1035":{"position":[[13,14]]},"1058":{"position":[[42,14]]}}}],["module.exports.sayhello",{"_index":2311,"t":{"971":{"position":[[79,28]]},"973":{"position":[[87,28]]}}}],["module.exports.usernam",{"_index":2315,"t":{"973":{"position":[[61,23]]}}}],["module.j",{"_index":2299,"t":{"969":{"position":[[20,9]]}}}],["moment",{"_index":2288,"t":{"962":{"position":[[125,6],[142,10]]}}}],["mongo",{"_index":218,"t":{"41":{"position":[[83,5]]}}}],["mongodb",{"_index":118,"t":{"27":{"position":[[56,10],[102,7]]},"29":{"position":[[52,10],[98,7]]},"39":{"position":[[51,7]]},"41":{"position":[[0,7],[39,7]]},"43":{"position":[[10,7]]},"49":{"position":[[97,8],[225,7],[683,7],[750,7]]},"53":{"position":[[39,7]]}}}],["mongodb+srv://inannan:12345678@cluster0.xxxxxx.mongodb.net/?retrywrites=true&w=major",{"_index":236,"t":{"47":{"position":[[318,87]]}}}],["mongodb+srv://yourname:<password>@cluster0.xxxxxx.mongodb.net/?retrywrites=true&w=major",{"_index":234,"t":{"47":{"position":[[173,90]]}}}],["monobehaviour",{"_index":1049,"t":{"303":{"position":[[173,14]]},"305":{"position":[[508,14]]},"307":{"position":[[232,14],[462,14]]}}}],["month",{"_index":996,"t":{"289":{"position":[[523,5],[558,5]]}}}],["mooc",{"_index":5815,"t":{"2236":{"position":[[261,16]]}}}],["more",{"_index":2462,"t":{"1017":{"position":[[2553,7]]}}}],["morgan\"];var",{"_index":4374,"t":{"1779":{"position":[[321,13]]}}}],["morn",{"_index":984,"t":{"289":{"position":[[195,9]]},"380":{"position":[[82,7],[465,11]]}}}],["morning.pi",{"_index":1095,"t":{"359":{"position":[[11,20],[32,16]]}}}],["morning，evening，class",{"_index":1147,"t":{"380":{"position":[[41,40]]}}}],["motto\">{{motto}}</text",{"_index":5021,"t":{"1995":{"position":[[495,23]]}}}],["mount",{"_index":3051,"t":{"1297":{"position":[[370,9],[579,7],[587,41]]}}}],["mounted、upd",{"_index":3530,"t":{"1406":{"position":[[300,15]]}}}],["mountnod",{"_index":2975,"t":{"1267":{"position":[[291,10],[469,10]]},"1269":{"position":[[236,11]]},"1271":{"position":[[854,11]]},"1273":{"position":[[1074,11]]},"1277":{"position":[[153,11]]},"1279":{"position":[[529,11]]},"1281":{"position":[[562,11]]},"1283":{"position":[[326,11]]},"1287":{"position":[[245,11]]},"1289":{"position":[[579,11]]},"1291":{"position":[[323,11]]},"1295":{"position":[[599,11]]},"1299":{"position":[[708,11]]}}}],["mous",{"_index":3215,"t":{"1342":{"position":[[701,5]]}}}],["mouse.i",{"_index":3225,"t":{"1342":{"position":[[994,7]]}}}],["mouse.x",{"_index":3221,"t":{"1342":{"position":[[885,7]]}}}],["mousemsg",{"_index":409,"t":{"101":{"position":[[243,8]]},"103":{"position":[[51,8]]},"198":{"position":[[243,8]]},"200":{"position":[[51,8]]}}}],["mov",{"_index":6321,"t":{"2527":{"position":[[58,5]]}}}],["move",{"_index":1048,"t":{"303":{"position":[[166,4]]},"305":{"position":[[501,4]]},"1092":{"position":[[2684,4]]},"2049":{"position":[[63,5]]}}}],["move1",{"_index":1072,"t":{"307":{"position":[[224,5]]}}}],["move1.c",{"_index":1070,"t":{"307":{"position":[[126,8]]}}}],["move2",{"_index":1074,"t":{"307":{"position":[[454,5]]}}}],["move2.c",{"_index":1073,"t":{"307":{"position":[[356,8]]}}}],["mov文件格式是quicktim",{"_index":6322,"t":{"2527":{"position":[[64,17]]}}}],["mow",{"_index":3674,"t":{"1445":{"position":[[1227,4]]}}}],["mozila/4.0connect",{"_index":5125,"t":{"2047":{"position":[[72,21]]}}}],["mozilla",{"_index":3933,"t":{"1570":{"position":[[128,7],[136,25]]},"1572":{"position":[[156,7],[168,7]]}}}],["mozilla/5.0",{"_index":698,"t":{"179":{"position":[[366,12]]},"221":{"position":[[366,12]]},"1165":{"position":[[366,12]]}}}],["mp3",{"_index":6251,"t":{"2473":{"position":[[388,5]]}}}],["mp3格式采用mpeg",{"_index":6252,"t":{"2473":{"position":[[394,11]]}}}],["mpeg",{"_index":6329,"t":{"2534":{"position":[[56,4],[70,4],[79,5],[156,4],[196,4],[215,4],[248,13],[307,4],[329,6],[732,4],[831,7]]},"2543":{"position":[[56,4],[70,4],[79,5],[156,4],[196,4],[215,4],[248,13],[307,4],[329,6],[732,4],[831,7]]},"2552":{"position":[[56,4],[70,4],[79,5],[156,4],[196,4],[215,4],[248,13],[307,4],[329,6],[732,4],[831,7]]}}}],["mpg",{"_index":6323,"t":{"2527":{"position":[[105,5]]}}}],["mpg文件是最新的数字视频标准文件，也称为系统文件或隔行数据流，是采用mpeg",{"_index":6324,"t":{"2527":{"position":[[111,39]]}}}],["ms",{"_index":3457,"t":{"1386":{"position":[[113,2]]},"1507":{"position":[[1209,2],[1478,2],[3704,2],[3832,2],[3926,2],[4019,2],[4144,2],[4272,2],[4366,2],[4459,2]]},"2516":{"position":[[229,2]]}}}],["mse",{"_index":6309,"t":{"2516":{"position":[[314,11]]}}}],["msg",{"_index":3725,"t":{"1481":{"position":[[61,3],[162,3]]},"1922":{"position":[[252,5]]},"1997":{"position":[[115,4],[181,4]]},"2007":{"position":[[86,3],[163,3],[294,4]]}}}],["mss",{"_index":5855,"t":{"2247":{"position":[[1189,48]]}}}],["mtl",{"_index":3288,"t":{"1353":{"position":[[204,3],[487,3]]}}}],["mtlloader",{"_index":3296,"t":{"1353":{"position":[[459,9]]}}}],["mtu",{"_index":5530,"t":{"2169":{"position":[[0,27],[92,8]]}}}],["mtu允许的最大分片。一个最大的分片可封装的数据是8",{"_index":5543,"t":{"2169":{"position":[[610,65]]}}}],["multi",{"_index":6307,"t":{"2516":{"position":[[179,14]]}}}],["multipl",{"_index":560,"t":{"124":{"position":[[50,8]]},"2117":{"position":[[53,8]]}}}],["multipleloc",{"_index":6105,"t":{"2443":{"position":[[297,15]]}}}],["multiplelocator(50",{"_index":6121,"t":{"2443":{"position":[[656,19]]}}}],["museum",{"_index":3953,"t":{"1582":{"position":[[148,8]]}}}],["mustach",{"_index":3723,"t":{"1481":{"position":[[15,10]]},"1483":{"position":[[66,10]]},"1485":{"position":[[0,8]]}}}],["mute",{"_index":3961,"t":{"1587":{"position":[[55,5],[504,5]]}}}],["mutipl",{"_index":4988,"t":{"1981":{"position":[[1834,7]]}}}],["mvc",{"_index":2885,"t":{"1244":{"position":[[62,3]]}}}],["mvvm",{"_index":668,"t":{"161":{"position":[[246,29]]},"330":{"position":[[246,29]]},"1402":{"position":[[65,4]]},"1995":{"position":[[1043,4]]}}}],["mw",{"_index":1990,"t":{"823":{"position":[[6,2]]},"825":{"position":[[217,2],[996,2]]},"831":{"position":[[295,2]]},"833":{"position":[[175,2],[352,3]]}}}],["mw1",{"_index":2008,"t":{"835":{"position":[[13,3],[104,4]]},"841":{"position":[[102,3]]}}}],["mw2",{"_index":2009,"t":{"835":{"position":[[19,3],[111,3]]},"841":{"position":[[108,3]]}}}],["mw3",{"_index":2010,"t":{"835":{"position":[[25,3],[117,4]]},"841":{"position":[[114,3]]}}}],["mw注册为全局生效的中间件app.use(mw);app.get",{"_index":1994,"t":{"825":{"position":[[288,38]]},"831":{"position":[[439,38]]}}}],["my_histogram(img",{"_index":6108,"t":{"2443":{"position":[[379,18],[991,21]]}}}],["myarray[0",{"_index":4323,"t":{"1751":{"position":[[94,10]]}}}],["myblog",{"_index":2496,"t":{"1049":{"position":[[0,33],[34,9]]}}}],["myblog.md",{"_index":2382,"t":{"1012":{"position":[[56,9]]}}}],["myboy",{"_index":4364,"t":{"1779":{"position":[[71,6],[165,6]]}}}],["mycar",{"_index":4326,"t":{"1751":{"position":[[153,7]]}}}],["mychildren",{"_index":4368,"t":{"1779":{"position":[[112,10],[335,10]]}}}],["myclient",{"_index":244,"t":{"49":{"position":[[239,8]]}}}],["myclient['mydb",{"_index":247,"t":{"49":{"position":[[386,16]]}}}],["mycol",{"_index":248,"t":{"49":{"position":[[411,5]]}}}],["mycol.find(myqueri",{"_index":252,"t":{"49":{"position":[[474,19]]}}}],["mydb",{"_index":246,"t":{"49":{"position":[[379,4]]}}}],["mydb['db1",{"_index":249,"t":{"49":{"position":[[419,11]]}}}],["mydoc",{"_index":251,"t":{"49":{"position":[[466,5],[527,6]]}}}],["myfunction(7",{"_index":4261,"t":{"1713":{"position":[[129,13]]}}}],["myfunction(a",{"_index":4205,"t":{"1665":{"position":[[260,13]]},"1667":{"position":[[149,13],[230,13]]},"1713":{"position":[[173,13]]}}}],["myfunction(a,b",{"_index":4199,"t":{"1665":{"position":[[156,16]]}}}],["myfunction(p1",{"_index":4258,"t":{"1709":{"position":[[94,14]]}}}],["myfunction(str",{"_index":4209,"t":{"1665":{"position":[[453,15],[540,15]]}}}],["myfunction(tot",{"_index":4425,"t":{"1803":{"position":[[199,17],[512,17],[769,17],[927,17],[1226,17]]},"1805":{"position":[[214,17],[442,17]]}}}],["myfunction(valu",{"_index":4344,"t":{"1760":{"position":[[359,17]]},"1797":{"position":[[116,17],[388,17]]},"1799":{"position":[[170,17],[243,17],[528,17]]},"1801":{"position":[[161,17],[370,17]]},"1807":{"position":[[129,17],[337,17]]},"1809":{"position":[[129,17]]},"1811":{"position":[[134,17]]},"1813":{"position":[[142,17]]}}}],["myfunction1",{"_index":4391,"t":{"1790":{"position":[[473,13]]}}}],["myfunction2",{"_index":4394,"t":{"1790":{"position":[[565,13]]}}}],["myfunction;myarray[2",{"_index":4325,"t":{"1751":{"position":[[129,21]]}}}],["mygirl",{"_index":4361,"t":{"1779":{"position":[[37,7],[155,7]]}}}],["mygirls.concat(myboy",{"_index":4369,"t":{"1779":{"position":[[125,23]]}}}],["mylist",{"_index":1633,"t":{"592":{"position":[[143,9]]},"598":{"position":[[112,6]]},"604":{"position":[[90,6]]},"606":{"position":[[150,6],[214,7]]}}}],["mylist.length",{"_index":1682,"t":{"604":{"position":[[153,14],[265,14],[404,14]]}}}],["mylist;doubl",{"_index":1632,"t":{"592":{"position":[[129,13]]}}}],["mylist[0",{"_index":1643,"t":{"598":{"position":[[139,9]]},"604":{"position":[[373,10]]}}}],["mylist[1",{"_index":1645,"t":{"598":{"position":[[156,9]]}}}],["mylist[2",{"_index":1647,"t":{"598":{"position":[[173,9]]}}}],["mylist[3",{"_index":1649,"t":{"598":{"position":[[190,9]]}}}],["mylist[4",{"_index":1651,"t":{"598":{"position":[[208,9]]}}}],["mylist[5",{"_index":1653,"t":{"598":{"position":[[225,9]]}}}],["mylist[6",{"_index":1655,"t":{"598":{"position":[[244,9]]}}}],["mylist[7",{"_index":1657,"t":{"598":{"position":[[262,9]]}}}],["mylist[8",{"_index":1659,"t":{"598":{"position":[[281,9]]}}}],["mylist[9",{"_index":1661,"t":{"598":{"position":[[301,9]]}}}],["mylist[i",{"_index":1664,"t":{"598":{"position":[[393,10]]},"604":{"position":[[296,10],[429,10],[453,10]]}}}],["mynumb",{"_index":4272,"t":{"1722":{"position":[[60,8],[79,9],[121,8],[132,8],[143,10]]}}}],["myqueri",{"_index":250,"t":{"49":{"position":[[438,7]]}}}],["mysit",{"_index":2474,"t":{"1024":{"position":[[356,6],[436,12]]}}}],["mysql",{"_index":1153,"t":{"385":{"position":[[13,5]]},"646":{"position":[[10,5],[25,5],[48,5],[75,5],[95,5],[111,5]]},"648":{"position":[[5,14],[56,14]]},"2016":{"position":[[11,5]]},"2018":{"position":[[367,5]]}}}],["m×n",{"_index":6012,"t":{"2397":{"position":[[155,59]]},"2399":{"position":[[205,29]]},"2401":{"position":[[221,31]]}}}],["m×n个网格的中心点的灰度值分别量化成与l",{"_index":6010,"t":{"2395":{"position":[[98,36]]}}}],["m×n就越大；反之，采样的空间分辨率越低，获得的图像阵列m×n",{"_index":6016,"t":{"2399":{"position":[[235,65]]}}}],["m×n的图像，需要的存储位数为b=m×n×k",{"_index":6045,"t":{"2412":{"position":[[235,29]]}}}],["m×n越大，图像的尺寸就越大；反之，图像阵列m×n",{"_index":6017,"t":{"2399":{"position":[[301,54]]}}}],["m每间隔20毫秒调用一次函数render()，每次调用渲染函数的时候，执行renderer.render(scene,camera",{"_index":94,"t":{"23":{"position":[[247,71]]}}}],["m表示最大允许，20",{"_index":5546,"t":{"2169":{"position":[[695,20]]}}}],["n",{"_index":1205,"t":{"400":{"position":[[94,2]]},"492":{"position":[[161,2],[167,2]]},"524":{"position":[[239,4]]},"526":{"position":[[248,4]]},"528":{"position":[[206,4]]},"602":{"position":[[46,2]]},"616":{"position":[[183,1],[403,1],[424,1]]},"621":{"position":[[295,4]]},"654":{"position":[[253,1]]},"853":{"position":[[1395,1],[1403,1],[1413,1]]},"1437":{"position":[[107,1],[367,1]]},"1439":{"position":[[65,1]]},"1642":{"position":[[104,5]]},"1833":{"position":[[231,2]]},"1844":{"position":[[66,1],[257,1],[429,1],[571,1],[711,1]]},"2113":{"position":[[52,1]]},"2119":{"position":[[645,17]]},"2169":{"position":[[807,2]]},"2206":{"position":[[143,19]]},"2281":{"position":[[139,8],[225,6]]},"2317":{"position":[[26,1],[58,28]]},"2412":{"position":[[205,2]]}}}],["n+1",{"_index":3865,"t":{"1532":{"position":[[125,3]]}}}],["n+1位的除数p",{"_index":5272,"t":{"2113":{"position":[[81,27]]}}}],["n+3",{"_index":3866,"t":{"1532":{"position":[[132,3]]}}}],["n,recevbas",{"_index":5945,"t":{"2281":{"position":[[353,11]]}}}],["n/a",{"_index":4079,"t":{"1636":{"position":[[358,8]]}}}],["n=1",{"_index":1815,"t":{"656":{"position":[[192,11]]}}}],["n[0",{"_index":1727,"t":{"616":{"position":[[201,4],[411,4]]}}}],["n[0][0",{"_index":1729,"t":{"616":{"position":[[234,7]]}}}],["n[0][1",{"_index":1730,"t":{"616":{"position":[[247,7]]}}}],["n[0][2",{"_index":1731,"t":{"616":{"position":[[260,7],[524,9]]}}}],["n[1",{"_index":1732,"t":{"616":{"position":[[273,4]]}}}],["n[1][0",{"_index":1733,"t":{"616":{"position":[[306,7]]}}}],["n[1][1",{"_index":1734,"t":{"616":{"position":[[320,7]]}}}],["n]|remov",{"_index":1875,"t":{"700":{"position":[[171,20]]}}}],["nak",{"_index":5900,"t":{"2267":{"position":[[159,21],[181,14]]}}}],["nak消息，只使用ack消息进行确认。在ack消息中显式加入被确认的分组的序列号。发送方在收到重复ack之后，采取与nak",{"_index":5907,"t":{"2271":{"position":[[0,78]]}}}],["name",{"_index":261,"t":{"49":{"position":[[911,7],[951,4]]},"257":{"position":[[636,9]]},"287":{"position":[[198,4]]},"289":{"position":[[142,5]]},"359":{"position":[[141,7],[434,7],[617,7]]},"365":{"position":[[198,4]]},"412":{"position":[[342,5],[396,4],[403,5],[431,4]]},"443":{"position":[[654,5],[707,5],[742,6]]},"445":{"position":[[124,5],[273,5],[416,5]]},"447":{"position":[[60,5],[239,4],[355,5],[669,5],[830,6]]},"449":{"position":[[93,5]]},"451":{"position":[[108,5],[540,5]]},"453":{"position":[[65,5]]},"457":{"position":[[162,5]]},"567":{"position":[[128,5]]},"698":{"position":[[124,14],[222,16]]},"700":{"position":[[322,4]]},"782":{"position":[[129,5]]},"784":{"position":[[227,5]]},"847":{"position":[[928,5]]},"1010":{"position":[[56,5],[201,5],[341,5],[520,5]]},"1017":{"position":[[730,5],[794,5]]},"1084":{"position":[[74,5],[262,5],[347,5],[444,5]]},"1094":{"position":[[1082,4]]},"1227":{"position":[[24,5],[83,5]]},"1229":{"position":[[24,5],[138,5]]},"1312":{"position":[[456,4],[474,4]]},"1368":{"position":[[429,5],[481,5],[538,5],[594,5],[646,5],[701,5],[755,5]]},"1418":{"position":[[186,5]]},"1426":{"position":[[312,5],[333,4],[466,5],[507,4]]},"1507":{"position":[[576,5],[654,5],[739,5],[827,5],[912,5],[993,5],[1029,5]]},"1557":{"position":[[16,4],[35,4]]},"1646":{"position":[[57,5]]},"1661":{"position":[[44,4]]},"1711":{"position":[[133,7]]},"1743":{"position":[[41,4]]},"1745":{"position":[[51,4]]},"1838":{"position":[[55,4],[210,4],[374,4],[541,4]]},"1840":{"position":[[51,4]]},"1872":{"position":[[1184,5]]},"1876":{"position":[[616,4]]},"1918":{"position":[[250,9],[406,5],[533,5],[582,4],[593,4],[724,4]]},"1964":{"position":[[144,5]]},"1979":{"position":[[2882,8]]},"1981":{"position":[[1342,5],[1969,5]]},"2062":{"position":[[225,4]]},"2068":{"position":[[537,4],[565,4],[611,4],[747,4]]}}}],["name,int",{"_index":1298,"t":{"445":{"position":[[168,8],[518,8]]},"447":{"position":[[153,8],[448,8],[762,8]]},"449":{"position":[[186,8]]},"451":{"position":[[201,8],[633,8]]},"453":{"position":[[158,8]]}}}],["name:this.data.inputvalu",{"_index":4637,"t":{"1872":{"position":[[2772,25]]}}}],["name:this.data.rec",{"_index":4644,"t":{"1876":{"position":[[534,19],[877,19]]}}}],["name:valu",{"_index":4248,"t":{"1697":{"position":[[28,10]]}}}],["name=\"1",{"_index":4887,"t":{"1979":{"position":[[503,9],[1173,9],[1473,9],[1779,9]]}}}],["name=\"2",{"_index":4889,"t":{"1979":{"position":[[593,9],[1259,9],[1561,9],[1864,9]]}}}],["name=\"3",{"_index":4890,"t":{"1979":{"position":[[686,9]]}}}],["name=\"4",{"_index":4891,"t":{"1979":{"position":[[770,9]]}}}],["name=\"author",{"_index":3898,"t":{"1557":{"position":[[147,13]]}}}],["name=\"descript",{"_index":3901,"t":{"1557":{"position":[[189,18]]}}}],["name=\"label",{"_index":4895,"t":{"1979":{"position":[[882,11]]}}}],["name=\"mark",{"_index":2937,"t":{"1251":{"position":[[399,11]]}}}],["name=\"q",{"_index":3001,"t":{"1273":{"position":[[808,8]]}}}],["name=\"quest",{"_index":4882,"t":{"1979":{"position":[[334,14]]}}}],["name=\"staffnam",{"_index":5042,"t":{"2003":{"position":[[47,17]]}}}],["name=\"taylor",{"_index":3070,"t":{"1312":{"position":[[279,13]]}}}],["name=\"viewport",{"_index":2029,"t":{"853":{"position":[[75,15]]},"1515":{"position":[[121,15]]}}}],["name=teach_data",{"_index":1862,"t":{"698":{"position":[[626,16]]}}}],["name=teach_log",{"_index":1867,"t":{"698":{"position":[[715,15]]}}}],["name=zs&age=20",{"_index":1938,"t":{"784":{"position":[[98,15]]}}}],["name>/wx_weather_class_push/dispatch",{"_index":1149,"t":{"380":{"position":[[239,38],[546,40]]}}}],["names[0",{"_index":3562,"t":{"1418":{"position":[[231,8]]}}}],["names[names.length",{"_index":3563,"t":{"1418":{"position":[[256,18]]}}}],["namewidthext",{"_index":2334,"t":{"991":{"position":[[113,12]]}}}],["nan",{"_index":4078,"t":{"1636":{"position":[[327,3]]},"1638":{"position":[[832,12],[865,3],[873,3],[886,4],[891,3],[943,4],[1006,4]]},"1720":{"position":[[0,3]]},"1735":{"position":[[177,3]]},"1737":{"position":[[192,3]]}}}],["nannan",{"_index":4100,"t":{"1638":{"position":[[903,6],[918,6],[933,6]]},"1878":{"position":[[211,7]]},"1905":{"position":[[271,6]]}}}],["nannumb",{"_index":4117,"t":{"1640":{"position":[[249,14],[267,14]]}}}],["nannumber(tru",{"_index":4112,"t":{"1640":{"position":[[153,16]]}}}],["nanparsefloat('123.456.789",{"_index":4123,"t":{"1640":{"position":[[428,29]]}}}],["nanparsefloat('123.456abc",{"_index":4121,"t":{"1640":{"position":[[360,28]]}}}],["nanparseint('123abc",{"_index":4119,"t":{"1640":{"position":[[308,22]]}}}],["nan（not",{"_index":4269,"t":{"1720":{"position":[[53,7],[103,7]]}}}],["nat",{"_index":5619,"t":{"2188":{"position":[[646,66],[1238,8]]}}}],["nation",{"_index":6279,"t":{"2509":{"position":[[516,9]]}}}],["nativ",{"_index":630,"t":{"150":{"position":[[192,6],[986,6]]},"319":{"position":[[192,6],[986,6]]},"1310":{"position":[[84,6]]}}}],["native、flutter等跨平台框架可以用于开发跨平台的移动应用；还有近些年相当流行的微信、支付宝小程序等。此外，随着微软的新项目react",{"_index":629,"t":{"150":{"position":[[119,72]]},"319":{"position":[[119,72]]}}}],["native和flutter），微信小程序，以及后续的window",{"_index":652,"t":{"154":{"position":[[422,115]]},"323":{"position":[[422,115]]}}}],["native，是facebook于2015年4月开源的跨平台移动应用开发框架，是facebook早先开源的j",{"_index":635,"t":{"150":{"position":[[724,57]]},"319":{"position":[[724,57]]}}}],["natural）媒体、合成（synthet",{"_index":5991,"t":{"2330":{"position":[[32,33]]}}}],["nat路由器上的全球ip地址，现在常用的nat转换表把运输层的端口号也利用上。这样，就可以使多个拥有本地地址的主机，共用一个nat路由器上的全球ip地址，因而可以同时和互联网上的不同主机进行通信。使用端口号的nat也叫做网络地址与端口号转换napt，而不使用端口号的nat就叫做传统的nat。但在许多文献中并没有这样区分，而是不加区分地都使用nat这个更加简洁的缩写词。下表说明了napt",{"_index":5620,"t":{"2188":{"position":[[713,211]]}}}],["nat路由器具有n个全球ip地址时，专用网内最多可以同时有n台主机接入到互联网。这样就可以使专用网内较多数量的主机，轮流使用nat路由器有限数量的全球ip",{"_index":5618,"t":{"2188":{"position":[[559,86]]}}}],["nat路由器收到从专用网内部的主机a发往互联网上主机b的ip数据报：源ip地址是192.168.0.3，而目的ip地址是213.18.2.4。nat路由器把ip数据报的源ip地址192.168.0.3，转换为新的源ip地址（即nat路由器的全球ip地址）172.38.1.5，然后转发出去。因此，主机b收到这个ip数据报时，以为a的ip地址是172.38.1.5",{"_index":5616,"t":{"2188":{"position":[[130,185]]}}}],["nat路由器：专网和互联网中间的安装了nat软件的桥梁路由器。它实现了本地主机在和外界通信时，使用nat将本地地址全部转换为ip",{"_index":5614,"t":{"2186":{"position":[[53,67]]}}}],["nav",{"_index":3493,"t":{"1399":{"position":[[1299,4]]},"1530":{"position":[[70,4]]}}}],["nav></app",{"_index":3492,"t":{"1399":{"position":[[1289,9]]}}}],["navbar",{"_index":2446,"t":{"1017":{"position":[[1831,7]]},"1037":{"position":[[116,7]]}}}],["navig",{"_index":2917,"t":{"1248":{"position":[[652,10]]},"1928":{"position":[[304,10],[401,10],[501,10],[598,14],[673,10]]}}}],["navigateto",{"_index":4760,"t":{"1928":{"position":[[815,11]]}}}],["navigationbarbackgroundcolor",{"_index":4782,"t":{"1935":{"position":[[85,31],[270,31]]},"1970":{"position":[[321,31]]},"1991":{"position":[[203,31]]}}}],["navigationbartextstyl",{"_index":4784,"t":{"1935":{"position":[[169,25],[311,25]]},"1970":{"position":[[415,25]]},"1991":{"position":[[246,25]]}}}],["navigationbartitletext",{"_index":4783,"t":{"1935":{"position":[[125,25],[238,25]]},"1970":{"position":[[372,25]]},"1989":{"position":[[207,25]]},"1991":{"position":[[281,25]]}}}],["ndf",{"_index":1840,"t":{"695":{"position":[[119,5]]}}}],["near",{"_index":3211,"t":{"1342":{"position":[[509,4],[601,4]]}}}],["near远。near不能为负值，其默认值为0",{"_index":3213,"t":{"1342":{"position":[[609,31]]}}}],["nebula",{"_index":2706,"t":{"1104":{"position":[[141,6]]}}}],["nebulasintens",{"_index":2710,"t":{"1104":{"position":[[214,17]]},"1106":{"position":[[209,17]]},"1108":{"position":[[202,16]]}}}],["nebula带有一个vanilla",{"_index":2697,"t":{"1099":{"position":[[44,38]]}}}],["nebula是一个轻量级（1kb压缩）javascript",{"_index":2696,"t":{"1099":{"position":[[0,43]]}}}],["need",{"_index":2412,"t":{"1017":{"position":[[629,4]]},"1557":{"position":[[307,4]]}}}],["needed:nebula.destroy",{"_index":2711,"t":{"1104":{"position":[[251,23]]}}}],["netid+subid",{"_index":5625,"t":{"2191":{"position":[[58,11]]}}}],["netid、subid全部取1",{"_index":5584,"t":{"2177":{"position":[[142,16]]}}}],["netlifi",{"_index":2476,"t":{"1024":{"position":[[457,7]]},"1118":{"position":[[560,16]]},"1211":{"position":[[163,29],[198,9]]},"1214":{"position":[[0,24]]},"1218":{"position":[[48,12]]},"1220":{"position":[[0,40]]},"2012":{"position":[[14,11]]}}}],["netlify是一家提供静态网站托管的综合平台，支持自动从github等仓库拉取代码并构建成静态网站进行发布（也就是说，你的代码仍旧放在github上，但是可以在netlify发布！），同时也支持自定义域名，自动申请ssl证书等功能，更为重要的是自动启用cdn",{"_index":2809,"t":{"1211":{"position":[[208,144]]}}}],["network",{"_index":5267,"t":{"2106":{"position":[[0,23]]},"2141":{"position":[[70,17],[140,43],[211,15],[281,19]]},"2191":{"position":[[70,8]]},"2452":{"position":[[195,7]]}}}],["networktimeout",{"_index":5005,"t":{"1989":{"position":[[385,17]]}}}],["network，无线局域网）有许多标准协议，如iee",{"_index":5375,"t":{"2131":{"position":[[68,27]]}}}],["new",{"_index":32,"t":{"10":{"position":[[494,3],[547,3],[613,3],[688,3],[766,3],[877,3],[1002,3],[1296,3],[1483,3]]},"12":{"position":[[36,3],[101,3]]},"14":{"position":[[29,3]]},"16":{"position":[[17,3],[138,3]]},"18":{"position":[[21,3]]},"20":{"position":[[24,3]]},"25":{"position":[[363,3],[529,23]]},"31":{"position":[[645,3]]},"37":{"position":[[116,3],[770,3]]},"103":{"position":[[514,3],[925,3]]},"114":{"position":[[770,3]]},"200":{"position":[[514,3],[925,3]]},"211":{"position":[[770,3]]},"287":{"position":[[174,3]]},"365":{"position":[[174,3]]},"388":{"position":[[585,4]]},"441":{"position":[[77,7]]},"443":{"position":[[985,3]]},"457":{"position":[[400,3]]},"594":{"position":[[8,3],[49,3],[81,3]]},"598":{"position":[[121,3]]},"602":{"position":[[49,5]]},"610":{"position":[[57,3]]},"612":{"position":[[69,3]]},"614":{"position":[[31,3],[171,3],[223,3],[246,3],[267,3],[291,3],[320,3],[349,3],[376,3],[404,3]]},"616":{"position":[[187,3],[208,3],[280,3]]},"621":{"position":[[107,3],[155,3],[337,3]]},"810":{"position":[[397,3]]},"845":{"position":[[85,3]]},"853":{"position":[[1088,3]]},"1017":{"position":[[2725,5]]},"1037":{"position":[[985,5]]},"1216":{"position":[[45,3]]},"1299":{"position":[[248,3],[452,3]]},"1301":{"position":[[146,3]]},"1323":{"position":[[682,3]]},"1325":{"position":[[122,3],[191,3],[344,3],[411,3]]},"1334":{"position":[[251,3]]},"1336":{"position":[[73,3],[114,3],[182,3]]},"1338":{"position":[[125,3],[164,3],[301,3],[369,3],[479,3]]},"1340":{"position":[[70,3],[163,3],[219,3],[290,3],[394,3],[949,3],[1016,3],[1086,3],[1190,3]]},"1342":{"position":[[417,3],[709,3]]},"1344":{"position":[[108,3]]},"1346":{"position":[[71,3],[640,3],[774,3],[882,3],[974,3]]},"1368":{"position":[[393,3]]},"1393":{"position":[[90,3],[501,3],[553,3]]},"1395":{"position":[[81,3],[431,3]]},"1397":{"position":[[164,3],[538,3]]},"1399":{"position":[[226,3],[923,3]]},"1402":{"position":[[37,3],[213,3]]},"1404":{"position":[[166,3],[1004,3]]},"1406":{"position":[[154,3]]},"1412":{"position":[[133,3]]},"1416":{"position":[[187,3],[472,3]]},"1420":{"position":[[501,3]]},"1424":{"position":[[213,3],[519,3]]},"1426":{"position":[[119,3]]},"1743":{"position":[[131,3],[153,3],[221,3]]},"1872":{"position":[[1443,3]]},"1898":{"position":[[675,3]]}}}],["newcss",{"_index":2134,"t":{"861":{"position":[[104,6],[224,7]]},"863":{"position":[[104,6],[225,7]]},"867":{"position":[[622,6],[742,7]]}}}],["newfloat",{"_index":1637,"t":{"596":{"position":[[60,9]]}}}],["newhtml",{"_index":2149,"t":{"865":{"position":[[79,7],[272,8]]},"867":{"position":[[1265,7],[1458,8]]}}}],["newj",{"_index":2164,"t":{"867":{"position":[[970,5],[1089,6]]}}}],["newplay",{"_index":2865,"t":{"1229":{"position":[[42,9],[113,9],[176,9]]}}}],["newquest",{"_index":3580,"t":{"1420":{"position":[[681,13]]}}}],["newspe",{"_index":1254,"t":{"437":{"position":[[93,9]]}}}],["newtodotext",{"_index":3512,"t":{"1404":{"position":[[515,12]]},"1445":{"position":[[1108,12]]}}}],["newvalu",{"_index":3526,"t":{"1404":{"position":[[1167,10]]},"1406":{"position":[[448,8]]},"1418":{"position":[[169,10]]}}}],["newvalue.split",{"_index":3561,"t":{"1418":{"position":[[194,16]]}}}],["next",{"_index":466,"t":{"103":{"position":[[535,6],[2292,6]]},"200":{"position":[[535,6],[2292,6]]},"467":{"position":[[64,4]]},"819":{"position":[[35,4],[40,11],[117,9]]},"823":{"position":[[64,10],[75,8]]},"825":{"position":[[242,5],[276,11],[999,10]]},"827":{"position":[[53,5],[87,10]]},"829":{"position":[[48,5],[121,5],[156,10]]},"831":{"position":[[320,5],[427,11]]},"833":{"position":[[200,5],[307,11]]},"837":{"position":[[47,6],[78,6]]},"843":{"position":[[99,9]]},"1223":{"position":[[3427,5]]},"1239":{"position":[[634,5],[1184,5]]},"1241":{"position":[[741,5]]},"1248":{"position":[[1044,5]]},"1257":{"position":[[168,5]]}}}],["next();});app.use(funct",{"_index":2001,"t":{"829":{"position":[[83,26]]}}}],["nextsequ",{"_index":5930,"t":{"2279":{"position":[[69,25]]}}}],["nexttodoid",{"_index":3676,"t":{"1445":{"position":[[1247,11]]}}}],["nginx",{"_index":275,"t":{"55":{"position":[[50,5],[76,5]]}}}],["nick.c_str",{"_index":493,"t":{"103":{"position":[[2018,15]]},"200":{"position":[[2018,15]]}}}],["nicknam",{"_index":2317,"t":{"973":{"position":[[178,14]]}}}],["nickname\">{{userinfo.nickname}}</text",{"_index":5018,"t":{"1995":{"position":[[396,38]]}}}],["nihao",{"_index":5026,"t":{"1997":{"position":[[186,7]]}}}],["nn",{"_index":4129,"t":{"1642":{"position":[[210,5]]}}}],["nnnn",{"_index":4131,"t":{"1642":{"position":[[252,7]]}}}],["noclick.png",{"_index":4854,"t":{"1970":{"position":[[670,12],[835,12]]}}}],["node",{"_index":1934,"t":{"782":{"position":[[248,4]]},"789":{"position":[[478,4]]},"795":{"position":[[284,5]]},"825":{"position":[[692,5],[917,5]]},"869":{"position":[[31,4]]},"885":{"position":[[0,4]]},"908":{"position":[[663,4]]},"930":{"position":[[8,4],[27,4],[60,4],[128,4]]},"932":{"position":[[7,4]]},"934":{"position":[[9,4]]},"946":{"position":[[280,4]]},"950":{"position":[[198,4]]},"953":{"position":[[63,4],[72,4],[322,4]]},"955":{"position":[[120,4]]},"964":{"position":[[135,4]]},"975":{"position":[[20,12]]},"978":{"position":[[9,4]]},"994":{"position":[[0,4]]},"1045":{"position":[[87,4]]},"1139":{"position":[[31,9],[41,4]]},"1310":{"position":[[61,4]]}}}],["node.j",{"_index":341,"t":{"80":{"position":[[6,7]]},"385":{"position":[[19,7]]},"764":{"position":[[31,7]]},"892":{"position":[[46,11]]},"919":{"position":[[3,7]]},"930":{"position":[[99,10]]},"1135":{"position":[[0,7],[13,7],[81,36]]},"1246":{"position":[[18,8]]}}}],["node.js环境，如果没有请看电脑配置npm",{"_index":4668,"t":{"1888":{"position":[[12,86]]}}}],["node_modul",{"_index":2506,"t":{"1049":{"position":[[234,12]]},"1364":{"position":[[8,15]]}}}],["nodej",{"_index":666,"t":{"159":{"position":[[610,16]]},"328":{"position":[[610,16]]},"875":{"position":[[19,6],[44,6]]},"921":{"position":[[0,13],[39,16]]},"925":{"position":[[8,6]]},"927":{"position":[[8,11]]},"966":{"position":[[259,31]]},"999":{"position":[[39,6]]},"1200":{"position":[[8,36]]},"1942":{"position":[[254,6]]},"2016":{"position":[[23,6]]},"2018":{"position":[[344,6]]}}}],["nodejs自然而然就部署了npm",{"_index":2748,"t":{"1135":{"position":[[280,26]]}}}],["nodejs，请参考安装node.js和npm",{"_index":2490,"t":{"1045":{"position":[[34,37]]}}}],["nodemon",{"_index":1957,"t":{"795":{"position":[[0,37],[86,7],[113,7],[130,9],[191,9],[219,12],[265,9]]},"825":{"position":[[539,9],[627,12],[673,9],[764,9],[852,12],[898,9]]}}}],["node官网下载lt",{"_index":2749,"t":{"1137":{"position":[[0,46]]}}}],["nois",{"_index":6302,"t":{"2516":{"position":[[120,5],[283,5]]}}}],["none",{"_index":170,"t":{"33":{"position":[[607,5]]},"853":{"position":[[676,5]]},"1321":{"position":[[155,6]]},"1587":{"position":[[617,6]]},"1592":{"position":[[452,5]]}}}],["none;}.kbd",{"_index":2916,"t":{"1248":{"position":[[641,10]]}}}],["not</strong",{"_index":4029,"t":{"1613":{"position":[[258,12]]}}}],["notation(javascript",{"_index":5000,"t":{"1985":{"position":[[24,26]]}}}],["note",{"_index":1008,"t":{"293":{"position":[[95,5]]},"376":{"position":[[44,5]]},"1699":{"position":[[285,4]]},"1922":{"position":[[362,4]]},"2373":{"position":[[0,4]]}}}],["noth",{"_index":4254,"t":{"1705":{"position":[[22,21]]}}}],["now",{"_index":812,"t":{"251":{"position":[[122,3],[241,4]]},"255":{"position":[[124,9],[1563,3]]},"363":{"position":[[1139,9]]},"1414":{"position":[[408,4]]},"1468":{"position":[[68,3],[101,3]]}}}],["now.hour",{"_index":883,"t":{"255":{"position":[[1631,8]]}}}],["now.hourminut",{"_index":826,"t":{"255":{"position":[[180,14]]},"363":{"position":[[1195,14]]}}}],["now.minut",{"_index":827,"t":{"255":{"position":[[197,10],[1649,10]]},"363":{"position":[[1212,10]]}}}],["now.second",{"_index":829,"t":{"255":{"position":[[234,11],[1674,10]]},"363":{"position":[[1249,11]]}}}],["now.year",{"_index":882,"t":{"255":{"position":[[1615,8]]}}}],["nowclass",{"_index":919,"t":{"259":{"position":[[52,8],[120,8]]}}}],["nowtim",{"_index":835,"t":{"255":{"position":[[378,7],[450,7],[555,7],[1772,7],[1844,7],[1919,7]]},"363":{"position":[[1392,7],[1464,7],[1569,7]]}}}],["nowwd",{"_index":920,"t":{"259":{"position":[[86,5]]}}}],["np(1",{"_index":5307,"t":{"2119":{"position":[[663,4]]}}}],["npm",{"_index":10,"t":{"6":{"position":[[239,3],[247,3]]},"25":{"position":[[49,7],[229,3]]},"82":{"position":[[13,3]]},"84":{"position":[[0,3]]},"764":{"position":[[79,3]]},"770":{"position":[[20,3]]},"795":{"position":[[71,3]]},"1047":{"position":[[140,3],[224,11]]},"1051":{"position":[[49,3]]},"1056":{"position":[[0,3]]},"1074":{"position":[[211,3],[227,3]]},"1076":{"position":[[55,3]]},"1084":{"position":[[386,3],[400,6],[407,3],[605,3],[620,3]]},"1101":{"position":[[0,3]]},"1135":{"position":[[185,28],[214,32],[247,32]]},"1139":{"position":[[63,6],[70,3]]},"1200":{"position":[[113,3]]},"1202":{"position":[[39,3]]},"1248":{"position":[[1924,3]]},"1349":{"position":[[0,10],[11,3]]},"1353":{"position":[[0,3],[181,3]]},"1362":{"position":[[0,3]]},"1449":{"position":[[0,3]]},"1456":{"position":[[0,3]]},"1458":{"position":[[0,3]]},"1460":{"position":[[0,3]]},"1888":{"position":[[0,7],[112,10],[128,3],[132,5]]},"1892":{"position":[[73,3]]},"1894":{"position":[[0,6],[12,6]]},"1942":{"position":[[275,3]]}}}],["npm安装时可能也需要打开ladder",{"_index":2799,"t":{"1200":{"position":[[133,23]]}}}],["npm是随同nodejs一起安装的包管理工具，能解决nodej",{"_index":2747,"t":{"1135":{"position":[[118,66]]}}}],["npx",{"_index":346,"t":{"82":{"position":[[89,3]]},"1248":{"position":[[0,3]]}}}],["ns+nr<=2^k，ns表示发送方的窗口大小，nr表示接收方的窗口大小，k",{"_index":5949,"t":{"2281":{"position":[[569,46]]}}}],["nt",{"_index":699,"t":{"179":{"position":[[388,2]]},"221":{"position":[[388,2]]},"1165":{"position":[[388,2]]}}}],["ntsc",{"_index":6278,"t":{"2509":{"position":[[511,4]]}}}],["null",{"_index":1396,"t":{"490":{"position":[[70,22]]},"565":{"position":[[861,4]]},"939":{"position":[[531,4],[565,4]]},"946":{"position":[[118,4]]},"1223":{"position":[[672,19],[807,5],[838,5],[844,6],[1144,9]]},"1241":{"position":[[396,6],[444,7]]},"1263":{"position":[[1187,5],[1708,5]]},"1271":{"position":[[509,5]]},"1283":{"position":[[110,6]]},"1321":{"position":[[28,5]]},"1404":{"position":[[592,5]]},"1495":{"position":[[23,10],[34,4]]},"1632":{"position":[[157,4],[178,4],[203,5]]},"1634":{"position":[[12,4],[61,4],[94,4],[138,5]]},"1636":{"position":[[343,4]]},"1705":{"position":[[13,6],[62,6],[84,4],[121,5],[137,4],[161,5],[173,14]]},"1707":{"position":[[12,4],[66,4]]},"1974":{"position":[[267,4]]},"1987":{"position":[[252,4]]}}}],["null},comput",{"_index":3424,"t":{"1373":{"position":[[757,15]]}}}],["null、undefin",{"_index":3735,"t":{"1485":{"position":[[232,14]]}}}],["null（nul",{"_index":2828,"t":{"1223":{"position":[[1359,9],[1465,9]]}}}],["number",{"_index":1225,"t":{"412":{"position":[[205,7],[249,7]]},"414":{"position":[[142,7],[186,7]]},"416":{"position":[[193,7],[237,7]]},"486":{"position":[[17,6]]},"488":{"position":[[18,6]]},"490":{"position":[[16,6],[58,6]]},"494":{"position":[[24,6]]},"1108":{"position":[[50,6],[138,6],[170,6],[224,6],[250,6],[295,6],[348,6],[404,6]]},"1437":{"position":[[125,8],[228,8],[246,6],[461,9],[504,8],[522,6]]},"1487":{"position":[[88,6]]},"1636":{"position":[[301,6]]},"1638":{"position":[[0,6]]},"1699":{"position":[[276,8]]},"1720":{"position":[[63,8],[113,7]]},"1722":{"position":[[273,7],[304,8]]},"1797":{"position":[[50,7],[322,7]]},"1801":{"position":[[83,7],[292,7]]},"1803":{"position":[[380,7],[1089,7]]},"1807":{"position":[[49,7],[257,7]]},"1809":{"position":[[49,7]]},"1811":{"position":[[59,7]]},"1813":{"position":[[62,7]]},"2232":{"position":[[732,7]]}}}],["number\"typeof",{"_index":4250,"t":{"1699":{"position":[[171,14],[196,14],[222,14],[247,14]]}}}],["number('123",{"_index":4110,"t":{"1640":{"position":[[111,14]]}}}],["number()、parseint",{"_index":4107,"t":{"1640":{"position":[[0,35]]}}}],["number.isnan",{"_index":4102,"t":{"1638":{"position":[[977,14]]}}}],["number.max_valu",{"_index":4094,"t":{"1638":{"position":[[545,17],[664,16]]},"1739":{"position":[[42,17]]}}}],["number.min_valu",{"_index":4311,"t":{"1739":{"position":[[102,17]]}}}],["numbers.every(myfunction);funct",{"_index":4438,"t":{"1807":{"position":[[94,34],[302,34]]}}}],["numbers.filter(funct",{"_index":3637,"t":{"1437":{"position":[[480,23]]}}}],["numbers.filter(myfunction);funct",{"_index":4421,"t":{"1801":{"position":[[125,35],[334,35]]}}}],["numbers.find(myfunction);funct",{"_index":4443,"t":{"1811":{"position":[[100,33]]}}}],["numbers.findindex(myfunction);funct",{"_index":4445,"t":{"1813":{"position":[[103,38]]}}}],["numbers.reduce(myfunct",{"_index":4433,"t":{"1803":{"position":[[1128,26]]}}}],["numbers.reduce(myfunction);document.getelementbyid(\"demo\").innerhtml",{"_index":4427,"t":{"1803":{"position":[[419,68]]}}}],["numbers.some(myfunction);funct",{"_index":4440,"t":{"1809":{"position":[[95,33]]}}}],["numbers1",{"_index":4410,"t":{"1799":{"position":[[91,8],[396,8]]},"1803":{"position":[[122,8],[692,8],[845,8]]},"1805":{"position":[[132,8],[360,8]]}}}],["numbers1.map(myfunction);document.getelementbyid(\"demo\").innerhtml",{"_index":4415,"t":{"1799":{"position":[[441,66]]}}}],["numbers1.map(myfunction);funct",{"_index":4413,"t":{"1799":{"position":[[136,33]]}}}],["numbers1.reduce(myfunct",{"_index":4431,"t":{"1803":{"position":[[885,27]]}}}],["numbers1.reduce(myfunction);funct",{"_index":4424,"t":{"1803":{"position":[[162,36],[732,36]]}}}],["numbers1.reduceright(myfunction);funct",{"_index":4436,"t":{"1805":{"position":[[172,41],[400,41]]}}}],["numbers2",{"_index":4412,"t":{"1799":{"position":[[125,8],[430,8]]}}}],["numbers2;funct",{"_index":4416,"t":{"1799":{"position":[[510,17]]}}}],["numbersubclass",{"_index":1389,"t":{"488":{"position":[[125,14]]}}}],["number）进行标识。例如，web服务器使用端口号80，邮件服务器（smtp）使用端口号25",{"_index":5095,"t":{"2033":{"position":[[290,48]]}}}],["number），包发出后，客户端进入syn_send",{"_index":5803,"t":{"2232":{"position":[[197,45]]}}}],["n帧为已完成。如果n为最小的没被接收的帧，那么在接收到ackn",{"_index":5941,"t":{"2281":{"position":[[175,42]]}}}],["n帧（gbn）协议，发送方已经发送了编号为0～7的帧。当计时器超时时，若发送方只收到0、2、3",{"_index":5936,"t":{"2279":{"position":[[602,85]]}}}],["n数据包，重启n",{"_index":5939,"t":{"2281":{"position":[[148,15]]}}}],["n的ack",{"_index":5940,"t":{"2281":{"position":[[164,10]]}}}],["n：最多有n",{"_index":5924,"t":{"2277":{"position":[[15,18]]}}}],["o",{"_index":1395,"t":{"490":{"position":[[41,1]]},"621":{"position":[[300,4],[305,4]]},"1223":{"position":[[802,4],[828,4],[833,4],[1136,4],[1352,4],[1458,4]]},"1239":{"position":[[31,4],[439,4],[532,3],[680,5],[974,4],[1230,5]]},"1241":{"position":[[549,15],[787,5],[1036,4]]},"1979":{"position":[[349,2],[894,2]]}}}],["obj",{"_index":204,"t":{"37":{"position":[[506,3],[1009,3]]},"551":{"position":[[94,4]]},"1353":{"position":[[200,3],[483,3]]},"1404":{"position":[[665,3],[730,5]]}}}],["obj.result",{"_index":208,"t":{"37":{"position":[[614,11],[1090,11]]}}}],["object",{"_index":1747,"t":{"618":{"position":[[230,6]]},"1426":{"position":[[45,7],[87,8],[141,8],[158,7],[321,8],[482,8]]},"1632":{"position":[[166,11],[212,6]]},"1636":{"position":[[331,6]]},"1646":{"position":[[0,6],[81,6],[129,6]]},"1699":{"position":[[306,12]]},"1749":{"position":[[47,9]]},"1825":{"position":[[85,6]]},"1872":{"position":[[2208,8],[2265,6]]},"1985":{"position":[[17,6]]}}}],["object.assign",{"_index":2866,"t":{"1229":{"position":[[54,17]]}}}],["object.freez",{"_index":3515,"t":{"1404":{"position":[[609,25],[742,15]]}}}],["object.key",{"_index":3618,"t":{"1426":{"position":[[619,13]]}}}],["objectname.methodnam",{"_index":4192,"t":{"1661":{"position":[[17,23]]}}}],["objectname.propertynam",{"_index":4179,"t":{"1659":{"position":[[14,23]]}}}],["objectname[\"propertynam",{"_index":4180,"t":{"1659":{"position":[[41,26]]}}}],["objectnul",{"_index":4256,"t":{"1707":{"position":[[74,10]]}}}],["objload",{"_index":3295,"t":{"1353":{"position":[[448,10]]}}}],["occur",{"_index":934,"t":{"273":{"position":[[220,8]]}}}],["oct",{"_index":5154,"t":{"2055":{"position":[[364,3],[930,3]]}}}],["odd",{"_index":3864,"t":{"1532":{"position":[[101,3]]}}}],["offer",{"_index":5681,"t":{"2197":{"position":[[200,8]]}}}],["offer报文。dhcp",{"_index":5694,"t":{"2197":{"position":[[449,12]]}}}],["offer报文中“your(cli",{"_index":5682,"t":{"2197":{"position":[[214,21]]}}}],["offer报文，一般的原则是dhcp",{"_index":5692,"t":{"2197":{"position":[[412,18]]}}}],["oid",{"_index":259,"t":{"49":{"position":[[854,8]]}}}],["ok",{"_index":238,"t":{"49":{"position":[[70,4]]},"1487":{"position":[[104,2],[346,4]]},"2049":{"position":[[34,2]]},"2059":{"position":[[428,3]]},"2462":{"position":[[265,55]]}}}],["ok.txt",{"_index":2258,"t":{"950":{"position":[[33,6],[86,6],[801,8],[1070,6]]}}}],["okdat",{"_index":5153,"t":{"2055":{"position":[[349,7]]}}}],["ok！选择add",{"_index":2558,"t":{"1088":{"position":[[261,28]]}}}],["ol",{"_index":2925,"t":{"1248":{"position":[[1620,7],[1633,8]]},"1259":{"position":[[205,7],[218,8]]},"1395":{"position":[[354,4]]},"1399":{"position":[[257,4],[610,4]]},"1605":{"position":[[89,24],[133,4]]},"1607":{"position":[[0,4]]},"1618":{"position":[[393,5]]}}}],["ol></div",{"_index":3473,"t":{"1395":{"position":[[408,11]]},"1399":{"position":[[800,11]]}}}],["oldquest",{"_index":3581,"t":{"1420":{"position":[[695,12]]}}}],["oldvalu",{"_index":3527,"t":{"1404":{"position":[[1178,9]]}}}],["olleh'vm.messag",{"_index":3547,"t":{"1412":{"position":[[440,17]]}}}],["on",{"_index":673,"t":{"163":{"position":[[16,3]]}}}],["on:[eventnam",{"_index":3747,"t":{"1493":{"position":[[398,14]]}}}],["on:[eventname]=\"dosometh",{"_index":3745,"t":{"1493":{"position":[[324,29]]}}}],["on:click=\"$emit(\\'remove\\')\">remove</button",{"_index":3669,"t":{"1445":{"position":[[990,45]]}}}],["on:click=\"count++\">y",{"_index":523,"t":{"114":{"position":[[319,22]]},"211":{"position":[[319,22]]}}}],["on:click=\"dosomething\">...</a",{"_index":3740,"t":{"1491":{"position":[[191,30]]},"1505":{"position":[[18,32]]}}}],["on:click=\"foo",{"_index":3518,"t":{"1404":{"position":[[847,13]]}}}],["on:click=\"reversemessage\">反转消息</button></div",{"_index":3475,"t":{"1397":{"position":[[107,45]]}}}],["on:focu",{"_index":3748,"t":{"1493":{"position":[[420,9]]}}}],["on:remove=\"todos.splice(index",{"_index":3667,"t":{"1445":{"position":[[732,30]]}}}],["on:submit.prevent=\"addnewtodo",{"_index":3653,"t":{"1445":{"position":[[449,31]]}}}],["on:submit.prevent=\"onsubmit\">...</form",{"_index":3754,"t":{"1499":{"position":[[117,39]]}}}],["on[ev",{"_index":2841,"t":{"1223":{"position":[[2924,23]]}}}],["onbrokenlink",{"_index":2403,"t":{"1017":{"position":[[405,14]]}}}],["onbrokenmarkdownlink",{"_index":2404,"t":{"1017":{"position":[[445,22]]}}}],["onc",{"_index":638,"t":{"150":{"position":[[869,5]]},"303":{"position":[[274,4]]},"319":{"position":[[869,5]]},"1481":{"position":[[104,4],[145,13]]}}}],["onchang",{"_index":4448,"t":{"1818":{"position":[[6,8]]},"1900":{"position":[[262,10]]}}}],["onchange(ev",{"_index":4949,"t":{"1979":{"position":[[2956,15]]},"1981":{"position":[[1706,15]]}}}],["onchange2(ev",{"_index":4951,"t":{"1979":{"position":[[3048,16]]}}}],["onchange3(ev",{"_index":4952,"t":{"1979":{"position":[[3116,16]]}}}],["onchange4(ev",{"_index":4953,"t":{"1979":{"position":[[3185,16]]}}}],["onclick",{"_index":131,"t":{"31":{"position":[[294,8]]},"1223":{"position":[[2188,11],[2288,7],[2341,7],[2423,7],[2516,11],[2772,7],[2840,7],[3357,11]]},"1237":{"position":[[387,11]]},"1239":{"position":[[1114,11]]},"1263":{"position":[[278,7],[397,11],[434,11],[470,7],[1244,11],[1435,13],[1459,11],[1527,7],[1765,11]]},"1295":{"position":[[101,7],[113,8]]},"1301":{"position":[[216,7]]},"1816":{"position":[[246,15]]},"1818":{"position":[[27,7]]}}}],["onclick=\"document.write(5",{"_index":4228,"t":{"1675":{"position":[[275,25]]}}}],["onclick=\"handleclick",{"_index":3043,"t":{"1295":{"position":[[191,22]]}}}],["onclick=\"myfunction1()\">以字母顺序排序</button><button",{"_index":4386,"t":{"1790":{"position":[[263,47]]}}}],["onclick=\"myfunction2()\">以数字顺序排序</button><p",{"_index":4387,"t":{"1790":{"position":[[311,42]]}}}],["onclick=\"window.alert(5",{"_index":4231,"t":{"1677":{"position":[[80,23]]}}}],["onclick='document.getelementbyid(\"demo\").innerhtml=date()'>现在的时间是？</button",{"_index":4447,"t":{"1816":{"position":[[296,75]]}}}],["onclick={()=>this.handleclick(i",{"_index":2829,"t":{"1223":{"position":[[1644,33]]}}}],["onclick={alert('click",{"_index":2953,"t":{"1263":{"position":[[533,54]]}}}],["onclick={funct",{"_index":2950,"t":{"1263":{"position":[[175,17]]}}}],["onclick={handleclick",{"_index":3042,"t":{"1295":{"position":[[165,21]]}}}],["onclick={props.onclick",{"_index":2870,"t":{"1237":{"position":[[272,24],[431,35]]}}}],["onclick={this.handleclick",{"_index":3036,"t":{"1291":{"position":[[215,27]]},"1293":{"position":[[199,33],[233,29]]}}}],["onclick={this.handleclick}>click</button",{"_index":3059,"t":{"1299":{"position":[[512,41]]}}}],["onclick。onclick",{"_index":2830,"t":{"1223":{"position":[[1831,15]]}}}],["onclos",{"_index":4692,"t":{"1898":{"position":[[603,9]]}}}],["onconfirm(ev",{"_index":4697,"t":{"1898":{"position":[[745,16]]}}}],["oncontextmenu=\"return",{"_index":3312,"t":{"1366":{"position":[[109,21]]}}}],["ondestroy",{"_index":1061,"t":{"305":{"position":[[298,9],[938,11]]}}}],["ondis",{"_index":1060,"t":{"305":{"position":[[266,9],[891,11]]}}}],["ondisplay",{"_index":4691,"t":{"1898":{"position":[[556,11]]}}}],["onen",{"_index":1067,"t":{"305":{"position":[[608,10],[667,8]]}}}],["onerror",{"_index":4729,"t":{"1922":{"position":[[244,7]]}}}],["onhid",{"_index":4728,"t":{"1922":{"position":[[212,6]]},"1924":{"position":[[213,7]]},"1928":{"position":[[340,10]]}}}],["onkeydown",{"_index":4451,"t":{"1818":{"position":[[106,9]]}}}],["onlaunch",{"_index":4727,"t":{"1922":{"position":[[131,8]]},"1974":{"position":[[24,10]]}}}],["onload",{"_index":4452,"t":{"1818":{"position":[[125,6]]},"1924":{"position":[[93,7]]},"1928":{"position":[[254,11],[351,11],[450,11],[720,11],[951,28]]},"1966":{"position":[[37,7]]},"1981":{"position":[[2189,7]]}}}],["onmousedblclick(ev",{"_index":3206,"t":{"1342":{"position":[[286,33]]}}}],["onmouseout",{"_index":4450,"t":{"1818":{"position":[[79,10]]}}}],["onmouseov",{"_index":4449,"t":{"1818":{"position":[[49,11]]}}}],["onpagescrol",{"_index":4742,"t":{"1924":{"position":[[430,13]]}}}],["onpulldownrefresh",{"_index":4739,"t":{"1924":{"position":[[290,18]]}}}],["onreachbottom",{"_index":4740,"t":{"1924":{"position":[[338,14]]}}}],["onreadi",{"_index":4737,"t":{"1924":{"position":[[173,8]]}}}],["onres",{"_index":4743,"t":{"1924":{"position":[[471,9]]}}}],["onshareappmessag",{"_index":4741,"t":{"1924":{"position":[[380,18]]}}}],["onshow",{"_index":4655,"t":{"1878":{"position":[[124,7],[432,6]]},"1922":{"position":[[173,6]]},"1924":{"position":[[135,7]]},"1928":{"position":[[266,6],[363,6],[462,6],[562,10],[732,6]]}}}],["onsubmit={this.handlesubmit",{"_index":3047,"t":{"1295":{"position":[[487,29]]}}}],["ontabitemtap(item",{"_index":4744,"t":{"1924":{"position":[[510,18]]}}}],["onunload",{"_index":4738,"t":{"1924":{"position":[[253,9]]},"1928":{"position":[[437,12],[549,12],[707,12]]}}}],["op",{"_index":464,"t":{"103":{"position":[[509,2],[525,2],[1908,4],[1932,2],[2015,2],[2072,2],[2140,2],[2209,2],[2284,2],[2289,2]]},"200":{"position":[[509,2],[525,2],[1908,4],[1932,2],[2015,2],[2072,2],[2140,2],[2209,2],[2284,2],[2289,2]]}}}],["opac",{"_index":3779,"t":{"1507":{"position":[[1071,9],[1090,9],[1135,9],[1154,9],[1196,8],[1716,8],[2262,8],[2829,8],[3253,8]]}}}],["opacity:0",{"_index":3786,"t":{"1507":{"position":[[1466,10],[1999,10],[2557,10],[3042,10],[3467,10]]}}}],["opacity:1",{"_index":3783,"t":{"1507":{"position":[[1343,10],[1612,10],[1833,10],[2115,10],[2389,10],[2683,10],[2920,10],[3132,10],[3346,10],[3559,10]]}}}],["opel",{"_index":4319,"t":{"1745":{"position":[[97,7]]}}}],["open",{"_index":2246,"t":{"941":{"position":[[266,4]]},"946":{"position":[[345,4],[404,7]]},"1074":{"position":[[333,4]]},"1312":{"position":[[836,4]]},"1537":{"position":[[12,12]]},"1928":{"position":[[315,4],[412,4],[512,4],[613,4],[684,4]]},"2220":{"position":[[7,7]]}}}],["open('result.jpg",{"_index":313,"t":{"66":{"position":[[801,18]]},"171":{"position":[[801,18]]}}}],["open('test.png",{"_index":295,"t":{"66":{"position":[[385,16]]},"171":{"position":[[385,16]]}}}],["open(f'./img/{file_nam",{"_index":722,"t":{"179":{"position":[[959,26]]},"221":{"position":[[959,26]]},"1165":{"position":[[959,26]]}}}],["opened=\"tru",{"_index":3350,"t":{"1366":{"position":[[1091,13],[1185,13]]}}}],["openid",{"_index":2772,"t":{"1152":{"position":[[143,17]]},"1872":{"position":[[454,9],[474,6],[502,6],[609,6],[902,7],[1104,7],[1475,7],[1498,6],[1545,6],[1839,6],[1895,6],[1908,6],[1962,6],[1999,7],[2030,6],[2313,6],[2705,6]]},"1876":{"position":[[982,6]]},"1878":{"position":[[102,6]]},"1974":{"position":[[207,7]]}}}],["openid作为唯一的标识。然后将拿到的信息与已存在的数据库比对，如果这个用户注册过，就提示注册过了，如果没有，就向数据库testbas",{"_index":4577,"t":{"1872":{"position":[[6,115]]}}}],["openid就是你的id号，女朋友发的openid就是她的id",{"_index":2782,"t":{"1158":{"position":[[149,38]]}}}],["openid拷贝到userlist数据集合里刚刚创建的的_openid",{"_index":2783,"t":{"1158":{"position":[[188,42]]}}}],["open），用于发起tcp",{"_index":5800,"t":{"2232":{"position":[[101,16]]}}}],["open），用于监听来自客户端的请求。客户端的端口可以主动打开（act",{"_index":5799,"t":{"2232":{"position":[[62,38]]}}}],["optic",{"_index":6316,"t":{"2523":{"position":[[0,28]]}}}],["option",{"_index":363,"t":{"90":{"position":[[143,10]]},"124":{"position":[[40,9],[99,8]]},"937":{"position":[[71,7]]},"944":{"position":[[29,9],[100,7]]},"1058":{"position":[[203,8]]},"1088":{"position":[[105,10]]},"1922":{"position":[[140,9],[180,9]]},"1966":{"position":[[54,9]]},"1981":{"position":[[2206,9]]}}}],["options],callback",{"_index":2233,"t":{"937":{"position":[[20,19]]}}}],["orang",{"_index":615,"t":{"145":{"position":[[39,6]]},"163":{"position":[[40,6]]},"165":{"position":[[38,6]]},"175":{"position":[[38,6]]},"194":{"position":[[38,6]]},"204":{"position":[[38,6]]},"359":{"position":[[149,9],[442,9],[625,9]]},"1754":{"position":[[51,9]]},"1756":{"position":[[20,9]]},"1758":{"position":[[20,9]]},"1760":{"position":[[70,9],[265,9]]},"1762":{"position":[[52,9],[179,9]]},"1765":{"position":[[46,9],[164,9]]},"1767":{"position":[[54,9],[166,9]]},"1769":{"position":[[88,9]]},"1771":{"position":[[71,9]]},"1773":{"position":[[24,9]]},"1775":{"position":[[82,9]]},"1777":{"position":[[47,9],[239,9]]},"1781":{"position":[[35,19],[79,9],[255,9]]},"1784":{"position":[[69,9]]},"1786":{"position":[[64,9]]}}}],["orange,lemon,apple,mango",{"_index":4379,"t":{"1781":{"position":[[150,24]]}}}],["orbit",{"_index":3284,"t":{"1353":{"position":[[18,5],[122,5],[537,5]]}}}],["orbitcontrol",{"_index":105,"t":{"25":{"position":[[247,13]]},"1353":{"position":[[91,13],[506,13]]}}}],["orbitcontrols(this.camera",{"_index":3249,"t":{"1346":{"position":[[75,26]]}}}],["orbitcontrols.js<script",{"_index":103,"t":{"25":{"position":[[165,25]]}}}],["orbitcontrols.js控件提供了一个构造函数three.orbitcontrol",{"_index":110,"t":{"25":{"position":[[480,48]]}}}],["orbitcontrols安装orbitcontrols.js，也可以直接下载orbitcontrols.j",{"_index":101,"t":{"25":{"position":[[71,55]]}}}],["order",{"_index":4007,"t":{"1605":{"position":[[0,37]]}}}],["org/us",{"_index":2415,"t":{"1017":{"position":[[721,8]]}}}],["organizationnam",{"_index":2413,"t":{"1017":{"position":[[668,17]]},"1033":{"position":[[57,17]]}}}],["origin",{"_index":3209,"t":{"1342":{"position":[[470,6],[540,6]]},"1515":{"position":[[1644,7]]},"1520":{"position":[[10,6]]},"1522":{"position":[[250,7]]}}}],["os.environ[\"app_id",{"_index":1113,"t":{"363":{"position":[[240,21]]}}}],["os.environ[\"app_secret\"]semest",{"_index":1115,"t":{"363":{"position":[[291,32]]}}}],["os.environ[\"password",{"_index":1111,"t":{"363":{"position":[[194,22]]}}}],["os.environ[\"student_id",{"_index":1110,"t":{"363":{"position":[[159,24]]}}}],["osi(open",{"_index":5480,"t":{"2144":{"position":[[13,8]]}}}],["ospf",{"_index":5782,"t":{"2220":{"position":[[0,6],[86,18],[161,9],[171,25],[241,62]]}}}],["ospf通告在整个as范围进行泛红：ospf报文直接封装到ip",{"_index":5785,"t":{"2220":{"position":[[105,37]]}}}],["oss",{"_index":681,"t":{"177":{"position":[[324,114]]},"182":{"position":[[0,21]]},"217":{"position":[[328,114]]},"219":{"position":[[324,114]]},"224":{"position":[[0,21]]},"1163":{"position":[[324,114]]},"1168":{"position":[[0,21]]},"2018":{"position":[[112,3]]}}}],["out",{"_index":1565,"t":{"554":{"position":[[89,3]]},"1445":{"position":[[1192,3]]}}}],["outlin",{"_index":2915,"t":{"1248":{"position":[[632,8]]}}}],["outlook、foxmail",{"_index":5182,"t":{"2057":{"position":[[165,16]]}}}],["outtextxy(179",{"_index":487,"t":{"103":{"position":[[1665,14],[2821,14]]},"200":{"position":[[1665,14],[2821,14]]}}}],["outtextxy(179,het,c",{"_index":494,"t":{"103":{"position":[[2034,21]]},"200":{"position":[[2034,21]]}}}],["outtextxy(20",{"_index":418,"t":{"101":{"position":[[547,13],[696,13],[875,13]]},"103":{"position":[[982,13],[1135,13],[2494,13],[2647,13],[4077,13],[4267,13]]},"198":{"position":[[547,13],[696,13],[875,13]]},"200":{"position":[[982,13],[1135,13],[2494,13],[2647,13],[4077,13],[4267,13]]}}}],["outtextxy(25",{"_index":485,"t":{"103":{"position":[[1613,13],[1951,13],[2740,13]]},"200":{"position":[[1613,13],[1951,13],[2740,13]]}}}],["outtextxy(287",{"_index":488,"t":{"103":{"position":[[1718,14],[2100,14],[2903,14]]},"200":{"position":[[1718,14],[2100,14],[2903,14]]}}}],["outtextxy(387",{"_index":489,"t":{"103":{"position":[[1770,14],[2169,14],[2984,14]]},"200":{"position":[[1770,14],[2169,14],[2984,14]]}}}],["outtextxy(491",{"_index":490,"t":{"103":{"position":[[1822,14],[2235,14],[3065,14]]},"200":{"position":[[1822,14],[2235,14],[3065,14]]}}}],["outtextxy(930",{"_index":481,"t":{"103":{"position":[[1313,14],[1518,14]]},"200":{"position":[[1313,14],[1518,14]]}}}],["over18",{"_index":4420,"t":{"1801":{"position":[[116,6],[325,6]]}}}],["overflow",{"_index":24,"t":{"10":{"position":[[148,9]]},"1017":{"position":[[2325,10]]},"1037":{"position":[[606,10]]},"1366":{"position":[[281,9]]}}}],["overridingstyles]\"></div",{"_index":3454,"t":{"1382":{"position":[[70,25]]}}}],["p",{"_index":2586,"t":{"1092":{"position":[[1451,2],[1920,2]]},"1377":{"position":[[182,3],[291,2],[447,2]]},"1395":{"position":[[37,2]]},"1397":{"position":[[76,5],[90,6],[474,5],[488,6]]},"1404":{"position":[[795,5],[805,6]]},"1412":{"position":[[52,7]]},"1414":{"position":[[76,7]]},"1420":{"position":[[139,3],[193,4],[198,5]]},"1489":{"position":[[151,2],[212,3]]},"1537":{"position":[[42,30]]},"1570":{"position":[[168,10]]},"1585":{"position":[[38,11]]},"1587":{"position":[[176,11]]},"1590":{"position":[[101,11]]},"1592":{"position":[[131,3]]},"1596":{"position":[[17,3]]},"1618":{"position":[[44,4],[86,20],[115,4],[271,4]]},"1960":{"position":[[82,2]]},"1995":{"position":[[616,2]]},"2119":{"position":[[491,28]]},"2439":{"position":[[116,3]]}}}],["p)^(n",{"_index":5308,"t":{"2119":{"position":[[668,5]]}}}],["p/b)×(k",{"_index":5257,"t":{"2079":{"position":[[966,8]]}}}],["p1",{"_index":4260,"t":{"1709":{"position":[[122,2],[140,2]]}}}],["p1=new",{"_index":1301,"t":{"445":{"position":[[650,6]]}}}],["p2",{"_index":4259,"t":{"1709":{"position":[[109,3],[127,3],[145,2]]}}}],["p2=new",{"_index":1302,"t":{"445":{"position":[[685,6]]}}}],["p2p文件共享中，当对等方a请求对等方b送一个特定的文件时，在这个特定的通信会话中对等方a是客户，而对等方b是服务器。(p2p",{"_index":5093,"t":{"2033":{"position":[[115,83]]}}}],["p=new",{"_index":1309,"t":{"449":{"position":[[420,5]]},"451":{"position":[[1050,5]]},"453":{"position":[[441,5]]}}}],["p=null;system.gc",{"_index":1310,"t":{"449":{"position":[[434,19]]}}}],["p></div",{"_index":3543,"t":{"1412":{"position":[[110,13]]},"1420":{"position":[[211,12]]}}}],["p></ifram",{"_index":3987,"t":{"1592":{"position":[[255,13]]}}}],["p><p",{"_index":4510,"t":{"1842":{"position":[[1639,9]]}}}],["p><p>use",{"_index":3728,"t":{"1483":{"position":[[88,14]]}}}],["p><script>let",{"_index":4512,"t":{"1842":{"position":[[1701,18]]}}}],["p>click",{"_index":3060,"t":{"1299":{"position":[[554,11]]}}}],["p>comput",{"_index":3540,"t":{"1412":{"position":[[60,11]]}}}],["p>hello",{"_index":4796,"t":{"1958":{"position":[[55,8]]}}}],["p>i",{"_index":4020,"t":{"1611":{"position":[[0,4]]}}}],["p>origin",{"_index":3539,"t":{"1412":{"position":[[19,11]]}}}],["p>paragraph",{"_index":3688,"t":{"1466":{"position":[[149,12],[168,12]]}}}],["p>revers",{"_index":3553,"t":{"1414":{"position":[[33,11]]}}}],["p>thi",{"_index":4024,"t":{"1613":{"position":[[170,7]]}}}],["p>time",{"_index":3062,"t":{"1299":{"position":[[596,8]]}}}],["p>use",{"_index":3726,"t":{"1483":{"position":[[57,8]]}}}],["p>{description}</p",{"_index":2626,"t":{"1092":{"position":[[3722,20]]}}}],["p>我创建了一个指向<a",{"_index":3928,"t":{"1568":{"position":[[0,13]]},"1570":{"position":[[66,13]]}}}],["p>我是一个段落，千真万确。</p",{"_index":3991,"t":{"1596":{"position":[[39,19]]}}}],["p>这是我的页面</p",{"_index":3883,"t":{"1547":{"position":[[131,13]]},"1549":{"position":[[110,13]]}}}],["p[b",{"_index":461,"t":{"103":{"position":[[469,5],[530,4]]},"200":{"position":[[469,5],[530,4]]}}}],["packag",{"_index":1155,"t":{"388":{"position":[[129,7],[416,7]]},"538":{"position":[[15,7]]},"565":{"position":[[457,7]]},"616":{"position":[[60,7]]}}}],["package.json",{"_index":2509,"t":{"1049":{"position":[[450,12]]},"1364":{"position":[[66,14]]},"1892":{"position":[[178,17]]}}}],["packagejsonpath",{"_index":4675,"t":{"1892":{"position":[[159,18]]}}}],["packet）、ip数据报（datagram",{"_index":5507,"t":{"2148":{"position":[[93,27]]}}}],["packnpmmanu",{"_index":4673,"t":{"1892":{"position":[[107,18]]}}}],["packnpmrelationlist",{"_index":4674,"t":{"1892":{"position":[[132,22]]}}}],["pad",{"_index":2039,"t":{"853":{"position":[[249,8],[682,8]]},"1092":{"position":[[3685,7]]},"1248":{"position":[[287,7],[571,8]]},"1255":{"position":[[402,8]]},"1366":{"position":[[867,8]]},"1511":{"position":[[210,8]]},"1976":{"position":[[162,8]]},"1979":{"position":[[2788,8]]},"1981":{"position":[[1130,8]]}}}],["padzero(hh",{"_index":2103,"t":{"853":{"position":[[1227,11]]}}}],["padzero(mm",{"_index":2105,"t":{"853":{"position":[[1281,11]]}}}],["padzero(n",{"_index":2108,"t":{"853":{"position":[[1375,10]]}}}],["padzero(ss",{"_index":2107,"t":{"853":{"position":[[1335,11]]}}}],["page",{"_index":1020,"t":{"293":{"position":[[440,5]]},"376":{"position":[[11,5],[389,5]]},"1017":{"position":[[540,5],[572,9],[612,6],[654,13],[1302,5],[1543,5]]},"1024":{"position":[[214,5],[341,5]]},"1039":{"position":[[237,5],[466,5]]},"1049":{"position":[[325,6]]},"1072":{"position":[[56,5]]},"1074":{"position":[[7,5],[43,5]]},"1078":{"position":[[64,5],[82,5],[114,5]]},"1084":{"position":[[480,5],[571,5]]},"1118":{"position":[[319,5],[777,6]]},"1128":{"position":[[56,7]]},"1211":{"position":[[146,16]]},"1501":{"position":[[163,4]]},"1898":{"position":[[515,6]]},"1900":{"position":[[229,6]]},"1924":{"position":[[71,4]]},"1950":{"position":[[30,5]]},"1954":{"position":[[34,13]]},"1966":{"position":[[0,6]]},"1970":{"position":[[103,8]]},"1972":{"position":[[166,7]]},"1979":{"position":[[2830,6]]},"1981":{"position":[[1327,6]]},"1989":{"position":[[85,8],[480,7]]},"2007":{"position":[[250,6]]}}}],["page.json",{"_index":5008,"t":{"1991":{"position":[[96,52]]},"2005":{"position":[[243,9]]}}}],["page.jspag",{"_index":5031,"t":{"1999":{"position":[[85,13]]},"2001":{"position":[[184,13]]},"2003":{"position":[[314,13]]}}}],["page.pag",{"_index":4720,"t":{"1918":{"position":[[435,11]]}}}],["page.wxss",{"_index":5062,"t":{"2005":{"position":[[304,9]]}}}],["pagepath",{"_index":4552,"t":{"1868":{"position":[[40,11],[91,11],[141,11]]},"1933":{"position":[[246,11],[475,11],[609,11]]},"1970":{"position":[[496,11],[702,11]]},"1989":{"position":[[283,11],[334,11]]}}}],["pages/choose/choos",{"_index":4848,"t":{"1970":{"position":[[171,22],[714,22]]}}}],["pages/dend/index",{"_index":4554,"t":{"1868":{"position":[[103,19]]}}}],["pages/dend/index.wxml",{"_index":4564,"t":{"1868":{"position":[[563,21]]}}}],["pages/feedback/feedback",{"_index":4850,"t":{"1970":{"position":[[219,25]]}}}],["pages/form/form",{"_index":4847,"t":{"1970":{"position":[[152,18]]}}}],["pages/helloworld/helloworld",{"_index":4773,"t":{"1933":{"position":[[322,27]]}}}],["pages/images/form",{"_index":4855,"t":{"1970":{"position":[[765,18],[816,18]]}}}],["pages/images/qa",{"_index":4852,"t":{"1970":{"position":[[588,16],[653,16]]}}}],["pages/index/index",{"_index":4553,"t":{"1868":{"position":[[52,20]]},"1989":{"position":[[109,20],[295,20]]}}}],["pages/index/index.wxml",{"_index":5011,"t":{"1995":{"position":[[144,33]]}}}],["pages/log",{"_index":5001,"t":{"1985":{"position":[[146,10]]}}}],["pages/logs/index",{"_index":5004,"t":{"1989":{"position":[[142,18],[346,19]]}}}],["pages/qa/qa",{"_index":4846,"t":{"1970":{"position":[[125,14],[508,14]]}}}],["pages/receive/index",{"_index":4555,"t":{"1868":{"position":[[153,22]]}}}],["pages/success/success",{"_index":4849,"t":{"1970":{"position":[[194,24]]}}}],["pages/tabone/tabon",{"_index":4772,"t":{"1933":{"position":[[258,22]]}}}],["pages/tabthree/tabthre",{"_index":4779,"t":{"1933":{"position":[[621,26]]}}}],["pages/tabtwo/tabtwo",{"_index":4778,"t":{"1933":{"position":[[487,22]]}}}],["pageson",{"_index":2540,"t":{"1084":{"position":[[94,8]]}}}],["pages为github提供的一项静态网站托管服务，它直接从github仓库获取静态文件进行构建并发布，然后提供一个github.io的二级域名供用户访问，支持绑定自定义域名，支持开启https，开启https会自动申请证书同时在证书过期前自动续签，这一切都是免费的，使用起来极其简单，只需要将你的代码和文件提交到github，然后开启pages服务即可，本博客站就托管于github",{"_index":2732,"t":{"1118":{"position":[[584,192]]}}}],["pages就是其中一员，它是一个静态网页托管服务，它可以把你的静态网页部署到github",{"_index":2730,"t":{"1118":{"position":[[234,61]]}}}],["pages，但是，github",{"_index":2807,"t":{"1211":{"position":[[130,15]]}}}],["pal",{"_index":6285,"t":{"2509":{"position":[[616,3]]}}}],["palett",{"_index":2694,"t":{"1096":{"position":[[342,7]]}}}],["palette）rgbquad",{"_index":6195,"t":{"2454":{"position":[[1573,15]]}}}],["pan",{"_index":5472,"t":{"2141":{"position":[[45,9]]}}}],["panda",{"_index":6102,"t":{"2443":{"position":[[255,6]]}}}],["param",{"_index":191,"t":{"35":{"position":[[213,6]]},"66":{"position":[[440,6]]},"171":{"position":[[440,6]]}}}],["pardon",{"_index":5901,"t":{"2267":{"position":[[196,33]]}}}],["parent",{"_index":3609,"t":{"1424":{"position":[[570,9],[640,6],[655,6]]}}}],["parentmessag",{"_index":3607,"t":{"1424":{"position":[[441,13],[555,14]]}}}],["parsefloat",{"_index":4109,"t":{"1640":{"position":[[89,12]]},"1737":{"position":[[0,12]]}}}],["parsefloat(\"10",{"_index":4304,"t":{"1737":{"position":[[40,17]]}}}],["parsefloat()。numb",{"_index":4108,"t":{"1640":{"position":[[38,19]]}}}],["parseint",{"_index":1420,"t":{"496":{"position":[[0,10]]},"1640":{"position":[[76,10]]},"1735":{"position":[[0,10]]}}}],["parseint(\"10",{"_index":4300,"t":{"1735":{"position":[[38,15]]}}}],["parseint(int",{"_index":1422,"t":{"496":{"position":[[225,12]]}}}],["parseint(str",{"_index":1421,"t":{"496":{"position":[[90,15],[120,15],[189,15]]}}}],["part0",{"_index":4915,"t":{"1979":{"position":[[2060,7]]}}}],["pass",{"_index":5213,"t":{"2059":{"position":[[412,5]]},"2121":{"position":[[148,7]]}}}],["password",{"_index":235,"t":{"47":{"position":[[269,10]]},"365":{"position":[[320,15]]},"2059":{"position":[[384,9]]}}}],["path",{"_index":2116,"t":{"857":{"position":[[31,4]]},"867":{"position":[[75,4]]},"879":{"position":[[31,4]]},"937":{"position":[[46,4]]},"944":{"position":[[56,4]]},"946":{"position":[[412,5]]},"955":{"position":[[125,4]]},"969":{"position":[[81,5],[218,6]]},"978":{"position":[[0,4]]},"980":{"position":[[6,4],[21,9]]},"986":{"position":[[6,4],[205,4]]},"989":{"position":[[31,4]]},"1139":{"position":[[24,6]]},"1368":{"position":[[418,5],[464,5],[520,5],[579,5],[629,5],[685,5],[738,5]]},"2220":{"position":[[24,4]]}}}],["path(",{"_index":1964,"t":{"795":{"position":[[210,8]]},"825":{"position":[[618,8],[843,8]]}}}],["path.basenam",{"_index":2321,"t":{"978":{"position":[[81,15]]}}}],["path.basename(fpath);console.log(fullnam",{"_index":2332,"t":{"991":{"position":[[49,43]]}}}],["path.basename(fpath,'.html');console.log(namewidthext",{"_index":2335,"t":{"991":{"position":[[128,55]]}}}],["path.basename(path[,ext",{"_index":2328,"t":{"989":{"position":[[0,26]]}}}],["path.extnam",{"_index":2336,"t":{"994":{"position":[[9,14]]}}}],["path.extname(fpath);console.log(fext",{"_index":2340,"t":{"996":{"position":[[56,38]]}}}],["path.extname(path",{"_index":2337,"t":{"994":{"position":[[43,19]]}}}],["path.j",{"_index":2281,"t":{"955":{"position":[[88,7]]}}}],["path.join",{"_index":2320,"t":{"978":{"position":[[44,11]]},"982":{"position":[[3,11]]}}}],["path.join(\"/a",{"_index":2324,"t":{"986":{"position":[[45,15]]}}}],["path.join([...path",{"_index":2322,"t":{"984":{"position":[[0,24]]}}}],["path.join(__dirnam",{"_index":2123,"t":{"859":{"position":[[42,20]]},"861":{"position":[[181,20]]},"863":{"position":[[183,20]]},"865":{"position":[[228,20]]},"867":{"position":[[265,20],[699,20],[1414,20]]},"881":{"position":[[187,20]]},"887":{"position":[[92,20],[153,20]]}}}],["path.join(__dirname,\"files/1.txt\");console.log(pathstr",{"_index":2327,"t":{"986":{"position":[[244,56]]}}}],["pathstr",{"_index":2323,"t":{"986":{"position":[[35,7],[234,7]]}}}],["path指请求的url地址，handl",{"_index":1970,"t":{"801":{"position":[[115,33]]}}}],["pcc",{"_index":2533,"t":{"1062":{"position":[[157,3]]}}}],["pd.dataframe({'freq",{"_index":6124,"t":{"2443":{"position":[[704,21]]}}}],["pdf",{"_index":5950,"t":{"2284":{"position":[[0,6]]},"2293":{"position":[[0,6]]}}}],["pdfrom",{"_index":6103,"t":{"2443":{"position":[[265,6]]}}}],["peak",{"_index":6300,"t":{"2516":{"position":[[102,10],[265,10]]}}}],["peopl",{"_index":1615,"t":{"583":{"position":[[3,6],[24,6]]},"585":{"position":[[3,6],[24,6],[124,6]]},"1192":{"position":[[44,8]]}}}],["people'",{"_index":4472,"t":{"1838":{"position":[[76,8],[231,8],[395,8],[562,8]]},"1840":{"position":[[72,8]]}}}],["peoplepubl",{"_index":1626,"t":{"585":{"position":[[89,12]]}}}],["per",{"_index":1054,"t":{"303":{"position":[[279,3]]}}}],["perf",{"_index":567,"t":{"124":{"position":[[166,4]]}}}],["perf(util",{"_index":598,"t":{"126":{"position":[[400,12]]}}}],["period",{"_index":1012,"t":{"293":{"position":[[133,7]]},"376":{"position":[[82,7]]}}}],["perman",{"_index":5136,"t":{"2049":{"position":[[69,11]]}}}],["persist",{"_index":2546,"t":{"1084":{"position":[[318,7]]}}}],["person",{"_index":1024,"t":{"293":{"position":[[839,8],[986,8]]},"378":{"position":[[61,8],[208,8]]},"443":{"position":[[631,7],[867,7]]},"445":{"position":[[101,7],[250,7],[303,7],[393,7],[446,7],[643,6],[657,7],[668,16]]},"447":{"position":[[37,7],[90,7],[332,7],[385,7],[646,7],[699,7]]},"449":{"position":[[70,7],[123,7],[413,6],[426,7]]},"451":{"position":[[41,7],[138,7],[419,7],[517,7],[570,7],[868,7],[1033,6],[1043,6],[1056,7]]},"453":{"position":[[42,7],[95,7],[434,6],[447,7]]},"1080":{"position":[[61,8],[208,8]]},"1653":{"position":[[33,6]]},"1655":{"position":[[44,6]]},"1657":{"position":[[59,6]]},"1659":{"position":[[280,6]]},"1661":{"position":[[192,6]]},"1697":{"position":[[52,6]]},"1701":{"position":[[62,7],[147,6]]},"1705":{"position":[[152,6],[219,6]]},"1749":{"position":[[126,6],[208,6]]},"2141":{"position":[[55,9]]}}}],["person(\"李四\",30",{"_index":1303,"t":{"445":{"position":[[692,16]]}}}],["person(str",{"_index":1297,"t":{"445":{"position":[[154,13],[504,13]]},"447":{"position":[[139,13],[434,13],[748,13],[816,13]]},"449":{"position":[[172,13]]},"451":{"position":[[187,13],[619,13]]},"453":{"position":[[144,13]]}}}],["person.countri",{"_index":1313,"t":{"451":{"position":[[361,20]]}}}],["person.firstnam",{"_index":4190,"t":{"1659":{"position":[[398,16]]},"1749":{"position":[[158,36]]}}}],["person.fullnam",{"_index":4193,"t":{"1661":{"position":[[51,18]]}}}],["person.fullname();</script></body></html",{"_index":4195,"t":{"1661":{"position":[[382,41]]}}}],["person.lastnam",{"_index":4181,"t":{"1659":{"position":[[73,16]]}}}],["person.lastname;</script></body></html",{"_index":4191,"t":{"1659":{"position":[[423,39]]}}}],["person.personinfo",{"_index":1318,"t":{"453":{"position":[[455,19]]}}}],["person.properti",{"_index":4185,"t":{"1659":{"position":[[202,15]]}}}],["person[\"lastnam",{"_index":4182,"t":{"1659":{"position":[[95,19]]}}}],["person[\"property\"]。</p><p",{"_index":4186,"t":{"1659":{"position":[[220,25]]}}}],["person[0",{"_index":4321,"t":{"1749":{"position":[[83,29]]}}}],["personinfo",{"_index":1316,"t":{"453":{"position":[[297,10],[484,11]]}}}],["phase",{"_index":6286,"t":{"2509":{"position":[[620,6]]}}}],["phone",{"_index":972,"t":{"287":{"position":[[443,8]]},"1964":{"position":[[166,6]]},"1981":{"position":[[322,5],[1360,6]]}}}],["photo",{"_index":2773,"t":{"1152":{"position":[[309,20]]}}}],["photograph",{"_index":6149,"t":{"2452":{"position":[[236,12]]}}}],["php、python",{"_index":2745,"t":{"1135":{"position":[[63,10]]}}}],["pi",{"_index":1278,"t":{"443":{"position":[[186,3],[336,2]]},"518":{"position":[[245,2]]},"520":{"position":[[245,2]]},"522":{"position":[[245,2]]},"524":{"position":[[317,2]]},"526":{"position":[[326,2]]},"528":{"position":[[284,2]]}}}],["pi.print",{"_index":1320,"t":{"453":{"position":[[496,11]]}}}],["pi=p.new",{"_index":1319,"t":{"453":{"position":[[475,8]]}}}],["pictur",{"_index":3090,"t":{"1321":{"position":[[14,9],[49,8]]}}}],["pictures.addeventlistener('chang",{"_index":3095,"t":{"1321":{"position":[[201,35]]}}}],["pictures.attachevent('onchang",{"_index":3097,"t":{"1321":{"position":[[270,32]]}}}],["pictures.click",{"_index":3099,"t":{"1321":{"position":[[360,16]]}}}],["pictures.setattribute('typ",{"_index":3092,"t":{"1321":{"position":[[92,29]]}}}],["pictures.style.display",{"_index":3093,"t":{"1321":{"position":[[130,22]]}}}],["picurl",{"_index":3087,"t":{"1319":{"position":[[22,7]]}}}],["ping",{"_index":2813,"t":{"1218":{"position":[[31,16]]},"2200":{"position":[[101,5]]}}}],["ping操作获取https://cn.bing.com/的ip地址：202.89.233.100",{"_index":5976,"t":{"2289":{"position":[[61,48]]}}}],["placehold",{"_index":130,"t":{"31":{"position":[[269,16]]},"1472":{"position":[[380,12]]},"1868":{"position":[[451,22],[691,21],[774,20]]},"1872":{"position":[[1664,22]]}}}],["placeholder=\"e.g",{"_index":3659,"t":{"1445":{"position":[[565,17]]}}}],["placeholder=\"ent",{"_index":3704,"t":{"1472":{"position":[[161,18],[252,18],[547,18],[640,18],[1130,18],[1242,18],[1451,18],[1565,18]]}}}],["plain\";text.match(/ain/g",{"_index":4496,"t":{"1842":{"position":[[852,25]]}}}],["plain\";text.match(/ain/gi",{"_index":4498,"t":{"1842":{"position":[[1011,26]]}}}],["planet",{"_index":2722,"t":{"1108":{"position":[[316,7]]}}}],["planetsscal",{"_index":2721,"t":{"1108":{"position":[[275,12]]}}}],["play",{"_index":5653,"t":{"2195":{"position":[[158,4]]}}}],["player",{"_index":2847,"t":{"1223":{"position":[[3433,7]]},"1227":{"position":[[4,6],[58,6]]},"1229":{"position":[[4,6],[72,7],[95,6],[188,11]]},"1239":{"position":[[640,7],[1190,7]]},"1241":{"position":[[747,7]]},"1248":{"position":[[1050,7]]},"1257":{"position":[[174,7]]}}}],["pleas",{"_index":2434,"t":{"1017":{"position":[[1229,6],[1470,6]]},"1039":{"position":[[164,6],[393,6]]},"1844":{"position":[[36,7],[125,6],[213,7],[316,6],[399,7],[476,6],[541,7],[667,7]]}}}],["plist",{"_index":463,"t":{"103":{"position":[[503,5]]},"200":{"position":[[503,5]]}}}],["plt.show",{"_index":6135,"t":{"2443":{"position":[[978,10]]}}}],["plt.suptitle('imag",{"_index":6134,"t":{"2443":{"position":[[937,19]]}}}],["plt.xlim((0",{"_index":6132,"t":{"2443":{"position":[[908,12]]}}}],["pltimport",{"_index":6101,"t":{"2443":{"position":[[245,9]]}}}],["plugin",{"_index":350,"t":{"84":{"position":[[82,8]]},"90":{"position":[[87,6],[94,8]]}}}],["png",{"_index":3915,"t":{"1561":{"position":[[233,8]]}}}],["png格式：便携网络图形（protabl",{"_index":6146,"t":{"2452":{"position":[[173,21]]}}}],["pnode",{"_index":465,"t":{"103":{"position":[[518,6]]},"200":{"position":[[518,6]]}}}],["po",{"_index":4475,"t":{"1838":{"position":[[109,3],[264,3],[428,3],[595,3]]},"1840":{"position":[[105,3]]}}}],["point",{"_index":46,"t":{"10":{"position":[[869,5]]},"16":{"position":[[9,5]]},"1743":{"position":[[212,6],[263,6]]},"1788":{"position":[[165,6],[263,6]]},"1790":{"position":[[380,6]]},"1792":{"position":[[4,6]]}}}],["point.position.set(400",{"_index":48,"t":{"10":{"position":[[909,23]]}}}],["points.sort",{"_index":4392,"t":{"1790":{"position":[[489,14]]}}}],["points.sort(function(a",{"_index":4395,"t":{"1790":{"position":[[581,23]]}}}],["points;funct",{"_index":4390,"t":{"1790":{"position":[[457,15]]}}}],["points;}</script",{"_index":4396,"t":{"1790":{"position":[[668,17]]}}}],["points;}funct",{"_index":4393,"t":{"1790":{"position":[[548,16]]}}}],["poll",{"_index":5319,"t":{"2121":{"position":[[0,12]]}}}],["pop",{"_index":3622,"t":{"1431":{"position":[[56,5]]},"1765":{"position":[[0,5],[118,5]]},"1775":{"position":[[186,5]]},"2059":{"position":[[101,10]]}}}],["pop3",{"_index":5180,"t":{"2057":{"position":[[96,4]]},"2059":{"position":[[207,4],[308,13]]},"2244":{"position":[[98,4]]}}}],["porsch",{"_index":4156,"t":{"1649":{"position":[[24,9]]},"1651":{"position":[[35,10],[96,17]]},"1683":{"position":[[103,11]]},"1685":{"position":[[80,10],[130,10]]},"1689":{"position":[[18,8],[55,8]]},"1695":{"position":[[82,11]]}}}],["port",{"_index":5669,"t":{"2195":{"position":[[926,6],[960,5]]}}}],["posit",{"_index":2052,"t":{"853":{"position":[[440,9]]},"1017":{"position":[[1979,9],[2048,9],[2134,9]]},"1037":{"position":[[286,9],[349,9],[435,9]]},"1507":{"position":[[384,9]]},"1511":{"position":[[507,9],[574,9]]},"1515":{"position":[[985,9],[1186,9],[1353,9],[1422,9]]},"1518":{"position":[[153,9],[302,9]]},"1933":{"position":[[748,11]]}}}],["position_x",{"_index":3266,"t":{"1346":{"position":[[722,10],[831,12]]}}}],["possibl",{"_index":2524,"t":{"1058":{"position":[[275,9]]}}}],["post",{"_index":753,"t":{"241":{"position":[[278,4]]},"245":{"position":[[265,4]]},"782":{"position":[[303,9]]},"1964":{"position":[[128,7]]}}}],["postapp.post(\"/us",{"_index":1974,"t":{"808":{"position":[[71,24]]}}}],["postcss@latest",{"_index":344,"t":{"82":{"position":[[47,14]]}}}],["poster",{"_index":3967,"t":{"1587":{"position":[[531,6]]}}}],["poster=\"poster.png",{"_index":3962,"t":{"1587":{"position":[[61,20]]}}}],["posttitl",{"_index":2384,"t":{"1012":{"position":[[100,10]]}}}],["post方法发起请求，在页面j",{"_index":4813,"t":{"1964":{"position":[[50,25]]}}}],["post方法详见http",{"_index":4812,"t":{"1964":{"position":[[32,17]]}}}],["post：post把传递的数据封装在http请求数据中，以名称/值的形式出现，可以传输大量数据，对数据量没有限制，也不会显示在url中。表单的提交用的是post",{"_index":5133,"t":{"2047":{"position":[[466,81]]}}}],["pow",{"_index":1501,"t":{"514":{"position":[[0,5]]}}}],["pow(11.635",{"_index":1507,"t":{"514":{"position":[[338,11]]}}}],["pow(doubl",{"_index":1502,"t":{"514":{"position":[[34,10]]}}}],["power",{"_index":2612,"t":{"1092":{"position":[[2756,8]]}}}],["powershel",{"_index":2228,"t":{"930":{"position":[[113,10]]}}}],["pptp、l2tp、slip、ppp、wifi",{"_index":5501,"t":{"2144":{"position":[[652,33]]}}}],["preactnativedevserverport=8081",{"_index":953,"t":{"278":{"position":[[196,30]]}}}],["prefix",{"_index":368,"t":{"90":{"position":[[242,7]]},"92":{"position":[[724,7],[804,6],[959,7],[994,7]]},"2191":{"position":[[79,18]]},"2214":{"position":[[17,6]]}}}],["preload",{"_index":3968,"t":{"1587":{"position":[[584,7]]}}}],["preset",{"_index":2428,"t":{"1017":{"position":[[1075,8]]},"1039":{"position":[[19,8]]}}}],["press",{"_index":3078,"t":{"1312":{"position":[[674,5],[710,5],[772,5]]}}}],["prevent",{"_index":3753,"t":{"1499":{"position":[[24,37]]}}}],["preview",{"_index":3083,"t":{"1312":{"position":[[828,7]]}}}],["prevstate.clickcount",{"_index":3058,"t":{"1299":{"position":[[339,22]]}}}],["primari",{"_index":381,"t":{"92":{"position":[[866,10]]},"1092":{"position":[[1340,9],[1809,9]]},"1094":{"position":[[99,8],[129,7],[164,7],[201,7],[239,7],[275,7],[313,7],[460,8],[490,7],[525,7],[562,7],[600,7],[636,7],[674,7],[1029,7],[1130,7],[1175,7],[1219,7],[1261,7],[1299,7],[1340,7],[1383,7],[1501,8],[1531,7],[1566,7],[1603,7],[1641,7],[1677,7],[1715,7],[1859,8],[1889,7],[1924,7],[1961,7],[1999,7],[2035,7],[2073,7],[2134,8],[2164,7],[2199,7],[2236,7],[2274,7],[2310,7],[2348,7]]},"1096":{"position":[[436,10],[463,8]]}}}],["primary\">button</button",{"_index":389,"t":{"95":{"position":[[120,24]]}}}],["print",{"_index":711,"t":{"179":{"position":[[618,14],[666,24],[1119,16]]},"221":{"position":[[618,14],[666,24],[1119,16]]},"251":{"position":[[273,9]]},"253":{"position":[[117,10]]},"259":{"position":[[136,13],[156,11]]},"447":{"position":[[212,6],[507,6],[881,6]]},"449":{"position":[[245,6]]},"451":{"position":[[260,6],[439,6],[692,6]]},"453":{"position":[[217,6],[322,6]]},"1165":{"position":[[618,14],[666,24],[1119,16]]}}}],["print(",{"_index":729,"t":{"179":{"position":[[1086,8]]},"221":{"position":[[1086,8]]},"1165":{"position":[[1086,8]]}}}],["print(\"hello",{"_index":322,"t":{"70":{"position":[[201,13],[243,13]]}}}],["print((dtnow",{"_index":892,"t":{"255":{"position":[[2363,12]]}}}],["print(datafram",{"_index":6125,"t":{"2443":{"position":[[750,16]]}}}],["print(f'总计下载：{success_img}，下载失败：{error_img",{"_index":732,"t":{"179":{"position":[[1232,45]]},"221":{"position":[[1232,45]]},"1165":{"position":[[1232,45]]}}}],["print(file_nam",{"_index":726,"t":{"179":{"position":[[1020,16]]},"221":{"position":[[1020,16]]},"1165":{"position":[[1020,16]]}}}],["print(height",{"_index":6114,"t":{"2443":{"position":[[478,13]]}}}],["print(img.s",{"_index":6115,"t":{"2443":{"position":[[492,15]]}}}],["print(response.json",{"_index":290,"t":{"66":{"position":[[261,22],[710,22]]},"171":{"position":[[261,22],[710,22]]}}}],["print(schedul",{"_index":809,"t":{"249":{"position":[[790,15]]}}}],["print(table[nowwd][nowclass",{"_index":922,"t":{"259":{"position":[[192,29]]}}}],["print(width",{"_index":6113,"t":{"2443":{"position":[[465,12]]}}}],["print(x",{"_index":255,"t":{"49":{"position":[[579,8]]}}}],["printarray",{"_index":1694,"t":{"608":{"position":[[159,10]]}}}],["printarray(int",{"_index":1691,"t":{"608":{"position":[[48,16]]}}}],["printarray(new",{"_index":1696,"t":{"608":{"position":[[191,14]]}}}],["printf",{"_index":1779,"t":{"627":{"position":[[16,8]]}}}],["printf(格式控制符，表达式1，表达式2，……，表达式n",{"_index":1605,"t":{"577":{"position":[[0,32]]}}}],["printinfo",{"_index":1305,"t":{"447":{"position":[[584,10]]},"451":{"position":[[784,10]]}}}],["println",{"_index":1566,"t":{"554":{"position":[[93,7]]}}}],["printnum",{"_index":1165,"t":{"388":{"position":[[480,8]]}}}],["printstream",{"_index":1781,"t":{"627":{"position":[[81,11]]}}}],["prism",{"_index":2467,"t":{"1017":{"position":[[2798,6]]},"1037":{"position":[[1058,6]]}}}],["privat",{"_index":1065,"t":{"305":{"position":[[541,7],[595,7],[773,7],[828,7],[878,7],[925,7]]},"307":{"position":[[265,7],[495,7]]},"443":{"position":[[562,7],[639,7],[875,7]]},"445":{"position":[[109,7],[130,7],[258,7],[279,7],[401,7],[422,7]]},"447":{"position":[[45,7],[66,7],[340,7],[361,7],[654,7],[675,7]]},"449":{"position":[[78,7],[99,7]]},"451":{"position":[[57,7],[93,7],[114,7],[525,7],[546,7]]},"453":{"position":[[50,7],[71,7]]}}}],["pro",{"_index":4709,"t":{"1905":{"position":[[316,3]]}}}],["process/v1/colour",{"_index":293,"t":{"66":{"position":[[347,22]]},"171":{"position":[[347,22]]}}}],["product",{"_index":4670,"t":{"1888":{"position":[[157,10]]}}}],["program",{"_index":4456,"t":{"1823":{"position":[[180,11]]}}}],["project",{"_index":1075,"t":{"307":{"position":[[572,7]]},"538":{"position":[[0,7]]},"1017":{"position":[[2756,8]]},"1037":{"position":[[1016,8]]},"1216":{"position":[[77,8]]}}}],["project.config.json",{"_index":4672,"t":{"1892":{"position":[[5,25],[31,19]]},"1985":{"position":[[122,23]]}}}],["projectnam",{"_index":2416,"t":{"1017":{"position":[[746,12]]},"1035":{"position":[[32,12]]},"1453":{"position":[[17,11]]}}}],["prop",{"_index":2633,"t":{"1092":{"position":[[3996,10]]},"1223":{"position":[[270,5],[398,5],[959,4],[1073,5],[1088,4],[1326,4],[1336,4],[1432,4],[1442,4],[1814,5],[1847,4],[2349,6],[2915,4]]},"1237":{"position":[[127,5],[348,6]]},"1261":{"position":[[14,5],[115,4],[456,4],[507,5]]},"1263":{"position":[[481,4],[1537,4]]},"1267":{"position":[[130,7]]},"1269":{"position":[[52,7]]},"1271":{"position":[[708,7]]},"1273":{"position":[[929,7]]},"1279":{"position":[[152,8]]},"1289":{"position":[[256,5]]},"1297":{"position":[[155,5]]},"1312":{"position":[[398,6],[485,5]]},"1399":{"position":[[393,5],[453,15],[486,4],[500,6],[857,6],[1119,4]]},"1445":{"position":[[193,5],[1046,6]]}}}],["properti",{"_index":3415,"t":{"1373":{"position":[[122,8]]},"1377":{"position":[[66,8]]},"1380":{"position":[[59,8]]},"1384":{"position":[[34,8]]},"1386":{"position":[[32,8]]},"1393":{"position":[[799,8]]},"1404":{"position":[[31,8],[60,8],[200,10],[253,8],[373,8],[403,12],[467,39],[635,25],[927,8],[958,8]]},"1406":{"position":[[373,8],[559,8]]},"1412":{"position":[[361,8],[593,8]]},"1426":{"position":[[21,9],[271,8]]},"1474":{"position":[[120,8]]},"1487":{"position":[[25,8]]},"1493":{"position":[[231,8]]},"1497":{"position":[[305,18]]}}}],["propertyisenumerable(propertynam",{"_index":4153,"t":{"1646":{"position":[[247,34]]}}}],["property。v",{"_index":3605,"t":{"1424":{"position":[[344,10]]}}}],["property，vu",{"_index":3521,"t":{"1404":{"position":[[900,12]]}}}],["props.label",{"_index":2982,"t":{"1269":{"position":[[120,11]]},"1271":{"position":[[776,11]]}}}],["props.valu",{"_index":2871,"t":{"1237":{"position":[[297,13]]}}}],["protocol",{"_index":5178,"t":{"2057":{"position":[[30,8]]},"2121":{"position":[[13,121],[156,105]]},"2195":{"position":[[38,9]]},"2200":{"position":[[40,9]]}}}],["protocol）。实际上，我们在生活中经常享受着dhcp带来的便利：我们有时会携带笔记本电脑或手机到公共场所里例如图书馆，并且通过wifi连上一个陌生的子网，但是我们并没有做重新为主机配置ip",{"_index":5654,"t":{"2195":{"position":[[163,103]]}}}],["protocol）路由信息协议，服务于内部网关协议igp",{"_index":5774,"t":{"2218":{"position":[[35,29]]}}}],["protocol，即as之间使用协议即bgp",{"_index":5788,"t":{"2222":{"position":[[54,25]]}}}],["protocol，是一种面向连接的协议，它是一个面向连接的通信协议。tcp协议是基于ip",{"_index":5840,"t":{"2247":{"position":[[47,48]]}}}],["protocol，简称udp",{"_index":5868,"t":{"2250":{"position":[[25,29]]}}}],["providecomplet",{"_index":3906,"t":{"1557":{"position":[[256,15]]}}}],["ps",{"_index":2166,"t":{"869":{"position":[[0,2]]},"2448":{"position":[[66,14]]}}}],["psh",{"_index":5858,"t":{"2247":{"position":[[1413,27]]}}}],["psnr",{"_index":6303,"t":{"2516":{"position":[[133,5],[296,5]]}}}],["psvm",{"_index":1343,"t":{"469":{"position":[[7,4]]},"542":{"position":[[47,4]]}}}],["public",{"_index":323,"t":{"70":{"position":[[315,6],[415,6]]},"303":{"position":[[143,16]]},"305":{"position":[[478,16]]},"388":{"position":[[178,6],[491,6]]},"390":{"position":[[280,6],[300,6]]},"392":{"position":[[432,6],[452,6]]},"394":{"position":[[198,6],[218,6]]},"396":{"position":[[121,6],[141,6]]},"400":{"position":[[174,6],[194,6]]},"406":{"position":[[51,6],[71,6]]},"408":{"position":[[212,6],[232,6]]},"410":{"position":[[293,6],[313,6]]},"412":{"position":[[138,6],[158,6]]},"414":{"position":[[74,6],[94,6]]},"416":{"position":[[125,6],[145,6]]},"420":{"position":[[57,6],[77,6]]},"426":{"position":[[774,6],[794,6]]},"443":{"position":[[667,6],[715,6],[892,6],[928,6]]},"445":{"position":[[147,6],[296,6],[439,6],[497,6]]},"447":{"position":[[83,6],[132,6],[200,6],[378,6],[427,6],[495,6],[572,6],[692,6],[741,6],[809,6],[869,6]]},"449":{"position":[[116,6],[165,6],[233,6],[310,6]]},"451":{"position":[[131,6],[180,6],[248,6],[427,6],[563,6],[612,6],[680,6],[765,6],[954,6],[973,6]]},"453":{"position":[[88,6],[137,6],[205,6],[310,6]]},"457":{"position":[[126,6],[148,6],[168,6],[184,6],[233,8],[269,6],[326,9],[349,6]]},"483":{"position":[[97,6],[117,6]]},"486":{"position":[[327,6],[346,6]]},"488":{"position":[[103,6],[286,6],[305,6]]},"490":{"position":[[158,6],[177,6]]},"492":{"position":[[0,6],[19,6]]},"494":{"position":[[488,6]]},"496":{"position":[[290,6],[309,6]]},"498":{"position":[[6,6],[25,6]]},"500":{"position":[[246,6],[265,6]]},"502":{"position":[[108,6],[127,6]]},"504":{"position":[[295,6],[314,6]]},"506":{"position":[[137,6],[156,6]]},"508":{"position":[[137,6],[156,6]]},"510":{"position":[[46,6],[65,6]]},"512":{"position":[[27,6],[46,6]]},"514":{"position":[[111,6],[130,6]]},"516":{"position":[[26,6],[45,6]]},"518":{"position":[[0,6],[19,6]]},"520":{"position":[[0,6],[19,6]]},"522":{"position":[[0,6],[19,6]]},"524":{"position":[[32,6],[51,6]]},"526":{"position":[[34,6],[60,6]]},"528":{"position":[[0,6],[19,6]]},"530":{"position":[[0,6],[19,6]]},"532":{"position":[[26,6],[45,6]]},"534":{"position":[[9,6],[28,6]]},"542":{"position":[[68,6],[93,6]]},"563":{"position":[[15,6],[40,6],[149,6],[174,6],[367,6],[495,6]]},"565":{"position":[[545,6]]},"569":{"position":[[3,10],[28,6]]},"579":{"position":[[73,6]]},"581":{"position":[[97,6],[182,6]]},"583":{"position":[[10,7]]},"585":{"position":[[10,7]]},"588":{"position":[[24,6]]},"598":{"position":[[0,6],[25,6]]},"604":{"position":[[15,6],[40,6]]},"606":{"position":[[75,6],[100,6]]},"608":{"position":[[29,6]]},"610":{"position":[[0,6]]},"616":{"position":[[112,6]]},"618":{"position":[[187,6],[338,6],[542,6],[658,6]]},"621":{"position":[[198,6],[223,6]]},"623":{"position":[[0,6],[26,6]]},"625":{"position":[[103,6],[129,6]]},"789":{"position":[[42,6]]},"791":{"position":[[130,6]]},"1364":{"position":[[44,9]]},"1547":{"position":[[289,6]]}}}],["public，勾选生成readme.md",{"_index":2737,"t":{"1122":{"position":[[39,35]]},"1190":{"position":[[55,35]]}}}],["publishedat",{"_index":3615,"t":{"1426":{"position":[[221,12],[407,12],[581,12]]}}}],["pull",{"_index":2803,"t":{"1204":{"position":[[36,29],[102,7]]},"2057":{"position":[[808,7]]}}}],["pull再push",{"_index":2804,"t":{"1204":{"position":[[66,11],[78,11],[90,11]]}}}],["pull，先切换为main分支进行pul",{"_index":2802,"t":{"1204":{"position":[[0,27]]}}}],["pure",{"_index":2867,"t":{"1235":{"position":[[31,4],[136,4]]}}}],["purg",{"_index":358,"t":{"86":{"position":[[166,7]]}}}],["push",{"_index":2270,"t":{"950":{"position":[[618,4]]},"1084":{"position":[[103,5],[140,4]]},"1086":{"position":[[30,4]]},"1204":{"position":[[191,7]]},"1431":{"position":[[49,6]]},"1762":{"position":[[17,6]]},"1767":{"position":[[0,6],[123,6]]},"1911":{"position":[[158,26]]},"2057":{"position":[[822,7]]}}}],["push。提交到github",{"_index":2741,"t":{"1126":{"position":[[156,16]]}}}],["push完成后到管理员仓库自己的分支下，查看push",{"_index":2805,"t":{"1204":{"position":[[199,56]]}}}],["putimage(0",{"_index":407,"t":{"101":{"position":[[191,11]]},"103":{"position":[[173,11],[685,11]]},"198":{"position":[[191,11]]},"200":{"position":[[173,11],[685,11]]}}}],["pwd",{"_index":763,"t":{"245":{"position":[[250,6]]},"249":{"position":[[190,5],[347,7],[357,3]]},"363":{"position":[[186,5],[631,7],[641,3]]}}}],["px",{"_index":3449,"t":{"1380":{"position":[[184,4]]}}}],["pycharm",{"_index":188,"t":{"35":{"position":[[85,7]]},"37":{"position":[[1161,7]]}}}],["pyhton",{"_index":688,"t":{"179":{"position":[[227,14]]},"221":{"position":[[227,14]]},"1165":{"position":[[227,14]]}}}],["pymongo.mongoclient('mongodb+srv://inannan:12345678@cluster0.xxxxxx.mongodb.net/?retrywrites=true&w=major",{"_index":245,"t":{"49":{"position":[[250,110]]}}}],["pymongofrom",{"_index":241,"t":{"49":{"position":[[162,11]]}}}],["python",{"_index":116,"t":{"27":{"position":[[16,6]]},"29":{"position":[[12,6]]},"33":{"position":[[48,6]]},"47":{"position":[[54,6]]},"49":{"position":[[86,6]]},"66":{"position":[[0,19]]},"70":{"position":[[11,6]]},"171":{"position":[[0,19]]},"238":{"position":[[0,112]]},"257":{"position":[[390,6]]},"295":{"position":[[74,6]]},"336":{"position":[[0,6]]},"355":{"position":[[434,6]]},"380":{"position":[[127,6]]},"551":{"position":[[124,42]]},"2443":{"position":[[171,21]]}}}],["python爬虫将我的博客上的所有用微博图床存储的图片爬下来放在本地，以图片后缀命名。脚本的核心思想是使通过遍历html中的img标签，用正则表达式比对并抓取标签内的src",{"_index":682,"t":{"179":{"position":[[43,93]]},"221":{"position":[[43,93]]},"1165":{"position":[[43,93]]}}}],["p和q之间的d4距离，也即街区（citi",{"_index":6086,"t":{"2439":{"position":[[221,22]]}}}],["p的概率掷出了硬币的正面，那么就在下个时隙的开始重新发送此帧，但是如果以1",{"_index":5305,"t":{"2119":{"position":[[372,118]]}}}],["p（v）沿着源到v",{"_index":5742,"t":{"2206":{"position":[[127,15]]}}}],["qa",{"_index":4851,"t":{"1970":{"position":[[526,16]]}}}],["qa.j",{"_index":4948,"t":{"1979":{"position":[[2812,6]]}}}],["qa.json",{"_index":4870,"t":{"1979":{"position":[[0,8]]}}}],["qa.wxml",{"_index":4878,"t":{"1979":{"position":[[267,8]]}}}],["qa.wxss",{"_index":4914,"t":{"1979":{"position":[[2032,8]]}}}],["qq",{"_index":4548,"t":{"1858":{"position":[[278,2],[293,2],[374,23],[398,3]]}}}],["quantiz",{"_index":6241,"t":{"2469":{"position":[[853,68]]}}}],["queri",{"_index":139,"t":{"31":{"position":[[486,5],[742,7]]},"37":{"position":[[20,28],[694,7],[708,7]]},"179":{"position":[[910,7]]},"221":{"position":[[910,7]]},"1165":{"position":[[910,7]]},"2068":{"position":[[80,5],[188,5]]}}}],["queryclass",{"_index":918,"t":{"259":{"position":[[38,13]]}}}],["question",{"_index":3572,"t":{"1420":{"position":[[156,9],[541,9],[608,10],[637,10],[662,9],[1159,10],[1188,8]]},"1665":{"position":[[0,8],[296,8]]},"1667":{"position":[[0,8]]}}}],["quickli",{"_index":2604,"t":{"1092":{"position":[[2461,8]]}}}],["quit",{"_index":5199,"t":{"2057":{"position":[[1175,4]]},"2059":{"position":[[501,4]]}}}],["quit命令后，结束pop3",{"_index":5216,"t":{"2059":{"position":[[516,39]]}}}],["r",{"_index":1206,"t":{"400":{"position":[[105,2]]},"621":{"position":[[285,4]]},"644":{"position":[[139,1]]},"658":{"position":[[85,18]]},"679":{"position":[[7,5],[17,5],[27,5],[37,6]]},"681":{"position":[[4,1],[33,1],[41,2],[50,1],[54,2],[77,1],[85,2],[94,1],[98,2],[121,1],[129,2],[138,1],[142,2],[160,1],[168,2],[177,1],[181,2],[195,1],[226,1],[260,3]]},"683":{"position":[[38,1]]},"1642":{"position":[[136,7]]},"1833":{"position":[[237,2]]},"2113":{"position":[[229,1],[262,1]]},"2119":{"position":[[0,91],[325,46]]}}}],["r(a1",{"_index":1825,"t":{"683":{"position":[[0,11]]}}}],["r(d1,d2",{"_index":1813,"t":{"656":{"position":[[30,8]]}}}],["r(u)或r(a1,a2,…,an",{"_index":1817,"t":{"658":{"position":[[172,20]]}}}],["r(u,d,dom,f",{"_index":1816,"t":{"658":{"position":[[68,12]]}}}],["r(x,i",{"_index":6005,"t":{"2391":{"position":[[188,6]]}}}],["r(z",{"_index":6263,"t":{"2480":{"position":[[361,13]]},"2486":{"position":[[50,25]]}}}],["r+1的错误时，检查不出的概率是1/(2^r",{"_index":5287,"t":{"2113":{"position":[[555,30]]}}}],["r+1的错误，检测不出的概率是1/(2^(r",{"_index":5286,"t":{"2113":{"position":[[522,27]]}}}],["r1",{"_index":2132,"t":{"861":{"position":[[50,2]]},"863":{"position":[[49,2]]},"867":{"position":[[537,2],[915,2]]}}}],["r1[0].replace(\"<script",{"_index":2143,"t":{"863":{"position":[[113,25]]},"867":{"position":[[978,25]]}}}],["r1[0].replace(\"<styl",{"_index":2135,"t":{"861":{"position":[[113,24]]},"867":{"position":[[631,24]]}}}],["r2的一个或一组属性不是关系r2的主码，而是另一个关系r1的主码，则称这个属性或属性组合为关系r2",{"_index":1819,"t":{"667":{"position":[[0,57]]}}}],["radian",{"_index":1517,"t":{"518":{"position":[[89,7]]},"520":{"position":[[89,7]]},"522":{"position":[[89,7]]},"524":{"position":[[121,7]]},"526":{"position":[[130,7]]},"528":{"position":[[89,7]]}}}],["radio",{"_index":4986,"t":{"1981":{"position":[[1739,6]]}}}],["radiu",{"_index":1279,"t":{"443":{"position":[[203,7]]},"853":{"position":[[427,7]]},"1515":{"position":[[1069,7],[1293,7],[1530,7]]},"1518":{"position":[[237,7],[409,7]]},"1979":{"position":[[2401,7],[2702,7]]}}}],["radius（例如：round",{"_index":383,"t":{"92":{"position":[[884,17]]}}}],["radix",{"_index":1408,"t":{"494":{"position":[[191,6],[242,5],[422,7]]},"496":{"position":[[143,6],[169,5]]}}}],["rain",{"_index":3839,"t":{"1515":{"position":[[1345,5],[1409,5],[1554,4],[1682,4]]},"1522":{"position":[[126,5],[160,4]]},"1842":{"position":[[818,4],[977,4]]}}}],["rainbow",{"_index":2755,"t":{"1142":{"position":[[14,7]]}}}],["raining</title></head><bodi",{"_index":3821,"t":{"1515":{"position":[[197,28]]}}}],["random",{"_index":599,"t":{"126":{"position":[[413,6],[440,6]]}}}],["randomvalu",{"_index":3006,"t":{"1277":{"position":[[45,11]]},"1279":{"position":[[140,11]]}}}],["range(1",{"_index":897,"t":{"257":{"position":[[343,8],[367,8]]}}}],["range(1000",{"_index":902,"t":{"257":{"position":[[461,12],[509,18],[581,12],[670,12]]}}}],["range(height",{"_index":6118,"t":{"2443":{"position":[[587,14]]}}}],["range(width",{"_index":6117,"t":{"2443":{"position":[[564,13]]}}}],["rate",{"_index":2667,"t":{"1094":{"position":[[1111,6]]}}}],["ratio",{"_index":2664,"t":{"1094":{"position":[[934,5]]},"2516":{"position":[[126,6],[289,6]]}}}],["rawhtml",{"_index":3727,"t":{"1483":{"position":[[80,7]]}}}],["raycast",{"_index":3207,"t":{"1342":{"position":[[335,29],[405,9],[459,10]]}}}],["raycaster.intersectobjects(this.scene.children[2].children",{"_index":3232,"t":{"1342":{"position":[[1180,60]]}}}],["raycaster.setfromcamera(mous",{"_index":3229,"t":{"1342":{"position":[[1104,30]]}}}],["rb')img",{"_index":296,"t":{"66":{"position":[[402,8]]},"171":{"position":[[402,8]]}}}],["rcpt",{"_index":5198,"t":{"2057":{"position":[[1039,4]]}}}],["rdt",{"_index":5890,"t":{"2263":{"position":[[119,36],[174,35],[391,10]]},"2269":{"position":[[27,13]]}}}],["rdt1.0",{"_index":5894,"t":{"2263":{"position":[[402,49]]},"2265":{"position":[[50,8]]}}}],["rdt1。0中，由于我们认为下层信道完全可信，因此我们的rdt信道只需要进行封装和解封装操作，如左边的图，当调用时，创建一个rdt_send状态，这个状态包含下面的活动：将数据封装打包，然后通过udt发送出去（实际上，这个时候的udt我们认为是可信的），接着就等待下次的调用。在右边的接收端，由于我们认为数据完全不会丢失，所以我们只创建一个rcv",{"_index":5895,"t":{"2265":{"position":[[59,208]]}}}],["rdt2.0的基础之上，发送方在打包数据包时添加了0或者1编号，同样ack,nak字段上也添加了0，1字段，表示0.1号字段的确认或者否定。发送方就有了2种状态发送0号数据包，1号数据包，接收方也有了2种状态等待0号数据包和等待1号数据包。现在假设情景发送方向接收方发送0号数据包，如果接收方接收到0号数据包，返回ack，但是ack出现翻转，接收方处于等待1号数据状态，发送方重复发送0号数据，接收方会拒绝0号数据，避免重复。如果接收方接收到0号数据包出现错误，返回nak，但是nak出现翻转，接收方处于等待0号数据状态，发送方继续发送1号数据，接收方会拒绝1",{"_index":5906,"t":{"2269":{"position":[[60,290]]}}}],["rdt2.x",{"_index":5910,"t":{"2271":{"position":[[275,9]]}}}],["rdt2.x实际上只考虑了错位的发生，却没有考虑丢包。这个问题留给rdt3.0",{"_index":5911,"t":{"2271":{"position":[[285,43]]}}}],["rdt3.0",{"_index":5917,"t":{"2273":{"position":[[363,17]]}}}],["rdt3.0的缺陷，我们需要一个滑动窗口机制。利用流水线机制，我们连续发多个分组（例如三个），然后再进入等待状态。这样上面的利用率u=0.00027乘以3就会变成0.0008",{"_index":5923,"t":{"2275":{"position":[[0,134]]}}}],["rdt_send和deliver_data()都是单向的通道，但是udt_send和rdt_rec",{"_index":5891,"t":{"2263":{"position":[[215,99]]}}}],["re",{"_index":798,"t":{"249":{"position":[[424,3],[673,4],[690,3]]},"363":{"position":[[675,3],[899,3]]},"400":{"position":[[276,3]]},"414":{"position":[[292,3]]},"416":{"position":[[363,3]]},"420":{"position":[[217,3]]},"426":{"position":[[1176,3]]},"483":{"position":[[453,3]]},"486":{"position":[[571,3]]},"488":{"position":[[471,3]]},"490":{"position":[[377,3]]},"494":{"position":[[784,3]]},"496":{"position":[[523,3]]},"498":{"position":[[216,3]]},"500":{"position":[[481,3]]},"502":{"position":[[332,3]]},"504":{"position":[[567,3]]},"506":{"position":[[288,3]]},"508":{"position":[[288,3]]},"510":{"position":[[244,3]]},"512":{"position":[[225,3]]},"514":{"position":[[321,3]]},"516":{"position":[[226,3]]},"518":{"position":[[241,3]]},"520":{"position":[[241,3]]},"522":{"position":[[241,3]]},"524":{"position":[[313,3]]},"526":{"position":[[322,3]]},"528":{"position":[[280,3]]},"530":{"position":[[178,3]]},"532":{"position":[[204,3]]},"534":{"position":[[145,3]]},"565":{"position":[[758,3]]},"598":{"position":[[446,3]]},"604":{"position":[[506,3]]},"623":{"position":[[172,3]]},"625":{"position":[[243,3]]},"776":{"position":[[71,18]]},"778":{"position":[[72,18]]},"782":{"position":[[108,4]]},"803":{"position":[[43,4]]},"808":{"position":[[32,4],[102,4]]},"810":{"position":[[304,4],[373,4]]},"819":{"position":[[30,4]]},"825":{"position":[[237,4],[333,4],[390,4]]},"827":{"position":[[48,4]]},"829":{"position":[[43,4],[116,4]]},"831":{"position":[[315,4],[484,4],[557,4]]},"833":{"position":[[195,4],[362,4],[435,4]]},"835":{"position":[[37,4],[130,4]]},"837":{"position":[[117,3]]},"841":{"position":[[126,4]]},"847":{"position":[[361,4],[719,4]]},"879":{"position":[[178,4]]},"881":{"position":[[36,4]]},"904":{"position":[[49,8]]},"908":{"position":[[49,8]]},"910":{"position":[[93,8],[105,3],[611,3]]},"912":{"position":[[321,3]]},"914":{"position":[[248,4]]},"1312":{"position":[[340,3]]},"1395":{"position":[[543,3]]},"1399":{"position":[[1053,3]]},"1842":{"position":[[216,3],[350,3],[428,3],[555,3],[671,3]]},"1844":{"position":[[471,4]]},"1872":{"position":[[268,5],[330,5],[2819,5],[2830,3]]},"1876":{"position":[[1417,5],[1428,3]]},"1964":{"position":[[509,5]]},"1966":{"position":[[170,3]]},"1974":{"position":[[177,3]]}}}],["re.findall(ex",{"_index":686,"t":{"179":{"position":[[182,14],[593,14]]},"221":{"position":[[182,14],[593,14]]},"1165":{"position":[[182,14],[593,14]]}}}],["reach",{"_index":3600,"t":{"1420":{"position":[[1428,5]]}}}],["react",{"_index":636,"t":{"150":{"position":[[782,5]]},"319":{"position":[[782,5]]},"1017":{"position":[[53,5],[140,5]]},"1092":{"position":[[67,5],[73,8],[115,5],[178,5],[203,5],[2768,7],[2915,6],[4079,5]]},"1223":{"position":[[474,5],[1703,5],[2356,5],[2383,10],[2784,5],[2887,5],[4082,5]]},"1235":{"position":[[21,5]]},"1244":{"position":[[0,5],[30,7],[54,5],[131,9],[282,5],[371,5]]},"1248":{"position":[[11,5],[1837,5],[1877,6]]},"1251":{"position":[[0,5],[45,5],[94,5],[208,14],[870,5],[998,5]]},"1253":{"position":[[80,5]]},"1255":{"position":[[169,8]]},"1261":{"position":[[492,5]]},"1263":{"position":[[494,5],[665,5],[823,5],[1865,7]]},"1265":{"position":[[149,5]]},"1267":{"position":[[0,5],[76,5],[378,13],[531,5],[567,5],[668,5],[807,5]]},"1271":{"position":[[2,5],[60,7],[117,24],[214,5]]},"1273":{"position":[[31,5],[47,5],[290,5],[328,5],[338,5],[418,5],[473,5]]},"1275":{"position":[[243,5],[332,5],[362,6]]},"1281":{"position":[[150,5],[176,5]]},"1283":{"position":[[68,8]]},"1285":{"position":[[57,16]]},"1287":{"position":[[0,36]]},"1289":{"position":[[47,5],[145,9]]},"1295":{"position":[[4,5],[50,5],[214,5],[273,18]]},"1297":{"position":[[80,10],[132,8],[277,5],[312,5],[318,13],[384,5],[629,21],[670,5],[699,6]]},"1299":{"position":[[40,5],[46,17],[82,5],[100,5]]},"1301":{"position":[[23,5]]},"1304":{"position":[[0,5]]},"1306":{"position":[[0,5],[48,5]]},"1310":{"position":[[24,5],[49,5],[78,5]]},"1312":{"position":[[0,5],[128,5],[411,5]]},"1995":{"position":[[1057,6]]},"2012":{"position":[[80,14]]}}}],["react\";class",{"_index":3067,"t":{"1312":{"position":[[139,13]]}}}],["react';import",{"_index":2560,"t":{"1092":{"position":[[214,14]]},"1248":{"position":[[1848,14]]}}}],["react,docusauru",{"_index":2353,"t":{"1006":{"position":[[478,18]]}}}],["react.compon",{"_index":2818,"t":{"1223":{"position":[[571,15],[2123,15],[3073,15]]},"1237":{"position":[[90,15]]},"1239":{"position":[[118,15],[755,15]]},"1248":{"position":[[847,15],[961,15],[1459,15]]},"1251":{"position":[[118,15],[170,15]]},"1255":{"position":[[34,15]]},"1257":{"position":[[85,15]]},"1259":{"position":[[44,15]]},"1261":{"position":[[153,15],[320,15]]},"1263":{"position":[[110,15],[882,16],[1102,15],[1623,15]]},"1287":{"position":[[117,15]]},"1289":{"position":[[19,15],[386,15]]},"1291":{"position":[[65,15]]},"1295":{"position":[[357,15]]},"1297":{"position":[[13,32]]},"1299":{"position":[[185,15]]},"1312":{"position":[[174,15]]}}}],["react.createel",{"_index":2980,"t":{"1269":{"position":[[69,20]]},"1271":{"position":[[394,20],[725,20]]},"1273":{"position":[[121,19],[192,19],[232,31],[613,19]]},"1275":{"position":[[178,19]]}}}],["react.createelement(\"div",{"_index":2992,"t":{"1271":{"position":[[482,26]]}}}],["react.createelement(\"input",{"_index":2993,"t":{"1271":{"position":[[548,28]]}}}],["react.createelement('div",{"_index":2942,"t":{"1251":{"position":[[653,26]]}}}],["react.createelement('h1",{"_index":2945,"t":{"1251":{"position":[[710,25]]}}}],["react.createelement('ul",{"_index":2946,"t":{"1251":{"position":[[764,25]]}}}],["react.createelement(button",{"_index":2984,"t":{"1269":{"position":[[188,27]]},"1271":{"position":[[606,27]]}}}],["react.j",{"_index":2341,"t":{"999":{"position":[[26,8]]},"1265":{"position":[[19,8]]},"1267":{"position":[[784,22]]},"1269":{"position":[[21,8]]},"2018":{"position":[[274,8]]}}}],["react.js构建的字眼就慌了，但是其实你并不需要去掌握react，docusaurus的高度达到了在你没有掌握这个技术的基础上能够让你从它的文档出发，调用api",{"_index":2487,"t":{"1042":{"position":[[552,111]]}}}],["reactdom",{"_index":2927,"t":{"1248":{"position":[[1863,8]]},"1267":{"position":[[314,25],[596,8]]}}}],["reactdom.createroot(document.getelementbyid(\"root\"));root.render(<gam",{"_index":2926,"t":{"1248":{"position":[[1717,70]]}}}],["reactdom.rend",{"_index":2976,"t":{"1267":{"position":[[402,15]]},"1273":{"position":[[68,15]]},"1279":{"position":[[439,18]]},"1281":{"position":[[473,19]]},"1297":{"position":[[115,16]]},"1312":{"position":[[246,18],[425,15]]}}}],["reactdom.render(<button",{"_index":3029,"t":{"1287":{"position":[[195,32]]},"1289":{"position":[[536,25]]},"1291":{"position":[[280,25]]}}}],["reactdom.render(<counterbutton",{"_index":3064,"t":{"1299":{"position":[[671,32]]}}}],["reactdom.render(<doubl",{"_index":3027,"t":{"1283":{"position":[[297,24]]}}}],["reactdom.render(<form",{"_index":3049,"t":{"1295":{"position":[[571,23]]}}}],["reactdom.render(<randomvalu",{"_index":3008,"t":{"1277":{"position":[[117,31]]}}}],["reactimport",{"_index":3066,"t":{"1312":{"position":[[116,11]]}}}],["reactnebula",{"_index":2712,"t":{"1106":{"position":[[9,11],[109,14],[146,12]]}}}],["react、vue、vscod",{"_index":2791,"t":{"1184":{"position":[[18,87]]}}}],["react和vue了。2013年，facebook的前端团队设计了一个崭新的前端框架，它将网页的各个部分拆分成一个个的组件，使用虚拟dom将页面上的节点存储在内存中，将视图和数据进行绑定。视图的显示完全由数据和模板来驱动，这样当数据发生变化时，开发者不需要考虑如何去进行dom操作，框架会自动以高效的方式去更新虚拟dom",{"_index":669,"t":{"161":{"position":[[276,217]]},"330":{"position":[[276,217]]}}}],["react如今已成为和vue、angular",{"_index":2889,"t":{"1244":{"position":[[141,67]]}}}],["react官方的教程，学习react",{"_index":2890,"t":{"1244":{"position":[[209,53]]}}}],["react我们希望在屏幕上呈现的内容。正是因为函数式声明，使得在数据发生变化时react",{"_index":2938,"t":{"1251":{"position":[[414,75]]}}}],["react扩展的js语法，jsx",{"_index":2941,"t":{"1251":{"position":[[595,17]]}}}],["react推出了react",{"_index":634,"t":{"150":{"position":[[707,16]]},"319":{"position":[[707,16]]}}}],["read",{"_index":613,"t":{"145":{"position":[[23,4]]},"163":{"position":[[24,4]]},"165":{"position":[[22,4]]},"175":{"position":[[22,4]]},"194":{"position":[[22,4]]},"204":{"position":[[22,4]]},"1406":{"position":[[554,4]]}}}],["read=\"afterread",{"_index":4971,"t":{"1981":{"position":[[1032,16]]}}}],["read_only|read_writ",{"_index":1878,"t":{"700":{"position":[[282,26]]}}}],["readabl",{"_index":2691,"t":{"1096":{"position":[[292,11]]}}}],["readasdataurl语句会把图片读为base64",{"_index":3129,"t":{"1323":{"position":[[936,33]]}}}],["reader",{"_index":3120,"t":{"1323":{"position":[[673,6]]}}}],["reader.onload",{"_index":3123,"t":{"1323":{"position":[[769,13],[1037,13]]}}}],["reader.readasdataurl(el.target.files[0",{"_index":3122,"t":{"1323":{"position":[[712,41],[970,41]]}}}],["readfil",{"_index":2262,"t":{"950":{"position":[[132,8],[908,8]]}}}],["readm",{"_index":2511,"t":{"1049":{"position":[[488,11]]}}}],["readme.md",{"_index":2510,"t":{"1049":{"position":[[475,9]]}}}],["readtolist(btre",{"_index":447,"t":{"103":{"position":[[17,16]]},"200":{"position":[[17,16]]}}}],["readyst",{"_index":199,"t":{"37":{"position":[[376,10]]}}}],["rece",{"_index":4639,"t":{"1876":{"position":[[152,8],[290,5],[1306,5]]}}}],["receid:this.data.recrid",{"_index":4653,"t":{"1876":{"position":[[1337,24]]}}}],["recevbas",{"_index":5944,"t":{"2281":{"position":[[334,18]]}}}],["recevbase，recevbase+n",{"_index":5942,"t":{"2281":{"position":[[232,25]]}}}],["recommend",{"_index":2521,"t":{"1058":{"position":[[227,11],[344,11]]},"1108":{"position":[[61,12],[358,12]]}}}],["recrid",{"_index":4640,"t":{"1876":{"position":[[161,9]]}}}],["recrid:ress.data[0]._openid",{"_index":4650,"t":{"1876":{"position":[[1023,27]]}}}],["rect",{"_index":1258,"t":{"439":{"position":[[139,5],[165,5]]},"441":{"position":[[16,4],[114,5]]}}}],["rect(10",{"_index":1270,"t":{"441":{"position":[[139,8]]}}}],["rect(10,20",{"_index":1274,"t":{"441":{"position":[[225,12]]}}}],["rect(33",{"_index":1272,"t":{"441":{"position":[[169,8]]}}}],["rect(doubl",{"_index":1261,"t":{"439":{"position":[[185,11]]}}}],["rectangle(90",{"_index":444,"t":{"101":{"position":[[1614,15]]},"198":{"position":[[1614,15]]}}}],["rectangleon",{"_index":1268,"t":{"441":{"position":[[21,13],[35,12]]}}}],["rectangleone.computegirth",{"_index":1276,"t":{"441":{"position":[[341,28]]}}}],["rectangleone.sidea=10;rectangleone.sideb=20;rectangleone.computearea",{"_index":1275,"t":{"441":{"position":[[271,69]]}}}],["rectangleone=new",{"_index":1269,"t":{"441":{"position":[[97,16],[120,18],[208,16]]}}}],["recurs",{"_index":5232,"t":{"2068":{"position":[[70,9]]}}}],["red",{"_index":2044,"t":{"853":{"position":[[326,4]]},"1279":{"position":[[381,6]]},"1281":{"position":[[397,6]]},"1380":{"position":[[220,6],[336,6]]}}}],["redirectto",{"_index":4761,"t":{"1928":{"position":[[827,10]]}}}],["reduc",{"_index":4422,"t":{"1803":{"position":[[0,8],[37,8],[79,8],[819,8]]},"1805":{"position":[[74,9]]},"2516":{"position":[[58,8]]}}}],["reduceright",{"_index":4423,"t":{"1803":{"position":[[64,14]]},"1805":{"position":[[0,13],[42,13],[84,13]]}}}],["redux，flux",{"_index":3005,"t":{"1275":{"position":[[319,10]]}}}],["ref='threedom'></div",{"_index":3152,"t":{"1334":{"position":[[110,23]]}}}],["refactor",{"_index":568,"t":{"124":{"position":[[182,8]]},"126":{"position":[[379,9]]}}}],["refer",{"_index":5483,"t":{"2144":{"position":[[83,9]]},"2516":{"position":[[43,11],[84,17]]}}}],["reference)和nr(no",{"_index":6299,"t":{"2516":{"position":[[67,16]]}}}],["referenceerror",{"_index":4053,"t":{"1624":{"position":[[239,15]]}}}],["referencenam",{"_index":1390,"t":{"488":{"position":[[140,13],[159,13]]}}}],["reflect",{"_index":2078,"t":{"853":{"position":[[721,8]]}}}],["refresh",{"_index":3259,"t":{"1346":{"position":[[463,31]]}}}],["regist",{"_index":4719,"t":{"1918":{"position":[[424,8]]}}}],["regscript",{"_index":2120,"t":{"857":{"position":[[110,9]]},"867":{"position":[[154,9]]}}}],["regscript.exec(htmlstr",{"_index":2142,"t":{"863":{"position":[[54,24]]},"867":{"position":[[920,24]]}}}],["regstyl",{"_index":2118,"t":{"857":{"position":[[67,8]]},"867":{"position":[[111,8]]}}}],["regstyle.exec(htmlstr",{"_index":2133,"t":{"861":{"position":[[55,23]]},"867":{"position":[[542,23]]}}}],["reimport",{"_index":689,"t":{"179":{"position":[[249,8]]},"221":{"position":[[249,8]]},"1165":{"position":[[249,8]]}}}],["rel",{"_index":3834,"t":{"1515":{"position":[[995,9],[1363,9],[1432,9]]},"1518":{"position":[[163,9]]}}}],["rel=\"icon",{"_index":3918,"t":{"1561":{"position":[[323,10]]}}}],["rel=\"stylesheet",{"_index":2153,"t":{"865":{"position":[[123,16]]},"867":{"position":[[1309,16]]},"1563":{"position":[[153,20],[211,16]]}}}],["relaunch",{"_index":4763,"t":{"1928":{"position":[[881,8]]}}}],["releas",{"_index":575,"t":{"124":{"position":[[350,7]]},"126":{"position":[[115,7]]}}}],["release报文后，会回收相应的ip",{"_index":5717,"t":{"2197":{"position":[[978,27]]}}}],["release报文来释放这个ip地址，并开始新的ip",{"_index":5731,"t":{"2197":{"position":[[1409,33]]}}}],["release报文释放自己的ip地址，dhcp",{"_index":5716,"t":{"2197":{"position":[[941,23]]}}}],["reliabl",{"_index":5887,"t":{"2263":{"position":[[0,15]]}}}],["remov",{"_index":2436,"t":{"1017":{"position":[[1265,6],[1280,6],[1506,6],[1521,6]]},"1039":{"position":[[200,6],[215,6],[429,6],[444,6]]}}}],["render",{"_index":69,"t":{"10":{"position":[[1472,8]]},"20":{"position":[[13,8]]},"23":{"position":[[16,8],[511,8]]},"25":{"position":[[288,8],[460,19],[783,7]]},"1223":{"position":[[1910,6],[1975,6],[2141,8],[2409,8],[3401,8]]},"1237":{"position":[[41,6]]},"1239":{"position":[[566,6],[608,8],[1158,8]]},"1241":{"position":[[467,6],[573,6],[604,8]]},"1248":{"position":[[865,8],[1018,8],[1477,8]]},"1251":{"position":[[188,8]]},"1255":{"position":[[52,8]]},"1257":{"position":[[142,8]]},"1259":{"position":[[62,8]]},"1261":{"position":[[240,6],[338,8]]},"1263":{"position":[[53,8],[128,8],[1197,8],[1334,6],[1565,6],[1718,8]]},"1267":{"position":[[371,6]]},"1271":{"position":[[803,7]]},"1273":{"position":[[1027,7]]},"1287":{"position":[[135,8]]},"1289":{"position":[[80,17],[463,8]]},"1291":{"position":[[174,8]]},"1295":{"position":[[461,8]]},"1297":{"position":[[91,6]]},"1299":{"position":[[478,8]]},"1312":{"position":[[15,8],[97,8],[192,8]]}}}],["render()进行渲染，这样threej",{"_index":113,"t":{"25":{"position":[[791,76]]}}}],["render()，函数中定义了三个语句，通过setinterval(\"render()\",20",{"_index":93,"t":{"23":{"position":[[184,62]]}}}],["renderer.domelement);//创建控件对象controls.addeventlistener('chang",{"_index":109,"t":{"25":{"position":[[395,64]]}}}],["renderer.render(scen",{"_index":75,"t":{"10":{"position":[[1688,22]]},"20":{"position":[[213,33]]},"23":{"position":[[27,22],[522,22]]},"25":{"position":[[299,22]]}}}],["renderer.setclearcolor(0xb9d3ff",{"_index":72,"t":{"10":{"position":[[1553,32]]}}}],["renderer.setsize(width",{"_index":71,"t":{"10":{"position":[[1510,23]]}}}],["renderer/themes/dracula",{"_index":2395,"t":{"1017":{"position":[[146,26]]}}}],["renderer/themes/github",{"_index":2392,"t":{"1017":{"position":[[59,25]]}}}],["rendersquar",{"_index":2826,"t":{"1223":{"position":[[863,12],[1205,12],[1557,12]]},"1261":{"position":[[70,12]]}}}],["rendersquare(i",{"_index":2823,"t":{"1223":{"position":[[696,15],[888,15],[1229,15],[1581,15],[3292,15]]},"1239":{"position":[[1049,15]]},"1248":{"position":[[979,15]]},"1257":{"position":[[103,15]]},"1261":{"position":[[171,15]]}}}],["rep",{"_index":796,"t":{"249":{"position":[[384,3]]},"363":{"position":[[645,3]]}}}],["repeat",{"_index":3809,"t":{"1511":{"position":[[488,7],[499,7]]},"2010":{"position":[[82,9]]},"2267":{"position":[[94,6]]}}}],["repl",{"_index":2978,"t":{"1267":{"position":[[451,4]]},"1293":{"position":[[183,4]]}}}],["replac",{"_index":2274,"t":{"950":{"position":[[948,7]]},"1017":{"position":[[968,7]]},"1844":{"position":[[0,9],[149,9],[184,13],[354,13]]}}}],["replace(\"</script",{"_index":2144,"t":{"863":{"position":[[139,24]]},"867":{"position":[[1004,24]]}}}],["replace(\"</styl",{"_index":2136,"t":{"861":{"position":[[138,23]]},"867":{"position":[[656,23]]}}}],["replace(regscript",{"_index":2155,"t":{"865":{"position":[[163,19]]},"867":{"position":[[1349,19]]}}}],["replace(regstyl",{"_index":2151,"t":{"865":{"position":[[97,18]]},"867":{"position":[[1283,18]]}}}],["repo",{"_index":1026,"t":{"293":{"position":[[883,4],[1030,4]]},"378":{"position":[[105,4],[252,4]]},"1017":{"position":[[789,4],[1256,5],[1497,5]]},"1039":{"position":[[191,5],[420,5]]},"1080":{"position":[[105,4],[252,4]]}}}],["repositori",{"_index":967,"t":{"287":{"position":[[178,10]]},"365":{"position":[[178,10]]},"1122":{"position":[[26,12],[85,18]]},"1126":{"position":[[143,12]]},"1190":{"position":[[42,12],[101,18]]}}}],["repository_dispatch",{"_index":983,"t":{"289":{"position":[[167,20]]}}}],["republ",{"_index":4473,"t":{"1838":{"position":[[85,8],[240,8],[404,8],[571,8]]},"1840":{"position":[[81,8]]}}}],["req",{"_index":1920,"t":{"776":{"position":[[52,18]]},"778":{"position":[[53,18]]},"782":{"position":[[102,5]]},"803":{"position":[[37,5]]},"808":{"position":[[26,5],[96,5]]},"810":{"position":[[298,5],[367,5]]},"819":{"position":[[25,4]]},"825":{"position":[[231,5],[327,5],[384,5]]},"827":{"position":[[42,5]]},"829":{"position":[[37,5],[110,5]]},"831":{"position":[[116,3],[309,5],[372,6],[478,5],[551,5]]},"833":{"position":[[189,5],[252,6],[356,5],[429,5]]},"835":{"position":[[31,5],[124,5]]},"837":{"position":[[111,3]]},"841":{"position":[[120,5]]},"847":{"position":[[355,5],[713,5]]},"879":{"position":[[172,5]]},"881":{"position":[[30,5]]},"908":{"position":[[61,24],[382,5]]},"914":{"position":[[242,5]]}}}],["req,r",{"_index":2205,"t":{"910":{"position":[[401,9]]},"912":{"position":[[63,9]]}}}],["req.method",{"_index":2192,"t":{"908":{"position":[[113,10],[200,15],[441,10],[477,11]]},"910":{"position":[[202,15],[464,10],[500,11]]},"912":{"position":[[126,10],[162,11]]}}}],["req.param",{"_index":1942,"t":{"786":{"position":[[5,10]]}}}],["req.queri",{"_index":1936,"t":{"784":{"position":[[3,9],[69,9],[141,9]]}}}],["req.starttim",{"_index":2005,"t":{"831":{"position":[[379,13],[589,20]]},"833":{"position":[[259,13],[467,20]]},"835":{"position":[[162,18]]},"841":{"position":[[158,18]]}}}],["req.starttime);});//或者app.get",{"_index":2011,"t":{"835":{"position":[[69,34]]}}}],["req.starttime);});app.get(\"/us",{"_index":2007,"t":{"831":{"position":[[516,34]]},"833":{"position":[[394,34]]}}}],["req.url",{"_index":2175,"t":{"881":{"position":[[80,8]]},"908":{"position":[[89,7],[396,7],[429,8]]},"910":{"position":[[419,7],[452,8]]},"912":{"position":[[81,7],[114,8]]},"914":{"position":[[270,8]]}}}],["req.url},and",{"_index":2193,"t":{"908":{"position":[[167,14]]},"910":{"position":[[169,14]]}}}],["request",{"_index":153,"t":{"33":{"position":[[110,7],[159,7],[435,7]]},"37":{"position":[[106,7],[760,7]]},"66":{"position":[[40,8]]},"171":{"position":[[40,8]]},"249":{"position":[[24,8]]},"273":{"position":[[309,9],[363,9]]},"879":{"position":[[132,7]]},"904":{"position":[[14,7],[61,40]]},"908":{"position":[[14,7],[152,7],[182,7],[507,7],[533,7],[741,7],[763,7],[837,7],[869,7]]},"910":{"position":[[4,7],[58,7],[154,7],[184,7],[530,7],[557,7],[790,7],[822,7],[848,7],[881,7]]},"912":{"position":[[192,7],[219,7]]},"1989":{"position":[[417,10]]},"2049":{"position":[[149,7]]},"2136":{"position":[[266,8]]},"2291":{"position":[[462,10]]}}}],["request.arg",{"_index":169,"t":{"33":{"position":[[591,12]]}}}],["request.args.get('id",{"_index":269,"t":{"51":{"position":[[74,22],[202,22]]}}}],["request.args.to_dict",{"_index":178,"t":{"33":{"position":[[771,22]]}}}],["request.onreadystatechang",{"_index":198,"t":{"37":{"position":[[336,26],[893,26]]}}}],["request.open(\"get",{"_index":194,"t":{"37":{"position":[[148,19],[822,19]]}}}],["request.readyst",{"_index":202,"t":{"37":{"position":[[430,19],[933,19]]}}}],["request.send",{"_index":210,"t":{"37":{"position":[[674,15],[1133,15]]}}}],["request.statu",{"_index":201,"t":{"37":{"position":[[391,22],[459,14],[962,14]]}}}],["request_url",{"_index":291,"t":{"66":{"position":[[286,17],[522,11]]},"171":{"position":[[286,17],[522,11]]}}}],["requestanimationframe()代替setinterv",{"_index":96,"t":{"23":{"position":[[371,63]]}}}],["requestanimationframe()和setinterval()一样都是浏览器window",{"_index":97,"t":{"23":{"position":[[435,59]]}}}],["requestanimationframe(render);//请求再次执行渲染函数render}render();//执行渲染函数rend",{"_index":99,"t":{"23":{"position":[[597,72]]}}}],["requestanimationframe(this.anim",{"_index":3280,"t":{"1346":{"position":[[1222,36]]}}}],["requests.get(host)if",{"_index":288,"t":{"66":{"position":[[230,20]]},"171":{"position":[[230,20]]}}}],["requests.get(img",{"_index":717,"t":{"179":{"position":[[818,17]]},"221":{"position":[[818,17]]},"1165":{"position":[[818,17]]}}}],["requests.get(loginlink",{"_index":797,"t":{"249":{"position":[[390,23]]},"363":{"position":[[651,23]]}}}],["requests.get(url",{"_index":709,"t":{"179":{"position":[[513,17]]},"221":{"position":[[513,17]]},"1165":{"position":[[513,17]]}}}],["requests.get(url=tableurl",{"_index":805,"t":{"249":{"position":[[696,26]]},"363":{"position":[[905,26]]}}}],["requests.post(f'https://api.github.com/repos/<your",{"_index":1150,"t":{"380":{"position":[[488,50]]}}}],["requests.post(f'https://api.github.com/repos/你的用户名/reportpeace/dispatch",{"_index":1032,"t":{"295":{"position":[[424,75]]}}}],["requests.post(request_url",{"_index":308,"t":{"66":{"position":[[641,26]]},"171":{"position":[[641,26]]}}}],["requestsdef",{"_index":690,"t":{"179":{"position":[[258,11]]},"221":{"position":[[258,11]]},"295":{"position":[[243,11]]},"380":{"position":[[302,11]]},"1165":{"position":[[258,11]]}}}],["requestsimport",{"_index":789,"t":{"249":{"position":[[76,14]]}}}],["request报文后，判断选项字段中的ip地址是否与自己的地址相同。如果不相同，dhcp",{"_index":5700,"t":{"2197":{"position":[[549,44]]}}}],["request报文和respons",{"_index":5985,"t":{"2291":{"position":[[438,23]]}}}],["request报文，在选项字段中会加入选中的dhcp",{"_index":5696,"t":{"2197":{"position":[[481,26]]}}}],["request），在管理员审核过后，就可以自动比较二者不一样的地方，进行合并（merg",{"_index":2787,"t":{"1182":{"position":[[324,46]]},"1909":{"position":[[361,46]]}}}],["request，arq",{"_index":5898,"t":{"2267":{"position":[[101,12]]}}}],["requir",{"_index":2185,"t":{"900":{"position":[[6,7]]},"962":{"position":[[3,7],[134,7]]},"973":{"position":[[3,7]]},"980":{"position":[[13,7]]},"1981":{"position":[[227,8],[303,8],[387,8],[438,8],[741,8]]}}}],["require(\"./06.rout",{"_index":1985,"t":{"810":{"position":[[569,25]]},"825":{"position":[[178,25]]},"831":{"position":[[256,25]]},"833":{"position":[[136,25]]}}}],["require(\"./m1.j",{"_index":2293,"t":{"964":{"position":[[101,19]]}}}],["require(\"./m1.js\");console.log(m1",{"_index":2312,"t":{"971":{"position":[[244,35]]}}}],["require(\"daisyui",{"_index":351,"t":{"84":{"position":[[91,22]]},"90":{"position":[[103,21]]}}}],["require(\"express",{"_index":1930,"t":{"782":{"position":[[34,21]]},"789":{"position":[[275,21]]},"810":{"position":[[494,21]]},"825":{"position":[[103,21]]},"831":{"position":[[181,21]]},"833":{"position":[[61,21]]},"847":{"position":[[286,21],[620,21]]}}}],["require(\"fs\");const",{"_index":2115,"t":{"857":{"position":[[11,19]]},"867":{"position":[[19,19]]},"879":{"position":[[11,19]]}}}],["require(\"fs\");fs.readfile(\"11.txt",{"_index":2238,"t":{"939":{"position":[[282,35]]}}}],["require(\"fs\");fs.readfile(\"no.txt",{"_index":2240,"t":{"939":{"position":[[620,35]]}}}],["require(\"fs\");fs.readfile(\"成绩.txt",{"_index":2263,"t":{"950":{"position":[[218,35]]}}}],["require(\"fs\");fs.writefile(\"22.txt",{"_index":2248,"t":{"946":{"position":[[11,36]]}}}],["require(\"fs\");fs.writefile(\"f:/11.txt",{"_index":2250,"t":{"946":{"position":[[176,39]]}}}],["require(\"http",{"_index":2170,"t":{"879":{"position":[[67,18]]}}}],["require(\"http\");const",{"_index":2196,"t":{"908":{"position":[[283,21]]},"910":{"position":[[302,21]]},"914":{"position":[[143,21]]}}}],["require(\"path\");//正则表达式const",{"_index":2117,"t":{"857":{"position":[[38,28]]},"867":{"position":[[82,28]]}}}],["require(\"path\");const",{"_index":2160,"t":{"867":{"position":[[53,21]]},"879":{"position":[[38,21]]},"986":{"position":[[13,21],[212,21]]}}}],["require('./custom.j",{"_index":2287,"t":{"962":{"position":[[88,22]]}}}],["require('@site/static/img/undraw_docusaurus_mountain.svg').default",{"_index":2598,"t":{"1092":{"position":[[2265,67],[3083,67]]}}}],["require('@site/static/img/undraw_docusaurus_react.svg').default",{"_index":2613,"t":{"1092":{"position":[[2781,64],[3350,64]]}}}],["require('@site/static/img/undraw_docusaurus_tree.svg').default",{"_index":2607,"t":{"1092":{"position":[[2519,63],[3209,63]]}}}],["require('express",{"_index":1914,"t":{"773":{"position":[[21,20]]},"810":{"position":[[206,20]]}}}],["require('f",{"_index":2285,"t":{"962":{"position":[[40,13]]}}}],["require('fs');fs.readfile('./files/1.txt",{"_index":2278,"t":{"953":{"position":[[102,42]]}}}],["require('fs');fs.readfile('11.txt",{"_index":2241,"t":{"941":{"position":[[11,35]]}}}],["require('fs');fs.readfile(__dirname+'files/1.txt",{"_index":2283,"t":{"955":{"position":[[195,50]]}}}],["require('pr",{"_index":2391,"t":{"1017":{"position":[[38,14],[125,14]]}}}],["require('thre",{"_index":3286,"t":{"1353":{"position":[[107,14],[522,14]]}}}],["require('wx",{"_index":4591,"t":{"1872":{"position":[[649,11]]}}}],["require.resolve(\"@easyop",{"_index":2519,"t":{"1058":{"position":[[133,25]]}}}],["require.resolve('./sidebars.j",{"_index":2433,"t":{"1017":{"position":[[1192,33]]},"1039":{"position":[[127,33]]}}}],["require.resolve('./src/css/custom.css",{"_index":2443,"t":{"1017":{"position":[[1697,40]]},"1039":{"position":[[608,40]]}}}],["req和res，所以我们可以在上游中间件中统一为req和r",{"_index":2003,"t":{"831":{"position":[[0,70]]}}}],["req是请求对象，包含了与客户端相关的属性和数据server.on(\"request",{"_index":2197,"t":{"908":{"position":[[337,44]]},"910":{"position":[[356,44]]},"914":{"position":[[197,44]]}}}],["res.bodi",{"_index":2025,"t":{"847":{"position":[[377,8],[735,8]]}}}],["res.cod",{"_index":4864,"t":{"1974":{"position":[[192,8]]}}}],["res.data",{"_index":4836,"t":{"1966":{"position":[[231,8]]},"1981":{"position":[[2114,8]]}}}],["res.end",{"_index":2203,"t":{"910":{"position":[[221,30]]},"914":{"position":[[89,9]]}}}],["res.end(\"404",{"_index":2178,"t":{"883":{"position":[[105,16]]}}}],["res.end(content);});server.listen(80",{"_index":2220,"t":{"914":{"position":[[510,37]]}}}],["res.end(str",{"_index":2204,"t":{"910":{"position":[[252,15]]},"912":{"position":[[0,41],[345,16]]}}}],["res.end(str);});server.listen(80",{"_index":2206,"t":{"910":{"position":[[635,33]]}}}],["res.return(datastr",{"_index":2179,"t":{"883":{"position":[[139,20]]}}}],["res.send",{"_index":1924,"t":{"780":{"position":[[3,8]]},"782":{"position":[[118,10]]}}}],["res.send(\"homepag",{"_index":2006,"t":{"831":{"position":[[494,19]]},"833":{"position":[[372,19]]},"835":{"position":[[47,19],[140,19]]},"841":{"position":[[136,19]]}}}],["res.send(\"homepage\");});app.get(\"/us",{"_index":1995,"t":{"825":{"position":[[343,40]]}}}],["res.send(\"userpag",{"_index":1996,"t":{"825":{"position":[[400,26]]},"831":{"position":[[567,19]]},"833":{"position":[[445,19]]},"847":{"position":[[420,26],[778,26]]}}}],["res.send('add",{"_index":1983,"t":{"810":{"position":[[383,13]]}}}],["res.send('error!'+err.messag",{"_index":2018,"t":{"845":{"position":[[226,33]]}}}],["res.send('get",{"_index":1981,"t":{"810":{"position":[[314,13]]}}}],["res.send('helloworld",{"_index":1972,"t":{"803":{"position":[[53,26]]},"808":{"position":[[42,28],[112,26]]}}}],["res.send('homepage');})app.use(function(err,req,res,next",{"_index":2016,"t":{"845":{"position":[[131,58]]}}}],["res.send(req.param",{"_index":1945,"t":{"786":{"position":[[98,22],[268,22]]}}}],["res.send({name:'za',age:20,gend",{"_index":1927,"t":{"780":{"position":[[182,41]]}}}],["res.send({name:'za',age:20,gender:'男'})})app.post('/user',function(req,r",{"_index":1926,"t":{"780":{"position":[[85,76]]}}}],["res.setheader(\"cont",{"_index":2217,"t":{"914":{"position":[[451,22]]}}}],["res.setheader('cont",{"_index":2210,"t":{"912":{"position":[[258,22]]}}}],["res.userinfo.avatarurl",{"_index":4587,"t":{"1872":{"position":[[408,23]]}}}],["res:hello",{"_index":4529,"t":{"1846":{"position":[[119,9],[256,9]]}}}],["res[\"token",{"_index":800,"t":{"249":{"position":[[479,12]]},"363":{"position":[[729,12]]}}}],["reset",{"_index":3802,"t":{"1511":{"position":[[190,5]]}}}],["resolution）是灰度分辨率是指在灰度级中可分辨的最小变化，通常把灰度级级数成为图像的灰度级分辨率，常有256、128、···、16、8、2",{"_index":6015,"t":{"2399":{"position":[[127,74]]}}}],["resolv",{"_index":2159,"t":{"867":{"position":[[41,7]]}}}],["resolvecss",{"_index":2111,"t":{"855":{"position":[[65,10]]}}}],["resolvecss(datastr",{"_index":2128,"t":{"859":{"position":[[175,20]]},"867":{"position":[[396,20]]}}}],["resolvecss(htmlstr",{"_index":2131,"t":{"861":{"position":[[9,19]]},"867":{"position":[[496,19]]}}}],["resolvehtml",{"_index":2114,"t":{"855":{"position":[[141,11]]}}}],["resolvehtml(datastr",{"_index":2130,"t":{"859":{"position":[[216,21]]},"867":{"position":[[437,21]]}}}],["resolvehtml(htmlstr",{"_index":2148,"t":{"865":{"position":[[35,20]]},"867":{"position":[[1221,20]]}}}],["resolvej",{"_index":2112,"t":{"855":{"position":[[104,9]]}}}],["resolvejs(datastr",{"_index":2129,"t":{"859":{"position":[[196,19]]},"867":{"position":[[417,19]]}}}],["resolvejs(htmlstr",{"_index":2141,"t":{"863":{"position":[[9,18]]},"867":{"position":[[875,18]]}}}],["resources.load(prefab",{"_index":1056,"t":{"305":{"position":[[57,22]]}}}],["resources=r",{"_index":157,"t":{"33":{"position":[[228,16]]}}}],["respons",{"_index":289,"t":{"66":{"position":[[251,9],[700,9]]},"171":{"position":[[251,9],[700,9]]},"295":{"position":[[413,8]]},"380":{"position":[[477,8]]},"1420":{"position":[[1309,10]]},"2291":{"position":[[473,11]]}}}],["response.json()['access_token']request_url",{"_index":299,"t":{"66":{"position":[[477,42]]},"171":{"position":[[477,42]]}}}],["ress",{"_index":4645,"t":{"1876":{"position":[[595,4],[678,4],[700,4]]}}}],["ress.data.length",{"_index":4633,"t":{"1872":{"position":[[2491,17]]},"1876":{"position":[[1057,17]]}}}],["ress.data[0",{"_index":4646,"t":{"1876":{"position":[[638,12],[783,34]]}}}],["resstr",{"_index":2271,"t":{"950":{"position":[[701,6],[775,8],[810,7]]}}}],["restart",{"_index":1960,"t":{"795":{"position":[[159,7]]},"825":{"position":[[568,7],[793,7]]}}}],["restifi",{"_index":2224,"t":{"923":{"position":[[65,7]]}}}],["result",{"_index":146,"t":{"31":{"position":[[709,10],[827,16]]},"33":{"position":[[475,24],[560,9]]},"37":{"position":[[587,6],[1063,6]]},"49":{"position":[[835,9],[1009,6]]},"51":{"position":[[97,6],[225,6]]},"70":{"position":[[152,6],[266,6],[496,6],[574,6]]},"610":{"position":[[48,6],[177,8],[197,6]]},"1665":{"position":[[426,7]]},"1667":{"position":[[108,7]]},"1872":{"position":[[1084,7]]}}}],["result.class}}</div",{"_index":267,"t":{"49":{"position":[[1072,25]]}}}],["result.length",{"_index":1700,"t":{"610":{"position":[[99,13]]}}}],["result.nam",{"_index":264,"t":{"49":{"position":[[960,11],[1047,18]]}}}],["result[j",{"_index":1702,"t":{"610":{"position":[[147,9]]}}}],["result。id",{"_index":147,"t":{"31":{"position":[[817,9]]}}}],["retr",{"_index":5214,"t":{"2059":{"position":[[478,14]]}}}],["retrieval,cbr",{"_index":6326,"t":{"2530":{"position":[[89,33]]},"2539":{"position":[[89,33]]},"2548":{"position":[[89,33]]}}}],["return",{"_index":174,"t":{"33":{"position":[[699,6],[904,6],[1056,6]]},"49":{"position":[[588,6]]},"51":{"position":[[119,6],[247,6]]},"114":{"position":[[275,6]]},"179":{"position":[[1136,6]]},"211":{"position":[[275,6]]},"221":{"position":[[1136,6]]},"251":{"position":[[302,6]]},"253":{"position":[[142,6]]},"255":{"position":[[1288,6],[1336,6],[1384,6],[1432,6],[1480,6],[1495,6],[2430,6],[2479,6],[2528,6],[2577,6],[2626,6],[2642,6]]},"259":{"position":[[222,6]]},"295":{"position":[[568,6]]},"363":{"position":[[2633,6],[2681,6],[2729,6],[2777,6],[2825,6],[2840,6]]},"380":{"position":[[655,6]]},"437":{"position":[[143,6],[180,6]]},"439":{"position":[[274,6],[320,6]]},"443":{"position":[[700,6],[914,6]]},"583":{"position":[[117,6],[230,6]]},"585":{"position":[[62,6],[164,6]]},"610":{"position":[[170,6]]},"853":{"position":[[1388,6]]},"859":{"position":[[134,6]]},"861":{"position":[[260,6]]},"863":{"position":[[261,6]]},"865":{"position":[[309,6]]},"867":{"position":[[355,6],[778,6],[1124,6],[1495,6]]},"883":{"position":[[98,6]]},"948":{"position":[[76,6]]},"950":{"position":[[311,6],[846,6]]},"1092":{"position":[[848,6],[1295,6],[1764,6],[3523,6],[3845,6]]},"1106":{"position":[[74,6]]},"1165":{"position":[[1136,6]]},"1223":{"position":[[714,6],[906,6],[1247,6],[1599,6],[1754,6],[2152,6],[3310,6],[3445,6]]},"1237":{"position":[[236,6]]},"1239":{"position":[[686,6],[1067,6],[1236,6]]},"1241":{"position":[[366,6],[389,6],[795,6],[986,7]]},"1248":{"position":[[876,6],[997,6],[1062,6],[1488,6]]},"1251":{"position":[[199,6],[646,6]]},"1255":{"position":[[63,6]]},"1257":{"position":[[121,6],[186,6]]},"1259":{"position":[[73,6]]},"1261":{"position":[[189,6],[349,6]]},"1263":{"position":[[139,6],[1208,6],[1729,6]]},"1267":{"position":[[161,6]]},"1269":{"position":[[62,6]]},"1271":{"position":[[718,6]]},"1273":{"position":[[960,6]]},"1287":{"position":[[146,6]]},"1289":{"position":[[474,6]]},"1291":{"position":[[185,6]]},"1295":{"position":[[472,6]]},"1299":{"position":[[316,6],[489,6]]},"1312":{"position":[[203,6],[612,6]]},"1319":{"position":[[9,6]]},"1340":{"position":[[1292,6]]},"1373":{"position":[[802,6]]},"1412":{"position":[[265,6]]},"1414":{"position":[[133,6],[427,6]]},"1416":{"position":[[576,6]]},"1418":{"position":[[98,6]]},"1420":{"position":[[1208,6]]},"1433":{"position":[[172,6]]},"1437":{"position":[[192,6],[239,6],[473,6],[515,6]]},"1472":{"position":[[880,6],[1820,6]]},"1487":{"position":[[353,6]]},"1655":{"position":[[153,6]]},"1661":{"position":[[278,6]]},"1665":{"position":[[228,6],[279,6],[508,6],[558,6]]},"1667":{"position":[[165,6],[246,6]]},"1709":{"position":[[115,6]]},"1713":{"position":[[16,6],[192,6],[262,6]]},"1715":{"position":[[84,6]]},"1794":{"position":[[273,7],[297,7],[309,6]]},"1799":{"position":[[204,6],[263,6],[562,6]]},"1801":{"position":[[195,6],[390,6]]},"1803":{"position":[[240,6],[553,6],[796,6],[954,6],[1253,6]]},"1805":{"position":[[255,6],[469,6]]},"1807":{"position":[[163,6],[357,6]]},"1809":{"position":[[163,6]]},"1811":{"position":[[168,6]]},"1813":{"position":[[176,6]]},"1872":{"position":[[886,6],[1491,6],[1505,6]]},"1876":{"position":[[1133,7]]},"1898":{"position":[[691,6]]},"2003":{"position":[[658,6]]}}}],["return_cod",{"_index":166,"t":{"33":{"position":[[514,15]]},"49":{"position":[[790,14]]}}}],["return_dict",{"_index":165,"t":{"33":{"position":[[500,11]]}}}],["return_dict['result",{"_index":180,"t":{"33":{"position":[[858,21]]}}}],["return_dict['return_cod",{"_index":171,"t":{"33":{"position":[[613,26]]}}}],["return_dict['return_info",{"_index":173,"t":{"33":{"position":[[649,26]]}}}],["return_info",{"_index":167,"t":{"33":{"position":[[537,14]]},"49":{"position":[[812,14]]}}}],["reus",{"_index":2614,"t":{"1092":{"position":[[2907,7],[2955,7]]}}}],["revers",{"_index":3541,"t":{"1412":{"position":[[72,8]]},"1431":{"position":[[96,9]]},"1786":{"position":[[0,9]]}}}],["reverse(int",{"_index":1698,"t":{"610":{"position":[[20,13]]}}}],["reversedmessag",{"_index":3542,"t":{"1412":{"position":[[94,15],[215,16],[334,26]]},"1414":{"position":[[58,17],[102,16],[309,15]]}}}],["reversemessag",{"_index":3477,"t":{"1397":{"position":[[235,15],[332,14]]}}}],["revert",{"_index":572,"t":{"124":{"position":[[298,6]]}}}],["rex",{"_index":3950,"t":{"1582":{"position":[[104,3]]}}}],["rfc894的说明，以太网封装ip数据包的最大长度是1500字节，也就是说以太网最大帧长应该是以太网首部加上1500，再加上7字节的前导同步码和1字节的帧开始定界符，具体就是：7字节前导同步吗＋1字节帧开始定界符＋6字节的目的mac＋6字节的源mac＋2字节的帧类型＋1500＋4字节的fc",{"_index":5361,"t":{"2127":{"position":[[1362,148]]}}}],["rgb",{"_index":6063,"t":{"2424":{"position":[[236,46]]}}}],["rgb(130",{"_index":4933,"t":{"1979":{"position":[[2374,8],[2657,8]]}}}],["rgb(224",{"_index":4935,"t":{"1979":{"position":[[2445,8]]}}}],["rgb(239",{"_index":4942,"t":{"1979":{"position":[[2598,8]]}}}],["rgb)彩色空间表示，计算机显示器的输入需要红、绿、蓝（rgb",{"_index":6062,"t":{"2424":{"position":[[145,70]]}}}],["rgba(0",{"_index":2650,"t":{"1094":{"position":[[406,7],[740,7]]},"1511":{"position":[[691,7],[763,7]]}}}],["rgba(255",{"_index":2048,"t":{"853":{"position":[[394,9]]}}}],["rgba(33",{"_index":3812,"t":{"1511":{"position":[[661,8]]}}}],["rgbblue",{"_index":6196,"t":{"2454":{"position":[[1658,8]]}}}],["rgbgreen",{"_index":6197,"t":{"2454":{"position":[[1677,9]]}}}],["rgbquad",{"_index":6156,"t":{"2454":{"position":[[165,7]]}}}],["rgbquad结构，占4",{"_index":6157,"t":{"2454":{"position":[[173,47],[1589,47]]}}}],["rgbred",{"_index":6198,"t":{"2454":{"position":[[1697,7]]}}}],["rgbreserved；保留字，约定为0}rgbquad",{"_index":6199,"t":{"2454":{"position":[[1715,29]]}}}],["rgb三原色构成图像，其中rbg",{"_index":6061,"t":{"2424":{"position":[[96,48]]}}}],["rgb）三基色模型、色度、饱和度、亮度（hsi）模型、欧洲定义的pal制使用的yuv模型，以演播室质量标准为目标的彩色图象压缩方案中采用的ycbcr颜色模型和印刷业常用的cmy,cmyk",{"_index":6053,"t":{"2416":{"position":[[0,123]]}}}],["rider",{"_index":1041,"t":{"303":{"position":[[13,5]]}}}],["right",{"_index":2043,"t":{"853":{"position":[[319,6]]},"1017":{"position":[[2144,8]]},"1037":{"position":[[445,8]]},"1248":{"position":[[540,6]]},"1255":{"position":[[371,6]]},"1366":{"position":[[970,6]]}}}],["riluo",{"_index":3403,"t":{"1368":{"position":[[207,5],[691,9],[707,8],[727,5]]}}}],["rint",{"_index":1444,"t":{"502":{"position":[[0,6]]}}}],["rint(doubl",{"_index":1445,"t":{"502":{"position":[[46,11]]}}}],["rip",{"_index":5778,"t":{"2218":{"position":[[194,7]]},"2220":{"position":[[197,30]]}}}],["rip协议、ospf协议，它们是内部网关协议，本文介绍外部网关协议，bord",{"_index":5787,"t":{"2222":{"position":[[0,45]]}}}],["rip协议中“距离”定义为“跳数”，每经过一个路由，跳数加1",{"_index":5776,"t":{"2218":{"position":[[133,31]]}}}],["rip协议是基于距离向量算法的协议，所以rip",{"_index":5781,"t":{"2218":{"position":[[457,53]]}}}],["rip和ospf还有isis协议属于域内路由协议，bgp",{"_index":5794,"t":{"2224":{"position":[[0,37]]}}}],["rip每30",{"_index":5780,"t":{"2218":{"position":[[401,55]]}}}],["rip简单的将网络的距离定义为“跳数”。路由器与路由器直连的距离都是1，每经过一个路由器，跳数就加1，rip认为一个好的路由就是它通过的路由器的数目少。rip限定了无穷大等于16跳。所以实际上rip能支持的网络规模很小，在一条路由上若超过了15台路由器，那么rip",{"_index":5779,"t":{"2218":{"position":[[261,139]]}}}],["rip（rout",{"_index":5772,"t":{"2218":{"position":[[11,11]]}}}],["rm",{"_index":6255,"t":{"2473":{"position":[[444,23]]}}}],["robin",{"_index":4373,"t":{"1779":{"position":[[311,9]]}}}],["role=\"img",{"_index":2623,"t":{"1092":{"position":[[3635,10]]}}}],["role=\"presentation\"></li",{"_index":3640,"t":{"1441":{"position":[[140,25]]}}}],["root",{"_index":2635,"t":{"1094":{"position":[[79,5],[1481,5],[1839,5]]},"1096":{"position":[[268,5]]},"1248":{"position":[[1710,4]]},"2068":{"position":[[532,4]]}}}],["root、tld、authorit",{"_index":5242,"t":{"2068":{"position":[[720,26]]}}}],["rot:x",{"_index":6129,"t":{"2443":{"position":[[836,12]]}}}],["rot=0",{"_index":6128,"t":{"2443":{"position":[[814,6]]}}}],["round",{"_index":392,"t":{"95":{"position":[[203,7]]},"504":{"position":[[0,7],[37,5]]},"2088":{"position":[[55,6]]}}}],["round(doubl",{"_index":1457,"t":{"504":{"position":[[174,12]]}}}],["round(float",{"_index":1458,"t":{"504":{"position":[[194,11]]}}}],["rout",{"_index":3409,"t":{"1368":{"position":[[406,7]]}}}],["router",{"_index":1979,"t":{"810":{"position":[[239,6],[438,6],[560,6],[734,6]]},"825":{"position":[[169,6]]},"831":{"position":[[247,6]]},"833":{"position":[[127,6]]},"1364":{"position":[[318,12]]},"1366":{"position":[[432,7],[523,8],[1262,7],[1396,8],[1567,7],[1653,8],[1668,7],[1749,8],[1764,7],[1847,8],[1862,7],[1944,8],[1973,7],[2114,8],[2129,7],[2268,8],[2553,7]]},"1368":{"position":[[339,6],[397,8]]},"2068":{"position":[[397,11],[426,6]]},"2216":{"position":[[151,29]]}}}],["router'vue.use(router)export",{"_index":3408,"t":{"1368":{"position":[[356,28]]}}}],["router.get('/user/list",{"_index":1980,"t":{"810":{"position":[[267,30]]}}}],["router.j",{"_index":1977,"t":{"810":{"position":[[168,9]]}}}],["router.jsconst",{"_index":1978,"t":{"810":{"position":[[181,14]]}}}],["router.use(function(req,res,next",{"_index":2012,"t":{"843":{"position":[[40,34]]}}}],["routing，cidr",{"_index":5624,"t":{"2191":{"position":[[29,13]]}}}],["row",{"_index":1789,"t":{"639":{"position":[[33,8]]},"1223":{"position":[[3521,5],[3625,5],[3729,5]]},"1239":{"position":[[1312,5],[1416,5],[1520,5]]},"1248":{"position":[[1138,5],[1242,5],[1346,5]]},"1257":{"position":[[262,5],[366,5],[470,5]]},"1366":{"position":[[884,3],[2794,4]]},"1860":{"position":[[38,8]]}}}],["row:aft",{"_index":2904,"t":{"1248":{"position":[[314,9]]}}}],["row;}.gam",{"_index":2921,"t":{"1248":{"position":[[736,10]]}}}],["rpx",{"_index":4808,"t":{"1960":{"position":[[312,7],[347,3]]},"2005":{"position":[[149,3]]}}}],["rr",{"_index":6298,"t":{"2516":{"position":[[55,2]]}}}],["rs",{"_index":1962,"t":{"795":{"position":[[186,4]]}}}],["rs`[nodemon",{"_index":1997,"t":{"825":{"position":[[595,13],[820,13]]}}}],["rst",{"_index":5859,"t":{"2247":{"position":[[1441,16],[1482,30]]}}}],["rt",{"_index":5388,"t":{"2136":{"position":[[257,8]]}}}],["rtl",{"_index":367,"t":{"90":{"position":[[230,4]]},"92":{"position":[[445,4],[542,3]]}}}],["rts后，将响应ct",{"_index":5390,"t":{"2136":{"position":[[327,16]]}}}],["rtt",{"_index":5117,"t":{"2045":{"position":[[882,3],[908,12],[1051,3]]},"2088":{"position":[[51,3],[163,3]]}}}],["rtt(rtt并非是恒定的数值），使用传输轮次是为了强调，把拥塞窗口cwnd所允许发送的报文段都连续发送出去，并收到了对已发送的最后一个报文段的确认，拥塞窗口cwnd",{"_index":5816,"t":{"2236":{"position":[[286,166]]}}}],["rtt用来发起tcp连接=>一个rtt用来http请求并等待http",{"_index":5120,"t":{"2045":{"position":[[1160,46]]}}}],["rtt（round",{"_index":5118,"t":{"2045":{"position":[[1104,13]]}}}],["rubi",{"_index":2746,"t":{"1135":{"position":[[76,4]]}}}],["rule",{"_index":4859,"t":{"1972":{"position":[[135,8]]}}}],["run",{"_index":1007,"t":{"291":{"position":[[77,3]]},"293":{"position":[[182,5],[296,3]]},"295":{"position":[[255,6],[575,5]]},"376":{"position":[[131,5],[245,3]]},"380":{"position":[[314,6],[662,5]]},"773":{"position":[[131,7]]},"906":{"position":[[104,7]]},"908":{"position":[[629,7],[691,7]]},"910":{"position":[[697,7],[758,7]]},"914":{"position":[[576,7]]},"1074":{"position":[[231,3]]},"1076":{"position":[[59,3]]},"1084":{"position":[[208,4],[379,4],[411,3],[624,3]]},"1092":{"position":[[2453,7]]},"1202":{"position":[[43,3]]},"1362":{"position":[[4,3]]},"1460":{"position":[[4,3]]}}}],["run.pi",{"_index":1152,"t":{"380":{"position":[[1037,6]]}}}],["runoob",{"_index":1758,"t":{"621":{"position":[[12,9],[48,9]]}}}],["runoobtest",{"_index":1534,"t":{"526":{"position":[[47,10]]}}}],["runtimeexcept",{"_index":1295,"t":{"443":{"position":[[989,26]]}}}],["r为m",{"_index":1835,"t":{"687":{"position":[[0,4]]}}}],["r和关系",{"_index":1821,"t":{"681":{"position":[[20,12],[64,12],[108,12]]}}}],["r或小于r位的错误（r标识fc",{"_index":5285,"t":{"2113":{"position":[[491,30]]}}}],["s",{"_index":62,"t":{"10":{"position":[[1237,1],[1326,1],[1333,1],[1340,2],[1344,2]]},"18":{"position":[[51,1],[58,1],[65,2],[69,2],[199,1]]},"310":{"position":[[12,1]]},"494":{"position":[[151,2],[184,2],[221,1],[257,1],[358,10],[415,2]]},"496":{"position":[[106,2],[136,2],[153,1],[205,3]]},"583":{"position":[[58,3],[226,3]]},"614":{"position":[[219,1]]},"627":{"position":[[229,4],[354,4]]},"679":{"position":[[15,1],[25,1],[35,1],[46,1]]},"681":{"position":[[10,1],[37,1],[46,1],[57,1],[61,2],[81,1],[90,1],[101,1],[105,2],[125,1],[134,1],[145,1],[149,2],[164,1],[173,1],[184,1],[188,2],[230,1],[256,1],[266,1],[283,1]]},"693":{"position":[[145,1]]},"757":{"position":[[251,7]]},"857":{"position":[[153,2],[156,26]]},"867":{"position":[[197,2],[200,28]]},"1888":{"position":[[153,1]]},"2460":{"position":[[746,22]]}}}],["s(n)定义为该算法所耗费的存储空间，它是问题规模n的函数。记为s(n)=o(g(n",{"_index":5989,"t":{"2319":{"position":[[0,53]]}}}],["s,int",{"_index":1620,"t":{"583":{"position":[[148,5]]}}}],["s,报文的发送时延是x/b,报文的传播时延是：kd,故总时延为：x/b+kd+s;在分组交换中,报文的发送时延是(x/p)×(p/b",{"_index":5253,"t":{"2079":{"position":[[821,83]]}}}],["s0=new",{"_index":1722,"t":{"614":{"position":[[517,6]]}}}],["s1",{"_index":1757,"t":{"621":{"position":[[7,2],[84,3]]}}}],["s2",{"_index":1759,"t":{"621":{"position":[[43,2]]}}}],["s3",{"_index":1760,"t":{"621":{"position":[[79,2]]}}}],["s4",{"_index":1761,"t":{"621":{"position":[[102,2]]}}}],["s5",{"_index":1763,"t":{"621":{"position":[[150,2]]}}}],["s[0]=new",{"_index":1718,"t":{"614":{"position":[[425,8]]}}}],["s[1]=new",{"_index":1720,"t":{"614":{"position":[[446,8]]}}}],["saab",{"_index":4312,"t":{"1741":{"position":[[39,8]]},"1743":{"position":[[101,7]]},"1745":{"position":[[122,8]]},"1747":{"position":[[42,8]]}}}],["safari",{"_index":3782,"t":{"1507":{"position":[[1288,6],[1439,6],[1557,6],[1772,6],[1885,6],[1972,6],[2054,6],[2167,6],[2323,6],[2441,6],[2530,6],[2617,6],[2735,6],[3777,6],[4217,6]]}}}],["safari/537.36",{"_index":707,"t":{"179":{"position":[[469,13]]},"221":{"position":[[469,13]]},"1165":{"position":[[469,13]]}}}],["sage",{"_index":1900,"t":{"757":{"position":[[274,4]]}}}],["same",{"_index":2615,"t":{"1092":{"position":[[2967,4]]},"1665":{"position":[[126,4]]}}}],["samer",{"_index":2965,"t":{"1265":{"position":[[53,10]]}}}],["san",{"_index":2899,"t":{"1248":{"position":[[252,4]]}}}],["sandbox",{"_index":3983,"t":{"1592":{"position":[[122,8]]}}}],["sat",{"_index":1001,"t":{"289":{"position":[[636,5]]},"2055":{"position":[[357,4],[922,4]]}}}],["save",{"_index":2514,"t":{"1056":{"position":[[14,4]]},"1269":{"position":[[225,6]]},"1353":{"position":[[189,4]]}}}],["sayhello",{"_index":2313,"t":{"971":{"position":[[314,9]]},"973":{"position":[[268,8]]}}}],["sayhi",{"_index":2318,"t":{"973":{"position":[[193,8]]}}}],["sc",{"_index":1906,"t":{"757":{"position":[[436,10]]}}}],["sc1.j",{"_index":2297,"t":{"966":{"position":[[184,6],[252,6]]}}}],["sc2.j",{"_index":2298,"t":{"966":{"position":[[211,6]]}}}],["sc=new",{"_index":1608,"t":{"579":{"position":[[136,6]]}}}],["scalabl",{"_index":5092,"t":{"2031":{"position":[[89,12]]}}}],["scale",{"_index":6308,"t":{"2516":{"position":[[194,5]]}}}],["scale(0",{"_index":3848,"t":{"1515":{"position":[[1805,9]]}}}],["scale(0.1,0.1",{"_index":3780,"t":{"1507":{"position":[[1223,15],[1269,15],[1309,15],[1492,15],[1538,15],[1578,15]]}}}],["scale(1",{"_index":3847,"t":{"1515":{"position":[[1757,9]]}}}],["scale(1.8",{"_index":4925,"t":{"1979":{"position":[[2223,11]]}}}],["scale=1.0",{"_index":2032,"t":{"853":{"position":[[128,11]]},"1515":{"position":[[174,11]]}}}],["scanner",{"_index":1168,"t":{"388":{"position":[[574,7]]},"573":{"position":[[11,7]]},"579":{"position":[[116,11],[128,7]]}}}],["scanner(system.in",{"_index":1169,"t":{"388":{"position":[[590,19]]},"579":{"position":[[143,19]]}}}],["scene",{"_index":30,"t":{"10":{"position":[[467,11],[486,5]]}}}],["scene.add(ambi",{"_index":54,"t":{"10":{"position":[[1036,19]]}}}],["scene.add(mesh",{"_index":45,"t":{"10":{"position":[[815,16]]}}}],["scene.add(point",{"_index":51,"t":{"10":{"position":[[952,17]]},"16":{"position":[[83,24]]}}}],["scene.position);定义的是相机的位置和拍照方向，可以更改camera.position.set(200,300,200",{"_index":86,"t":{"18":{"position":[[359,67]]}}}],["sceneinit",{"_index":3161,"t":{"1336":{"position":[[47,12]]}}}],["scf",{"_index":1088,"t":{"336":{"position":[[37,3]]}}}],["schedul",{"_index":807,"t":{"249":{"position":[[739,8]]},"257":{"position":[[692,8],[1350,8],[1383,9]]},"289":{"position":[[205,9]]},"293":{"position":[[270,8],[620,9]]},"363":{"position":[[948,8]]},"376":{"position":[[219,8],[580,9]]}}}],["scheme，d",{"_index":6332,"t":{"2534":{"position":[[521,10]]},"2543":{"position":[[521,10]]},"2552":{"position":[[521,10]]}}}],["school",{"_index":970,"t":{"287":{"position":[[375,14]]}}}],["scope",{"_index":559,"t":{"124":{"position":[[30,6],[59,6]]}}}],["score",{"_index":2861,"t":{"1227":{"position":[[13,7],[72,7]]},"1229":{"position":[[13,7],[80,7],[127,7],[200,6]]}}}],["script",{"_index":7,"t":{"6":{"position":[[56,8],[153,8]]},"10":{"position":[[219,7],[314,7],[358,7]]},"31":{"position":[[43,7],[593,6],[613,8],[769,11]]},"114":{"position":[[879,12]]},"211":{"position":[[879,12]]},"301":{"position":[[43,51]]},"855":{"position":[[24,6]]},"865":{"position":[[183,8]]},"867":{"position":[[1369,8]]},"966":{"position":[[80,10]]},"1084":{"position":[[415,6]]},"1334":{"position":[[534,12]]},"1353":{"position":[[268,8],[562,12]]},"1391":{"position":[[54,8],[152,8]]},"1420":{"position":[[308,8],[1458,12]]},"1472":{"position":[[959,12],[1899,12]]},"1563":{"position":[[107,8],[252,8],[473,7]]}}}],["script></body></html",{"_index":2109,"t":{"853":{"position":[[1415,24]]}}}],["script>[\\s\\s]*<\\/script",{"_index":2121,"t":{"857":{"position":[[122,30]]},"867":{"position":[[166,30]]}}}],["script>import",{"_index":3282,"t":{"1351":{"position":[[0,14]]},"1353":{"position":[[46,14]]}}}],["script>var",{"_index":537,"t":{"114":{"position":[[745,19]]},"211":{"position":[[745,19]]}}}],["scrollbar",{"_index":3344,"t":{"1366":{"position":[[985,9],[2411,10]]}}}],["scrolli",{"_index":456,"t":{"103":{"position":[[372,7],[1893,8],[3470,7],[3503,7],[3513,7],[3784,7],[3821,7],[3831,7]]},"200":{"position":[[372,7],[1893,8],[3470,7],[3503,7],[3513,7],[3784,7],[3821,7],[3831,7]]}}}],["sdept",{"_index":1901,"t":{"757":{"position":[[279,5]]}}}],["sdk')cloud.init",{"_index":4592,"t":{"1872":{"position":[[668,17]]}}}],["se",{"_index":1245,"t":{"426":{"position":[[235,2]]}}}],["search",{"_index":2517,"t":{"1056":{"position":[[42,6]]},"1058":{"position":[[173,6]]},"1271":{"position":[[538,9],[643,8]]},"1840":{"position":[[0,8],[167,14],[199,8]]}}}],["search</div",{"_index":2999,"t":{"1273":{"position":[[766,12]]}}}],["searchvalu",{"_index":4504,"t":{"1842":{"position":[[1237,11]]}}}],["secam",{"_index":6290,"t":{"2509":{"position":[[704,5]]}}}],["second",{"_index":884,"t":{"255":{"position":[[1665,6]]}}}],["secondari",{"_index":2590,"t":{"1092":{"position":[[1571,9],[2040,9]]}}}],["secret",{"_index":285,"t":{"66":{"position":[[90,12]]},"171":{"position":[[90,12]]},"287":{"position":[[70,7],[163,10],[189,8],[241,7]]},"365":{"position":[[70,7],[163,10],[189,8],[241,7]]},"1082":{"position":[[24,6],[53,6]]}}}],["secrets.access_token",{"_index":2550,"t":{"1084":{"position":[[536,20]]}}}],["section",{"_index":590,"t":{"126":{"position":[[242,7]]},"1092":{"position":[[3854,8],[4028,10]]}}}],["see",{"_index":3692,"t":{"1468":{"position":[[76,3]]}}}],["seen",{"_index":3470,"t":{"1395":{"position":[[113,5],[157,4]]},"1489":{"position":[[195,4]]}}}],["segment",{"_index":5506,"t":{"2148":{"position":[[65,12]]},"2247":{"position":[[296,7]]},"2260":{"position":[[205,23]]}}}],["segment之后，传输层协议提取ip地址和端口号信息，将segment导向相应的socket",{"_index":5886,"t":{"2260":{"position":[[245,51]]}}}],["segment）（2）udp",{"_index":5505,"t":{"2148":{"position":[[46,18]]}}}],["select",{"_index":2075,"t":{"853":{"position":[[668,7]]}}}],["selectedcolor",{"_index":4767,"t":{"1933":{"position":[[93,16]]}}}],["selectediconpath",{"_index":4776,"t":{"1933":{"position":[[414,19],[560,19],[699,19]]},"1970":{"position":[[633,19],[796,19]]}}}],["self",{"_index":5091,"t":{"2031":{"position":[[74,14]]}}}],["semest",{"_index":757,"t":{"243":{"position":[[36,15]]},"249":{"position":[[212,10],[590,8]]},"363":{"position":[[123,8],[831,8]]}}}],["send",{"_index":5391,"t":{"2136":{"position":[[354,6]]},"2279":{"position":[[52,4]]}}}],["send)，rt",{"_index":5389,"t":{"2136":{"position":[[278,41]]}}}],["sent",{"_index":4723,"t":{"1918":{"position":[[493,4]]}}}],["seo",{"_index":3910,"t":{"1557":{"position":[[531,5]]},"1576":{"position":[[105,28]]}}}],["sep",{"_index":5160,"t":{"2055":{"position":[[430,3],[748,3]]}}}],["seq",{"_index":5849,"t":{"2247":{"position":[[586,5]]}}}],["sequenc",{"_index":5802,"t":{"2232":{"position":[[188,8],[723,8]]}}}],["sequenti",{"_index":6291,"t":{"2509":{"position":[[710,11]]}}}],["serif",{"_index":2900,"t":{"1248":{"position":[[257,6]]}}}],["server",{"_index":150,"t":{"31":{"position":[[901,6]]},"646":{"position":[[16,6],[54,20],[117,6]]},"773":{"position":[[124,6]]},"879":{"position":[[97,6]]},"902":{"position":[[6,6]]},"904":{"position":[[137,11]]},"906":{"position":[[97,6]]},"908":{"position":[[305,6],[684,6]]},"910":{"position":[[324,6],[751,6]]},"914":{"position":[[165,6]]},"1074":{"position":[[348,6]]},"1872":{"position":[[661,6]]},"2055":{"position":[[242,6],[1015,10]]},"2068":{"position":[[136,6],[208,6],[242,6],[513,6],[616,15],[778,42]]},"2195":{"position":[[423,40],[464,80],[933,9]]}}}],["server(顶级域名服务器example.com)，authorit",{"_index":5241,"t":{"2068":{"position":[[570,40]]}}}],["server.listen(80",{"_index":2173,"t":{"879":{"position":[[198,22]]},"906":{"position":[[54,24]]}}}],["server.listen(端口号,cb回调)方法，即可启动web",{"_index":2190,"t":{"906":{"position":[[6,38]]}}}],["server.on(\"request",{"_index":2172,"t":{"879":{"position":[[140,22]]},"881":{"position":[[0,20]]},"912":{"position":[[42,20]]}}}],["server.on('request',(req",{"_index":2187,"t":{"904":{"position":[[22,26]]},"908":{"position":[[22,26]]},"910":{"position":[[66,26]]}}}],["server1",{"_index":2201,"t":{"908":{"position":[[668,7]]}}}],["server1.j",{"_index":2195,"t":{"908":{"position":[[241,10],[259,10]]},"910":{"position":[[278,10]]}}}],["serverless",{"_index":273,"t":{"55":{"position":[[22,10]]}}}],["server。cli",{"_index":5233,"t":{"2068":{"position":[[106,13]]}}}],["server。dhcp",{"_index":5688,"t":{"2197":{"position":[[343,11]]}}}],["server不做任何处理只清除相应ip地址分配记录；如果相同，dhcp",{"_index":5701,"t":{"2197":{"position":[[594,35]]}}}],["server会将自己的ip地址放在“option”字段中以便dhcp",{"_index":5686,"t":{"2197":{"position":[[292,34]]}}}],["server分配的ip地址是否能够使用。如果可以使用，则dhcp",{"_index":5708,"t":{"2197":{"position":[[722,32]]}}}],["server发送dhcp",{"_index":5730,"t":{"2197":{"position":[[1396,12]]}}}],["server发送dhcprequest报文来续租ip地址。如果dhcp",{"_index":5720,"t":{"2197":{"position":[[1043,35],[1223,35]]}}}],["server发送的dhcp",{"_index":5722,"t":{"2197":{"position":[[1094,13],[1140,13],[1274,13],[1320,13]]}}}],["server在发出此报文后会存在一个已分配ip",{"_index":5689,"t":{"2197":{"position":[[355,29]]}}}],["server就会向dhcp",{"_index":5702,"t":{"2197":{"position":[[630,13]]}}}],["server收到dhcp",{"_index":5699,"t":{"2197":{"position":[[536,12],[965,12]]}}}],["server时，采用的是udp",{"_index":5667,"t":{"2195":{"position":[[907,15]]}}}],["server的ip地址和需要的ip",{"_index":5697,"t":{"2197":{"position":[[508,20]]}}}],["server禁用这个ip地址，然后dhcp",{"_index":5713,"t":{"2197":{"position":[[864,21]]}}}],["server能够提供给dhcp",{"_index":5684,"t":{"2197":{"position":[[256,15]]}}}],["server都会给出响应，向dhcp",{"_index":5679,"t":{"2197":{"position":[[166,18]]}}}],["server都是查到后就立刻返回loc",{"_index":5243,"t":{"2068":{"position":[[752,21]]}}}],["server都能够接收到dhcp",{"_index":5676,"t":{"2197":{"position":[[95,16]]}}}],["server（根域名服务器.com)，tld",{"_index":5240,"t":{"2068":{"position":[[542,22]]}}}],["servic",{"_index":551,"t":{"118":{"position":[[86,7],[131,13]]},"215":{"position":[[86,7],[131,13]]},"1918":{"position":[[56,9],[360,10]]},"2247":{"position":[[172,8]]}}}],["sessionkey",{"_index":4865,"t":{"1974":{"position":[[215,11]]}}}],["set",{"_index":948,"t":{"278":{"position":[[88,3]]},"287":{"position":[[149,13]]},"293":{"position":[[795,7],[823,8],[942,7],[970,8]]},"365":{"position":[[149,13]]},"378":{"position":[[17,7],[45,8],[164,7],[192,8]]},"469":{"position":[[132,3]]},"1017":{"position":[[872,3]]},"1058":{"position":[[359,3]]},"1080":{"position":[[17,7],[45,8],[164,7],[192,8]]},"1082":{"position":[[16,7]]},"1128":{"position":[[45,10]]},"1192":{"position":[[18,18]]},"1418":{"position":[[155,4]]},"1437":{"position":[[330,6],[390,5]]},"1892":{"position":[[90,10]]},"1924":{"position":[[687,4]]}}}],["setage(int",{"_index":1291,"t":{"443":{"position":[[940,10]]}}}],["setbkmode(transpar",{"_index":416,"t":{"101":{"position":[[489,23],[672,23],[851,23]]},"103":{"position":[[850,23],[1092,23],[1270,23],[1475,23],[1589,23],[1641,23],[1694,23],[1746,23],[1798,23],[2429,23],[2604,23],[2716,23],[2797,23],[2879,23],[2960,23],[3041,23],[4036,23],[4224,23]]},"198":{"position":[[489,23],[672,23],[851,23]]},"200":{"position":[[850,23],[1092,23],[1270,23],[1475,23],[1589,23],[1641,23],[1694,23],[1746,23],[1798,23],[2429,23],[2604,23],[2716,23],[2797,23],[2879,23],[2960,23],[3041,23],[4036,23],[4224,23]]}}}],["setcolor(magenta",{"_index":476,"t":{"103":{"position":[[1116,18],[1294,18],[1499,18],[2628,18],[4248,18]]},"200":{"position":[[1116,18],[1294,18],[1499,18],[2628,18],[4248,18]]}}}],["setcolor(whit",{"_index":469,"t":{"103":{"position":[[874,16],[1160,16],[1340,16],[1545,16],[2453,16],[2672,16],[4060,16],[4292,16]]},"200":{"position":[[874,16],[1160,16],[1340,16],[1545,16],[2453,16],[2672,16],[4060,16],[4292,16]]}}}],["setdata",{"_index":4725,"t":{"1918":{"position":[[702,7]]},"1924":{"position":[[762,7]]}}}],["setfillcolor(magenta",{"_index":467,"t":{"103":{"position":[[749,22],[2339,22],[3908,22]]},"200":{"position":[[749,22],[2339,22],[3908,22]]}}}],["setfillcolor(r",{"_index":411,"t":{"101":{"position":[[282,28],[584,18],[763,18]]},"198":{"position":[[282,28],[584,18],[763,18]]}}}],["setfillcolor(whit",{"_index":474,"t":{"103":{"position":[[1004,20],[1177,20],[1382,20],[2516,20],[4136,20]]},"200":{"position":[[1004,20],[1177,20],[1382,20],[2516,20],[4136,20]]}}}],["setinterv",{"_index":2094,"t":{"853":{"position":[[1059,14]]},"1299":{"position":[[398,14]]}}}],["setlinecolor(whit",{"_index":443,"t":{"101":{"position":[[1591,22]]},"198":{"position":[[1591,22]]}}}],["setname(str",{"_index":1287,"t":{"443":{"position":[[727,14]]}}}],["setstat",{"_index":2961,"t":{"1263":{"position":[[1856,8]]},"1301":{"position":[[232,8],[595,8],[654,8],[696,8],[749,8]]}}}],["setter",{"_index":3560,"t":{"1418":{"position":[[31,7],[148,6],[322,8]]}}}],["settextstyle(20",{"_index":484,"t":{"103":{"position":[[1562,16],[2689,16],[2768,18],[2850,18],[2931,18],[3012,18]]},"200":{"position":[[1562,16],[2689,16],[2768,18],[2850,18],[2931,18],[3012,18]]}}}],["settextstyle(30",{"_index":415,"t":{"101":{"position":[[442,16],[643,16],[822,16]]},"103":{"position":[[821,16],[1063,16],[1241,16],[1446,16],[2400,16],[2575,16],[4007,16],[4195,16]]},"198":{"position":[[442,16],[643,16],[822,16]]},"200":{"position":[[821,16],[1063,16],[1241,16],[1446,16],[2400,16],[2575,16],[4007,16],[4195,16]]}}}],["settimeout",{"_index":3126,"t":{"1323":{"position":[[889,13]]},"1327":{"position":[[230,13]]},"1626":{"position":[[450,10],[512,15],[690,10]]}}}],["settimeout(funct",{"_index":4058,"t":{"1626":{"position":[[367,22],[583,22]]}}}],["setup.error",{"_index":950,"t":{"278":{"position":[[137,12]]}}}],["setxxx",{"_index":1349,"t":{"469":{"position":[[146,8]]}}}],["shadow",{"_index":2058,"t":{"853":{"position":[[519,7],[551,7]]},"1515":{"position":[[1310,7]]},"1518":{"position":[[426,7]]}}}],["shang",{"_index":5052,"t":{"2003":{"position":[[401,8]]}}}],["share",{"_index":220,"t":{"45":{"position":[[33,6]]}}}],["sharp",{"_index":1038,"t":{"297":{"position":[[169,12]]},"299":{"position":[[159,12]]},"1578":{"position":[[177,5]]}}}],["shift",{"_index":3623,"t":{"1431":{"position":[[62,7]]},"1769":{"position":[[24,7]]},"1775":{"position":[[194,7]]}}}],["shiwei=hund",{"_index":1173,"t":{"388":{"position":[[659,11]]}}}],["shop",{"_index":2944,"t":{"1251":{"position":[[692,9]]}}}],["shoppinglist",{"_index":2930,"t":{"1251":{"position":[[149,12],[385,13],[933,12],[1016,13]]}}}],["shoppinglist的组件类，每一个组件可以接受一些参数，这些参数被称为props，上面的name=\"mark\"就是将参数传入组件的过程。然后再通过rend",{"_index":2939,"t":{"1251":{"position":[[490,98]]}}}],["short",{"_index":1381,"t":{"486":{"position":[[284,5],[306,5]]},"488":{"position":[[219,5]]},"490":{"position":[[262,5]]},"565":{"position":[[54,5]]}}}],["shortest",{"_index":5783,"t":{"2220":{"position":[[15,8]]}}}],["shortvalu",{"_index":1382,"t":{"486":{"position":[[290,12]]}}}],["shouldcomponentupd",{"_index":2868,"t":{"1235":{"position":[[104,23]]}}}],["show",{"_index":1614,"t":{"581":{"position":[[109,7],[194,7]]},"585":{"position":[[54,7],[156,7]]},"1474":{"position":[[20,4],[73,4],[100,4],[147,4]]},"1476":{"position":[[115,4],[189,4],[226,4]]},"1898":{"position":[[412,8],[421,4],[540,5],[585,5],[630,5],[779,5]]},"1981":{"position":[[785,4]]}}}],["show(float",{"_index":1622,"t":{"583":{"position":[[207,10]]}}}],["show(int",{"_index":1618,"t":{"583":{"position":[[104,8]]}}}],["show(str",{"_index":1616,"t":{"583":{"position":[[46,11],[136,11]]}}}],["show=\"ok\">hello!</h1",{"_index":3722,"t":{"1474":{"position":[[42,21]]}}}],["showcancel",{"_index":4615,"t":{"1872":{"position":[[1416,11]]}}}],["showreadingtim",{"_index":2441,"t":{"1017":{"position":[[1444,16]]},"1039":{"position":[[367,16]]}}}],["side",{"_index":3143,"t":{"1325":{"position":[[471,5]]},"1338":{"position":[[427,5]]},"1340":{"position":[[344,5],[1140,5]]},"1412":{"position":[[757,5]]}}}],["sidea*sideb",{"_index":1265,"t":{"439":{"position":[[281,12]]}}}],["sidea+sideb)*2",{"_index":1267,"t":{"439":{"position":[[327,16]]}}}],["sidea,sideb",{"_index":1260,"t":{"439":{"position":[[152,12]]}}}],["sidea=a",{"_index":1262,"t":{"439":{"position":[[231,8]]}}}],["sideb=b",{"_index":1263,"t":{"439":{"position":[[240,8]]}}}],["sidebar",{"_index":3495,"t":{"1399":{"position":[[1334,8]]}}}],["sidebar></app",{"_index":3494,"t":{"1399":{"position":[[1320,13]]}}}],["sidebarpath",{"_index":2432,"t":{"1017":{"position":[[1179,12]]},"1039":{"position":[[114,12]]}}}],["sidebars.j",{"_index":2512,"t":{"1049":{"position":[[500,11]]}}}],["side）javascript",{"_index":4455,"t":{"1823":{"position":[[11,15]]}}}],["signal",{"_index":6301,"t":{"2516":{"position":[[113,6],[276,6]]}}}],["similar",{"_index":6305,"t":{"2516":{"position":[[155,10],[211,10]]}}}],["simpl",{"_index":5176,"t":{"2057":{"position":[[9,6]]}}}],["since的值就是一周前last",{"_index":5167,"t":{"2055":{"position":[[780,16]]}}}],["singl",{"_index":3758,"t":{"1501":{"position":[[156,6]]},"2330":{"position":[[66,17]]}}}],["sip",{"_index":5105,"t":{"2037":{"position":[[197,3]]}}}],["sip、rtp",{"_index":5102,"t":{"2037":{"position":[[146,7]]}}}],["site",{"_index":1769,"t":{"623":{"position":[[74,4]]},"1017":{"position":[[268,6],[932,4],[1852,6],[1885,4]]},"1037":{"position":[[158,4]]},"1216":{"position":[[150,5]]},"1557":{"position":[[354,5]]}}}],["site.com",{"_index":2401,"t":{"1017":{"position":[[359,10]]}}}],["site.length",{"_index":1772,"t":{"623":{"position":[[107,14]]}}}],["site/images/firefox",{"_index":3879,"t":{"1541":{"position":[[188,19]]}}}],["site/src/components/homepagefeatur",{"_index":2571,"t":{"1092":{"position":[[537,40]]}}}],["site/src/components/homepagefeatures';import",{"_index":2569,"t":{"1092":{"position":[[414,46]]}}}],["siteconfig",{"_index":2574,"t":{"1092":{"position":[[809,12],[1256,12],[1725,12]]}}}],["siteconfig.titl",{"_index":2576,"t":{"1092":{"position":[[884,21]]}}}],["sitemap.json",{"_index":4857,"t":{"1970":{"position":[[874,14]]}}}],["sitemaploc",{"_index":4856,"t":{"1970":{"position":[[855,18]]}}}],["site，点击选择import",{"_index":2811,"t":{"1216":{"position":[[49,15]]}}}],["size",{"_index":584,"t":{"126":{"position":[[152,4]]},"598":{"position":[[78,4],[371,5]]},"698":{"position":[[160,14],[262,16]]},"853":{"position":[[651,5]]},"1094":{"position":[[356,5]]},"1248":{"position":[[469,5]]},"1255":{"position":[[300,5]]},"1323":{"position":[[384,4]]},"1511":{"position":[[464,5],[840,5]]},"1960":{"position":[[258,5]]},"1976":{"position":[[185,7]]}}}],["size,mss）:该术语很容易被混淆，它其实指的是报文段里应用数据的最大长度，而不是包括tcp首部的tcp",{"_index":5845,"t":{"2247":{"position":[[304,63]]}}}],["size:40rpx",{"_index":4919,"t":{"1979":{"position":[[2124,11]]}}}],["size=\"cover\"></imag",{"_index":5017,"t":{"1995":{"position":[[352,21]]}}}],["size=\"norm",{"_index":4978,"t":{"1981":{"position":[[1219,13]]}}}],["size=10",{"_index":1864,"t":{"698":{"position":[[672,8]]}}}],["size=30",{"_index":1677,"t":{"602":{"position":[[30,8]]}}}],["size=5",{"_index":1869,"t":{"698":{"position":[[760,7]]}}}],["sjbz",{"_index":780,"t":{"245":{"position":[[786,7],[1063,7]]},"257":{"position":[[154,14],[321,7],[1009,7]]}}}],["skeleton",{"_index":3943,"t":{"1578":{"position":[[137,9]]}}}],["sketch、photoshop",{"_index":605,"t":{"140":{"position":[[33,16]]}}}],["sksj.data",{"_index":1136,"t":{"371":{"position":[[105,13]]}}}],["sleep",{"_index":5069,"t":{"2010":{"position":[[45,8]]}}}],["slice",{"_index":2860,"t":{"1223":{"position":[[4158,8]]},"1225":{"position":[[16,8]]},"1433":{"position":[[62,52]]},"1667":{"position":[[133,6]]},"1781":{"position":[[0,7],[175,7]]},"1842":{"position":[[77,6],[84,7],[497,7],[603,30]]}}}],["slice(start",{"_index":4482,"t":{"1842":{"position":[[15,12]]}}}],["slicesubstr",{"_index":4217,"t":{"1667":{"position":[[205,15]]}}}],["sln",{"_index":4469,"t":{"1836":{"position":[[71,3]]}}}],["slot=\"titl",{"_index":3364,"t":{"1366":{"position":[[1466,13]]}}}],["slug",{"_index":2383,"t":{"1012":{"position":[[83,5]]}}}],["sm=\"20",{"_index":3383,"t":{"1366":{"position":[[2463,8]]}}}],["sm=\"4",{"_index":3340,"t":{"1366":{"position":[[918,7]]}}}],["smtp",{"_index":5098,"t":{"2037":{"position":[[70,4]]},"2057":{"position":[[299,4],[716,6],[723,10],[760,9],[816,5],[875,17],[893,8],[1187,9]]},"2244":{"position":[[85,4]]}}}],["smtp协议,它的第一条消息必须是helo,用来握手,在helo发送之前其他任何命令都是不能发送的;接下来一般要进行auth阶段,用来验证用户名和密码;接下来可以发送邮件数据;最后,通过qut",{"_index":5112,"t":{"2045":{"position":[[216,223]]}}}],["smtp协议:发送email",{"_index":5183,"t":{"2057":{"position":[[236,24]]}}}],["smtp发送、接收邮件，但是邮件客户端只能用smtp发送邮件，接收邮件一般用imap",{"_index":5179,"t":{"2057":{"position":[[39,53]]}}}],["smtp和http",{"_index":5195,"t":{"2057":{"position":[[790,11]]}}}],["smtp是一个push（推）协议，所以接收方如何将邮件从位于isp",{"_index":5205,"t":{"2059":{"position":[[0,50]]}}}],["smtp要求报文(首部和主体)为7位ascii",{"_index":5193,"t":{"2057":{"position":[[734,25]]}}}],["sname",{"_index":1898,"t":{"757":{"position":[[263,5]]}}}],["sno",{"_index":1897,"t":{"757":{"position":[[259,3],[447,3]]}}}],["sock",{"_index":5836,"t":{"2244":{"position":[[130,12]]}}}],["socket",{"_index":5883,"t":{"2260":{"position":[[73,35],[122,37]]}}}],["soild",{"_index":3855,"t":{"1528":{"position":[[58,5]]}}}],["solarsystemorbit",{"_index":2723,"t":{"1108":{"position":[[324,17]]}}}],["solarsystemspeedorbit",{"_index":2725,"t":{"1108":{"position":[[377,21]]}}}],["solid",{"_index":2909,"t":{"1248":{"position":[[439,5]]},"1255":{"position":[[270,5]]}}}],["solidroundrect(0",{"_index":412,"t":{"101":{"position":[[311,17],[603,17],[782,17],[1031,39]]},"103":{"position":[[772,17],[1025,17],[2362,17],[2537,17],[3194,17],[3931,17],[4157,17]]},"198":{"position":[[311,17],[603,17],[782,17],[1031,39]]},"200":{"position":[[772,17],[1025,17],[2362,17],[2537,17],[3194,17],[3931,17],[4157,17]]}}}],["solidroundrect(1200",{"_index":478,"t":{"103":{"position":[[1198,20],[1403,20],[3388,20],[3701,20]]},"200":{"position":[[1198,20],[1403,20],[3388,20],[3701,20]]}}}],["somedir/page.html",{"_index":5122,"t":{"2047":{"position":[[9,18]]}}}],["someover18",{"_index":4439,"t":{"1809":{"position":[[82,10]]}}}],["sort",{"_index":1744,"t":{"618":{"position":[[77,4]]},"1431":{"position":[[89,6]]},"1784":{"position":[[0,6],[22,6]]},"1788":{"position":[[0,10],[111,11]]},"1790":{"position":[[73,6],[142,8]]}}}],["sort(object",{"_index":1755,"t":{"618":{"position":[[677,13]]}}}],["souf",{"_index":1347,"t":{"469":{"position":[[103,4]]}}}],["sourc",{"_index":3963,"t":{"1587":{"position":[[82,7],[128,7]]},"1590":{"position":[[17,7],[59,7]]}}}],["source改为main,点击sav",{"_index":2742,"t":{"1128":{"position":[[64,21]]}}}],["sout",{"_index":1345,"t":{"469":{"position":[[39,4]]}}}],["soutv",{"_index":1346,"t":{"469":{"position":[[67,5]]}}}],["spa",{"_index":3757,"t":{"1501":{"position":[[149,4]]}}}],["space",{"_index":940,"t":{"273":{"position":[[349,5],[403,5]]},"853":{"position":[[611,5]]},"1976":{"position":[[147,5]]}}}],["spain",{"_index":4493,"t":{"1842":{"position":[[826,5],[985,5]]}}}],["span",{"_index":3461,"t":{"1393":{"position":[[424,5]]},"1439":{"position":[[40,5]]},"1481":{"position":[[65,9],[137,5],[166,9]]},"1483":{"position":[[121,5]]},"1515":{"position":[[269,5],[302,5],[335,5],[368,5],[401,5],[434,5],[467,5],[500,5],[533,5],[566,5],[599,5],[632,5],[665,5],[698,5],[731,5],[764,5],[1415,4]]},"1522":{"position":[[92,4],[132,4],[287,5],[320,5],[353,5],[386,5],[419,5],[452,5],[485,5],[518,5],[551,5],[584,5],[617,5],[650,5],[683,5],[716,5],[749,5],[782,5]]},"1613":{"position":[[40,107]]},"1995":{"position":[[619,97]]}}}],["span></div",{"_index":3463,"t":{"1393":{"position":[[476,13]]},"1439":{"position":[[70,13]]}}}],["span>messag",{"_index":3724,"t":{"1481":{"position":[[43,14]]}}}],["span>场景</span",{"_index":3366,"t":{"1366":{"position":[[1539,15]]}}}],["speed",{"_index":1250,"t":{"437":{"position":[[30,6]]},"1515":{"position":[[1625,8]]},"1522":{"position":[[107,5],[231,8]]}}}],["speed:11\"></span",{"_index":3825,"t":{"1515":{"position":[[317,17],[581,17]]},"1522":{"position":[[335,17],[599,17]]}}}],["speed:13\"></span",{"_index":3829,"t":{"1515":{"position":[[482,17],[548,17],[614,17],[680,17]]},"1522":{"position":[[500,17],[566,17],[632,17],[698,17]]}}}],["speed:14\"></span",{"_index":3830,"t":{"1515":{"position":[[515,17]]},"1522":{"position":[[533,17]]}}}],["speed:15\"></span",{"_index":3824,"t":{"1515":{"position":[[284,17],[713,17]]},"1522":{"position":[[302,17],[731,17]]}}}],["speed:16\"></span",{"_index":3826,"t":{"1515":{"position":[[350,17],[779,17]]},"1522":{"position":[[368,17],[797,17]]}}}],["speed:17\"></span",{"_index":3827,"t":{"1515":{"position":[[383,17],[416,17],[746,17]]},"1522":{"position":[[401,17],[434,17],[764,17]]}}}],["speed:18\"></span",{"_index":3828,"t":{"1515":{"position":[[449,17]]},"1522":{"position":[[467,17]]}}}],["speed:19\"></span",{"_index":3831,"t":{"1515":{"position":[[647,17]]},"1522":{"position":[[665,17]]}}}],["speed=newspe",{"_index":1255,"t":{"437":{"position":[[105,15]]}}}],["splice",{"_index":3625,"t":{"1431":{"position":[[80,8]]},"1777":{"position":[[0,8],[189,8]]}}}],["split",{"_index":2264,"t":{"950":{"position":[[416,5],[938,5]]},"1854":{"position":[[5,7]]}}}],["spuer",{"_index":2957,"t":{"1263":{"position":[[961,8]]}}}],["sp·isns·netbios·pap·rpc",{"_index":5499,"t":{"2144":{"position":[[557,24]]}}}],["sql",{"_index":1837,"t":{"693":{"position":[[156,48]]},"698":{"position":[[72,6],[389,3]]},"700":{"position":[[86,3]]}}}],["sqrt(11.635",{"_index":1513,"t":{"516":{"position":[[243,12]]}}}],["sqrt(doubl",{"_index":1510,"t":{"516":{"position":[[11,11]]}}}],["squar",{"_index":2815,"t":{"1223":{"position":[[37,6],[75,6],[137,6],[282,6],[309,6],[639,8],[721,7],[913,7],[1000,6],[1027,18],[1119,6],[1173,7],[1254,7],[1304,6],[1390,6],[1410,6],[1498,6],[1516,6],[1606,7],[1799,6],[1856,6],[1885,6],[1899,6],[1964,6],[2033,6],[2108,6],[2266,6],[2398,6],[2495,6],[2557,10],[2568,6],[2831,6],[2977,6],[3141,8],[3199,7],[3279,10],[3319,7],[3836,6],[3880,6],[3936,6],[3958,6],[4007,6],[4099,6],[4138,6],[4173,7],[4226,6]]},"1225":{"position":[[29,7]]},"1237":{"position":[[7,6],[193,6],[364,6]]},"1239":{"position":[[186,8],[361,7],[460,8],[469,8],[823,8],[896,7],[995,8],[1004,8],[1076,7]]},"1241":{"position":[[850,6],[902,7],[1057,8],[1066,8]]},"1248":{"position":[[832,6],[1004,7]]},"1255":{"position":[[19,6],[129,23],[153,6],[185,6],[230,7]]},"1257":{"position":[[23,6],[128,7]]},"1261":{"position":[[46,6],[122,6],[196,7],[228,6],[305,6],[482,6]]},"1263":{"position":[[42,6],[95,6],[597,6],[745,39],[1087,6],[1323,6],[1549,11],[1608,6]]}}}],["square(prop",{"_index":2869,"t":{"1237":{"position":[[220,13]]}}}],["square:focu",{"_index":2918,"t":{"1248":{"position":[[663,13]]}}}],["squares[a",{"_index":2879,"t":{"1241":{"position":[[293,11],[308,10],[337,10],[373,11]]}}}],["squares[b",{"_index":2880,"t":{"1241":{"position":[[323,10]]}}}],["squares[c",{"_index":2881,"t":{"1241":{"position":[[352,11]]}}}],["squares[i",{"_index":2844,"t":{"1223":{"position":[[3237,10]]},"1239":{"position":[[399,10],[934,10]]},"1241":{"position":[[972,11],[996,10]]}}}],["square，你会在屏幕上看到红色的错误提示，提示内容为：“this.handleclick",{"_index":2840,"t":{"1223":{"position":[[2670,46]]}}}],["sr",{"_index":5948,"t":{"2281":{"position":[[454,4]]}}}],["src",{"_index":1552,"t":{"540":{"position":[[79,3]]},"1017":{"position":[[1897,4]]},"1037":{"position":[[170,4]]},"1049":{"position":[[259,3]]},"1248":{"position":[[36,4],[67,3],[113,4],[156,4],[776,4],[1803,4]]},"1364":{"position":[[178,6]]},"1563":{"position":[[287,3]]},"1592":{"position":[[458,3]]}}}],["src/**/*.{vue,js,ts,jsx,tsx",{"_index":359,"t":{"86":{"position":[[200,32]]}}}],["src/css/custom.css",{"_index":2675,"t":{"1094":{"position":[[1415,18],[1461,19]]}}}],["src/index.j",{"_index":2948,"t":{"1253":{"position":[[17,12]]},"1255":{"position":[[0,12]]}}}],["src=\"../../images/1.jpg\"></imag",{"_index":4703,"t":{"1903":{"position":[[71,33]]}}}],["src=\"../src/assets/about.png",{"_index":3376,"t":{"1366":{"position":[[2210,29]]}}}],["src=\"../src/assets/github.png",{"_index":3333,"t":{"1366":{"position":[[739,30]]}}}],["src=\"../src/assets/home.png",{"_index":3359,"t":{"1366":{"position":[[1337,28]]}}}],["src=\"../src/assets/jet.png",{"_index":3329,"t":{"1366":{"position":[[587,27]]}}}],["src=\"../src/assets/logo.png",{"_index":3365,"t":{"1366":{"position":[[1500,28]]}}}],["src=\"../src/assets/media.png",{"_index":3373,"t":{"1366":{"position":[[2054,29]]}}}],["src=\"../src/assets/mylogo.png",{"_index":3326,"t":{"1366":{"position":[[467,30]]}}}],["src=\"./assets/jet.png",{"_index":3378,"t":{"1366":{"position":[[2355,22]]}}}],["src=\"./assets/rt.png",{"_index":3391,"t":{"1366":{"position":[[2724,21]]}}}],["src=\"./index.j",{"_index":2156,"t":{"865":{"position":[[192,21]]},"867":{"position":[[1378,21]]}}}],["src=\"./three.js\"></script",{"_index":27,"t":{"10":{"position":[[322,26]]}}}],["src=\"cloud://nannan",{"_index":4706,"t":{"1905":{"position":[[229,19]]}}}],["src=\"http://www.yanhuangxueyuan.com/threejs/build/three.js\"></script",{"_index":28,"t":{"10":{"position":[[366,69]]}}}],["src=\"http://www.yanhuangxueyuan.com/versions/threejsr92/build/three.js\"></script",{"_index":26,"t":{"10":{"position":[[227,81]]}}}],["src=\"https://cdn.jsdelivr.net/npm/axios@0.12.0/dist/axios.min.js\"></script><script",{"_index":3575,"t":{"1420":{"position":[[317,82]]}}}],["src=\"https://cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js\"></script><script>var",{"_index":3576,"t":{"1420":{"position":[[400,83]]}}}],["src=\"https://cdn.jsdelivr.net/npm/three/build/three.js\"></script",{"_index":8,"t":{"6":{"position":[[65,67]]}}}],["src=\"https://cdn.jsdelivr.net/npm/three/build/three.min.js\"></script",{"_index":9,"t":{"6":{"position":[[162,69]]}}}],["src=\"https://cdn.jsdelivr.net/npm/vue@2\"></script",{"_index":3460,"t":{"1391":{"position":[[161,50]]}}}],["src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script",{"_index":120,"t":{"31":{"position":[[51,62]]},"1391":{"position":[[63,62]]}}}],["src=\"https://developer.mozilla.org/zh",{"_index":3977,"t":{"1592":{"position":[[8,37]]}}}],["src=\"https://jetzihan",{"_index":2727,"t":{"1115":{"position":[[103,21]]},"1905":{"position":[[396,21]]}}}],["src=\"https://roy",{"_index":3875,"t":{"1541":{"position":[[101,16]]}}}],["src=\"https://www.example.com/images/dinosaur.jpg",{"_index":3938,"t":{"1576":{"position":[[188,50]]}}}],["src=\"images/dinosaur.jpg",{"_index":3937,"t":{"1576":{"position":[[139,26]]},"1578":{"position":[[73,25]]},"1580":{"position":[[5,25]]},"1582":{"position":[[5,25]]}}}],["src=\"js/orbitcontrols.js\"></script",{"_index":104,"t":{"25":{"position":[[191,35]]}}}],["src=\"mi",{"_index":3924,"t":{"1563":{"position":[[481,7]]}}}],["src=\"mozilla",{"_index":3934,"t":{"1572":{"position":[[123,12]]}}}],["src=\"rabbit320.mp4",{"_index":3964,"t":{"1587":{"position":[[90,19]]}}}],["src=\"rabbit320.webm",{"_index":3955,"t":{"1585":{"position":[[7,20]]},"1587":{"position":[[136,20]]}}}],["src=\"sc1.js\"></script><script",{"_index":2294,"t":{"966":{"position":[[91,29]]}}}],["src=\"sc2.js\"></script><script",{"_index":2295,"t":{"966":{"position":[[121,30]]}}}],["src=\"test.jpg",{"_index":3936,"t":{"1576":{"position":[[19,15]]}}}],["src=\"viper.mp3",{"_index":3971,"t":{"1590":{"position":[[25,15]]}}}],["src=\"viper.ogg",{"_index":3973,"t":{"1590":{"position":[[67,15]]}}}],["src=\"{{avatar}}\"></image></view",{"_index":4558,"t":{"1868":{"position":[[315,32]]}}}],["src=\"{{userinfo.avatarurl",{"_index":5016,"t":{"1995":{"position":[[312,28]]}}}],["src\\compon",{"_index":2572,"t":{"1092":{"position":[[581,14],[662,14]]}}}],["src\\components\\homepagefeatures\\index.j",{"_index":2594,"t":{"1092":{"position":[[2151,40]]}}}],["src\\css\\custom.css",{"_index":2634,"t":{"1094":{"position":[[23,18],[872,18],[1812,18]]},"1096":{"position":[[55,18],[225,18]]}}}],["src\\pages\\index.j",{"_index":2559,"t":{"1092":{"position":[[42,18]]}}}],["src属性指向其他人网站上的图片。这被称为\"盗链（hotlink",{"_index":3940,"t":{"1576":{"position":[[408,137]]}}}],["src文件夹下所有的vue,j",{"_index":360,"t":{"86":{"position":[[233,25]]}}}],["sr协议时，由sr",{"_index":5445,"t":{"2138":{"position":[[2812,17]]}}}],["ss",{"_index":2100,"t":{"853":{"position":[[1151,2]]}}}],["ssex",{"_index":1899,"t":{"757":{"position":[[269,4]]}}}],["ssh",{"_index":5834,"t":{"2244":{"position":[[112,9]]}}}],["ssim",{"_index":6306,"t":{"2516":{"position":[[173,5],[232,5]]}}}],["ssl/tl",{"_index":5979,"t":{"2289":{"position":[[221,7]]}}}],["stabl",{"_index":2759,"t":{"1146":{"position":[[236,33]]},"1944":{"position":[[249,33]]}}}],["stack",{"_index":2456,"t":{"1017":{"position":[[2318,6]]},"1037":{"position":[[599,6]]},"1928":{"position":[[34,181]]}}}],["staffa",{"_index":5048,"t":{"2003":{"position":[[336,7]]}}}],["staffb",{"_index":5051,"t":{"2003":{"position":[[381,7]]}}}],["staffc",{"_index":5053,"t":{"2003":{"position":[[428,7]]}}}],["stage",{"_index":3038,"t":{"1293":{"position":[[76,5],[143,5]]}}}],["standard",{"_index":6281,"t":{"2509":{"position":[[537,9]]}}}],["star",{"_index":965,"t":{"285":{"position":[[91,16]]},"353":{"position":[[28,4]]},"382":{"position":[[22,5]]},"1142":{"position":[[107,22]]},"1160":{"position":[[35,14]]},"2022":{"position":[[7,4]]}}}],["starm",{"_index":5090,"t":{"2022":{"position":[[0,6]]}}}],["starscolor",{"_index":2714,"t":{"1108":{"position":[[81,10]]}}}],["starscount",{"_index":2708,"t":{"1104":{"position":[[174,11]]},"1106":{"position":[[169,11]]},"1108":{"position":[[34,10]]}}}],["starsrotationspe",{"_index":2709,"t":{"1104":{"position":[[191,19]]},"1106":{"position":[[186,19]]},"1108":{"position":[[112,18]]}}}],["start",{"_index":1015,"t":{"293":{"position":[[216,5]]},"303":{"position":[[191,5],[242,7]]},"305":{"position":[[690,7]]},"307":{"position":[[91,5],[326,7],[530,7]]},"376":{"position":[[165,5]]},"795":{"position":[[275,8]]},"825":{"position":[[683,8],[908,8]]},"1051":{"position":[[53,5]]},"1248":{"position":[[1928,5]]},"1458":{"position":[[4,5]]},"1541":{"position":[[162,7]]},"1842":{"position":[[1230,6],[1264,5]]}}}],["start*/.anim",{"_index":3763,"t":{"1507":{"position":[[5,16]]}}}],["start:只执行一次，在awak",{"_index":1057,"t":{"305":{"position":[[84,30]]}}}],["startswith",{"_index":4506,"t":{"1842":{"position":[[1447,12],[1688,12]]}}}],["stat",{"_index":3291,"t":{"1353":{"position":[[248,5],[432,6]]}}}],["state",{"_index":2816,"t":{"1223":{"position":[[44,26],[149,73],[223,5],[365,5],[455,5],[1013,9],[2076,25],[3865,5],[3919,5],[3967,5]]},"1237":{"position":[[57,32]]},"1239":{"position":[[79,5]]},"1263":{"position":[[639,5],[816,6],[1074,6],[1366,5]]},"1299":{"position":[[203,5]]},"2263":{"position":[[332,5]]}}}],["state。this.st",{"_index":2954,"t":{"1263":{"position":[[698,16]]}}}],["state，因此每次它们被点击的时候，squar",{"_index":2859,"t":{"1223":{"position":[[4021,25]]}}}],["static",{"_index":324,"t":{"70":{"position":[[322,6],[422,6]]},"388":{"position":[[185,6],[498,6]]},"390":{"position":[[307,6]]},"392":{"position":[[459,6]]},"394":{"position":[[225,6]]},"396":{"position":[[148,6]]},"400":{"position":[[201,6]]},"406":{"position":[[78,6]]},"408":{"position":[[239,6]]},"410":{"position":[[320,6]]},"412":{"position":[[165,6]]},"414":{"position":[[101,6]]},"416":{"position":[[152,6]]},"420":{"position":[[84,6]]},"426":{"position":[[801,6]]},"443":{"position":[[12,6],[79,6],[172,6]]},"451":{"position":[[65,6],[382,30],[456,6],[772,6],[885,7],[980,6]]},"457":{"position":[[356,6]]},"483":{"position":[[65,6],[124,6]]},"486":{"position":[[353,6]]},"488":{"position":[[312,6]]},"490":{"position":[[184,6]]},"492":{"position":[[26,6]]},"494":{"position":[[91,6],[121,6],[154,6],[513,6]]},"496":{"position":[[79,6],[109,6],[316,6]]},"498":{"position":[[32,6]]},"500":{"position":[[272,6]]},"502":{"position":[[134,6]]},"504":{"position":[[321,6]]},"506":{"position":[[163,6]]},"508":{"position":[[163,6]]},"510":{"position":[[72,6]]},"512":{"position":[[53,6]]},"514":{"position":[[137,6]]},"516":{"position":[[52,6]]},"518":{"position":[[26,6]]},"520":{"position":[[26,6]]},"522":{"position":[[26,6]]},"524":{"position":[[58,6]]},"526":{"position":[[67,6]]},"528":{"position":[[26,6]]},"530":{"position":[[26,6]]},"532":{"position":[[52,6]]},"534":{"position":[[35,6]]},"542":{"position":[[100,6]]},"563":{"position":[[47,6],[181,6],[502,6]]},"565":{"position":[[552,6]]},"569":{"position":[[35,6]]},"579":{"position":[[80,6]]},"598":{"position":[[32,6]]},"604":{"position":[[47,6]]},"606":{"position":[[107,6]]},"608":{"position":[[36,6]]},"610":{"position":[[7,6]]},"616":{"position":[[119,6]]},"618":{"position":[[194,6],[345,6],[549,6],[665,6]]},"621":{"position":[[230,6]]},"623":{"position":[[33,6]]},"625":{"position":[[136,6]]},"1049":{"position":[[389,6]]},"1373":{"position":[[492,7]]}}}],["static/img/favicon.ico",{"_index":2478,"t":{"1027":{"position":[[44,23]]}}}],["statu",{"_index":2846,"t":{"1223":{"position":[[3418,6]]},"1239":{"position":[[577,8],[625,6],[1175,6]]},"1241":{"position":[[585,6],[671,7],[693,6],[732,6]]},"1248":{"position":[[1035,6],[1603,6]]},"1257":{"position":[[159,6]]},"1259":{"position":[[188,6]]}}}],["stay",{"_index":4494,"t":{"1842":{"position":[[832,5],[991,5]]}}}],["step",{"_index":2543,"t":{"1084":{"position":[[248,6]]},"1970":{"position":[[51,7]]},"1981":{"position":[[16,5],[22,9],[32,5],[1550,6]]}}}],["step1：客户端向服务器发送tcp",{"_index":5808,"t":{"2234":{"position":[[29,18]]}}}],["step2：服务器接收到客户端的fin报文段，确认并发送ack报文段，关闭连接发送fin",{"_index":5810,"t":{"2234":{"position":[[66,44]]}}}],["step3：客户端接收到服务器的fin报文段，确认并发送ack",{"_index":5811,"t":{"2234":{"position":[[111,34]]}}}],["step4：服务器接收到客户端的ack",{"_index":5813,"t":{"2234":{"position":[[182,27]]}}}],["still)媒体、连续(continu",{"_index":5990,"t":{"2330":{"position":[[0,31]]}}}],["stop",{"_index":3584,"t":{"1420":{"position":[[744,4]]}}}],["stop(0",{"_index":2082,"t":{"853":{"position":[[813,8]]}}}],["str",{"_index":1704,"t":{"612":{"position":[[63,3]]},"908":{"position":[[140,3],[495,3]]},"910":{"position":[[142,3],[518,3],[624,3]]},"912":{"position":[[180,3],[334,3]]},"1838":{"position":[[39,3],[194,3],[358,3],[525,3]]},"1840":{"position":[[35,3]]},"1842":{"position":[[183,3],[317,3],[522,3],[638,3]]},"1844":{"position":[[30,3],[108,11],[207,3],[299,11],[393,3],[535,3],[661,3]]},"1850":{"position":[[26,3]]},"1852":{"position":[[47,3],[151,3],[208,3],[392,3]]}}}],["str(hour",{"_index":836,"t":{"255":{"position":[[394,9],[460,9],[1788,9],[1854,9]]},"363":{"position":[[1408,9],[1474,9]]}}}],["str(minut",{"_index":837,"t":{"255":{"position":[[412,11],[478,11],[578,11],[1806,11],[1872,11],[1942,11]]},"363":{"position":[[1426,11],[1492,11],[1592,11]]}}}],["str(nowclass",{"_index":921,"t":{"259":{"position":[[170,13]]}}}],["str(second",{"_index":839,"t":{"255":{"position":[[498,12],[598,11],[1826,11],[1892,11],[1962,11]]},"363":{"position":[[1512,12],[1612,11]]}}}],["str(second)els",{"_index":838,"t":{"255":{"position":[[432,15]]},"363":{"position":[[1446,15]]}}}],["str(week",{"_index":818,"t":{"251":{"position":[[285,9]]}}}],["str(weekd",{"_index":822,"t":{"253":{"position":[[130,11]]}}}],["str.indexof(\"china",{"_index":4476,"t":{"1838":{"position":[[115,21],[601,20]]}}}],["str.indexof(\"usa",{"_index":4480,"t":{"1838":{"position":[[434,19]]}}}],["str.lastindexof(\"china",{"_index":4478,"t":{"1838":{"position":[[270,25]]}}}],["str.replace(\"microsoft",{"_index":4521,"t":{"1844":{"position":[[70,24],[261,24],[433,24]]}}}],["str.replace(/microsoft/g",{"_index":4524,"t":{"1844":{"position":[[715,25]]}}}],["str.replace(/microsoft/i",{"_index":4523,"t":{"1844":{"position":[[575,25]]}}}],["str.search(\"china",{"_index":4481,"t":{"1840":{"position":[[111,20]]}}}],["str.slice",{"_index":4213,"t":{"1665":{"position":[[565,10]]},"1842":{"position":[[356,10]]}}}],["str.slice(7",{"_index":4487,"t":{"1842":{"position":[[434,13]]}}}],["str.slice(7,13",{"_index":4486,"t":{"1842":{"position":[[222,16]]}}}],["str.substr(7,6",{"_index":4490,"t":{"1842":{"position":[[677,16]]}}}],["str.substring(7,13",{"_index":4489,"t":{"1842":{"position":[[561,20]]}}}],["str1",{"_index":4212,"t":{"1665":{"position":[[515,6]]}}}],["str1=str.substr(str.length",{"_index":4210,"t":{"1665":{"position":[[475,26]]}}}],["str[0",{"_index":4545,"t":{"1852":{"position":[[353,12],[429,18]]}}}],["str_closeprice.c_str",{"_index":496,"t":{"103":{"position":[[2143,25]]},"200":{"position":[[2143,25]]}}}],["str_openprice.c_str",{"_index":495,"t":{"103":{"position":[[2075,24]]},"200":{"position":[[2075,24]]}}}],["str_updrate.c_str",{"_index":497,"t":{"103":{"position":[[2212,22]]},"200":{"position":[[2212,22]]}}}],["strcmp(view,\"mina\")==0",{"_index":5040,"t":{"2001":{"position":[[256,25]]}}}],["strcpy(c",{"_index":471,"t":{"103":{"position":[[941,9],[1922,9],[2005,9],[2062,9],[2130,9],[2199,9],[2470,9]]},"200":{"position":[[941,9],[1922,9],[2005,9],[2062,9],[2130,9],[2199,9],[2470,9]]}}}],["stream",{"_index":5998,"t":{"2365":{"position":[[0,22]]}}}],["string",{"_index":378,"t":{"92":{"position":[[617,6],[732,6]]},"114":{"position":[[550,6]]},"211":{"position":[[550,6]]},"412":{"position":[[332,6],[389,6]]},"426":{"position":[[256,6]]},"443":{"position":[[647,6],[674,6]]},"445":{"position":[[117,6],[266,6],[409,6]]},"447":{"position":[[53,6],[348,6],[662,6]]},"449":{"position":[[86,6]]},"451":{"position":[[72,6],[101,6],[533,6]]},"453":{"position":[[58,6]]},"457":{"position":[[155,6]]},"483":{"position":[[141,7]]},"494":{"position":[[48,8],[369,6],[474,6]]},"565":{"position":[[569,7]]},"612":{"position":[[52,10]]},"614":{"position":[[208,10],[408,12]]},"621":{"position":[[0,6],[25,6],[32,10],[61,6],[68,10],[91,10],[132,6],[139,10],[180,6],[316,6]]},"623":{"position":[[67,6]]},"625":{"position":[[0,6],[170,6]]},"627":{"position":[[40,6],[64,10],[97,6],[273,6]]},"994":{"position":[[63,10]]},"1020":{"position":[[30,9]]},"1022":{"position":[[161,9]]},"1108":{"position":[[97,6]]},"1636":{"position":[[277,6]]},"1642":{"position":[[0,6]]},"1665":{"position":[[335,6]]},"1667":{"position":[[39,6]]},"1703":{"position":[[64,8]]},"1823":{"position":[[70,28]]}}}],["string\"typeof",{"_index":4249,"t":{"1699":{"position":[[86,14],[114,14],[148,14]]}}}],["string(\"good",{"_index":1723,"t":{"614":{"position":[[524,14]]}}}],["string(\"good\");s[0][1",{"_index":1714,"t":{"614":{"position":[[295,22]]}}}],["string(\"luck\");s[1][0",{"_index":1715,"t":{"614":{"position":[[324,22]]}}}],["string(\"runoob",{"_index":1762,"t":{"621":{"position":[[111,17],[159,17]]}}}],["string(\"to\");s[1][1",{"_index":1716,"t":{"614":{"position":[[353,20]]}}}],["string(\"you\");s[1][2",{"_index":1717,"t":{"614":{"position":[[380,21]]}}}],["string(helloarray",{"_index":1768,"t":{"621":{"position":[[341,19]]}}}],["string.endswith",{"_index":4516,"t":{"1842":{"position":[[2055,18]]}}}],["string.format",{"_index":1786,"t":{"627":{"position":[[288,23]]}}}],["string.includ",{"_index":4500,"t":{"1842":{"position":[[1064,18]]}}}],["string.includes(searchvalu",{"_index":4503,"t":{"1842":{"position":[[1201,28]]}}}],["string.match",{"_index":4491,"t":{"1842":{"position":[[738,15]]}}}],["string.return",{"_index":4208,"t":{"1665":{"position":[[408,13]]}}}],["string.startswith",{"_index":4505,"t":{"1842":{"position":[[1412,20]]}}}],["string1",{"_index":1775,"t":{"625":{"position":[[62,7],[177,7],[222,7]]}}}],["string1.concat(string2",{"_index":1773,"t":{"625":{"position":[[23,24]]}}}],["string2",{"_index":1774,"t":{"625":{"position":[[51,7]]}}}],["string</script",{"_index":534,"t":{"114":{"position":[[664,15]]},"211":{"position":[[664,15]]}}}],["string[2",{"_index":1719,"t":{"614":{"position":[[434,9]]}}}],["string[2];s[1",{"_index":1712,"t":{"614":{"position":[[250,14]]}}}],["string[2][];s[0",{"_index":1711,"t":{"614":{"position":[[227,16]]}}}],["string[3",{"_index":1721,"t":{"614":{"position":[[455,9]]}}}],["string[3];s[0][0",{"_index":1713,"t":{"614":{"position":[[271,17]]}}}],["string[3][4",{"_index":1705,"t":{"612":{"position":[[73,13]]}}}],["stringdemo",{"_index":1764,"t":{"621":{"position":[[211,11]]},"623":{"position":[[13,10]]},"625":{"position":[[116,10]]}}}],["stringvar",{"_index":1784,"t":{"627":{"position":[[252,11],[377,11]]}}}],["string。还有一种复杂数据类型（也称为引用数据类型）：object",{"_index":4069,"t":{"1632":{"position":[[69,65]]}}}],["string数据流保存到data",{"_index":3130,"t":{"1323":{"position":[[1012,24]]}}}],["strong",{"_index":3873,"t":{"1539":{"position":[[262,9]]},"1613":{"position":[[7,12],[20,7]]}}}],["strong>do",{"_index":4028,"t":{"1613":{"position":[[247,10]]}}}],["strong>highli",{"_index":4026,"t":{"1613":{"position":[[188,14]]}}}],["strong>发信</strong",{"_index":4565,"t":{"1868":{"position":[[612,19]]}}}],["strong>收件箱</strong",{"_index":4569,"t":{"1868":{"position":[[893,20]]}}}],["struct",{"_index":514,"t":{"105":{"position":[[20,6]]},"202":{"position":[[20,6]]},"2454":{"position":[[789,7],[1645,7]]}}}],["structur",{"_index":6304,"t":{"2516":{"position":[[139,15],[200,10]]}}}],["struct{word",{"_index":6160,"t":{"2454":{"position":[[346,11]]}}}],["student",{"_index":1596,"t":{"567":{"position":[[193,8]]},"585":{"position":[[77,7],[108,7]]},"588":{"position":[[37,7]]},"1010":{"position":[[547,8]]}}}],["student_id",{"_index":966,"t":{"287":{"position":[[118,10],[207,12],[300,10]]},"365":{"position":[[118,10],[207,12],[338,16]]}}}],["studentid",{"_index":756,"t":{"243":{"position":[[23,12]]},"245":{"position":[[237,12]]}}}],["studi",{"_index":5070,"t":{"2010":{"position":[[62,8]]}}}],["studio",{"_index":1043,"t":{"303":{"position":[[28,6]]},"698":{"position":[[11,7],[32,6]]}}}],["studio工程打开myblog",{"_index":2513,"t":{"1051":{"position":[[9,20]]}}}],["style",{"_index":20,"t":{"10":{"position":[[122,7],[188,8]]},"90":{"position":[[165,7]]},"92":{"position":[[0,7]]},"124":{"position":[[230,5]]},"853":{"position":[[217,7]]},"855":{"position":[[14,5]]},"1017":{"position":[[2179,6]]},"1037":{"position":[[473,6]]},"1092":{"position":[[461,6]]},"1279":{"position":[[364,7]]},"1281":{"position":[[380,7]]},"1366":{"position":[[1135,7]]},"1370":{"position":[[140,5]]},"1386":{"position":[[21,5],[76,9]]},"1515":{"position":[[275,7],[308,7],[341,7],[374,7],[407,7],[440,7],[473,7],[506,7],[539,7],[572,7],[605,7],[638,7],[671,7],[704,7],[737,7],[770,7]]},"1522":{"position":[[293,7],[326,7],[359,7],[392,7],[425,7],[458,7],[491,7],[524,7],[557,7],[590,7],[623,7],[656,7],[689,7],[722,7],[755,7],[788,7]]},"1618":{"position":[[344,6]]},"1890":{"position":[[30,8]]},"1981":{"position":[[1233,7]]}}}],["style(compon",{"_index":595,"t":{"126":{"position":[[338,17]]}}}],["style=\"background",{"_index":3313,"t":{"1366":{"position":[[138,17]]}}}],["style=\"color",{"_index":3362,"t":{"1366":{"position":[[1433,13]]}}}],["style=\"display:block\">内容：{{item.cont",{"_index":4573,"t":{"1868":{"position":[[995,41]]},"1878":{"position":[[660,41]]}}}],["style=\"display:block\">收件人：{{item.rece}}</view",{"_index":4574,"t":{"1868":{"position":[[1051,46]]},"1878":{"position":[[716,46]]}}}],["style=\"display:flex",{"_index":4973,"t":{"1981":{"position":[[1071,20]]}}}],["style=\"flex",{"_index":4975,"t":{"1981":{"position":[[1167,12]]}}}],["style=\"margin",{"_index":3336,"t":{"1366":{"position":[[814,13],[2490,13]]},"1868":{"position":[[482,13]]},"1981":{"position":[[972,14]]}}}],["style=\"min",{"_index":3355,"t":{"1366":{"position":[[1229,10]]}}}],["style=\"position:fixed;left",{"_index":3345,"t":{"1366":{"position":[[995,27]]}}}],["style=\"text",{"_index":4039,"t":{"1618":{"position":[[288,11]]}}}],["style=\"width",{"_index":3319,"t":{"1366":{"position":[[261,13],[942,13]]}}}],["style></head><body><div",{"_index":2086,"t":{"853":{"position":[[868,25]]}}}],["style></html",{"_index":3819,"t":{"1511":{"position":[[880,16]]},"1515":{"position":[[1817,16]]}}}],["style>[\\s\\s]*<\\/style>/;const",{"_index":2119,"t":{"857":{"position":[[78,31]]},"867":{"position":[[122,31]]}}}],["styleobject",{"_index":3451,"t":{"1380":{"position":[[314,12]]}}}],["styles.herobann",{"_index":2582,"t":{"1092":{"position":[[1350,20],[1819,20]]}}}],["styles.module.css",{"_index":2508,"t":{"1049":{"position":[[336,17]]}}}],["sub",{"_index":3996,"t":{"1598":{"position":[[169,11]]}}}],["subhead",{"_index":3997,"t":{"1598":{"position":[[181,16]]}}}],["subheadings），<h3",{"_index":3995,"t":{"1598":{"position":[[143,25]]}}}],["subject",{"_index":558,"t":{"124":{"position":[[22,7]]},"2057":{"position":[[1136,7]]}}}],["submenu",{"_index":3360,"t":{"1366":{"position":[[1415,7],[1964,8]]}}}],["submit",{"_index":2981,"t":{"1269":{"position":[[108,8]]},"1271":{"position":[[764,8]]},"1295":{"position":[[445,12]]}}}],["substr",{"_index":4488,"t":{"1842":{"position":[[470,10],[481,11],[582,7],[590,8],[718,6]]}}}],["substr(start",{"_index":4484,"t":{"1842":{"position":[[55,13]]}}}],["substring(start",{"_index":4483,"t":{"1842":{"position":[[33,16]]}}}],["success",{"_index":764,"t":{"245":{"position":[[304,10]]},"1872":{"position":[[210,8],[250,8],[321,8],[2801,8]]},"1876":{"position":[[1399,8]]},"1964":{"position":[[491,8],[625,10]]},"1966":{"position":[[161,8]]},"1974":{"position":[[168,8]]}}}],["success(r",{"_index":4994,"t":{"1981":{"position":[[2011,12]]}}}],["success/success",{"_index":4998,"t":{"1981":{"position":[[2256,20]]}}}],["success_img",{"_index":693,"t":{"179":{"position":[[300,11],[1046,11],[1143,12],[1192,12]]},"221":{"position":[[300,11],[1046,11],[1143,12],[1192,12]]},"1165":{"position":[[300,11],[1046,11],[1143,12],[1192,12]]}}}],["such",{"_index":2244,"t":{"941":{"position":[[242,4]]},"946":{"position":[[321,4]]}}}],["sucipto",{"_index":2361,"t":{"1010":{"position":[[76,7]]}}}],["sum",{"_index":1573,"t":{"563":{"position":[[551,6],[633,6]]},"1803":{"position":[[156,3],[413,3],[726,3],[879,3],[1122,3]]},"1805":{"position":[[166,3],[394,3]]}}}],["sum;funct",{"_index":4428,"t":{"1803":{"position":[[499,12],[1213,12]]}}}],["sum=0",{"_index":1572,"t":{"563":{"position":[[539,6]]}}}],["sum=sum",{"_index":1575,"t":{"563":{"position":[[574,7],[601,7],[617,7]]}}}],["sum=sum+2",{"_index":1574,"t":{"563":{"position":[[563,10],[590,10]]}}}],["sumday",{"_index":460,"t":{"103":{"position":[[451,7]]},"200":{"position":[[451,7]]}}}],["sun",{"_index":1000,"t":{"289":{"position":[[632,3]]},"1108":{"position":[[271,3]]}}}],["sunscal",{"_index":2719,"t":{"1108":{"position":[[234,8]]}}}],["super(prop",{"_index":2820,"t":{"1223":{"position":[[610,13],[3112,13]]},"1239":{"position":[[157,13],[794,13]]},"1263":{"position":[[919,13],[1141,13],[1662,13]]},"1289":{"position":[[425,13]]}}}],["support",{"_index":561,"t":{"124":{"position":[[70,9]]},"126":{"position":[[268,7]]},"1592":{"position":[[234,7]]},"2049":{"position":[[231,9]]}}}],["sure",{"_index":944,"t":{"278":{"position":[[38,4]]}}}],["susan总是用同一个pc使用internet",{"_index":5146,"t":{"2051":{"position":[[136,23]]}}}],["svg",{"_index":2597,"t":{"1092":{"position":[[2260,4],[2514,4],[2776,4],[3078,4],[3204,4],[3345,4],[3600,4]]}}}],["swipeabl",{"_index":4901,"t":{"1979":{"position":[[1000,10]]}}}],["switch",{"_index":1234,"t":{"414":{"position":[[17,6]]},"426":{"position":[[0,6],[164,6],[185,6],[240,9],[291,6],[439,6],[460,10],[482,6],[572,6],[606,6],[698,6]]},"1900":{"position":[[63,8],[124,6]]}}}],["switch(express",{"_index":1243,"t":{"426":{"position":[[45,19]]}}}],["switch(grad",{"_index":1248,"t":{"426":{"position":[[886,13]]}}}],["switchtab",{"_index":4762,"t":{"1928":{"position":[[855,9]]}}}],["swizzl",{"_index":2526,"t":{"1060":{"position":[[31,7]]}}}],["symbol",{"_index":4148,"t":{"1644":{"position":[[0,6]]}}}],["symbol('a');let",{"_index":4149,"t":{"1644":{"position":[[64,15]]}}}],["symbol('b');a",{"_index":4150,"t":{"1644":{"position":[[84,13]]}}}],["syn",{"_index":5860,"t":{"2247":{"position":[[1513,4],[1526,19]]}}}],["syn)，解决上面的2.0",{"_index":5905,"t":{"2269":{"position":[[0,26]]}}}],["syn+ack报文段做出回应，包的syn标志位置1，ack标志位置1，序号为服务端的isn（与客户端的isn不同），确认码为客户端的isn加1，包发出后，服务端进入syn_rcvd",{"_index":5804,"t":{"2232":{"position":[[252,153]]}}}],["synchron",{"_index":5806,"t":{"2232":{"position":[[660,11]]}}}],["syntax",{"_index":3037,"t":{"1293":{"position":[[61,6]]}}}],["syn为1，seq=0",{"_index":5964,"t":{"2287":{"position":[[772,30]]}}}],["syn报文段，不携带任何数据，syn标志位（flag）置1，包的序号为客户端的isn（initi",{"_index":5801,"t":{"2232":{"position":[[127,60]]}}}],["syscal",{"_index":2254,"t":{"946":{"position":[[395,8]]}}}],["system",{"_index":1564,"t":{"554":{"position":[[82,6]]},"703":{"position":[[15,39]]},"2062":{"position":[[230,7]]},"2077":{"position":[[44,8]]},"2144":{"position":[[22,6],[60,6]]},"2216":{"position":[[86,50]]}}}],["system.collections.generic;us",{"_index":1046,"t":{"303":{"position":[[95,32]]},"305":{"position":[[430,32]]},"307":{"position":[[166,32],[396,32]]}}}],["system.collections;us",{"_index":1045,"t":{"303":{"position":[[70,24]]},"305":{"position":[[405,24]]},"307":{"position":[[141,24],[371,24]]}}}],["system.gc",{"_index":1308,"t":{"449":{"position":[[40,10]]}}}],["system.out.format(\"%.1f",{"_index":1521,"t":{"518":{"position":[[169,23]]},"520":{"position":[[169,23]]},"522":{"position":[[169,23]]}}}],["system.out.format(\"%.4f",{"_index":1529,"t":{"524":{"position":[[201,23]]},"526":{"position":[[210,23]]},"528":{"position":[[169,23]]}}}],["system.out.format(\"pi",{"_index":1519,"t":{"518":{"position":[[124,21]]},"520":{"position":[[124,21]]},"522":{"position":[[124,21]]},"524":{"position":[[156,21]]},"526":{"position":[[165,21]]},"528":{"position":[[124,21]]}}}],["system.out.print",{"_index":1227,"t":{"412":{"position":[[260,17],[283,22],[413,17],[439,22]]},"414":{"position":[[240,17]]},"416":{"position":[[311,17]]},"420":{"position":[[143,20],[180,20]]},"565":{"position":[[722,18]]}}}],["system.out.print(\"\\n",{"_index":1220,"t":{"406":{"position":[[187,23]]},"408":{"position":[[333,23]]},"410":{"position":[[429,23]]},"412":{"position":[[308,23]]},"414":{"position":[[263,23]]},"416":{"position":[[334,23]]}}}],["system.out.print(\"valu",{"_index":1219,"t":{"406":{"position":[[142,23]]},"408":{"position":[[288,23]]},"410":{"position":[[389,23]]}}}],["system.out.print(array[i",{"_index":1693,"t":{"608":{"position":[[115,25]]}}}],["system.out.printf",{"_index":1348,"t":{"469":{"position":[[108,19]]},"627":{"position":[[157,27]]}}}],["system.out.printf(\"",{"_index":1487,"t":{"510":{"position":[[141,20]]},"512":{"position":[[122,20]]},"514":{"position":[[206,20]]},"516":{"position":[[121,20]]}}}],["system.out.printf(\"exp(%.3f",{"_index":1490,"t":{"510":{"position":[[184,28]]}}}],["system.out.printf(\"log(%.3f",{"_index":1497,"t":{"512":{"position":[[165,28]]}}}],["system.out.printf(\"pow(%.3f",{"_index":1504,"t":{"514":{"position":[[249,28]]}}}],["system.out.printf(\"sqrt(%.3f",{"_index":1511,"t":{"516":{"position":[[164,29]]}}}],["system.out.println",{"_index":1166,"t":{"388":{"position":[[532,31]]},"396":{"position":[[258,19],[364,19]]},"426":{"position":[[913,25],[968,25],[1012,25],[1056,31],[1105,27],[1135,25]]},"449":{"position":[[335,29]]},"451":{"position":[[798,31],[893,32]]},"457":{"position":[[204,28],[294,26]]},"469":{"position":[[44,19],[73,20]]},"486":{"position":[[419,19],[531,19]]},"530":{"position":[[93,19],[134,19]]},"532":{"position":[[119,19],[160,19]]},"534":{"position":[[68,19],[105,19]]},"565":{"position":[[656,29]]},"598":{"position":[[406,24]]},"621":{"position":[[361,19]]},"623":{"position":[[122,19]]}}}],["system.out.println(\"!(a",{"_index":1200,"t":{"394":{"position":[[381,23]]}}}],["system.out.println(\"0",{"_index":1357,"t":{"483":{"position":[[214,28]]}}}],["system.out.println(\"1",{"_index":1361,"t":{"483":{"position":[[313,27]]},"625":{"position":[[196,23]]}}}],["system.out.println(\"60",{"_index":1359,"t":{"483":{"position":[[259,29]]}}}],["system.out.println(\"90",{"_index":1355,"t":{"483":{"position":[[159,22]]}}}],["system.out.println(\"a",{"_index":1179,"t":{"390":{"position":[[365,21],[410,21],[455,21],[498,21]]},"392":{"position":[[602,21],[671,21],[740,21],[874,21],[940,21],[1012,21]]},"394":{"position":[[296,21],[338,21]]},"581":{"position":[[117,24]]}}}],["system.out.println(\"b",{"_index":1180,"t":{"390":{"position":[[541,21],[586,21]]},"581":{"position":[[202,24]]}}}],["system.out.println(\"hello",{"_index":328,"t":{"70":{"position":[[356,26],[456,26]]},"542":{"position":[[133,25]]}}}],["system.out.println(\"hello\\\"world",{"_index":1599,"t":{"569":{"position":[[68,35]]}}}],["system.out.println(\"max",{"_index":1686,"t":{"604":{"position":[[466,23]]}}}],["system.out.println(\"n[0][2",{"_index":1740,"t":{"616":{"position":[[490,31]]}}}],["system.out.println(\"n[0][2]的值是3还是103还是109",{"_index":1739,"t":{"616":{"position":[[444,45]]}}}],["system.out.println(\"show(str",{"_index":1617,"t":{"583":{"position":[[62,35]]}}}],["system.out.println(\"show(string,int",{"_index":1621,"t":{"583":{"position":[[158,39]]}}}],["system.out.println(\"tot",{"_index":1684,"t":{"604":{"position":[[309,25]]}}}],["system.out.println(\"~a",{"_index":1194,"t":{"392":{"position":[[806,22]]}}}],["system.out.println(\"π/2",{"_index":1363,"t":{"483":{"position":[[360,29]]}}}],["system.out.println(\"你好\");system.out.println(\"你好\"+x);system.out.println(\":\"+123+\"大于\"+122",{"_index":1604,"t":{"575":{"position":[[0,89]]}}}],["system.out.println(\"姓名：\"+person.this.name+\"，年龄：\"+person.this.ag",{"_index":1317,"t":{"453":{"position":[[332,66]]}}}],["system.out.println(\"姓名：\"+this.name+\"，年龄：\"+this.ag",{"_index":1304,"t":{"447":{"position":[[244,52],[517,52],[891,52]]},"449":{"position":[[255,52]]},"451":{"position":[[702,52]]},"453":{"position":[[227,52]]}}}],["system.out.println(\"姓名：\"+this.name+\"，年龄：\"+this.age+\"，国家：\"+countri",{"_index":1312,"t":{"451":{"position":[[270,67]]}}}],["system.out.println(\"希腊字母\"+c+\"在unicode表中的顺序位置:\"+(int)c",{"_index":1590,"t":{"565":{"position":[[600,55]]}}}],["system.out.println(\"访问\\\"jetzihan",{"_index":1207,"t":{"400":{"position":[[235,37]]}}}],["system.out.println(4/2",{"_index":1162,"t":{"388":{"position":[[335,24]]}}}],["system.out.println(a",{"_index":1416,"t":{"494":{"position":[[735,22]]},"563":{"position":[[96,22]]}}}],["system.out.println(a*b",{"_index":1161,"t":{"388":{"position":[[305,24]]}}}],["system.out.println(a+b",{"_index":1159,"t":{"388":{"position":[[245,24]]},"563":{"position":[[244,24]]}}}],["system.out.println(b",{"_index":1417,"t":{"494":{"position":[[758,22]]},"496":{"position":[[497,22]]}}}],["system.out.println(baiwei",{"_index":1177,"t":{"388":{"position":[[761,27]]}}}],["system.out.println(c",{"_index":1160,"t":{"388":{"position":[[275,20]]},"494":{"position":[[712,22]]},"496":{"position":[[474,22]]}}}],["system.out.println(el",{"_index":1690,"t":{"606":{"position":[[41,29],[224,28]]}}}],["system.out.println(gewei",{"_index":1175,"t":{"388":{"position":[[706,26]]}}}],["system.out.println(i",{"_index":1610,"t":{"579":{"position":[[196,22]]}}}],["system.out.println(integer.tostring(12",{"_index":1404,"t":{"492":{"position":[[108,41]]}}}],["system.out.println(math.abs(a",{"_index":1427,"t":{"498":{"position":[[114,32]]}}}],["system.out.println(math.abs(d",{"_index":1428,"t":{"498":{"position":[[147,32]]}}}],["system.out.println(math.abs(f",{"_index":1429,"t":{"498":{"position":[[180,32]]}}}],["system.out.println(math.ceil(d",{"_index":1439,"t":{"500":{"position":[[340,33]]}}}],["system.out.println(math.ceil(f",{"_index":1440,"t":{"500":{"position":[[374,33]]}}}],["system.out.println(math.floor(d",{"_index":1441,"t":{"500":{"position":[[408,34]]}}}],["system.out.println(math.floor(f",{"_index":1442,"t":{"500":{"position":[[443,34]]}}}],["system.out.println(math.max(12.123",{"_index":1479,"t":{"508":{"position":[[196,35]]}}}],["system.out.println(math.max(23.12",{"_index":1481,"t":{"508":{"position":[[242,34]]}}}],["system.out.println(math.min(12.123",{"_index":1470,"t":{"506":{"position":[[196,35]]}}}],["system.out.println(math.min(23.12",{"_index":1472,"t":{"506":{"position":[[242,34]]}}}],["system.out.println(math.pi",{"_index":1365,"t":{"483":{"position":[[420,28]]}}}],["system.out.println(math.rint(",{"_index":1449,"t":{"502":{"position":[[261,33]]}}}],["system.out.println(math.rint(d",{"_index":1448,"t":{"502":{"position":[[227,33]]}}}],["system.out.println(math.rint(f",{"_index":1450,"t":{"502":{"position":[[295,33]]}}}],["system.out.println(math.round(",{"_index":1461,"t":{"504":{"position":[[459,34]]}}}],["system.out.println(math.round(d",{"_index":1460,"t":{"504":{"position":[[424,34]]}}}],["system.out.println(math.round(f",{"_index":1462,"t":{"504":{"position":[[494,34]]}}}],["system.out.println(math.round(g",{"_index":1463,"t":{"504":{"position":[[529,34]]}}}],["system.out.println(mylist[i",{"_index":1683,"t":{"604":{"position":[[175,28]]}}}],["system.out.println(shiwei",{"_index":1176,"t":{"388":{"position":[[733,27]]}}}],["system.out.println(sum",{"_index":1576,"t":{"563":{"position":[[640,24]]}}}],["system.out.println(x",{"_index":1415,"t":{"494":{"position":[[689,22]]},"496":{"position":[[451,22]]}}}],["system.out.println(x.compareto(3",{"_index":1391,"t":{"488":{"position":[[360,35]]}}}],["system.out.println(x.compareto(5",{"_index":1392,"t":{"488":{"position":[[396,35]]}}}],["system.out.println(x.compareto(8",{"_index":1393,"t":{"488":{"position":[[432,35]]}}}],["system.out.println(x.doublevalu",{"_index":1385,"t":{"486":{"position":[[476,36]]}}}],["system.out.println(x.equals(a",{"_index":1402,"t":{"490":{"position":[[341,32]]}}}],["system.out.println(x.equals(i",{"_index":1400,"t":{"490":{"position":[[275,32]]}}}],["system.out.println(x.equals(z",{"_index":1401,"t":{"490":{"position":[[308,32]]}}}],["system.out.println(x.tostr",{"_index":1403,"t":{"492":{"position":[[74,33]]}}}],["system;us",{"_index":1063,"t":{"305":{"position":[[392,12]]}}}],["system，简称dbms）和操作系统（oper",{"_index":1880,"t":{"711":{"position":[[36,29]]}}}],["system，简称o",{"_index":1881,"t":{"711":{"position":[[66,13]]}}}],["sébastien",{"_index":2373,"t":{"1010":{"position":[[347,9]]}}}],["s（sno，sname，sdept，sclass），现在要查询学生的姓名和所在班级，可以建立一个视图v（sname，sclass），然后查询v",{"_index":1836,"t":{"693":{"position":[[0,144]]}}}],["s，也就是代码var",{"_index":84,"t":{"18":{"position":[[174,24]]}}}],["t",{"_index":1203,"t":{"400":{"position":[[61,2]]},"656":{"position":[[224,1]]},"683":{"position":[[40,7],[77,1]]},"757":{"position":[[139,10]]},"1582":{"position":[[102,1]]},"1642":{"position":[[113,7]]},"1833":{"position":[[243,2]]},"2460":{"position":[[716,29]]},"2519":{"position":[[350,2]]}}}],["t,linklist",{"_index":399,"t":{"101":{"position":[[36,12]]},"103":{"position":[[34,11]]},"198":{"position":[[36,12]]},"200":{"position":[[34,11]]}}}],["t1、t2、t3",{"_index":1891,"t":{"757":{"position":[[0,138]]}}}],["t=0.1s时刻起与b共享连接路由器的链路，平均各共享到带宽10mbps，a大约再用时：1/10+2×1000/10000000=0.1002s交付剩余的1000个分组，故a向c交付2mbits文件大约需要(0.1+0.1002)s≈0.2s；（3",{"_index":5415,"t":{"2138":{"position":[[783,127]]}}}],["t=0时刻到t=0.1s，a发送了1000个分组，用时：1000×1000/10000000=0.1",{"_index":5414,"t":{"2138":{"position":[[729,53]]}}}],["t=10s+500ms=10.5",{"_index":5406,"t":{"2138":{"position":[[158,17]]}}}],["tab",{"_index":1204,"t":{"400":{"position":[[64,13]]},"1924":{"position":[[534,3]]},"1928":{"position":[[573,5],[642,3],[739,3]]},"1933":{"position":[[162,8],[364,7],[406,7],[458,11]]},"1979":{"position":[[158,5],[194,6],[956,4],[1016,3],[1328,4],[1338,3],[1630,4],[1640,3],[1933,4],[2722,5]]},"1989":{"position":[[55,3]]}}}],["tabbar",{"_index":4551,"t":{"1868":{"position":[[0,7],[17,9]]},"1928":{"position":[[763,6],[844,6],[870,6],[906,6],[927,6],[943,7]]},"1933":{"position":[[0,29],[41,12],[54,9],[770,11]]},"1970":{"position":[[463,9],[562,13]]},"1989":{"position":[[244,9],[575,8]]}}}],["tabbar时为tru",{"_index":4780,"t":{"1933":{"position":[[811,17]]}}}],["tabbar盒子上面的border颜色，只支持black",{"_index":4771,"t":{"1933":{"position":[[195,30]]}}}],["tabbar配置,这还没用到v",{"_index":4679,"t":{"1896":{"position":[[40,24]]}}}],["tabl",{"_index":896,"t":{"257":{"position":[[206,5]]},"259":{"position":[[16,5]]},"639":{"position":[[22,10]]},"1860":{"position":[[27,10]]}}}],["table,简称lut",{"_index":6078,"t":{"2434":{"position":[[176,20]]}}}],["table;}.statu",{"_index":2907,"t":{"1248":{"position":[[361,14]]}}}],["table[1][1",{"_index":907,"t":{"257":{"position":[[1191,13]]}}}],["table[nowwd][nowclass",{"_index":923,"t":{"259":{"position":[[229,22]]}}}],["table[wd][classnum",{"_index":917,"t":{"257":{"position":[[1489,19]]}}}],["tablefor",{"_index":914,"t":{"257":{"position":[[1369,8]]}}}],["tableurl",{"_index":801,"t":{"249":{"position":[[501,8]]},"363":{"position":[[742,8]]}}}],["tabs></view></view",{"_index":4912,"t":{"1979":{"position":[[1944,19]]}}}],["tac",{"_index":2892,"t":{"1244":{"position":[[300,3]]}}}],["tag",{"_index":2350,"t":{"1006":{"position":[[261,7],[468,9],[499,5]]},"1092":{"position":[[951,3]]},"1537":{"position":[[25,16],[102,39]]}}}],["taglin",{"_index":2397,"t":{"1017":{"position":[[284,8]]},"1031":{"position":[[25,8]]}}}],["tailwind",{"_index":332,"t":{"74":{"position":[[38,8],[64,8]]},"76":{"position":[[5,8],[132,8]]},"80":{"position":[[14,8],[42,8],[66,9]]},"86":{"position":[[43,9]]},"92":{"position":[[592,8],[928,8]]}}}],["tailwind.config.j",{"_index":348,"t":{"82":{"position":[[129,18]]},"84":{"position":[[19,18]]},"86":{"position":[[141,18]]},"90":{"position":[[5,18]]}}}],["tailwindcss",{"_index":347,"t":{"82":{"position":[[93,11]]},"92":{"position":[[546,19],[982,11]]},"95":{"position":[[151,11]]}}}],["tailwindcss@latest",{"_index":343,"t":{"82":{"position":[[28,18]]}}}],["take",{"_index":3672,"t":{"1445":{"position":[[1186,5]]},"1665":{"position":[[31,5],[327,5]]},"1667":{"position":[[31,5]]}}}],["target",{"_index":2989,"t":{"1271":{"position":[[425,7]]}}}],["target=\"_blank",{"_index":2996,"t":{"1273":{"position":[[687,15]]},"1366":{"position":[[348,16],[628,15],[2333,16]]}}}],["target=\"_blank\"><img",{"_index":3332,"t":{"1366":{"position":[[718,20]]}}}],["task",{"_index":928,"t":{"273":{"position":[[39,4]]}}}],["tay",{"_index":2367,"t":{"1010":{"position":[[216,3]]}}}],["taylor",{"_index":3072,"t":{"1312":{"position":[[350,6]]}}}],["tbodi",{"_index":3860,"t":{"1532":{"position":[[43,5]]}}}],["tc",{"_index":1908,"t":{"757":{"position":[[636,10]]}}}],["tcp",{"_index":5097,"t":{"2037":{"position":[[51,3],[75,3],[107,3]]},"2043":{"position":[[197,78]]},"2045":{"position":[[71,24],[103,13],[170,7],[761,18],[780,30],[896,3],[931,3],[1060,3]]},"2232":{"position":[[752,3]]},"2236":{"position":[[227,25],[453,16],[1917,11]]},"2247":{"position":[[6,6],[13,12],[224,44],[440,8],[449,70],[526,9],[760,28],[1753,8]]},"2258":{"position":[[62,3],[98,12],[131,34],[410,44]]},"2260":{"position":[[297,8]]},"2263":{"position":[[105,13]]},"2287":{"position":[[643,33]]}}}],["tcp/ip",{"_index":5502,"t":{"2146":{"position":[[2,9]]},"2150":{"position":[[93,18]]},"2159":{"position":[[458,6]]},"2256":{"position":[[8,48]]}}}],["tcp/ip协议并不是指某一个具体的协议，它是指代一系列的协议栈，因此也叫tcp/ip协议栈或者tcp/ip协议簇，下图将对比tcp/ip协议栈和osi",{"_index":5503,"t":{"2146":{"position":[[12,82]]}}}],["tcp、udp、tl",{"_index":5500,"t":{"2144":{"position":[[595,11]]}}}],["tcp协议保证可靠性的一种机制，但是也存在一些报文想优先被处理，这时就可以设置紧急指针，指向该报文即可，同时将紧急指针有效位置位1",{"_index":5862,"t":{"2247":{"position":[[1594,71]]}}}],["tcp协议建立连接的三次握手过程中的第三次握手允许携带数据，但是由于len=0",{"_index":5965,"t":{"2287":{"position":[[817,55]]}}}],["tcp协议时，由tcp",{"_index":5448,"t":{"2138":{"position":[[2943,19]]}}}],["tcp和udp",{"_index":5876,"t":{"2258":{"position":[[0,52]]}}}],["tcp和udp结构不同，tcp包括序号、确认信号、数据偏移、控制标志（通常说的urg、ack、psh、rst、syn、fin",{"_index":5879,"t":{"2258":{"position":[[306,82]]}}}],["tcp在ip提供的不可靠服务的基础上建立了rdt",{"_index":5865,"t":{"2247":{"position":[[1771,47]]}}}],["tcp在发送数据包前在通信双方有一个三次握手机制，确保双方准备好，在传输数据包期间，tcp",{"_index":5881,"t":{"2258":{"position":[[510,97]]}}}],["tcp在客户端和服务器之间传送报文，端口号为25",{"_index":5184,"t":{"2057":{"position":[[304,26]]}}}],["tcp将要传输的每个字节都进行了编号，序号是本报文段发送的数据组的第一个字节的编号，序号可以保证传输信息的有效性。比如：一个报文段的序号为300，此报文段数据部分共有100字节，则下一个报文段的序号为401",{"_index":5851,"t":{"2247":{"position":[[797,117]]}}}],["tcp往里面写数据，app从里面读数据。接收方控制发送方，不让发送方发送的太多、太快，以致于让接收方的缓冲区溢出。接收方在其向发送方的tcp报文段头部的rwnd字段“通告”其空闲缓存区大小。发送方根据rwnd",{"_index":5866,"t":{"2247":{"position":[[1826,131]]}}}],["tcp提供全双工服务（full",{"_index":5841,"t":{"2247":{"position":[[149,15]]}}}],["tcp支持全双工和并发的tcp",{"_index":5882,"t":{"2258":{"position":[[663,31]]}}}],["tcp是一种可靠的通信服务，负载相对而言比较大，tcp采用套接字（socket）或者端口（port",{"_index":5878,"t":{"2258":{"position":[[221,56]]}}}],["tcp的25",{"_index":5181,"t":{"2057":{"position":[[101,24]]}}}],["tcp连接上进行的吗？如果不是，根据捕获的分组数据加以说明，并给出不同tcp",{"_index":5983,"t":{"2291":{"position":[[153,81]]}}}],["tcp连接发送，最多只有一个对象在tcp连接上发送，下载多个对象需要多个tcp",{"_index":5113,"t":{"2045":{"position":[[523,53]]}}}],["tcp连接，则基于非流水模式的http1.1获取url链接web页完整内容需要多长时间？基于流水模式的http1.1获取url链接web",{"_index":5434,"t":{"2138":{"position":[[1896,90]]}}}],["tcp首部也包含tcp",{"_index":5863,"t":{"2247":{"position":[[1697,36]]}}}],["tdept",{"_index":1896,"t":{"757":{"position":[[172,5]]}}}],["tdm",{"_index":5251,"t":{"2079":{"position":[[472,7],[480,32]]},"2117":{"position":[[109,8],[194,7]]}}}],["tdm将时间划分为时间帧，并进一步划分每个时间帧的n",{"_index":5291,"t":{"2117":{"position":[[118,75]]}}}],["tdm虽然消除了碰撞，且给每个节点在每个帧时间内分配了专用的传输速率r/n",{"_index":5292,"t":{"2117":{"position":[[202,37]]}}}],["tdm）、频分多路复用（fdm）、码分多址（code",{"_index":5288,"t":{"2117":{"position":[[0,43]]}}}],["tdm：他们三组人约定好在下面的半小时内，前十分钟由甲运送木材a接收，中间十分钟乙运送木材b接收，最后十分钟，丙运送木材c",{"_index":5299,"t":{"2117":{"position":[[532,64]]}}}],["teach",{"_index":1851,"t":{"698":{"position":[[403,16]]}}}],["teach_log，日志文件物理地存放在d",{"_index":1857,"t":{"698":{"position":[[512,31]]}}}],["teachdata",{"_index":1852,"t":{"698":{"position":[[420,20]]}}}],["teachdata.ldf",{"_index":1858,"t":{"698":{"position":[[544,23]]}}}],["teachdata.mdf",{"_index":1853,"t":{"698":{"position":[[441,24]]}}}],["teachon",{"_index":1861,"t":{"698":{"position":[[617,8]]}}}],["team",{"_index":2554,"t":{"1088":{"position":[[100,4]]}}}],["teeth",{"_index":3945,"t":{"1578":{"position":[[183,7]]}}}],["telent",{"_index":5829,"t":{"2244":{"position":[[45,12]]}}}],["televis",{"_index":6280,"t":{"2509":{"position":[[526,10]]},"2511":{"position":[[58,29],[147,11]]}}}],["temperature.data",{"_index":1142,"t":{"371":{"position":[[253,23]]}}}],["templat",{"_index":522,"t":{"114":{"position":[[298,9]]},"211":{"position":[[298,9]]},"1366":{"position":[[70,11],[195,10],[232,11],[1456,9],[1555,11]]},"1377":{"position":[[172,9]]},"1399":{"position":[[187,9],[517,9],[874,9]]},"1441":{"position":[[26,10],[63,9]]},"1443":{"position":[[253,10]]},"1445":{"position":[[948,9]]},"1466":{"position":[[50,10],[98,10],[113,9]]},"1472":{"position":[[87,9],[473,9],[582,11],[594,9],[680,11],[1056,9],[1377,9],[1507,11],[1519,9],[1623,11]]},"1474":{"position":[[156,10]]},"2003":{"position":[[36,10]]}}}],["template(\"shang\",\"y",{"_index":5061,"t":{"2003":{"position":[[633,24]]}}}],["template(str",{"_index":5056,"t":{"2003":{"position":[[506,15]]}}}],["template></ul",{"_index":3641,"t":{"1441":{"position":[[166,16]]}}}],["template><div",{"_index":3151,"t":{"1334":{"position":[[95,14]]}}}],["template><script>rendererinit",{"_index":3153,"t":{"1334":{"position":[[134,39]]}}}],["template_id",{"_index":1128,"t":{"365":{"position":[[357,13]]}}}],["template_id，template_id_class，template_id_eve，template_id_noclass",{"_index":1146,"t":{"371":{"position":[[446,65]]}}}],["term",{"_index":2522,"t":{"1058":{"position":[[247,4]]}}}],["test",{"_index":570,"t":{"124":{"position":[[264,4]]},"390":{"position":[[293,4]]},"392":{"position":[[445,4]]},"394":{"position":[[211,4]]},"396":{"position":[[134,4]]},"400":{"position":[[187,4]]},"406":{"position":[[64,4]]},"408":{"position":[[225,4]]},"410":{"position":[[306,4]]},"412":{"position":[[151,4]]},"414":{"position":[[87,4]]},"416":{"position":[[138,4]]},"420":{"position":[[70,4]]},"426":{"position":[[787,4]]},"457":{"position":[[342,4]]},"483":{"position":[[110,4]]},"486":{"position":[[340,5]]},"488":{"position":[[299,5]]},"490":{"position":[[171,5]]},"492":{"position":[[13,5]]},"496":{"position":[[303,5]]},"498":{"position":[[19,5]]},"500":{"position":[[259,5]]},"502":{"position":[[121,5]]},"504":{"position":[[308,5]]},"506":{"position":[[150,5]]},"508":{"position":[[150,5]]},"510":{"position":[[59,5]]},"512":{"position":[[40,5]]},"514":{"position":[[124,5]]},"516":{"position":[[39,5]]},"518":{"position":[[13,5]]},"520":{"position":[[13,5]]},"522":{"position":[[13,5]]},"524":{"position":[[45,5]]},"528":{"position":[[13,5]]},"530":{"position":[[13,5]]},"532":{"position":[[39,5]]},"534":{"position":[[22,5]]},"1017":{"position":[[354,4]]},"1622":{"position":[[45,7],[153,7],[208,7],[362,7]]},"1624":{"position":[[212,7]]},"1981":{"position":[[2001,6]]}}}],["testarray",{"_index":1641,"t":{"598":{"position":[[13,9]]},"604":{"position":[[28,9]]},"606":{"position":[[88,9]]}}}],["testbas",{"_index":4658,"t":{"1878":{"position":[[254,8]]}}}],["testbase和mail",{"_index":4576,"t":{"1870":{"position":[[6,54]]}}}],["testdimens",{"_index":1725,"t":{"616":{"position":[[97,14]]}}}],["test{publ",{"_index":1409,"t":{"494":{"position":[[501,11]]}}}],["text",{"_index":2062,"t":{"853":{"position":[[546,4]]},"1248":{"position":[[583,4]]},"1255":{"position":[[414,4]]},"1340":{"position":[[1250,5]]},"1373":{"position":[[288,5],[507,4],[616,5],[849,5]]},"1375":{"position":[[137,5],[176,4]]},"1395":{"position":[[474,5],[501,5],[521,5]]},"1399":{"position":[[979,5],[1002,5],[1025,5]]},"1618":{"position":[[328,4]]},"1760":{"position":[[36,5],[162,4],[379,4]]},"1842":{"position":[[806,4],[900,12],[965,4],[1120,4],[1326,4],[1486,4],[1720,4],[1878,4],[1969,4],[2146,4],[2233,4]]},"1848":{"position":[[129,4],[165,4]]},"1868":{"position":[[73,7],[123,7],[176,7]]},"1924":{"position":[[56,5],[681,5],[725,9]]},"1933":{"position":[[350,7],[510,7],[648,7]]},"1966":{"position":[[366,5],[435,5]]},"1970":{"position":[[543,7],[737,7]]},"1979":{"position":[[1183,6],[1190,10],[1483,6],[1494,7],[1789,6],[1796,10]]},"1981":{"position":[[1561,5],[1596,5],[1631,5]]},"1989":{"position":[[316,7],[366,7]]},"1995":{"position":[[374,5],[477,5],[758,4]]}}}],["text.startswith(\"hello\");</script></body></html",{"_index":4514,"t":{"1842":{"position":[[1811,48]]}}}],["text/html",{"_index":2218,"t":{"914":{"position":[[481,11]]}}}],["text1",{"_index":4526,"t":{"1846":{"position":[[32,5],[113,5],[169,5],[250,5]]},"1848":{"position":[[25,5]]}}}],["text1.concat",{"_index":4533,"t":{"1848":{"position":[[69,14]]}}}],["text1.tolowercas",{"_index":4530,"t":{"1846":{"position":[[211,20]]}}}],["text1.touppercas",{"_index":4528,"t":{"1846":{"position":[[74,20]]}}}],["text2",{"_index":4527,"t":{"1846":{"position":[[66,5],[98,5],[203,5],[235,5]]},"1848":{"position":[[45,5],[84,9]]}}}],["text;fruit",{"_index":4340,"t":{"1760":{"position":[[240,11]]}}}],["text>{{msg}}</text",{"_index":5024,"t":{"1997":{"position":[[63,20]]}}}],["text>···</text",{"_index":4888,"t":{"1979":{"position":[[513,16],[603,16],[696,16],[780,16],[1269,16],[1571,16],[1874,16]]}}}],["text_box",{"_index":4803,"t":{"1960":{"position":[[148,10]]}}}],["textarea",{"_index":4964,"t":{"1981":{"position":[[757,10]]}}}],["textcolor=\"#1989fa\">上传故障照片</van",{"_index":4969,"t":{"1981":{"position":[[918,31]]}}}],["textcolor=\"#1989fa\">基本信息</van",{"_index":4958,"t":{"1981":{"position":[[129,29]]}}}],["textcolor=\"#1989fa\">维修信息</van",{"_index":4962,"t":{"1981":{"position":[[555,29]]}}}],["textur",{"_index":3178,"t":{"1340":{"position":[[153,7],[325,8],[939,7],[1121,8]]}}}],["texture1",{"_index":3135,"t":{"1325":{"position":[[180,8],[448,9]]}}}],["texture1.imag",{"_index":3137,"t":{"1325":{"position":[[212,22]]}}}],["texture1.needsupd",{"_index":3139,"t":{"1325":{"position":[[282,20]]}}}],["textureload",{"_index":3168,"t":{"1338":{"position":[[148,13]]}}}],["textureloader.load(require('../../public/img/main.jpeg",{"_index":3170,"t":{"1338":{"position":[[213,58]]}}}],["th=500kbps；（3",{"_index":5427,"t":{"2138":{"position":[[1458,33]]}}}],["that.picurl",{"_index":3125,"t":{"1323":{"position":[[833,11],[1101,11]]}}}],["that.setdata",{"_index":4660,"t":{"1878":{"position":[[384,14]]}}}],["that=thi",{"_index":4656,"t":{"1878":{"position":[[150,10]]}}}],["theme",{"_index":364,"t":{"90":{"position":[[179,7]]},"92":{"position":[[123,7]]},"1017":{"position":[[1677,6],[2807,6]]},"1037":{"position":[[1067,6]]},"1039":{"position":[[588,6]]},"1058":{"position":[[25,6],[95,7],[123,7]]}}}],["theme/layout';import",{"_index":2567,"t":{"1092":{"position":[[369,22]]}}}],["theme='dark",{"_index":2652,"t":{"1094":{"position":[[432,13],[2106,13]]},"1096":{"position":[[372,13]]}}}],["themeconfig",{"_index":2444,"t":{"1017":{"position":[[1751,12]]},"1037":{"position":[[36,12]]}}}],["then(funct",{"_index":3596,"t":{"1420":{"position":[[1294,14]]}}}],["theorem",{"_index":5261,"t":{"2084":{"position":[[198,7],[256,7],[308,7]]},"2267":{"position":[[274,7]]},"2460":{"position":[[38,7]]},"2469":{"position":[[538,7]]},"2476":{"position":[[781,7]]},"2480":{"position":[[199,7]]},"2484":{"position":[[30,7]]}}}],["think",{"_index":2964,"t":{"1265":{"position":[[47,5]]},"1420":{"position":[[1231,13]]}}}],["think.md",{"_index":2969,"t":{"1265":{"position":[[177,8]]}}}],["this(name,20",{"_index":1307,"t":{"447":{"position":[[852,14]]}}}],["this.$confirm",{"_index":3236,"t":{"1342":{"position":[[1478,24]]}}}],["this.$dialog.toast",{"_index":3117,"t":{"1323":{"position":[[567,20]]}}}],["this.$messag",{"_index":3104,"t":{"1323":{"position":[[93,15]]}}}],["this.$message.error",{"_index":3119,"t":{"1323":{"position":[[607,31]]}}}],["this.$message.error('上传头像图片大小不能超过100mb",{"_index":3115,"t":{"1323":{"position":[[462,41]]}}}],["this.$refs.threedom",{"_index":3218,"t":{"1342":{"position":[[764,20]]}}}],["this.$refs.threedom.addeventlistener('dblclick",{"_index":3204,"t":{"1342":{"position":[[214,48]]}}}],["this.$refs.threedom.appendchild(this.renderer.domel",{"_index":3160,"t":{"1334":{"position":[[472,58]]}}}],["this.$set(this.temp",{"_index":3102,"t":{"1323":{"position":[[51,20],[252,22]]}}}],["this..threedom",{"_index":3250,"t":{"1346":{"position":[[102,16]]}}}],["this.a",{"_index":3529,"t":{"1406":{"position":[[245,7]]}}}],["this.act",{"_index":3274,"t":{"1346":{"position":[[1023,11]]}}}],["this.action.paus",{"_index":3235,"t":{"1342":{"position":[[1444,18],[1610,18],[1806,18]]}}}],["this.action.setloop(three.looppingpong).play",{"_index":3277,"t":{"1346":{"position":[[1100,47]]}}}],["this.action.timescal",{"_index":3276,"t":{"1346":{"position":[[1066,21]]}}}],["this.age=20",{"_index":1300,"t":{"445":{"position":[[339,12],[482,12]]},"447":{"position":[[117,12],[412,12],[726,12]]},"449":{"position":[[150,12]]},"451":{"position":[[165,12],[597,12]]},"453":{"position":[[122,12]]}}}],["this.age=ag",{"_index":1296,"t":{"443":{"position":[[1018,13]]},"445":{"position":[[208,13],[558,13]]},"447":{"position":[[184,13],[479,13],[793,13]]},"449":{"position":[[217,13]]},"451":{"position":[[232,13],[664,13]]},"453":{"position":[[189,13]]}}}],["this.anim",{"_index":3278,"t":{"1346":{"position":[[1156,15]]}}}],["this.answ",{"_index":3582,"t":{"1420":{"position":[[710,11],[1145,11],[1217,11]]}}}],["this.camera",{"_index":3230,"t":{"1342":{"position":[[1135,13]]},"1344":{"position":[[94,11]]},"1346":{"position":[[535,13],[1292,13]]}}}],["this.camera.lookat(new",{"_index":3245,"t":{"1344":{"position":[[220,22]]}}}],["this.camera.position.set(0",{"_index":3244,"t":{"1344":{"position":[[175,27]]}}}],["this.changescene('back",{"_index":3240,"t":{"1342":{"position":[[1752,25]]}}}],["this.changescene('ent",{"_index":3239,"t":{"1342":{"position":[[1677,26]]}}}],["this.clickcount",{"_index":3034,"t":{"1291":{"position":[[145,25]]}}}],["this.clock",{"_index":3263,"t":{"1346":{"position":[[627,10]]}}}],["this.cloud()).callfunct",{"_index":4608,"t":{"1872":{"position":[[1142,28]]}}}],["this.control",{"_index":3248,"t":{"1346":{"position":[[55,13]]}}}],["this.controls.addeventlistener('chang",{"_index":3257,"t":{"1346":{"position":[[407,40]]}}}],["this.controls.enablepan",{"_index":3256,"t":{"1346":{"position":[[365,23]]}}}],["this.controls.maxdist",{"_index":3255,"t":{"1346":{"position":[[313,25]]}}}],["this.controls.maxpolarangl",{"_index":3253,"t":{"1346":{"position":[[238,27]]}}}],["this.controls.mindist",{"_index":3252,"t":{"1346":{"position":[[188,25]]}}}],["this.controls.target.set(0",{"_index":3251,"t":{"1346":{"position":[[126,27]]}}}],["this.data",{"_index":4995,"t":{"1981":{"position":[[2073,10]]}}}],["this.data.brand",{"_index":4819,"t":{"1964":{"position":[[197,16]]}}}],["this.data.class",{"_index":4826,"t":{"1964":{"position":[[376,16]]}}}],["this.data.descript",{"_index":4822,"t":{"1964":{"position":[[263,22]]}}}],["this.data.filelist",{"_index":4828,"t":{"1964":{"position":[[403,19]]}}}],["this.data.id",{"_index":4825,"t":{"1964":{"position":[[355,13]]}}}],["this.data.modelnumb",{"_index":4821,"t":{"1964":{"position":[[227,22]]}}}],["this.data.nam",{"_index":4816,"t":{"1964":{"position":[[150,15]]}}}],["this.data.phon",{"_index":4817,"t":{"1964":{"position":[[173,16]]}}}],["this.data.rec",{"_index":4652,"t":{"1876":{"position":[[1312,15]]}}}],["this.data.userid",{"_index":4630,"t":{"1872":{"position":[[2379,16],[2717,17]]}}}],["this.debouncedgetansw",{"_index":3585,"t":{"1420":{"position":[[760,25],[1007,23]]}}}],["this.error",{"_index":3426,"t":{"1373":{"position":[[836,12],[864,10]]}}}],["this.error.typ",{"_index":3427,"t":{"1373":{"position":[[878,15]]}}}],["this.firstnam",{"_index":3559,"t":{"1416":{"position":[[401,14],[583,14]]},"1418":{"position":[[105,14],[214,14]]},"1655":{"position":[[160,14]]},"1657":{"position":[[70,18]]},"1661":{"position":[[285,14]]}}}],["this.formatdate(event.detail",{"_index":4698,"t":{"1898":{"position":[[798,30]]}}}],["this.fullnam",{"_index":3557,"t":{"1416":{"position":[[313,13],[385,13]]}}}],["this.getcanv",{"_index":3177,"t":{"1340":{"position":[[106,24]]}}}],["this.getopenid().then(async",{"_index":4620,"t":{"1872":{"position":[[1934,27]]}}}],["this.handleclick(i",{"_index":2837,"t":{"1223":{"position":[[2531,20],[3372,20]]},"1239":{"position":[[1129,20]]}}}],["this.id",{"_index":196,"t":{"37":{"position":[[209,9],[281,12],[294,12],[883,9]]},"1289":{"position":[[439,7]]}}}],["this.init",{"_index":3127,"t":{"1323":{"position":[[908,12]]},"1327":{"position":[[17,11],[249,12]]}}}],["this.isact",{"_index":3425,"t":{"1373":{"position":[[819,13]]}}}],["this.lastnam",{"_index":3558,"t":{"1416":{"position":[[341,13],[606,13]]},"1418":{"position":[[128,13],[240,13]]},"1655":{"position":[[183,14]]},"1661":{"position":[[308,14]]}}}],["this.logintyp",{"_index":3716,"t":{"1472":{"position":[[887,14],[904,14],[1827,14],[1844,14]]}}}],["this.messag",{"_index":3478,"t":{"1397":{"position":[[265,12]]}}}],["this.message.split('').reverse().join",{"_index":3479,"t":{"1397":{"position":[[280,41]]},"1412":{"position":[[272,41]]},"1414":{"position":[[140,41]]}}}],["this.mix",{"_index":3272,"t":{"1346":{"position":[[961,10]]}}}],["this.mixer.clipaction(cilp",{"_index":3275,"t":{"1346":{"position":[[1037,28]]}}}],["this.mygroup",{"_index":3166,"t":{"1338":{"position":[[110,12]]},"1340":{"position":[[55,12]]}}}],["this.mygroup.add(meshspher",{"_index":3173,"t":{"1338":{"position":[[556,29]]}}}],["this.mygroup.add(meshtext",{"_index":3188,"t":{"1340":{"position":[[497,27]]}}}],["this.mymethod",{"_index":3533,"t":{"1406":{"position":[[460,26],[603,13]]}}}],["this.nam",{"_index":1299,"t":{"445":{"position":[[323,15],[466,15]]},"447":{"position":[[101,15],[225,9],[396,15],[710,15]]},"449":{"position":[[134,15]]},"451":{"position":[[149,15],[581,15]]},"453":{"position":[[106,15]]}}}],["this.name=nam",{"_index":1288,"t":{"443":{"position":[[756,15]]},"445":{"position":[[192,15],[542,15]]},"447":{"position":[[168,15],[463,15],[777,15]]},"449":{"position":[[201,15]]},"451":{"position":[[216,15],[648,15]]},"453":{"position":[[173,15]]}}}],["this.newtodotext",{"_index":3680,"t":{"1445":{"position":[[1349,16],[1369,16]]}}}],["this.nexttodoid",{"_index":3679,"t":{"1445":{"position":[[1323,18]]}}}],["this.numbers.filter(funct",{"_index":3633,"t":{"1437":{"position":[[199,28]]}}}],["this.onmousedblclick",{"_index":3205,"t":{"1342":{"position":[[263,22]]}}}],["this.picurl",{"_index":3133,"t":{"1325":{"position":[[146,12]]}}}],["this.print",{"_index":1306,"t":{"447":{"position":[[598,11]]}}}],["this.prop",{"_index":2872,"t":{"1237":{"position":[[331,10]]},"1297":{"position":[[170,10]]},"1312":{"position":[[84,10]]}}}],["this.props.label",{"_index":3030,"t":{"1289":{"position":[[214,16]]},"1291":{"position":[[243,18]]}}}],["this.props.nam",{"_index":3073,"t":{"1312":{"position":[[521,15]]}}}],["this.props.name}</div",{"_index":3069,"t":{"1312":{"position":[[221,24]]}}}],["this.props.name}</h1",{"_index":2933,"t":{"1251":{"position":[[277,22]]}}}],["this.props.onclick",{"_index":2834,"t":{"1223":{"position":[[2007,20],[2203,21],[2454,20]]},"1237":{"position":[[402,21]]}}}],["this.props.valu",{"_index":2832,"t":{"1223":{"position":[[1943,16],[2227,18]]},"1261":{"position":[[267,18],[386,18]]},"1263":{"position":[[217,18],[1277,18],[1394,16]]}}}],["this.question.indexof",{"_index":3593,"t":{"1420":{"position":[[1107,27]]}}}],["this.refresh",{"_index":3258,"t":{"1346":{"position":[[448,14]]}}}],["this.render",{"_index":3155,"t":{"1334":{"position":[[235,13]]}}}],["this.renderer.render(this.scen",{"_index":3260,"t":{"1346":{"position":[[502,32],[1259,32]]}}}],["this.renderer.setclearcolor(0xffffff",{"_index":3157,"t":{"1334":{"position":[[312,38]]}}}],["this.renderer.setpixelratio(window.devicepixelratio",{"_index":3159,"t":{"1334":{"position":[[409,53]]}}}],["this.renderer.setsize(width",{"_index":3158,"t":{"1334":{"position":[[360,28]]}}}],["this.rendersquare(0",{"_index":2850,"t":{"1223":{"position":[[3527,22]]},"1239":{"position":[[1318,22]]},"1248":{"position":[[1144,22]]},"1257":{"position":[[268,22]]}}}],["this.rendersquare(1",{"_index":2851,"t":{"1223":{"position":[[3550,22]]},"1239":{"position":[[1341,22]]},"1248":{"position":[[1167,22]]},"1257":{"position":[[291,22]]}}}],["this.rendersquare(2",{"_index":2852,"t":{"1223":{"position":[[3573,22]]},"1239":{"position":[[1364,22]]},"1248":{"position":[[1190,22]]},"1257":{"position":[[314,22]]}}}],["this.rendersquare(3",{"_index":2853,"t":{"1223":{"position":[[3631,22]]},"1239":{"position":[[1422,22]]},"1248":{"position":[[1248,22]]},"1257":{"position":[[372,22]]}}}],["this.rendersquare(4",{"_index":2854,"t":{"1223":{"position":[[3654,22]]},"1239":{"position":[[1445,22]]},"1248":{"position":[[1271,22]]},"1257":{"position":[[395,22]]}}}],["this.rendersquare(5",{"_index":2855,"t":{"1223":{"position":[[3677,22]]},"1239":{"position":[[1468,22]]},"1248":{"position":[[1294,22]]},"1257":{"position":[[418,22]]}}}],["this.rendersquare(6",{"_index":2856,"t":{"1223":{"position":[[3735,22]]},"1239":{"position":[[1526,22]]},"1248":{"position":[[1352,22]]},"1257":{"position":[[476,22]]}}}],["this.rendersquare(7",{"_index":2857,"t":{"1223":{"position":[[3758,22]]},"1239":{"position":[[1549,22]]},"1248":{"position":[[1375,22]]},"1257":{"position":[[499,22]]}}}],["this.rendersquare(8",{"_index":2858,"t":{"1223":{"position":[[3781,22]]},"1239":{"position":[[1572,22]]},"1248":{"position":[[1398,22]]},"1257":{"position":[[522,22]]}}}],["this.result",{"_index":207,"t":{"37":{"position":[[600,11],[1076,11]]},"1323":{"position":[[847,12],[1115,12]]}}}],["this.rotateanim",{"_index":3279,"t":{"1346":{"position":[[1201,18]]}}}],["this.scen",{"_index":3162,"t":{"1336":{"position":[[60,10]]}}}],["this.scene.add(ambi",{"_index":3165,"t":{"1336":{"position":[[222,23]]}}}],["this.scene.add(this.mygroup",{"_index":3174,"t":{"1338":{"position":[[586,31]]}}}],["this.scene.add(this.mygroup);},getcanvers(text",{"_index":3189,"t":{"1340":{"position":[[525,47]]}}}],["this.setdata",{"_index":4585,"t":{"1872":{"position":[[377,14],[1766,14],[2007,14]]},"1876":{"position":[[203,14],[275,14],[1008,14]]},"1898":{"position":[[570,14],[615,14],[764,14]]},"1900":{"position":[[309,14]]},"1918":{"position":[[518,14]]},"1924":{"position":[[666,14]]},"1966":{"position":[[210,14]]},"1979":{"position":[[3000,14],[3067,14],[3135,14],[3204,14]]},"1981":{"position":[[1724,14],[2127,14]]},"1997":{"position":[[100,14],[166,14]]},"2007":{"position":[[279,14]]}}}],["this.setst",{"_index":2833,"t":{"1223":{"position":[[1987,15]]},"1239":{"position":[[444,15],[979,15]]},"1241":{"position":[[1041,15]]},"1263":{"position":[[1780,15]]},"1299":{"position":[[142,14],[418,15]]},"1301":{"position":[[352,14]]}}}],["this.setstate((prevst",{"_index":3057,"t":{"1299":{"position":[[285,25]]}}}],["this.setstate({squar",{"_index":2845,"t":{"1223":{"position":[[3255,23]]}}}],["this.setstate({valu",{"_index":2960,"t":{"1263":{"position":[[1474,21]]}}}],["this.stat",{"_index":2821,"t":{"1223":{"position":[[624,10],[3126,10]]},"1239":{"position":[[171,10],[808,10]]},"1263":{"position":[[682,10],[734,10],[933,12],[1155,10],[1676,10]]}}}],["this.state.clickcounter}</p",{"_index":3061,"t":{"1299":{"position":[[566,29]]}}}],["this.state.currenttimestamp.tolocalestring()}</p",{"_index":3063,"t":{"1299":{"position":[[605,50]]}}}],["this.state.squar",{"_index":2825,"t":{"1223":{"position":[[748,26]]}}}],["this.state.squares.slic",{"_index":2843,"t":{"1223":{"position":[[3209,27]]},"1239":{"position":[[371,27],[906,27]]},"1241":{"position":[[912,27]]}}}],["this.state.valu",{"_index":2831,"t":{"1223":{"position":[[1922,16]]},"1263":{"position":[[1415,17],[1812,18]]}}}],["this.state.xisnext",{"_index":2874,"t":{"1239":{"position":[[412,18],[487,20],[652,19],[947,18],[1022,20],[1202,19]]},"1241":{"position":[[759,19],[1009,18],[1084,20]]}}}],["this.stats.upd",{"_index":3261,"t":{"1346":{"position":[[558,20]]}}}],["this.todos.push",{"_index":3678,"t":{"1445":{"position":[[1301,17]]}}}],["this.upd",{"_index":3281,"t":{"1346":{"position":[[1306,14]]}}}],["this.uploadfil",{"_index":3096,"t":{"1321":{"position":[[237,16],[303,16]]}}}],["this，thi",{"_index":3534,"t":{"1406":{"position":[[487,9]]}}}],["three",{"_index":12,"t":{"6":{"position":[[259,5]]},"25":{"position":[[65,5],[241,5]]},"1349":{"position":[[23,5]]},"1351":{"position":[[20,5]]},"1353":{"position":[[12,5],[66,5],[194,5],[220,5],[242,5],[316,5],[327,8],[371,6],[425,6],[476,6]]}}}],["three\";...</script",{"_index":3283,"t":{"1351":{"position":[[31,20]]}}}],["three\";const",{"_index":3285,"t":{"1353":{"position":[[77,13]]}}}],["three.ambientlight(0x444444",{"_index":53,"t":{"10":{"position":[[1006,29]]},"1336":{"position":[[118,28]]}}}],["three.ambientlight(0x444444);scene.add(ambi",{"_index":80,"t":{"16":{"position":[[142,48]]}}}],["three.animationclip('sphererot",{"_index":3271,"t":{"1346":{"position":[[886,35]]}}}],["three.animationmixer(this.mygroup",{"_index":3273,"t":{"1346":{"position":[[978,35]]}}}],["three.axeshelper(0",{"_index":3164,"t":{"1336":{"position":[[186,20]]}}}],["three.boxgeometry(100",{"_index":37,"t":{"10":{"position":[[617,22]]},"12":{"position":[[40,22]]}}}],["three.canvastexture(canvastext",{"_index":3179,"t":{"1340":{"position":[[167,32],[953,32]]}}}],["three.clock",{"_index":3264,"t":{"1346":{"position":[[644,14]]}}}],["three.doublesid",{"_index":3144,"t":{"1325":{"position":[[477,17]]},"1338":{"position":[[0,70],[433,17]]},"1340":{"position":[[350,17],[1146,17]]}}}],["three.group",{"_index":3167,"t":{"1338":{"position":[[129,14]]},"1340":{"position":[[74,14]]}}}],["three.j",{"_index":0,"t":{"2":{"position":[[0,8],[13,8],[82,11]]},"4":{"position":[[0,8],[69,11]]},"6":{"position":[[0,8]]},"8":{"position":[[0,8]]},"10":{"position":[[9,8],[201,14]]},"1315":{"position":[[0,60]]},"1342":{"position":[[0,55]]},"1346":{"position":[[662,10]]}}}],["three.js众多控件之一orbitcontrols.j",{"_index":100,"t":{"25":{"position":[[0,48]]}}}],["three.js光源相关api",{"_index":82,"t":{"16":{"position":[[299,34]]}}}],["three.keyframetrack('meshsphere.rotation[i",{"_index":3269,"t":{"1346":{"position":[[778,45]]}}}],["three.mesh(geometri",{"_index":44,"t":{"10":{"position":[[770,20]]},"1338":{"position":[[483,20]]}}}],["three.mesh(geometrytext",{"_index":3185,"t":{"1340":{"position":[[398,24],[1194,24]]}}}],["three.meshlambertmateri",{"_index":40,"t":{"10":{"position":[[692,27]]},"14":{"position":[[33,27]]},"1325":{"position":[[415,27]]},"1338":{"position":[[373,27]]}}}],["three.meshphongmateri",{"_index":3183,"t":{"1340":{"position":[[294,25],[1090,25]]}}}],["three.orbitcontrol",{"_index":114,"t":{"25":{"position":[[868,86]]}}}],["three.orbitcontrols(camera",{"_index":108,"t":{"25":{"position":[[367,27]]}}}],["three.orbitcontrols(camera,renderer.domel",{"_index":111,"t":{"25":{"position":[[553,64]]}}}],["three.orthographiccamera",{"_index":64,"t":{"10":{"position":[[1300,25]]},"18":{"position":[[25,25]]}}}],["three.perspectivecamera(90",{"_index":3243,"t":{"1344":{"position":[[112,27]]}}}],["three.planegeometry(16",{"_index":3181,"t":{"1340":{"position":[[223,23],[1020,23]]}}}],["three.pointlight(0xffffff",{"_index":47,"t":{"10":{"position":[[881,27]]}}}],["three.pointlight(0xffffff);point.position.set(400",{"_index":79,"t":{"16":{"position":[[21,50]]}}}],["three.raycast",{"_index":3208,"t":{"1342":{"position":[[421,18]]}}}],["three.raycaster()扫描射线。它能够检测出鼠标在3d场景中的具体位置，raycaster射线会记录与之相交几何体，并以数组的形式从近到远返回对应模型的mesh",{"_index":3203,"t":{"1342":{"position":[[56,91]]}}}],["three.scen",{"_index":33,"t":{"10":{"position":[[498,14]]},"1336":{"position":[[77,14]]}}}],["three.spheregeometry(130",{"_index":3140,"t":{"1325":{"position":[[348,25]]},"1338":{"position":[[305,25]]}}}],["three.spheregeometry(60",{"_index":35,"t":{"10":{"position":[[551,24]]},"12":{"position":[[105,24]]}}}],["three.textur",{"_index":3136,"t":{"1325":{"position":[[195,16]]}}}],["three.textureload",{"_index":3169,"t":{"1338":{"position":[[168,22]]}}}],["three.vector2",{"_index":3216,"t":{"1342":{"position":[[713,16]]}}}],["three.vector3(0",{"_index":3246,"t":{"1344":{"position":[[243,16]]}}}],["three.webglrender",{"_index":70,"t":{"10":{"position":[[1487,22]]},"1334":{"position":[[255,21]]}}}],["three.webglrenderer();renderer.setsize(width",{"_index":88,"t":{"20":{"position":[[28,45]]}}}],["threedom在页面刷新之后才被挂载，而在这个dom挂载之前，threejs已经开始操作dom了！！！，因此它会提示找不到这个dom",{"_index":3146,"t":{"1327":{"position":[[64,97]]}}}],["threej",{"_index":3085,"t":{"1315":{"position":[[61,38]]},"1327":{"position":[[262,22]]},"1353":{"position":[[575,19]]},"2012":{"position":[[26,14]]},"2018":{"position":[[197,10]]}}}],["threejs进行处理，所以我们使用刚刚得到的base64数据流作为参数制作纹理。这个问题困扰了很久，最后到reddit",{"_index":3131,"t":{"1325":{"position":[[0,98]]}}}],["threestat",{"_index":3294,"t":{"1353":{"position":[[409,10]]}}}],["throw",{"_index":1294,"t":{"443":{"position":[[979,5]]},"845":{"position":[[79,5]]},"1017":{"position":[[420,8]]},"1872":{"position":[[1437,5]]}}}],["tian.github.io/learn",{"_index":3876,"t":{"1541":{"position":[[118,23]]}}}],["tic",{"_index":2891,"t":{"1244":{"position":[[288,11]]}}}],["tiff格式：标签图像文件格式（tag",{"_index":6152,"t":{"2452":{"position":[[282,19]]}}}],["time",{"_index":1014,"t":{"293":{"position":[[198,5],[315,4]]},"376":{"position":[[147,5],[264,4]]},"795":{"position":[[174,5]]},"825":{"position":[[583,5],[808,5]]},"831":{"position":[[350,4],[395,5]]},"833":{"position":[[230,4],[275,5]]},"1346":{"position":[[682,5],[824,6]]},"2045":{"position":[[1123,30]]},"2088":{"position":[[67,95]]}}}],["time.deltatim",{"_index":1078,"t":{"310":{"position":[[107,14],[204,14],[301,14],[399,14]]}}}],["times.</button",{"_index":525,"t":{"114":{"position":[[365,18]]},"211":{"position":[[365,18]]}}}],["tip",{"_index":512,"t":{"105":{"position":[[0,3]]},"202":{"position":[[0,3]]},"355":{"position":[[418,3]]},"363":{"position":[[394,3]]},"408":{"position":[[130,3]]},"443":{"position":[[430,3]]},"971":{"position":[[154,3]]},"986":{"position":[[130,3]]},"1094":{"position":[[904,3]]},"1190":{"position":[[0,3]]},"1192":{"position":[[0,3]]},"1194":{"position":[[0,3]]},"1223":{"position":[[1684,3],[2737,3]]},"1237":{"position":[[355,3]]},"1426":{"position":[[605,3]]},"1428":{"position":[[474,3]]},"1443":{"position":[[0,3]]},"1445":{"position":[[786,3]]},"1474":{"position":[[138,3]]},"1478":{"position":[[0,3]]},"1487":{"position":[[373,3]]},"1528":{"position":[[131,3]]},"1888":{"position":[[8,3]]},"1894":{"position":[[19,3]]},"1898":{"position":[[846,3]]},"1909":{"position":[[865,3]]},"1922":{"position":[[0,3]]},"1942":{"position":[[295,3]]},"1981":{"position":[[2300,3]]},"2125":{"position":[[1571,3]]},"2167":{"position":[[332,3],[877,3]]},"2173":{"position":[[950,3]]},"2175":{"position":[[0,3]]},"2188":{"position":[[555,3]]},"2191":{"position":[[171,3]]},"2247":{"position":[[1375,3]]}}}],["titl",{"_index":2351,"t":{"1006":{"position":[[397,6]]},"1010":{"position":[[84,6],[220,6],[364,6],[538,6]]},"1017":{"position":[[257,6],[1841,6],[2205,6],[2280,6],[2546,6]]},"1020":{"position":[[59,6]]},"1037":{"position":[[126,6],[499,6],[568,6],[827,6]]},"1092":{"position":[[1084,5],[2238,6],[2482,6],[2749,6],[3065,6],[3189,6],[3327,6],[3500,6]]},"1393":{"position":[[765,5]]},"1426":{"position":[[168,6],[360,6],[534,6]]},"1445":{"position":[[970,5],[1143,6],[1179,6],[1220,6],[1342,6]]},"1551":{"position":[[0,7]]},"1570":{"position":[[19,46],[118,9]]},"1872":{"position":[[2532,6],[2895,6]]},"1876":{"position":[[407,6],[1099,6],[1493,6]]},"1898":{"position":[[339,14]]},"1935":{"position":[[11,11],[23,11],[223,14]]},"1964":{"position":[[603,6]]},"1979":{"position":[[570,22],[660,25],[753,16],[1151,21],[1241,17],[1459,13],[1542,18],[1761,17],[1847,16]]}}}],["title']})new",{"_index":3670,"t":{"1445":{"position":[[1053,14]]}}}],["title=\"a",{"_index":3949,"t":{"1582":{"position":[[93,8]]}}}],["title=\"分类1\"class=\"tab",{"_index":4903,"t":{"1979":{"position":[[1036,21]]}}}],["title=\"分类2",{"_index":4906,"t":{"1979":{"position":[[1342,11]]}}}],["title=\"分类3",{"_index":4909,"t":{"1979":{"position":[[1644,11]]}}}],["title=\"我的电脑c",{"_index":4886,"t":{"1979":{"position":[[479,23]]}}}],["title={`hello",{"_index":2575,"t":{"1092":{"position":[[865,13]]}}}],["title></titl",{"_index":3893,"t":{"1547":{"position":[[752,16]]}}}],["title>css",{"_index":3820,"t":{"1515":{"position":[[186,10]]}}}],["title>css网格遮罩</title></head><bodi",{"_index":3798,"t":{"1511":{"position":[[51,35]]}}}],["title>index首页</titl",{"_index":2037,"t":{"853":{"position":[[194,22]]}}}],["title>我的测试站点</titl",{"_index":3882,"t":{"1547":{"position":[[94,21]]}}}],["title>我的测试页面</titl",{"_index":3895,"t":{"1549":{"position":[[73,21]]}}}],["title>我的测试页面</title></head",{"_index":3896,"t":{"1549":{"position":[[246,28]]},"1551":{"position":[[53,28]]}}}],["title>第一个three.js文件_webgl三维场景</titl",{"_index":19,"t":{"10":{"position":[[83,38]]}}}],["titlebox",{"_index":4946,"t":{"1979":{"position":[[2741,11]]}}}],["tl",{"_index":5972,"t":{"2287":{"position":[[1293,30]]}}}],["tname",{"_index":1893,"t":{"757":{"position":[[154,5]]}}}],["tno",{"_index":1892,"t":{"757":{"position":[[150,3],[386,3],[647,3],[1103,77],[1181,86]]}}}],["tno、tname、tsex、ttitle、tdept",{"_index":1909,"t":{"757":{"position":[[888,74],[1268,74]]}}}],["tno、tname、tsex、ttitle、tdept）和（1",{"_index":1911,"t":{"757":{"position":[[1343,93]]}}}],["to(rgba(250",{"_index":2084,"t":{"853":{"position":[[836,12]]}}}],["to=\"/\"><img",{"_index":3325,"t":{"1366":{"position":[[455,11]]}}}],["to=\"/docs/intro",{"_index":2592,"t":{"1092":{"position":[[1593,17],[2062,17]]}}}],["to=\"/engin",{"_index":3374,"t":{"1366":{"position":[[2152,13]]}}}],["to=\"/haitan",{"_index":3369,"t":{"1366":{"position":[[1787,13]]}}}],["to=\"/jisuang",{"_index":3367,"t":{"1366":{"position":[[1590,14]]}}}],["to=\"/lasa",{"_index":3368,"t":{"1366":{"position":[[1691,11]]}}}],["to=\"/riluo",{"_index":3370,"t":{"1366":{"position":[[1885,12]]}}}],["to=\"/upload",{"_index":3371,"t":{"1366":{"position":[[1996,13]]}}}],["tobia",{"_index":4366,"t":{"1779":{"position":[[89,9],[281,9]]}}}],["tocelsiu",{"_index":4268,"t":{"1713":{"position":[[363,9]]},"1715":{"position":[[0,17],[29,11],[160,10],[182,9]]}}}],["tocelsius(77",{"_index":4267,"t":{"1713":{"position":[[338,14]]}}}],["tocelsius(fahrenheit",{"_index":4263,"t":{"1713":{"position":[[238,21]]},"1715":{"position":[[60,21]]}}}],["todo",{"_index":2922,"t":{"1248":{"position":[[917,4],[1628,4]]},"1255":{"position":[[104,4]]},"1259":{"position":[[213,4]]},"1261":{"position":[[252,10]]},"1395":{"position":[[378,7],[463,6]]},"1399":{"position":[[144,4],[272,4],[292,5],[431,4],[494,5],[507,9],[628,4],[641,4],[649,4],[707,5],[786,7],[864,9],[1151,5]]},"1402":{"position":[[260,4]]},"1404":{"position":[[574,6]]},"1443":{"position":[[146,6],[181,4],[208,5],[308,7],[319,4],[350,5]]},"1445":{"position":[[398,4],[559,5],[676,6],[884,5],[1078,6],[1125,6]]}}}],["todo\">add",{"_index":3655,"t":{"1445":{"position":[[497,9]]}}}],["todo.text",{"_index":3472,"t":{"1395":{"position":[[389,9]]},"1399":{"position":[[535,9],[892,9]]}}}],["todo</label",{"_index":3656,"t":{"1445":{"position":[[509,12]]}}}],["todobuttondelet",{"_index":3501,"t":{"1402":{"position":[[311,16]]}}}],["todobuttonedit",{"_index":3502,"t":{"1402":{"position":[[333,14]]}}}],["todoitem",{"_index":3500,"t":{"1402":{"position":[[297,8]]}}}],["todolist",{"_index":3499,"t":{"1402":{"position":[[285,8]]}}}],["todolistfoot",{"_index":3503,"t":{"1402":{"position":[[351,14]]}}}],["todoliststatist",{"_index":3505,"t":{"1402":{"position":[[389,18]]}}}],["todosbuttonclear",{"_index":3504,"t":{"1402":{"position":[[369,16]]}}}],["toe",{"_index":2893,"t":{"1244":{"position":[[304,66]]}}}],["toexponenti",{"_index":4279,"t":{"1727":{"position":[[0,15]]}}}],["tofix",{"_index":4284,"t":{"1729":{"position":[[0,9]]}}}],["tofixed(2",{"_index":4290,"t":{"1729":{"position":[[147,10]]}}}],["togglelogintyp",{"_index":3715,"t":{"1472":{"position":[[849,16],[1789,16]]}}}],["token",{"_index":760,"t":{"245":{"position":[[64,8],[121,5],[290,6],[321,8],[354,5],[545,5],[588,5]]},"249":{"position":[[118,5],[461,5],[471,5],[620,5],[640,8],[649,5]]},"293":{"position":[[735,6],[771,6],[855,6],[1002,6]]},"295":{"position":[[121,5],[332,6],[339,9],[351,9]]},"363":{"position":[[715,5],[721,5],[867,8],[876,5],[887,5]]},"378":{"position":[[77,6],[224,6]]},"380":{"position":[[174,5],[391,6],[398,9],[413,7],[434,5]]},"1080":{"position":[[77,6],[224,6]]},"1082":{"position":[[41,5]]},"2121":{"position":[[135,12]]}}}],["tolocalestr",{"_index":4154,"t":{"1646":{"position":[[312,16]]}}}],["tolowercas",{"_index":1215,"t":{"402":{"position":[[155,13]]},"1846":{"position":[[140,13]]}}}],["tom",{"_index":1230,"t":{"412":{"position":[[368,6]]}}}],["top",{"_index":2055,"t":{"853":{"position":[[471,4],[770,4]]},"1248":{"position":[[560,4]]},"1255":{"position":[[391,4]]},"1366":{"position":[[828,4],[2504,4]]},"1511":{"position":[[527,4]]},"1515":{"position":[[1206,4]]},"1518":{"position":[[322,4]]},"1868":{"position":[[496,4]]},"1933":{"position":[[782,3]]},"1960":{"position":[[235,4]]},"1979":{"position":[[2262,4]]}}}],["top10",{"_index":5889,"t":{"2263":{"position":[[68,36]]}}}],["top:32rpx",{"_index":4918,"t":{"1979":{"position":[[2108,10]]}}}],["toprecis",{"_index":4291,"t":{"1731":{"position":[[0,13]]}}}],["toradian",{"_index":1543,"t":{"532":{"position":[[0,11]]}}}],["torso",{"_index":3942,"t":{"1578":{"position":[[117,5]]}}}],["toshow",{"_index":3768,"t":{"1507":{"position":[[415,6],[444,6],[1059,6],[1123,6]]}}}],["tostr",{"_index":1216,"t":{"402":{"position":[[181,10]]},"1638":{"position":[[1112,10]]},"1646":{"position":[[355,10]]},"1725":{"position":[[0,10]]}}}],["total",{"_index":1663,"t":{"598":{"position":[[340,5],[384,5],[435,7]]},"604":{"position":[[234,5],[287,5],[342,7],[526,5]]},"1803":{"position":[[247,5],[560,5],[803,5],[961,5],[1260,5]]},"1805":{"position":[[262,5],[476,5]]}}}],["touppercas",{"_index":1214,"t":{"402":{"position":[[129,13]]},"1846":{"position":[[3,13]]}}}],["toxic</strong>.</p><p>i",{"_index":4027,"t":{"1613":{"position":[[203,23]]}}}],["tr:nth",{"_index":3861,"t":{"1532":{"position":[[49,6]]}}}],["tracerout",{"_index":5736,"t":{"2200":{"position":[[163,11]]}}}],["traceroute的目的地，这时源主机就获得了到目的地的每一跳路由的ip",{"_index":5739,"t":{"2200":{"position":[[387,53]]}}}],["track",{"_index":3620,"t":{"1428":{"position":[[125,5]]}}}],["trackballcontrol",{"_index":3293,"t":{"1353":{"position":[[348,17],[378,18]]}}}],["transact",{"_index":1841,"t":{"695":{"position":[[133,11]]}}}],["transfer",{"_index":5177,"t":{"2057":{"position":[[21,8]]}}}],["transfer，rdt",{"_index":5888,"t":{"2263":{"position":[[21,46]]}}}],["transform",{"_index":2056,"t":{"853":{"position":[[481,10]]},"1507":{"position":[[1212,10],[1258,10],[1298,10],[1481,10],[1527,10],[1567,10],[1736,10],[1782,10],[1852,10],[1895,10],[2018,10],[2064,10],[2134,10],[2177,10],[2282,10],[2333,10],[2408,10],[2451,10],[2576,10],[2627,10],[2702,10],[2745,10],[2849,10],[2881,10],[2939,10],[2969,10],[3061,10],[3093,10],[3151,10],[3181,10],[3273,10],[3306,10],[3365,10],[3395,10],[3486,10],[3519,10],[3578,10],[3608,10]]},"1515":{"position":[[1634,9],[1694,10],[1728,10],[1776,10]]},"1520":{"position":[[0,9]]},"1522":{"position":[[240,9]]},"1979":{"position":[[2212,10]]}}}],["transform:rot",{"_index":3794,"t":{"1507":{"position":[[3806,17],[3835,17],[3868,17],[3993,17],[4022,17],[4055,17],[4246,17],[4275,17],[4308,17],[4433,17],[4462,17],[4495,17]]}}}],["transform:rotate(5deg",{"_index":3793,"t":{"1507":{"position":[[3679,23],[3707,23],[3750,23],[3901,23],[3929,23],[3961,23],[4119,23],[4147,23],[4190,23],[4341,23],[4369,23],[4401,23]]}}}],["transform:scale(1,1",{"_index":3784,"t":{"1507":{"position":[[1362,21],[1384,21],[1631,21],[1653,21]]}}}],["transform，vue.j",{"_index":3455,"t":{"1384":{"position":[[47,16]]}}}],["transitional.dtd",{"_index":3889,"t":{"1547":{"position":[[376,18]]}}}],["transitional//en\"\"http://www.w3.org/tr/xhtml1/dtd/xhtml1",{"_index":3888,"t":{"1547":{"position":[[319,56]]}}}],["translat",{"_index":2057,"t":{"853":{"position":[[492,10]]},"1507":{"position":[[2293,10],[2344,10],[2587,10],[2638,10],[3284,10],[3317,10],[3497,10],[3530,10]]}}}],["translate(0",{"_index":3787,"t":{"1507":{"position":[[1747,12],[1793,12],[2029,12],[2075,12]]}}}],["translate(0,10px",{"_index":3788,"t":{"1507":{"position":[[1863,18],[1906,18],[2145,18],[2188,18],[2419,18],[2462,18],[2713,18],[2756,18]]}}}],["translate(1000px,0",{"_index":3790,"t":{"1507":{"position":[[2860,20],[2892,20],[3072,20],[3104,20]]}}}],["translate(10px,0",{"_index":3791,"t":{"1507":{"position":[[2950,18],[2980,18],[3162,18],[3192,18],[3376,18],[3406,18],[3589,18],[3619,18]]}}}],["translatey(0",{"_index":3845,"t":{"1515":{"position":[[1705,14]]}}}],["translatey(100px",{"_index":3846,"t":{"1515":{"position":[[1739,17],[1787,17]]}}}],["transmiss",{"_index":5839,"t":{"2247":{"position":[[26,12],[384,12]]}}}],["transpar",{"_index":2083,"t":{"853":{"position":[[822,13]]}}}],["trash",{"_index":3673,"t":{"1445":{"position":[[1200,7]]}}}],["tri",{"_index":714,"t":{"179":{"position":[[712,4]]},"221":{"position":[[712,4]]},"1165":{"position":[[712,4]]}}}],["trigger",{"_index":1087,"t":{"312":{"position":[[51,29]]}}}],["trim",{"_index":4536,"t":{"1850":{"position":[[0,6]]}}}],["trip",{"_index":5119,"t":{"2045":{"position":[[1118,4]]},"2088":{"position":[[62,4]]}}}],["true",{"_index":182,"t":{"33":{"position":[[1063,4]]},"35":{"position":[[251,12],[264,10],[310,5]]},"37":{"position":[[1257,5]]},"90":{"position":[[173,5],[187,5],[199,5],[212,5],[224,5]]},"92":{"position":[[26,5],[38,30],[158,5],[169,15],[293,5],[304,11],[347,5],[358,16],[399,5],[480,24]]},"245":{"position":[[315,5]]},"390":{"position":[[662,4],[689,4],[703,4]]},"394":{"position":[[271,5],[462,4],[479,4]]},"396":{"position":[[99,4]]},"408":{"position":[[180,24]]},"418":{"position":[[17,21]]},"422":{"position":[[125,23]]},"490":{"position":[[93,9],[387,4]]},"565":{"position":[[292,4]]},"567":{"position":[[97,5]]},"975":{"position":[[193,4]]},"1017":{"position":[[1461,5]]},"1039":{"position":[[384,5]]},"1058":{"position":[[293,5]]},"1152":{"position":[[188,101]]},"1239":{"position":[[225,5],[862,5]]},"1283":{"position":[[80,7]]},"1325":{"position":[[305,5]]},"1334":{"position":[[288,5]]},"1342":{"position":[[1465,5]]},"1373":{"position":[[350,5],[610,5],[744,5]]},"1395":{"position":[[119,4]]},"1404":{"position":[[243,6],[1122,6]]},"1624":{"position":[[40,6]]},"1628":{"position":[[54,6]]},"1634":{"position":[[119,5],[147,4]]},"1636":{"position":[[8,12],[237,4],[266,4]]},"1638":{"position":[[1063,4]]},"1665":{"position":[[82,4]]},"1693":{"position":[[0,13]]},"1707":{"position":[[128,4]]},"1720":{"position":[[252,7]]},"1842":{"position":[[1110,5],[1196,4],[1465,9],[1564,4],[1860,13],[2050,4],[2104,9],[2195,4],[2313,4]]},"1892":{"position":[[126,5]]},"1898":{"position":[[591,4]]},"1900":{"position":[[253,5]]},"1981":{"position":[[1844,4]]}}}],["true)，v",{"_index":3732,"t":{"1485":{"position":[[119,7]]}}}],["true;let",{"_index":4071,"t":{"1636":{"position":[[38,8]]}}}],["true;var",{"_index":4247,"t":{"1693":{"position":[[31,8]]}}}],["trueboolean",{"_index":4074,"t":{"1636":{"position":[[130,16]]}}}],["trueboolean(nul",{"_index":4076,"t":{"1636":{"position":[[172,18]]}}}],["trueisnan(1",{"_index":4104,"t":{"1638":{"position":[[1026,13]]}}}],["truevm.$el",{"_index":3523,"t":{"1404":{"position":[[1066,10]]}}}],["true}els",{"_index":1236,"t":{"420":{"position":[[11,22]]}}}],["true。如果两个数组包含相同数量的元素，并且两个数组中的所有相应元素对都是相等的，则认为这两个数组是相等的。换句话说，如果两个数组以相同顺序包含相同的元素，则两个数组是相等的。同样的方法适用于所有的其他基本数据类型（byte，short，int",{"_index":1751,"t":{"618":{"position":[[413,126]]}}}],["true，class",{"_index":3421,"t":{"1373":{"position":[[475,10]]}}}],["true，daisyui",{"_index":375,"t":{"92":{"position":[[410,12]]}}}],["true，则逻辑非运算符将得到fals",{"_index":1197,"t":{"394":{"position":[[136,48]]}}}],["true，循环体被执行。如果为fals",{"_index":1222,"t":{"410":{"position":[[214,39]]}}}],["truthi",{"_index":3416,"t":{"1373":{"position":[[142,11]]},"1375":{"position":[[334,6]]},"1377":{"position":[[425,6]]},"1464":{"position":[[36,6]]}}}],["tsex",{"_index":1894,"t":{"757":{"position":[[160,4],[963,30]]}}}],["tsinghua.edu.cn还拥有qinghua.com这个别名，那么dns就可以将每一个别名都对应到一个ip",{"_index":5223,"t":{"2064":{"position":[[359,80]]}}}],["ttitl",{"_index":1895,"t":{"757":{"position":[[165,6]]}}}],["ttitle属性的域是{讲师、副教授、教授}，tdept",{"_index":1910,"t":{"757":{"position":[[1000,34]]}}}],["ttl为1，到达第一个路由器时，ttl减1为0所以丢掉这个探测包，同时向源主机发回icmp时间超过报文，这时源主机就获得了第一个路由器的ip",{"_index":5737,"t":{"2200":{"position":[[199,80]]}}}],["ttl减一。ttl>0表示还可以转发，ttl=0表示已经超时，丢弃这个ip数据。一般这个ttl是64",{"_index":5523,"t":{"2167":{"position":[[574,61]]}}}],["ttl增1为2，到达第一个路由器ttl减1为1并转发探测包到第二个路由器，这时ttl减1为0，丢掉这个探测包并向源主机发回icmp时间超过报文，源主机就获得了第二个路由器的ip",{"_index":5738,"t":{"2200":{"position":[[280,106]]}}}],["tutori",{"_index":2451,"t":{"1017":{"position":[[2004,11],[2238,11]]},"1092":{"position":[[1622,8]]}}}],["tw",{"_index":386,"t":{"92":{"position":[[1009,2],[1026,2]]}}}],["twitter",{"_index":2460,"t":{"1017":{"position":[[2484,10]]},"1037":{"position":[[765,10]]},"1827":{"position":[[41,7]]}}}],["two",{"_index":4196,"t":{"1665":{"position":[[37,3],[94,3]]}}}],["txt",{"_index":2257,"t":{"950":{"position":[[13,6],[43,6]]},"1797":{"position":[[37,3],[150,3],[156,3],[180,3],[309,3],[408,3],[414,3]]},"1836":{"position":[[32,3]]},"1854":{"position":[[28,3],[214,3]]}}}],["txt.length",{"_index":4470,"t":{"1836":{"position":[[77,11]]}}}],["txt.split",{"_index":4547,"t":{"1854":{"position":[[50,18],[72,16],[96,20],[232,17]]}}}],["txts','userlist",{"_index":2769,"t":{"1152":{"position":[[50,19]]}}}],["type",{"_index":303,"t":{"66":{"position":[[587,6]]},"124":{"position":[[126,4]]},"126":{"position":[[322,5]]},"171":{"position":[[587,6]]},"287":{"position":[[410,18]]},"289":{"position":[[188,6]]},"614":{"position":[[11,8],[67,4]]},"914":{"position":[[474,6]]},"1017":{"position":[[186,5],[1112,5],[1768,5],[1950,5]]},"1037":{"position":[[53,5],[257,5]]},"1039":{"position":[[47,5]]},"1269":{"position":[[102,5]]},"1271":{"position":[[758,5]]},"1323":{"position":[[160,5]]},"1342":{"position":[[1578,5]]},"1420":{"position":[[749,10]]},"1665":{"position":[[131,5]]},"1964":{"position":[[445,6]]},"1966":{"position":[[132,6]]},"1981":{"position":[[750,4]]},"2055":{"position":[[455,5]]}}}],["type','text/html;charset=utf",{"_index":2211,"t":{"912":{"position":[[281,28]]}}}],["type(scop",{"_index":557,"t":{"124":{"position":[[8,13]]}}}],["type:\"porsch",{"_index":4167,"t":{"1651":{"position":[[149,16]]}}}],["type:\"volvo",{"_index":4397,"t":{"1794":{"position":[[11,15]]}}}],["type</button></div><script>new",{"_index":3714,"t":{"1472":{"position":[[745,30],[1688,30]]}}}],["type=\"audio/mp3",{"_index":3972,"t":{"1590":{"position":[[41,17]]}}}],["type=\"audio/ogg",{"_index":3974,"t":{"1590":{"position":[[83,17]]}}}],["type=\"image/x",{"_index":3920,"t":{"1561":{"position":[[353,13]]}}}],["type=\"navigateback",{"_index":4754,"t":{"1928":{"position":[[517,20]]}}}],["type=\"navigateto",{"_index":4750,"t":{"1928":{"position":[[320,19]]}}}],["type=\"primari",{"_index":4977,"t":{"1981":{"position":[[1204,14]]}}}],["type=\"redirectto",{"_index":4752,"t":{"1928":{"position":[[417,19]]}}}],["type=\"relaunch",{"_index":4758,"t":{"1928":{"position":[[689,17]]}}}],["type=\"submit\">submit</button",{"_index":3048,"t":{"1295":{"position":[[525,29]]}}}],["type=\"submit\">{props.label}</button",{"_index":2972,"t":{"1267":{"position":[[176,40]]},"1273":{"position":[[975,40]]}}}],["type=\"switchtab",{"_index":4756,"t":{"1928":{"position":[[618,18]]}}}],["type=\"text",{"_index":129,"t":{"31":{"position":[[257,11]]},"1545":{"position":[[112,11],[262,11],[332,12]]},"1868":{"position":[[422,11],[662,11],[745,11]]},"1872":{"position":[[1635,11]]}}}],["type=\"video/mp4",{"_index":3965,"t":{"1587":{"position":[[110,17]]}}}],["type=\"video/webm",{"_index":3966,"t":{"1587":{"position":[[157,18]]}}}],["type[typelength1][typelength2",{"_index":1707,"t":{"614":{"position":[[35,31]]}}}],["typedef",{"_index":6159,"t":{"2454":{"position":[[338,7],[781,7],[1637,7]]}}}],["typeerror",{"_index":3536,"t":{"1406":{"position":[[536,10],[592,10]]},"1628":{"position":[[256,10]]}}}],["typelength1",{"_index":1708,"t":{"614":{"position":[[72,28],[115,18]]}}}],["typelength2",{"_index":1709,"t":{"614":{"position":[[103,11],[134,15]]}}}],["typenam",{"_index":1706,"t":{"614":{"position":[[20,8]]}}}],["typeof",{"_index":4070,"t":{"1632":{"position":[[135,6],[150,6],[196,6]]},"1699":{"position":[[18,6],[47,6],[70,6],[290,6]]},"1707":{"position":[[30,6]]},"1722":{"position":[[251,9],[281,6]]},"1749":{"position":[[33,6]]}}}],["typescript",{"_index":592,"t":{"126":{"position":[[276,10],[290,10]]}}}],["typescript作为脚本语言，请输入n",{"_index":2495,"t":{"1047":{"position":[[194,29]]}}}],["typo",{"_index":580,"t":{"126":{"position":[[95,5]]}}}],["t的冲激序列,t",{"_index":6265,"t":{"2488":{"position":[[57,63]]}}}],["t（n)=o(n",{"_index":5988,"t":{"2317":{"position":[[48,9]]}}}],["t（传播延迟）=l(包大小`bit)/r(速率`bit/s)=(8kb/pkt)/(10^9",{"_index":5919,"t":{"2273":{"position":[[428,46]]}}}],["u",{"_index":1766,"t":{"621":{"position":[[290,4]]},"658":{"position":[[104,20]]},"1618":{"position":[[0,3],[276,11]]},"2208":{"position":[[218,22]]}}}],["u=(l/r)/(rtt+l/r)=0.008/30.009=0.00027，rtt",{"_index":5921,"t":{"2273":{"position":[[495,47]]}}}],["ua",{"_index":2034,"t":{"853":{"position":[[160,2]]},"1515":{"position":[[81,2]]}}}],["ubuntu",{"_index":274,"t":{"55":{"position":[[43,6]]},"1084":{"position":[[217,6],[233,14]]}}}],["udp",{"_index":5107,"t":{"2043":{"position":[[43,8]]},"2218":{"position":[[215,45]]},"2252":{"position":[[153,5],[436,14]]},"2258":{"position":[[68,3],[113,13],[280,21],[391,14],[610,48],[697,54]]}}}],["udp67）“大爷我来了！给我找个座位（ip）！”在现场那的所有的服务生（dhcp服务器）都会收到这个信息。服务生a告诉小明，请坐这个1号座位，服务生b告诉小明，请坐这个2号座位，服务生c让其坐3号座位，同时abc三人这时都认为自己的座位有人坐了，但是小明只能选一个座位坐下，因此他选了最先听到的服务生a的话，选了1号座位，这时小明再次大喊“我坐了1号座位！”，服务生abc都听到了这个消息，bc发现并不是自己的位子，那么就又认为这个2、3是空位了。a听到客人坐了自己的位置，那么他就在小明的耳边告诉小明：“好的（ack）！你可以坐1",{"_index":5732,"t":{"2197":{"position":[[1448,303]]}}}],["udp不提供可靠性，它只是把应用程序传给ip",{"_index":5880,"t":{"2258":{"position":[[457,48]]}}}],["udp协议进行传送，端口520",{"_index":5775,"t":{"2218":{"position":[[84,25]]}}}],["udp发送端和接收端没有握手；每个udp",{"_index":5869,"t":{"2250":{"position":[[55,35]]}}}],["udp或tcp",{"_index":5103,"t":{"2037":{"position":[[154,7],[201,7]]}}}],["udp数据报前加12字节的伪首部，并不是udp真正的首部。只是在计算校验和时临时添加在udp数据报的前面得到的临时数据报，后校验临时数据报。伪首部既不向下传送，也不向上递交，仅仅为了计算校验和。这样，即检查了udp的数据报，又对ip数据报源ip",{"_index":5875,"t":{"2252":{"position":[[283,144]]}}}],["udp是和tcp",{"_index":5877,"t":{"2258":{"position":[[168,48]]}}}],["udp服务可以减少大量不必要的时间开支。现在，udp服务正有取代tcp",{"_index":5109,"t":{"2043":{"position":[[276,44]]}}}],["udp首部由8",{"_index":5870,"t":{"2252":{"position":[[0,23]]}}}],["ui",{"_index":509,"t":{"103":{"position":[[3898,9]]},"128":{"position":[[4,17],[22,31]]},"130":{"position":[[0,17],[18,31]]},"133":{"position":[[15,2]]},"140":{"position":[[12,2],[89,2]]},"142":{"position":[[8,2],[21,2],[84,2]]},"200":{"position":[[3898,9]]},"305":{"position":[[137,2]]},"1118":{"position":[[428,30]]},"1244":{"position":[[45,8]]},"1251":{"position":[[73,2],[1087,2]]},"1306":{"position":[[13,2],[77,21]]},"1308":{"position":[[26,3]]},"1364":{"position":[[108,3]]},"1883":{"position":[[147,9]]},"1885":{"position":[[128,2]]},"1900":{"position":[[396,58]]}}}],["ui必须重复一遍，因为翻页之后会遮住原来的ui",{"_index":498,"t":{"103":{"position":[[2301,37]]},"200":{"position":[[2301,37]]}}}],["ui组件库就是这样，如果你需要一个搜索框，你只需要将它调用出来，而不是自己去写嵌套结构。因此使用ui组件库能够帮你减少很多css代码和html",{"_index":4665,"t":{"1883":{"position":[[334,77]]}}}],["ui组件库，必须和vue、react等j",{"_index":4664,"t":{"1883":{"position":[[0,146]]}}}],["ul",{"_index":2902,"t":{"1248":{"position":[[282,2]]},"1251":{"position":[[300,4],[358,5],[797,2]]},"1424":{"position":[[101,3],[382,3]]},"1426":{"position":[[31,3]]},"1437":{"position":[[312,3]]},"1441":{"position":[[58,4]]},"1443":{"position":[[264,3]]},"1445":{"position":[[628,4],[847,4]]},"1530":{"position":[[77,2]]},"1603":{"position":[[64,4],[139,4]]},"1605":{"position":[[114,18]]},"1607":{"position":[[281,4],[368,5]]},"1642":{"position":[[756,4],[792,7]]}}}],["ul>\";for",{"_index":4337,"t":{"1760":{"position":[[126,10]]}}}],["ul>\";fruits.foreach(myfunction);text",{"_index":4342,"t":{"1760":{"position":[[300,38]]}}}],["ul>\";funct",{"_index":4343,"t":{"1760":{"position":[[342,16]]}}}],["ul></div",{"_index":3668,"t":{"1445":{"position":[[774,11]]}}}],["ul>豆浆油条豆汁焦圈</ul",{"_index":4002,"t":{"1603":{"position":[[92,17]]}}}],["uncaught",{"_index":3535,"t":{"1406":{"position":[[527,8],[583,8]]}}}],["undefin",{"_index":3021,"t":{"1283":{"position":[[96,11]]},"1406":{"position":[[571,9]]},"1622":{"position":[[235,9],[267,9],[396,9],[424,9]]},"1634":{"position":[[0,9],[17,28],[81,9],[125,9]]},"1636":{"position":[[348,9],[367,9]]},"1701":{"position":[[47,10],[76,13],[90,10],[114,9],[136,10],[156,10],[173,13],[187,10]]},"1703":{"position":[[4,9]]},"1705":{"position":[[199,9],[228,10],[245,13],[259,10]]},"1707":{"position":[[0,9],[37,9],[89,9],[115,9]]},"1775":{"position":[[149,9]]},"1852":{"position":[[324,11]]},"1987":{"position":[[163,10]]}}}],["undefinedtypeof",{"_index":4255,"t":{"1707":{"position":[[50,15]]}}}],["undefinedvar",{"_index":4236,"t":{"1687":{"position":[[33,12]]}}}],["undefined、null、boolean、numb",{"_index":4068,"t":{"1632":{"position":[[18,48]]}}}],["undefined。typeof",{"_index":4253,"t":{"1701":{"position":[[26,16]]}}}],["underlin",{"_index":4041,"t":{"1618":{"position":[[317,10]]}}}],["unicod",{"_index":1594,"t":{"567":{"position":[[66,7]]},"1642":{"position":[[21,7],[244,7]]},"1852":{"position":[[135,7]]}}}],["unicode表中的位置，必须使用int类型显示转换，如(int)’a",{"_index":1587,"t":{"565":{"position":[[375,48]]}}}],["unicode表中的位置；显示以字符‘α’开始的25",{"_index":1586,"t":{"565":{"position":[[336,38]]}}}],["unicode表中的顺序位置:945",{"_index":1593,"t":{"565":{"position":[[762,24]]}}}],["unionid",{"_index":4605,"t":{"1872":{"position":[[987,8]]},"1974":{"position":[[227,7]]}}}],["uniqu",{"_index":3349,"t":{"1366":{"position":[[1084,6],[1178,6]]}}}],["unit,mtu）:指的是最大链路层帧长度，即应用数据+tcp首部+ip",{"_index":5847,"t":{"2247":{"position":[[397,39]]}}}],["uniti",{"_index":1037,"t":{"297":{"position":[[29,5],[35,51],[141,5]]},"299":{"position":[[19,5],[25,51],[131,5]]},"301":{"position":[[2,5]]},"305":{"position":[[323,5],[334,5]]}}}],["unityengin",{"_index":1047,"t":{"303":{"position":[[128,14]]},"305":{"position":[[463,14]]}}}],["unityengine;publ",{"_index":1071,"t":{"307":{"position":[[199,18],[429,18]]}}}],["univers",{"_index":3952,"t":{"1582":{"position":[[137,10]]}}}],["universe.\";document.getelementbyid(\"demo\").innerhtml",{"_index":4513,"t":{"1842":{"position":[[1756,52]]}}}],["universe.\";text.endswith(\"world",{"_index":4519,"t":{"1842":{"position":[[2269,33]]}}}],["universe.\";text.includes(\"world",{"_index":4502,"t":{"1842":{"position":[[1156,33],[1362,33]]}}}],["universe.\";text.startswith(\"hello",{"_index":4507,"t":{"1842":{"position":[[1522,35]]}}}],["universe.\";text.startswith(\"world",{"_index":4515,"t":{"1842":{"position":[[1914,35],[2005,35]]}}}],["unix)(empti",{"_index":5170,"t":{"2055":{"position":[[968,12]]}}}],["unix)last",{"_index":5158,"t":{"2055":{"position":[[402,10]]}}}],["unknown",{"_index":932,"t":{"273":{"position":[[193,7]]}}}],["unnnn",{"_index":4130,"t":{"1642":{"position":[[223,12]]}}}],["unord",{"_index":4001,"t":{"1603":{"position":[[0,31]]}}}],["unshift",{"_index":3624,"t":{"1431":{"position":[[70,9]]},"1771":{"position":[[0,9]]}}}],["until",{"_index":3579,"t":{"1420":{"position":[[592,5]]}}}],["up",{"_index":457,"t":{"103":{"position":[[385,3],[3851,3]]},"200":{"position":[[385,3],[3851,3]]},"278":{"position":[[92,3]]},"1092":{"position":[[2391,2],[2446,2]]},"2434":{"position":[[173,2]]}}}],["up;//修改scrolly相当于修改了上面的het",{"_index":506,"t":{"103":{"position":[[3579,35]]},"200":{"position":[[3579,35]]}}}],["updat",{"_index":577,"t":{"126":{"position":[[43,6]]},"303":{"position":[[230,6],[257,6],[294,8]]},"305":{"position":[[115,6],[194,41],[735,8],[761,6]]},"307":{"position":[[110,6]]},"1924":{"position":[[706,8]]}}}],["upload",{"_index":3145,"t":{"1327":{"position":[[57,6]]},"1368":{"position":[[240,6],[744,10],[761,9],[782,6]]},"1981":{"position":[[963,8]]}}}],["uploadfile(el",{"_index":3101,"t":{"1323":{"position":[[34,14]]}}}],["upload之后等待一段时间，待页面刷新完成后再初始化threej",{"_index":3148,"t":{"1327":{"position":[[291,36]]}}}],["urg",{"_index":5857,"t":{"2247":{"position":[[1379,18]]}}}],["url",{"_index":694,"t":{"179":{"position":[[316,3]]},"221":{"position":[[316,3]]},"280":{"position":[[93,3],[155,3]]},"801":{"position":[[69,3]]},"805":{"position":[[0,99]]},"847":{"position":[[96,3]]},"877":{"position":[[19,3]]},"881":{"position":[[61,3],[74,3],[97,3],[208,8]]},"887":{"position":[[68,4],[185,5]]},"908":{"position":[[103,3],[160,3],[410,3],[423,3],[515,3],[749,3],[845,3]]},"910":{"position":[[162,3],[433,3],[446,3],[538,3],[545,6],[798,3],[856,3]]},"912":{"position":[[95,3],[108,3],[200,3],[207,6]]},"914":{"position":[[6,3],[112,3],[264,3],[322,4],[338,3],[398,4]]},"1010":{"position":[[116,4],[257,4],[393,4],[556,4]]},"1017":{"position":[[324,4]]},"1022":{"position":[[67,3],[130,3],[190,4]]},"1024":{"position":[[9,4],[75,3],[122,3]]},"1027":{"position":[[27,4]]},"1165":{"position":[[316,3]]},"1196":{"position":[[37,14]]},"1491":{"position":[[147,3]]},"1587":{"position":[[551,32]]},"1592":{"position":[[504,3]]},"1911":{"position":[[65,4]]},"1964":{"position":[[89,3]]},"1966":{"position":[[79,4]]},"1981":{"position":[[1887,4],[2109,4],[2251,4]]},"2049":{"position":[[122,18]]}}}],["url('https://jetzihan",{"_index":3806,"t":{"1511":{"position":[[372,21]]}}}],["url('https://s.nmxc.ltd/random",{"_index":3804,"t":{"1511":{"position":[[281,30]]}}}],["urlencod",{"_index":4829,"t":{"1964":{"position":[[476,11]]}}}],["urlencoded'}respons",{"_index":307,"t":{"66":{"position":[[618,20]]},"171":{"position":[[618,20]]}}}],["url},and",{"_index":2198,"t":{"908":{"position":[[522,10]]}}}],["url为“https://www.kicker.com.cn/index.html",{"_index":5429,"t":{"2138":{"position":[[1542,63]]}}}],["url在响应报文的loc",{"_index":5137,"t":{"2049":{"position":[[81,40]]}}}],["url如www.orangeioczh.com/index.html时，浏览器从中抽取出主机名**www.orangeioczh.com**，并将这个主机名传给dns客户端（也运行在这台主机上）。接着，这个客户端发送一个包含这个主机名www.orangeioczh.com的请求到dns服务器，然后dns查询这个主机名，并将这个主机的ip地址发送回来（回答报文），这样浏览器知道ip地址后就可以发起一个tcp",{"_index":5222,"t":{"2064":{"position":[[131,215]]}}}],["url对应的ip地址在你的计算机上没有缓存；文件index.html引用了8个小图像。域名解析过程中，无等待的一次dns解析请求与响应时间记为rttd，http请求传输web对象过程的一次往返时间记为rtth",{"_index":5430,"t":{"2138":{"position":[[1606,117]]}}}],["url（不包括域名），http",{"_index":5129,"t":{"2047":{"position":[[161,36]]}}}],["us",{"_index":1044,"t":{"303":{"position":[[64,5]]},"305":{"position":[[386,5]]},"307":{"position":[[135,5],[365,5]]},"827":{"position":[[11,3]]},"1017":{"position":[[599,5],[825,3],[854,3],[876,6]]},"1058":{"position":[[311,5]]},"1084":{"position":[[284,5],[457,5]]},"1092":{"position":[[2254,5],[2421,4]]},"1667":{"position":[[116,5],[188,5]]}}}],["usedocusauruscontext",{"_index":2564,"t":{"1092":{"position":[[289,20],[824,23],[1271,23],[1740,23]]}}}],["usem1.j",{"_index":2291,"t":{"964":{"position":[[81,8],[124,8],[140,8]]},"971":{"position":[[224,8],[285,8]]}}}],["user",{"_index":696,"t":{"179":{"position":[[352,5]]},"221":{"position":[[352,5]]},"245":{"position":[[360,7]]},"641":{"position":[[90,4]]},"810":{"position":[[328,4],[401,11]]},"825":{"position":[[754,5]]},"853":{"position":[[663,4]]},"1165":{"position":[[352,5]]},"1829":{"position":[[243,12]]},"1981":{"position":[[1995,5]]},"2059":{"position":[[356,13],[401,10]]},"2250":{"position":[[11,4]]}}}],["user_id",{"_index":1097,"t":{"359":{"position":[[102,10],[362,7],[395,10],[578,10]]}}}],["user_id_1",{"_index":1098,"t":{"359":{"position":[[113,10],[406,10]]}}}],["user_id_2",{"_index":1106,"t":{"359":{"position":[[589,10]]}}}],["user_id_list",{"_index":1096,"t":{"359":{"position":[[63,12],[83,12],[322,12],[376,12]]},"363":{"position":[[71,12]]}}}],["useraccount",{"_index":770,"t":{"245":{"position":[[451,14]]}}}],["userdwmc",{"_index":767,"t":{"245":{"position":[[390,11],[517,11]]}}}],["userid",{"_index":4622,"t":{"1872":{"position":[[2022,7]]}}}],["userinfo",{"_index":4583,"t":{"1872":{"position":[[344,15]]},"1974":{"position":[[257,9]]}}}],["userlist集合里面创建两个数据，里面创建两个值：_openid(str",{"_index":2770,"t":{"1152":{"position":[[70,45]]}}}],["usernam",{"_index":766,"t":{"245":{"position":[[370,11]]},"966":{"position":[[195,8],[222,8]]},"971":{"position":[[298,9]]},"973":{"position":[[257,8]]},"1472":{"position":[[117,12],[503,12],[571,10],[824,10],[923,10],[946,10],[1086,12],[1154,9],[1407,12],[1475,9],[1764,10],[1863,10],[1886,10]]},"1981":{"position":[[246,8]]}}}],["username\"></template><templ",{"_index":3705,"t":{"1472":{"position":[[185,30]]}}}],["username和pass",{"_index":5212,"t":{"2059":{"position":[[370,13]]}}}],["userouter.j",{"_index":1984,"t":{"810":{"position":[[453,12]]}}}],["userpasswd",{"_index":769,"t":{"245":{"position":[[429,13]]}}}],["userrealnam",{"_index":771,"t":{"245":{"position":[[493,15]]}}}],["usertyp",{"_index":768,"t":{"245":{"position":[[412,11],[476,11]]}}}],["usingcompon",{"_index":4681,"t":{"1898":{"position":[[197,18]]},"1900":{"position":[[37,18]]},"1970":{"position":[[12,18]]},"1979":{"position":[[30,18]]}}}],["usual",{"_index":2414,"t":{"1017":{"position":[[701,7],[776,7]]},"1420":{"position":[[1170,7]]}}}],["utc",{"_index":986,"t":{"289":{"position":[[241,3],[327,3],[354,3],[368,3],[414,3]]}}}],["utc+8",{"_index":990,"t":{"289":{"position":[[340,13]]}}}],["utf",{"_index":3892,"t":{"1547":{"position":[[674,3],[680,9]]},"1555":{"position":[[27,38],[290,3]]}}}],["utf8",{"_index":2124,"t":{"859":{"position":[[81,7]]},"867":{"position":[[302,7]]},"883":{"position":[[38,7]]},"939":{"position":[[3,4],[318,7],[656,7]]},"941":{"position":[[47,7]]},"946":{"position":[[62,7],[230,7]]},"948":{"position":[[40,7]]},"950":{"position":[[254,7]]},"953":{"position":[[145,7]]},"955":{"position":[[246,7]]}}}],["util",{"_index":355,"t":{"86":{"position":[[89,10]]},"90":{"position":[[205,6]]},"92":{"position":[[322,6]]},"126":{"position":[[432,5]]}}}],["uxxhan",{"_index":2754,"t":{"1142":{"position":[[0,13]]}}}],["u的邻居到z的距离：d(vz)=5,d(xz)=3,d(wz)=3",{"_index":5747,"t":{"2208":{"position":[[85,43]]}}}],["u，v",{"_index":6068,"t":{"2429":{"position":[[66,8]]}}}],["v",{"_index":127,"t":{"31":{"position":[[244,1],[416,1]]},"49":{"position":[[1032,1]]},"114":{"position":[[317,1]]},"211":{"position":[[317,1]]},"1045":{"position":[[99,1]]},"1139":{"position":[[47,1],[75,1]]},"1370":{"position":[[71,1],[122,1]]},"1373":{"position":[[7,1],[44,1],[254,1],[545,1],[692,1]]},"1375":{"position":[[12,1],[46,1],[233,1],[408,1]]},"1377":{"position":[[360,1]]},"1380":{"position":[[0,1],[127,1],[272,1]]},"1382":{"position":[[0,1],[43,1]]},"1384":{"position":[[2,1]]},"1393":{"position":[[430,1],[650,1],[680,1]]},"1395":{"position":[[40,1],[287,23],[363,1]]},"1397":{"position":[[21,1],[105,1],[422,1],[502,1]]},"1399":{"position":[[566,1],[718,1],[746,1],[765,1]]},"1404":{"position":[[845,1]]},"1420":{"position":[[173,1]]},"1424":{"position":[[6,1],[12,17],[125,1],[321,1],[406,1],[720,1]]},"1426":{"position":[[6,1],[71,1],[133,3],[297,1],[451,1]]},"1428":{"position":[[13,1],[275,1],[297,1],[346,1],[441,1],[499,1]]},"1437":{"position":[[79,1],[290,1],[316,1],[341,1]]},"1439":{"position":[[0,1],[46,1]]},"1441":{"position":[[4,1],[18,1],[73,1]]},"1443":{"position":[[20,1],[27,1],[34,11],[56,1],[69,1],[85,1],[131,1],[153,1],[240,1],[268,1],[293,1],[340,1]]},"1445":{"position":[[25,1],[46,1],[119,1],[213,1],[244,1],[263,1],[284,1],[350,1],[447,1],[529,1],[652,1],[683,1],[704,1],[730,1],[988,1]]},"1464":{"position":[[0,1],[56,1],[97,1],[122,1],[161,1]]},"1466":{"position":[[3,1],[81,1],[123,1]]},"1468":{"position":[[6,1],[19,1],[40,1],[93,1],[121,1],[137,1],[145,1]]},"1470":{"position":[[9,1],[27,1],[58,1],[91,1],[129,1],[167,1],[195,1],[220,1],[228,1]]},"1472":{"position":[[97,1],[216,1],[483,1],[604,1],[1066,1],[1206,1],[1387,1],[1529,1]]},"1474":{"position":[[18,1],[40,1],[71,1],[96,3],[142,4],[175,1]]},"1476":{"position":[[0,1],[53,1],[108,6],[166,6],[187,1],[224,1],[251,1]]},"1478":{"position":[[12,1],[19,1],[28,1],[35,1],[41,7],[57,1]]},"1481":{"position":[[102,1],[143,1]]},"1483":{"position":[[46,1],[103,1],[127,1],[193,1]]},"1485":{"position":[[45,1],[61,1],[157,1]]},"1487":{"position":[[171,1]]},"1489":{"position":[[20,1],[75,2],[154,1],[178,4]]},"1491":{"position":[[0,32],[70,1],[112,1],[164,1],[189,1]]},"1493":{"position":[[106,1],[276,1],[322,1],[394,3],[418,1]]},"1497":{"position":[[80,1],[262,2],[329,1]]},"1499":{"position":[[68,1],[115,1]]},"1501":{"position":[[0,1],[84,3],[181,3],[207,1],[216,1]]},"1503":{"position":[[16,1]]},"1505":{"position":[[16,1]]},"1833":{"position":[[252,2]]}}}],["v(z",{"_index":6262,"t":{"2480":{"position":[[347,13]]}}}],["v1.0.0",{"_index":581,"t":{"126":{"position":[[123,6]]}}}],["v16.14",{"_index":2489,"t":{"1045":{"position":[[27,6]]}}}],["v16.14以上版本，就说明node.j",{"_index":2493,"t":{"1045":{"position":[[101,31]]}}}],["v2",{"_index":4671,"t":{"1890":{"position":[[39,4]]}}}],["v4使用32位格式，v6使用128",{"_index":5612,"t":{"2183":{"position":[[0,18]]}}}],["v4过渡到v6",{"_index":5611,"t":{"2181":{"position":[[270,10]]}}}],["v8",{"_index":2221,"t":{"921":{"position":[[22,2]]}}}],["v=250000km/s，l=512比特，r=100",{"_index":5420,"t":{"2138":{"position":[[1068,27]]}}}],["val",{"_index":1753,"t":{"618":{"position":[[579,9]]},"1416":{"position":[[305,5],[329,3],[377,5],[424,3]]}}}],["valu",{"_index":587,"t":{"126":{"position":[[199,5],[211,6]]},"287":{"position":[[220,5]]},"365":{"position":[[220,5]]},"396":{"position":[[90,5],[106,5],[278,6],[384,6],[413,5],[432,5]]},"426":{"position":[[70,5],[100,5]]},"1223":{"position":[[1067,5],[1320,5],[1426,5],[1820,8]]},"1261":{"position":[[107,5]]},"1263":{"position":[[1180,6],[1701,6],[1796,6]]},"1285":{"position":[[12,5]]},"1426":{"position":[[99,5],[345,5],[519,5]]},"1665":{"position":[[41,7],[98,6]]},"1760":{"position":[[396,5]]},"1797":{"position":[[162,5],[284,5],[420,5]]},"1799":{"position":[[211,5],[270,5],[569,5]]},"1801":{"position":[[202,5],[397,5]]},"1803":{"position":[[217,6],[255,7],[530,6],[787,6],[811,7],[945,6],[969,7],[1244,6]]},"1805":{"position":[[232,6],[270,7],[460,6],[484,7]]},"1807":{"position":[[170,5],[364,5]]},"1809":{"position":[[170,5]]},"1811":{"position":[[175,5]]},"1813":{"position":[[183,5]]},"1898":{"position":[[354,9]]},"1979":{"position":[[410,9],[1081,9],[1388,9],[1690,9]]},"1981":{"position":[[236,9],[312,9],[396,9],[447,9],[641,9],[688,9],[810,9]]},"1987":{"position":[[29,5]]},"2534":{"position":[[488,6]]},"2543":{"position":[[488,6]]},"2552":{"position":[[488,6]]}}}],["value.length",{"_index":585,"t":{"126":{"position":[[169,12]]}}}],["value.map(",{"_index":3026,"t":{"1283":{"position":[[256,12]]}}}],["value0,value1,.....,valuen",{"_index":1636,"t":{"594":{"position":[[141,29]]}}}],["value;}</script></body></html",{"_index":4429,"t":{"1803":{"position":[[568,30],[1268,30]]}}}],["value=[1",{"_index":3025,"t":{"1283":{"position":[[227,11]]}}}],["value={i",{"_index":2824,"t":{"1223":{"position":[[729,9],[921,9]]},"1261":{"position":[[204,9]]}}}],["value={this.state.squares[i",{"_index":2827,"t":{"1223":{"position":[[1262,29],[1614,29],[3327,29]]},"1239":{"position":[[1084,29]]}}}],["valueof",{"_index":1405,"t":{"494":{"position":[[0,9]]},"1638":{"position":[[1078,9]]},"1646":{"position":[[377,9]]},"1733":{"position":[[0,9]]}}}],["valueof(int",{"_index":1406,"t":{"494":{"position":[[106,11],[291,11]]}}}],["valueof(str",{"_index":1407,"t":{"494":{"position":[[136,14],[169,14],[343,14],[400,14]]}}}],["values.length",{"_index":586,"t":{"126":{"position":[[185,13]]}}}],["van",{"_index":4682,"t":{"1898":{"position":[[218,4],[264,4],[329,4],[396,6]]},"1900":{"position":[[58,4],[119,4]]},"1970":{"position":[[46,4]]},"1979":{"position":[[51,4],[97,4],[153,4],[189,4],[227,4],[386,4],[460,4],[530,5],[551,4],[620,5],[641,4],[713,5],[734,4],[797,5],[951,4],[1011,4],[1132,4],[1201,5],[1222,4],[1286,5],[1322,5],[1333,4],[1440,4],[1502,5],[1523,4],[1588,5],[1624,5],[1635,4],[1742,4],[1807,5],[1828,4],[1891,5],[1927,5],[1938,5]]},"1981":{"position":[[11,4],[78,5],[178,5],[216,4],[292,4],[376,4],[427,4],[630,4],[677,4],[730,4],[849,7],[1192,4]]}}}],["vant",{"_index":4666,"t":{"1885":{"position":[[51,10],[199,8]]},"1898":{"position":[[17,31]]},"1900":{"position":[[378,17]]},"1970":{"position":[[88,11]]},"1979":{"position":[[9,18]]}}}],["vant/weapp",{"_index":4669,"t":{"1888":{"position":[[140,11]]}}}],["vant/weapp/calendar/index",{"_index":4684,"t":{"1898":{"position":[[234,29]]}}}],["vant/weapp/cell/index",{"_index":4686,"t":{"1898":{"position":[[276,25]]}}}],["vant/weapp/collaps",{"_index":4873,"t":{"1979":{"position":[[118,21]]}}}],["vant/weapp/collapse/index",{"_index":4872,"t":{"1979":{"position":[[67,29]]}}}],["vant/weapp/icon/index",{"_index":4877,"t":{"1979":{"position":[[239,24]]}}}],["vant/weapp/steps/index",{"_index":4845,"t":{"1970":{"position":[[59,25]]}}}],["vant/weapp/switch/index",{"_index":4699,"t":{"1900":{"position":[[72,27]]}}}],["vant/weapp/tab/index",{"_index":4875,"t":{"1979":{"position":[[164,24]]}}}],["vant/weapp/tabs/index",{"_index":4876,"t":{"1979":{"position":[[201,25]]}}}],["vant折叠面板、vanttab",{"_index":4913,"t":{"1979":{"position":[[2010,21]]}}}],["var",{"_index":31,"t":{"10":{"position":[[482,3],[532,3],[598,3],[673,3],[755,3],[865,3],[988,3],[1123,3],[1161,3],[1201,3],[1233,3],[1283,3],[1468,3]]},"12":{"position":[[76,13]]},"16":{"position":[[0,8],[108,19]]},"18":{"position":[[0,11]]},"20":{"position":[[0,12]]},"114":{"position":[[540,9]]},"211":{"position":[[540,9]]},"853":{"position":[[1079,3],[1099,3],[1122,3],[1147,3]]},"966":{"position":[[191,3],[218,3]]},"1096":{"position":[[420,4],[447,4]]},"1227":{"position":[[0,3]]},"1229":{"position":[[0,3],[172,3]]},"1325":{"position":[[314,18],[388,11]]},"1334":{"position":[[185,3],[210,3]]},"1336":{"position":[[100,3],[165,3]]},"1338":{"position":[[144,3],[203,3],[286,3],[354,3],[462,3]]},"1340":{"position":[[89,3],[149,3],[200,3],[271,3],[379,3],[591,3],[642,3],[935,3],[997,3],[1067,3],[1175,3]]},"1342":{"position":[[401,3],[697,3],[748,3],[1163,3],[1333,4]]},"1344":{"position":[[45,3],[69,3]]},"1346":{"position":[[678,3],[718,3],[759,3],[844,3],[871,3]]},"1393":{"position":[[80,3],[490,3]]},"1395":{"position":[[70,3],[420,3]]},"1397":{"position":[[153,3],[527,3]]},"1402":{"position":[[28,3]]},"1404":{"position":[[111,10],[154,6],[661,3],[976,3],[994,4]]},"1412":{"position":[[124,3]]},"1416":{"position":[[178,3],[463,3]]},"1418":{"position":[[182,3]]},"1420":{"position":[[1245,3]]},"1424":{"position":[[198,3],[504,3]]},"1487":{"position":[[302,3]]},"1515":{"position":[[1619,4]]},"1522":{"position":[[225,4]]},"1622":{"position":[[0,35],[53,3],[111,3],[189,3],[245,3],[288,3],[315,3],[370,3]]},"1626":{"position":[[8,3],[36,4],[126,3],[340,4]]},"1630":{"position":[[4,3]]},"1651":{"position":[[25,3],[139,3]]},"1653":{"position":[[29,3]]},"1655":{"position":[[40,3]]},"1659":{"position":[[271,8]]},"1661":{"position":[[183,8]]},"1683":{"position":[[41,3],[60,5],[89,6],[135,5]]},"1685":{"position":[[66,3],[114,3]]},"1687":{"position":[[16,3],[61,6]]},"1689":{"position":[[4,3],[36,8],[112,3],[144,11],[191,11]]},"1691":{"position":[[35,3],[54,7],[100,3]]},"1693":{"position":[[23,3]]},"1695":{"position":[[71,3]]},"1697":{"position":[[48,3]]},"1701":{"position":[[58,3]]},"1703":{"position":[[37,3]]},"1705":{"position":[[148,3],[215,3]]},"1713":{"position":[[121,3]]},"1718":{"position":[[31,3],[48,10],[97,3]]},"1720":{"position":[[72,3],[142,3],[214,3]]},"1722":{"position":[[56,3],[177,3]]},"1725":{"position":[[51,3]]},"1727":{"position":[[59,3]]},"1729":{"position":[[32,3]]},"1731":{"position":[[34,3]]},"1733":{"position":[[19,3]]},"1739":{"position":[[34,3],[94,3]]},"1741":{"position":[[28,3]]},"1743":{"position":[[31,3],[88,3],[142,3],[208,3],[258,4]]},"1745":{"position":[[47,3],[111,3]]},"1747":{"position":[[31,3]]},"1749":{"position":[[122,3],[204,3]]},"1754":{"position":[[27,3]]},"1760":{"position":[[24,3],[228,3]]},"1762":{"position":[[28,3],[155,3]]},"1765":{"position":[[22,3],[140,3]]},"1767":{"position":[[30,3],[142,3]]},"1769":{"position":[[64,3]]},"1771":{"position":[[47,3]]},"1773":{"position":[[0,3]]},"1775":{"position":[[58,3]]},"1777":{"position":[[23,3],[215,3]]},"1779":{"position":[[33,3],[230,3]]},"1781":{"position":[[55,3],[231,3]]},"1784":{"position":[[45,3]]},"1786":{"position":[[40,3]]},"1788":{"position":[[161,3],[259,3]]},"1792":{"position":[[0,3]]},"1794":{"position":[[0,3],[202,3],[232,3]]},"1797":{"position":[[33,3],[43,6],[305,3],[315,6]]},"1799":{"position":[[87,3]]},"1801":{"position":[[79,3],[288,3]]},"1803":{"position":[[118,3],[688,3],[841,3]]},"1805":{"position":[[128,3],[356,3]]},"1807":{"position":[[45,3],[253,3]]},"1809":{"position":[[45,3]]},"1811":{"position":[[55,3]]},"1813":{"position":[[58,3]]},"1833":{"position":[[34,3],[155,3]]},"1836":{"position":[[28,3]]},"1838":{"position":[[35,3],[190,3],[354,3],[521,3]]},"1840":{"position":[[31,3]]},"1842":{"position":[[179,3],[313,3],[424,3],[518,3],[634,3],[2142,3]]},"1846":{"position":[[28,3],[59,6],[165,3],[196,6]]},"1848":{"position":[[21,3],[125,3]]},"1850":{"position":[[22,3]]},"1852":{"position":[[43,3],[147,3],[204,3],[388,3]]},"1854":{"position":[[24,3],[210,3]]},"1872":{"position":[[174,3]]},"1878":{"position":[[146,3]]}}}],["variabl",{"_index":1201,"t":{"396":{"position":[[62,8]]},"1094":{"position":[[1073,8]]},"1628":{"position":[[166,9],[290,10]]}}}],["vector3",{"_index":3210,"t":{"1342":{"position":[[479,8],[500,8]]}}}],["vercel",{"_index":277,"t":{"55":{"position":[[94,6]]},"1072":{"position":[[124,6]]},"1088":{"position":[[0,6],[34,8]]}}}],["version",{"_index":3681,"t":{"1451":{"position":[[5,7]]},"2049":{"position":[[219,7]]}}}],["vertic",{"_index":3352,"t":{"1366":{"position":[[1120,8],[1214,8]]}}}],["video",{"_index":3954,"t":{"1585":{"position":[[0,6]]},"1587":{"position":[[0,6]]},"1592":{"position":[[467,7]]},"2507":{"position":[[0,41]]}}}],["video，dv",{"_index":6294,"t":{"2511":{"position":[[172,9]]}}}],["view",{"_index":3310,"t":{"1364":{"position":[[359,25],[394,5],[419,4]]},"1366":{"position":[[2575,5]]},"1368":{"position":[[0,40]]},"1389":{"position":[[19,5]]},"1399":{"position":[[1309,5]]},"1868":{"position":[[248,6],[286,5],[586,6],[868,5],[928,5],[989,5],[1037,7],[1045,5]]},"1878":{"position":[[593,5],[654,5],[702,7],[710,5],[763,7]]},"1918":{"position":[[66,26],[229,4],[236,7],[260,9],[513,4]]},"1924":{"position":[[715,6]]},"1958":{"position":[[48,6]]},"1960":{"position":[[58,5]]},"1966":{"position":[[276,5],[316,5],[336,5],[406,5],[475,7],[483,7]]},"1979":{"position":[[290,5],[352,7],[897,7]]},"1981":{"position":[[347,5],[1063,7],[1161,5]]},"1995":{"position":[[178,5],[203,5],[444,7],[452,5],[744,5]]},"1999":{"position":[[38,6],[74,7]]},"2001":{"position":[[32,6],[173,7],[206,5]]},"2003":{"position":[[65,6]]},"2007":{"position":[[77,8]]}}}],["view/about'import",{"_index":3406,"t":{"1368":{"position":[[286,21]]}}}],["view/engine'import",{"_index":3396,"t":{"1368":{"position":[[81,22]]}}}],["view/haitan'import",{"_index":3400,"t":{"1368":{"position":[[153,22]]}}}],["view/jiguang'import",{"_index":3398,"t":{"1368":{"position":[[117,23]]}}}],["view/lasa'import",{"_index":3402,"t":{"1368":{"position":[[186,20]]}}}],["view/main'import",{"_index":3407,"t":{"1368":{"position":[[318,20]]}}}],["view/riluo'import",{"_index":3404,"t":{"1368":{"position":[[218,21]]}}}],["view/upload'import",{"_index":3405,"t":{"1368":{"position":[[252,22]]}}}],["view></div",{"_index":3497,"t":{"1399":{"position":[[1377,11]]}}}],["view></rout",{"_index":3388,"t":{"1366":{"position":[[2561,13]]}}}],["view></template><templ",{"_index":5043,"t":{"2003":{"position":[[121,27]]}}}],["view></van",{"_index":4960,"t":{"1981":{"position":[[481,12]]}}}],["view></view",{"_index":4575,"t":{"1868":{"position":[[1098,14]]},"1966":{"position":[[491,14]]},"1995":{"position":[[519,14]]}}}],["view><button",{"_index":5063,"t":{"2007":{"position":[[90,16]]}}}],["view><view",{"_index":5036,"t":{"2001":{"position":[[78,12],[124,12]]}}}],["viewmodel",{"_index":3498,"t":{"1402":{"position":[[88,18]]}}}],["viewtap",{"_index":4748,"t":{"1924":{"position":[[644,8]]}}}],["virtual",{"_index":1562,"t":{"554":{"position":[[53,7]]}}}],["visit",{"_index":2189,"t":{"904":{"position":[[123,5]]},"1844":{"position":[[44,5],[132,5],[221,5],[323,5],[407,5],[483,5],[549,5],[675,5]]}}}],["visitcount",{"_index":3513,"t":{"1404":{"position":[[532,11]]}}}],["visual",{"_index":1042,"t":{"303":{"position":[[21,6]]},"1051":{"position":[[0,8]]}}}],["vju",{"_index":3459,"t":{"1389":{"position":[[8,10]]}}}],["vm",{"_index":538,"t":{"114":{"position":[[765,2]]},"211":{"position":[[765,2]]},"1402":{"position":[[32,2],[85,2]]},"1404":{"position":[[161,2],[999,2]]},"1406":{"position":[[216,2]]},"1412":{"position":[[128,2],[259,2]]},"1416":{"position":[[182,2],[467,2]]},"1420":{"position":[[1249,2]]}}}],["vm.$watch('a",{"_index":3525,"t":{"1404":{"position":[[1136,21]]},"1406":{"position":[[433,14]]}}}],["vm.a",{"_index":3506,"t":{"1404":{"position":[[211,15],[262,13],[1200,6]]}}}],["vm.answer",{"_index":3597,"t":{"1420":{"position":[[1322,9],[1398,9]]}}}],["vm.b",{"_index":3510,"t":{"1404":{"position":[[416,4]]}}}],["vm.firstnam",{"_index":3567,"t":{"1418":{"position":[[331,17]]}}}],["vm.fullnam",{"_index":3564,"t":{"1418":{"position":[[297,11]]}}}],["vm.lastnam",{"_index":3568,"t":{"1418":{"position":[[351,11]]}}}],["vm.messag",{"_index":3551,"t":{"1412":{"position":[[569,10],[645,14],[660,10]]}}}],["vm.reversedmessag",{"_index":3545,"t":{"1412":{"position":[[370,18],[622,18],[682,18]]}}}],["vm。vm.reversedmessag",{"_index":3550,"t":{"1412":{"position":[[539,21]]}}}],["vnpm",{"_index":2492,"t":{"1045":{"position":[[93,4]]}}}],["void",{"_index":325,"t":{"70":{"position":[[329,4],[429,4]]},"101":{"position":[[6,10]]},"103":{"position":[[12,4]]},"198":{"position":[[6,10]]},"200":{"position":[[12,4]]},"303":{"position":[[237,4],[289,4]]},"305":{"position":[[549,4],[603,4],[685,4],[730,4],[781,4],[836,4],[886,4],[933,4]]},"307":{"position":[[273,4],[321,4],[503,4],[525,4]]},"388":{"position":[[192,4],[505,4]]},"390":{"position":[[314,4]]},"392":{"position":[[466,4]]},"394":{"position":[[232,4]]},"396":{"position":[[155,4]]},"400":{"position":[[208,4]]},"406":{"position":[[85,4]]},"408":{"position":[[246,4]]},"410":{"position":[[327,4]]},"412":{"position":[[172,4]]},"414":{"position":[[108,4]]},"416":{"position":[[159,4]]},"420":{"position":[[91,4]]},"426":{"position":[[808,4]]},"437":{"position":[[73,4]]},"443":{"position":[[722,4],[935,4]]},"447":{"position":[[207,4],[502,4],[579,4],[876,4]]},"449":{"position":[[240,4],[317,4]]},"451":{"position":[[255,4],[434,4],[687,4],[779,4],[987,4]]},"453":{"position":[[212,4],[317,4]]},"457":{"position":[[191,4],[276,4],[363,4]]},"483":{"position":[[131,4]]},"486":{"position":[[360,4]]},"488":{"position":[[319,4]]},"490":{"position":[[191,4]]},"492":{"position":[[33,4]]},"494":{"position":[[520,4]]},"496":{"position":[[323,4]]},"498":{"position":[[39,4]]},"500":{"position":[[279,4]]},"502":{"position":[[141,4]]},"504":{"position":[[328,4]]},"506":{"position":[[170,4]]},"508":{"position":[[170,4]]},"510":{"position":[[79,4]]},"512":{"position":[[60,4]]},"514":{"position":[[144,4]]},"516":{"position":[[59,4]]},"518":{"position":[[33,4]]},"520":{"position":[[33,4]]},"522":{"position":[[33,4]]},"524":{"position":[[65,4]]},"526":{"position":[[74,4]]},"528":{"position":[[33,4]]},"530":{"position":[[33,4]]},"532":{"position":[[59,4]]},"534":{"position":[[42,4]]},"542":{"position":[[107,4]]},"563":{"position":[[54,4],[188,4],[509,4]]},"565":{"position":[[559,4]]},"569":{"position":[[42,4]]},"579":{"position":[[87,4]]},"581":{"position":[[104,4],[189,4]]},"583":{"position":[[41,4],[131,4]]},"598":{"position":[[39,4]]},"604":{"position":[[54,4]]},"606":{"position":[[114,4]]},"608":{"position":[[43,4]]},"616":{"position":[[126,4]]},"618":{"position":[[556,4],[672,4]]},"621":{"position":[[237,4]]},"623":{"position":[[40,4]]},"625":{"position":[[143,4]]},"2003":{"position":[[501,4]]}}}],["volvo",{"_index":4234,"t":{"1683":{"position":[[115,8]]},"1695":{"position":[[94,8]]},"1741":{"position":[[48,8]]},"1743":{"position":[[109,8],[171,8]]},"1745":{"position":[[131,8]]},"1747":{"position":[[51,8]]}}}],["vscode",{"_index":148,"t":{"31":{"position":[[886,6]]},"355":{"position":[[256,6]]},"939":{"position":[[237,6]]},"1196":{"position":[[111,23]]}}}],["vue",{"_index":140,"t":{"31":{"position":[[502,3],[604,3],[625,7],[649,5]]},"37":{"position":[[3,3],[310,3]]},"78":{"position":[[37,3]]},"86":{"position":[[125,15]]},"114":{"position":[[173,18],[394,16],[680,9],[774,5],[814,4],[1009,21]]},"118":{"position":[[0,3]]},"211":{"position":[[173,18],[394,16],[680,9],[774,5],[814,4],[1009,21]]},"215":{"position":[[0,3]]},"1202":{"position":[[0,38]]},"1353":{"position":[[33,12],[254,13]]},"1358":{"position":[[0,3],[11,3]]},"1362":{"position":[[12,26]]},"1364":{"position":[[24,19],[128,3],[188,3],[278,3],[385,3],[403,3],[456,3]]},"1368":{"position":[[48,3],[351,4]]},"1377":{"position":[[11,3]]},"1389":{"position":[[0,3],[25,33],[59,18],[78,65]]},"1393":{"position":[[94,5],[136,5],[187,3],[216,3],[287,3],[364,3],[505,5],[690,3],[783,3]]},"1395":{"position":[[85,5],[233,9],[262,3],[435,5],[511,4],[568,3]]},"1397":{"position":[[45,3],[168,5],[386,3],[413,3],[542,5],[586,5]]},"1399":{"position":[[6,3],[86,3],[113,3],[122,3],[230,8],[927,5]]},"1402":{"position":[[4,3],[8,19],[41,5],[55,3],[110,3],[127,3],[167,3],[201,3],[217,3],[226,3],[438,3]]},"1404":{"position":[[4,3],[44,3],[150,3],[170,5],[706,5],[1008,5]]},"1406":{"position":[[3,3],[158,5],[351,3]]},"1412":{"position":[[137,5],[602,16]]},"1416":{"position":[[0,3],[22,3],[191,5],[476,5]]},"1420":{"position":[[40,3],[237,19],[505,5]]},"1424":{"position":[[217,5],[523,5]]},"1426":{"position":[[123,5],[195,5],[386,3],[560,3]]},"1428":{"position":[[2,3],[19,39],[115,3],[205,3],[416,3]]},"1431":{"position":[[0,3]]},"1433":{"position":[[217,3],[230,25]]},"1435":{"position":[[14,7]]},"1445":{"position":[[1068,5]]},"1449":{"position":[[12,3]]},"1451":{"position":[[0,3]]},"1453":{"position":[[0,3]]},"1472":{"position":[[0,3],[42,3],[776,5],[988,3],[1719,5]]},"1487":{"position":[[213,3]]},"1493":{"position":[[216,3]]},"1501":{"position":[[22,3],[130,3],[186,18]]},"1505":{"position":[[210,3]]},"1995":{"position":[[1064,26]]}}}],["vue'import",{"_index":3395,"t":{"1368":{"position":[[57,11]]}}}],["vue+three.js快速实现全景图】（https://www.jianshu.com/p/b31cd297d333",{"_index":3299,"t":{"1353":{"position":[[600,61]]}}}],["vue.component('button",{"_index":520,"t":{"114":{"position":[[217,25]]},"211":{"position":[[217,25]]}}}],["vue.component('mi",{"_index":3436,"t":{"1377":{"position":[[140,17]]}}}],["vue.component('todo",{"_index":3482,"t":{"1399":{"position":[[154,23],[399,19],[828,19]]},"1445":{"position":[[919,19]]}}}],["vue.config.j",{"_index":3307,"t":{"1364":{"position":[[112,15]]}}}],["vue.j",{"_index":119,"t":{"31":{"position":[[23,6]]},"78":{"position":[[4,6]]},"107":{"position":[[0,9]]},"118":{"position":[[14,6],[247,6]]},"215":{"position":[[14,6],[247,6]]},"999":{"position":[[8,6]]},"1370":{"position":[[4,6],[146,8]]},"1391":{"position":[[0,6]]},"1393":{"position":[[0,6],[156,6]]},"1397":{"position":[[212,8]]},"1408":{"position":[[4,6]]},"1422":{"position":[[4,6]]},"1462":{"position":[[4,6]]},"1487":{"position":[[34,24]]},"1501":{"position":[[46,6]]},"2012":{"position":[[68,11]]},"2018":{"position":[[299,6]]}}}],["vue.js是一个用于创建用户界面的开源渐进式javascript框架，也是一个创建单页应用的web应用框架。vue.js是目前前端界三大框架之一（其他两个分别是react和angular），旨在更好地组织与简化web开发。vue所关注的核心是mvc",{"_index":516,"t":{"110":{"position":[[0,172]]},"207":{"position":[[0,172]]}}}],["vue/cli",{"_index":550,"t":{"118":{"position":[[40,8],[66,8],[77,8],[121,9]]},"215":{"position":[[40,8],[66,8],[77,8],[121,9]]}}}],["vue2",{"_index":337,"t":{"78":{"position":[[28,4]]}}}],["vuej",{"_index":2387,"t":{"1012":{"position":[[143,7]]}}}],["vuepress",{"_index":5074,"t":{"2018":{"position":[[14,8],[132,8]]}}}],["vuepress搭建网站，其实我的旧站已经被我改的自认为很好看了哈哈哈。但是我为什么选择了docusauru",{"_index":2486,"t":{"1042":{"position":[[447,98]]}}}],["vuepress，基于vue.j",{"_index":2482,"t":{"1042":{"position":[[270,54]]}}}],["vuex，el",{"_index":3306,"t":{"1364":{"position":[[81,26]]}}}],["vue、react",{"_index":2616,"t":{"1092":{"position":[[3302,9]]},"1885":{"position":[[102,25]]}}}],["vue、react等，组件库包括element、bootstrap",{"_index":653,"t":{"154":{"position":[[600,118]]},"323":{"position":[[600,118]]}}}],["vue在前端开发中的地位毋庸置疑。vue的设计更加符合人们的思维方式，所以上手更快，学习成本更低。但vue本身并不是严格基于mvvm模型的框架，只是借鉴了mvvm",{"_index":670,"t":{"161":{"position":[[494,110]]},"330":{"position":[[494,110]]}}}],["vue就必须提到他的创造者尤雨溪，它是中国程序员的骄傲。尤雨溪出生于中国无锡，上海念了三年高中，高中毕业后去美国念大学，尤雨溪的大学专业是室内艺术和艺术史，在parsons读了一个美术设计和技术的硕士。尤雨溪被javascript吸引，js能够快速构建一些东西并分享给别人，这是吸引尤雨溪开始web开发和javascript编程的原因。尤雨溪在google创意实验室工作的时候，工作需要在浏览器上进行大量原型设计，尤雨溪最初使用angular，尤雨溪将喜欢的部分从angular中提出来建立一个非常轻巧的库，vu",{"_index":517,"t":{"112":{"position":[[0,268]]},"209":{"position":[[0,268]]}}}],["vue快速构建前端界面，使用three.j",{"_index":3300,"t":{"1356":{"position":[[0,75]]}}}],["vue框架author",{"_index":2385,"t":{"1012":{"position":[[111,15]]}}}],["vue环境的run",{"_index":5599,"t":{"2179":{"position":[[0,33]]}}}],["vue生命周期是指vue实例对象从创建之初到销毁的过程，vue所有功能的实现都是围绕其生命周期进行的，在生命周期的不同阶段调用对应的钩子函数可以实现组件数据管理和dom",{"_index":548,"t":{"116":{"position":[[0,93]]},"213":{"position":[[0,93]]}}}],["vue等mvvm",{"_index":5028,"t":{"1997":{"position":[[220,34]]}}}],["vue项目，在src目录下新建一个css文件：index.css",{"_index":352,"t":{"86":{"position":[[0,42]]}}}],["v（视图）。react",{"_index":2886,"t":{"1244":{"position":[[69,11]]}}}],["w",{"_index":390,"t":{"95":{"position":[[198,1]]},"310":{"position":[[8,1]]}}}],["w3c//dtd",{"_index":3886,"t":{"1547":{"position":[[298,10]]}}}],["w3school",{"_index":4525,"t":{"1844":{"position":[[741,12]]}}}],["w=f2",{"_index":5379,"t":{"2133":{"position":[[101,17]]}}}],["wait",{"_index":3583,"t":{"1420":{"position":[[724,8]]}}}],["wan",{"_index":5473,"t":{"2141":{"position":[[125,3]]}}}],["want",{"_index":2421,"t":{"1017":{"position":[[957,4]]}}}],["warn",{"_index":2405,"t":{"1017":{"position":[[468,7]]},"1323":{"position":[[166,9]]},"1342":{"position":[[1584,9]]}}}],["watch",{"_index":1963,"t":{"795":{"position":[[201,8],[232,8]]},"825":{"position":[[609,8],[640,8],[834,8],[865,8]]},"1404":{"position":[[1129,6]]},"1416":{"position":[[69,18],[123,5],[276,6]]},"1420":{"position":[[47,5],[515,7],[622,6],[1481,5]]}}}],["watchexamplevm",{"_index":3577,"t":{"1420":{"position":[[484,14]]}}}],["wav",{"_index":6247,"t":{"2473":{"position":[[30,5],[66,16],[154,28]]}}}],["wavy;\">措字</u>的毛病。</p",{"_index":4042,"t":{"1618":{"position":[[351,23]]}}}],["wav文件不同，midi",{"_index":6250,"t":{"2473":{"position":[[320,28]]}}}],["wav格式、midi格式、mp3格式、rm",{"_index":6246,"t":{"2473":{"position":[[0,26]]}}}],["wav格式是window",{"_index":6248,"t":{"2473":{"position":[[36,29]]}}}],["wb",{"_index":723,"t":{"179":{"position":[[986,5]]},"221":{"position":[[986,5]]},"1165":{"position":[[986,5]]}}}],["wb')file.write(img)file.clos",{"_index":314,"t":{"66":{"position":[[820,32]]},"171":{"position":[[820,32]]}}}],["wcag",{"_index":2661,"t":{"1094":{"position":[[917,4]]}}}],["wd",{"_index":915,"t":{"257":{"position":[[1466,2]]}}}],["we&apos;l",{"_index":2609,"t":{"1092":{"position":[[2645,10]]}}}],["weapp,请马上收藏这个文档。vant",{"_index":4667,"t":{"1885":{"position":[[62,39]]}}}],["weather.data",{"_index":1141,"t":{"371":{"position":[[232,16]]}}}],["web",{"_index":5,"t":{"2":{"position":[[105,3]]},"4":{"position":[[92,3]]},"27":{"position":[[25,3],[116,3]]},"29":{"position":[[21,3],[112,3]]},"148":{"position":[[0,6],[98,6],[311,6]]},"317":{"position":[[0,6],[98,6],[311,6]]},"351":{"position":[[11,3]]},"764":{"position":[[21,3],[65,3]]},"768":{"position":[[0,11],[12,3]]},"890":{"position":[[12,3],[23,3]]},"892":{"position":[[42,3]]},"904":{"position":[[133,3]]},"923":{"position":[[16,3],[31,5]]},"1042":{"position":[[0,256]]},"1555":{"position":[[102,3]]},"1557":{"position":[[225,3],[289,3],[350,3]]},"1825":{"position":[[12,3],[303,3]]},"1931":{"position":[[77,15]]},"1942":{"position":[[299,29]]},"1995":{"position":[[0,16]]},"2018":{"position":[[322,5]]},"2037":{"position":[[79,5]]},"2045":{"position":[[12,20],[33,22]]},"2053":{"position":[[30,9]]},"2055":{"position":[[217,24],[308,3],[874,16]]}}}],["web/beginn",{"_index":3878,"t":{"1541":{"position":[[170,12]]}}}],["web2.0",{"_index":645,"t":{"154":{"position":[[0,95]]},"323":{"position":[[0,95]]}}}],["web2.0时代最具代表性的前端技术莫过于html5",{"_index":647,"t":{"154":{"position":[[189,26]]},"323":{"position":[[189,26]]}}}],["web2.0时代的到来，前端在web开发中所占的比重越来越大，专注于内容呈现和网站交互的前端开发人员也逐渐展现出其不可替代性。前端所涉及的领域甚至不限于一个浏览器（web）应用，如html5技术允许我们开发原生的移动应用；react",{"_index":628,"t":{"150":{"position":[[0,118]]},"319":{"position":[[0,118]]}}}],["web2.0时代的蓬勃发展，大量的网站涌现出来，web中的数据量呈指数级增长。对于普通浏览器用户来说，web技术不止带来了大量的免费信息，也带来了筛选信息的烦恼。如今的互联网上充斥着大量的数据，如何找到准确、可靠、最新的信息，即使对专业的计算机开发人员来说，也是个不小的问题。此外，各个网站之间相对独立，信息只有通过同时浏览过这些网站的人才能发生交互。我们知道，数据的整合会创造更大的价值，而目前这种整合几乎完全依赖于每个web",{"_index":655,"t":{"156":{"position":[[82,237]]},"325":{"position":[[82,237]]}}}],["web2.0时代，网页具备了展示更多媒体应用的能力，如播放音频，视频，查看pdf",{"_index":646,"t":{"154":{"position":[[96,92]]},"323":{"position":[[96,92]]}}}],["web3",{"_index":658,"t":{"156":{"position":[[524,6]]},"325":{"position":[[524,6]]}}}],["web3.0",{"_index":657,"t":{"156":{"position":[[466,57]]},"325":{"position":[[466,57]]}}}],["web3.0则会通过第三方平台来整合数据，为用户筛选和提炼更有价值的信息，这可能需要借助其他领域的技术来实现，如人工智能、大数据等等。另外web3.0的实践者希望所有的应用都完全基于web，即使用web技术实现需要复杂的系统应用才能实现的功能，例如微软的基于web的在线offic",{"_index":656,"t":{"156":{"position":[[320,145]]},"325":{"position":[[320,145]]}}}],["web3.0时代并未真正到来，它只是业内一种概念性的描述，并且本质上不是技术的革新，而是web理念的一种革新。我们先来看一下web2.0",{"_index":654,"t":{"156":{"position":[[0,81]]},"325":{"position":[[0,81]]}}}],["web3技术希望所有的应用通过web",{"_index":659,"t":{"156":{"position":[[531,51]]},"325":{"position":[[531,51]]}}}],["web_text",{"_index":687,"t":{"179":{"position":[[197,9],[502,8],[608,9]]},"221":{"position":[[197,9],[502,8],[608,9]]},"1165":{"position":[[197,9],[502,8],[608,9]]}}}],["webgl",{"_index":2,"t":{"2":{"position":[[28,5]]},"4":{"position":[[15,5]]},"1825":{"position":[[266,5]]}}}],["webglsampl",{"_index":4463,"t":{"1825":{"position":[[344,13]]}}}],["webkit",{"_index":2077,"t":{"853":{"position":[[710,6],[741,6]]},"1386":{"position":[[98,6]]},"1507":{"position":[[62,6],[145,6],[240,6],[321,6],[501,6],[592,6],[673,6],[760,6],[847,6],[931,6],[1012,6],[1106,6],[1251,6],[1355,6],[1411,6],[1520,6],[1624,6],[1729,6],[1845,6],[1941,6],[2011,6],[2127,6],[2275,6],[2401,6],[2497,6],[2569,6],[2695,6],[2842,6],[2932,6],[3004,6],[3054,6],[3144,6],[3266,6],[3358,6],[3430,6],[3479,6],[3571,6],[3743,6],[3861,6],[3954,6],[4048,6],[4084,6],[4183,6],[4301,6],[4394,6],[4488,6]]}}}],["webpack",{"_index":339,"t":{"78":{"position":[[46,7]]},"118":{"position":[[153,7]]},"215":{"position":[[153,7]]},"1360":{"position":[[47,7]]},"1453":{"position":[[9,7]]}}}],["webrtc",{"_index":4465,"t":{"1825":{"position":[[380,6]]}}}],["websit",{"_index":2603,"t":{"1092":{"position":[[2438,7],[2889,7]]}}}],["webview",{"_index":5035,"t":{"2001":{"position":[[56,13],[70,7]]}}}],["web中的应用，前端开发还触及到了其他相当多的领域，包括原生移动应用(主要借助html5相关技术)，跨平台移动开发（react",{"_index":651,"t":{"154":{"position":[[355,66]]},"323":{"position":[[355,66]]}}}],["web前端、windows（操作系统）桌面端、安卓前端、ios前端、小程序前端等，但是就目前而言，这些前端领域的技术栈仍不相通，web前端主要使用的是h5技术栈，衍生了react、angular、vue三大框架，windows端采用c#或者c++及其qt库来编写页面和逻辑，安卓使用kotlin做逻辑描述，ios使用uikit",{"_index":632,"t":{"150":{"position":[[241,277]]},"319":{"position":[[241,277]]}}}],["web技术栈靠拢，前端工程师只需要精修一种技术栈，可以将代码运行在各种操作系统的各个屏幕上，又或者，在微信云开发之类的云后端出现下，未来可能构建c/",{"_index":642,"t":{"150":{"position":[[1037,120]]},"319":{"position":[[1037,120]]}}}],["web界面比喻为装修房子，当你的家里需要三张床的时候，如果你使用原生js，那么你就必须将这床的代码重复三次。而如果你使用vu",{"_index":518,"t":{"114":{"position":[[3,169]]},"211":{"position":[[3,169]]}}}],["web的前端的。我们这里所说的前端泛指web前端，也就是在web应用中用户可以看得见碰得着的东西。包括web页面的结构、web的外观视觉表现以及web",{"_index":616,"t":{"148":{"position":[[7,90]]},"317":{"position":[[7,90]]}}}],["web编程时，为了页面跳转携带数据，我们会将数据加在url后面，比如：http://www.someschool.edu/somedir/page.html?name=jim&age=18",{"_index":5132,"t":{"2047":{"position":[[357,108]]}}}],["web网页，一个web",{"_index":4764,"t":{"1931":{"position":[[40,36]]}}}],["wed",{"_index":5159,"t":{"2055":{"position":[[423,4],[741,4]]}}}],["week",{"_index":759,"t":{"243":{"position":[[85,9]]},"249":{"position":[[610,4]]},"251":{"position":[[234,4],[309,4]]},"289":{"position":[[617,4]]},"363":{"position":[[851,4]]}}}],["weekd",{"_index":820,"t":{"253":{"position":[[93,5]]}}}],["weight",{"_index":1252,"t":{"437":{"position":[[57,7],[150,7]]},"588":{"position":[[89,8]]},"1248":{"position":[[486,7]]},"1255":{"position":[[317,7]]}}}],["weight:400",{"_index":4920,"t":{"1979":{"position":[[2141,11]]}}}],["weight:bold",{"_index":3859,"t":{"1530":{"position":[[96,13]]}}}],["weixin",{"_index":4718,"t":{"1918":{"position":[[412,11],[625,8],[731,6]]}}}],["welcom",{"_index":4501,"t":{"1842":{"position":[[1141,7],[1347,7],[1507,7],[1741,7],[1899,7],[1990,7],[2254,7]]}}}],["welcome.md",{"_index":2501,"t":{"1049":{"position":[[142,13]]}}}],["went",{"_index":925,"t":{"273":{"position":[[7,4]]}}}],["weren't",{"_index":4022,"t":{"1611":{"position":[[26,7]]}}}],["white",{"_index":2065,"t":{"853":{"position":[[572,6]]},"1649":{"position":[[98,7]]},"1651":{"position":[[119,10]]},"1933":{"position":[[228,5]]},"1935":{"position":[[302,8]]}}}],["wide",{"_index":5474,"t":{"2141":{"position":[[129,5]]}}}],["width",{"_index":57,"t":{"10":{"position":[[1127,5],[1209,5]]},"853":{"position":[[113,6],[347,6]]},"1248":{"position":[[603,6]]},"1255":{"position":[[434,6]]},"1334":{"position":[[189,5]]},"1344":{"position":[[49,5],[140,5]]},"1511":{"position":[[234,6],[594,6]]},"1515":{"position":[[159,6],[925,6],[1005,6],[1230,6],[1442,6]]},"1518":{"position":[[173,6],[346,6]]},"1587":{"position":[[246,5]]},"1592":{"position":[[512,5]]},"1960":{"position":[[159,6]]},"1979":{"position":[[2728,6],[2753,6]]},"2443":{"position":[[416,5],[823,12]]}}}],["width:40rpx",{"_index":4922,"t":{"1979":{"position":[[2173,12]]}}}],["width:auto",{"_index":4930,"t":{"1979":{"position":[[2309,11]]}}}],["width=\"100",{"_index":3979,"t":{"1592":{"position":[[64,12]]}}}],["width=\"400",{"_index":3947,"t":{"1580":{"position":[[68,11]]},"1582":{"position":[[68,11]]},"1587":{"position":[[16,11]]}}}],["wifi",{"_index":5248,"t":{"2077":{"position":[[221,8]]},"2171":{"position":[[77,26]]}}}],["wifi属于数据链路层和物理层。wi",{"_index":5372,"t":{"2131":{"position":[[0,18]]}}}],["wiki",{"_index":2529,"t":{"1062":{"position":[[129,4]]}}}],["win64",{"_index":701,"t":{"179":{"position":[[397,6]]},"221":{"position":[[397,6]]},"1165":{"position":[[397,6]]}}}],["winddirection.data",{"_index":1143,"t":{"371":{"position":[[277,29]]}}}],["window",{"_index":276,"t":{"55":{"position":[[68,7]]},"179":{"position":[[379,8]]},"221":{"position":[[379,8]]},"551":{"position":[[232,7]]},"648":{"position":[[44,7]]},"1165":{"position":[[379,8]]},"1935":{"position":[[35,9]]},"1970":{"position":[[248,9]]},"1989":{"position":[[175,9],[537,8]]},"2527":{"position":[[86,18]]}}}],["window.addeventlisten",{"_index":3094,"t":{"1321":{"position":[[173,25]]}}}],["window.alert",{"_index":4219,"t":{"1671":{"position":[[0,14]]}}}],["window.innerheight",{"_index":60,"t":{"10":{"position":[[1174,19]]}}}],["window.innerwidth",{"_index":58,"t":{"10":{"position":[[1135,18]]}}}],["window.onload",{"_index":2092,"t":{"853":{"position":[[1013,13]]}}}],["windows:del",{"_index":2894,"t":{"1248":{"position":[[124,11]]}}}],["windows开始图标上右键，打开powershel",{"_index":2750,"t":{"1137":{"position":[[88,29]]}}}],["windows所使用的文件格式，其扩展名为avi",{"_index":6320,"t":{"2527":{"position":[[32,25]]}}}],["windows的发布，使用前端技术开发window",{"_index":631,"t":{"150":{"position":[[203,37]]},"319":{"position":[[203,37]]}}}],["windows被微软发布，使用web技术栈构建window",{"_index":641,"t":{"150":{"position":[[997,39]]},"319":{"position":[[997,39]]}}}],["winner",{"_index":2883,"t":{"1241":{"position":[[621,6],[682,8],[702,8],[715,7]]}}}],["wireshark",{"_index":5955,"t":{"2287":{"position":[[155,16]]}}}],["wireshark抓包本地（loopback",{"_index":5982,"t":{"2291":{"position":[[116,26]]}}}],["wireshark捕获的http",{"_index":5128,"t":{"2047":{"position":[[119,22]]}}}],["wlan网卡，在过滤图标选择捕获ipv6",{"_index":5956,"t":{"2287":{"position":[[172,33]]}}}],["wm_lbuttondown",{"_index":435,"t":{"101":{"position":[[1158,15],[1341,15],[1506,15]]},"103":{"position":[[3246,15],[3452,14],[3766,14],[4415,15]]},"198":{"position":[[1158,15],[1341,15],[1506,15]]},"200":{"position":[[3246,15],[3452,14],[3766,14],[4415,15]]}}}],["word",{"_index":579,"t":{"126":{"position":[[67,7]]},"1981":{"position":[[790,4]]},"2454":{"position":[[386,10],[864,4],[890,4]]}}}],["wordpress",{"_index":2484,"t":{"1042":{"position":[[357,35]]}}}],["words.data",{"_index":1139,"t":{"371":{"position":[[159,15],[361,15],[409,14]]}}}],["workbench",{"_index":1797,"t":{"646":{"position":[[31,9],[81,13]]}}}],["worker的出现，nodejs也具备了利用多核cpu的能力（当然仍然无法与java",{"_index":664,"t":{"159":{"position":[[457,48]]},"328":{"position":[[457,48]]}}}],["worker等等；css3则大大增强了网页的渲染能力，包括阴影，渐变，新的布局模型，2d/3d",{"_index":650,"t":{"154":{"position":[[299,55]]},"323":{"position":[[299,55]]}}}],["workflow",{"_index":576,"t":{"124":{"position":[[364,8]]},"291":{"position":[[81,16]]},"293":{"position":[[173,8],[284,8],[890,8],[1037,8]]},"376":{"position":[[122,8],[233,8]]},"378":{"position":[[112,8],[259,8]]},"1080":{"position":[[112,8],[259,8]]}}}],["workflow_dispatch",{"_index":1021,"t":{"293":{"position":[[503,17]]},"376":{"position":[[463,17]]}}}],["workflow_dispatch:job",{"_index":989,"t":{"289":{"position":[[276,30]]}}}],["world",{"_index":319,"t":{"70":{"position":[[84,9],[140,9],[215,8],[257,8],[383,8],[483,8]]},"114":{"position":[[417,5],[566,9],[872,6],[913,5]]},"211":{"position":[[417,5],[566,9],[872,6],[913,5]]},"542":{"position":[[159,8]]},"971":{"position":[[143,10]]},"1842":{"position":[[1134,6],[1301,11],[1340,6],[1500,6],[1734,6],[1892,6],[1983,6],[2204,7],[2247,6]]},"1846":{"position":[[47,8],[129,7],[184,8],[266,7]]},"1848":{"position":[[189,12]]},"1850":{"position":[[40,6]]},"1954":{"position":[[22,5],[78,6]]},"1983":{"position":[[20,32]]},"1997":{"position":[[33,5],[127,6]]},"2007":{"position":[[178,12],[306,6]]}}}],["world!\";var",{"_index":4534,"t":{"1848":{"position":[[152,12]]}}}],["world!</div",{"_index":330,"t":{"70":{"position":[[537,12],[561,12]]}}}],["world!</p></view",{"_index":4797,"t":{"1958":{"position":[[64,17]]},"1960":{"position":[[102,17]]}}}],["world\");};module.export",{"_index":2316,"t":{"973":{"position":[[151,26]]}}}],["world\";str.charat(0",{"_index":4539,"t":{"1852":{"position":[[60,21]]}}}],["world\";str.charcodeat(0",{"_index":4542,"t":{"1852":{"position":[[164,25]]}}}],["world\";str[0",{"_index":4544,"t":{"1852":{"position":[[221,14],[405,13]]}}}],["world\";text3",{"_index":4532,"t":{"1848":{"position":[[53,13]]}}}],["world,这里并没有出现document.getelementbyid等操作dom",{"_index":543,"t":{"114":{"position":[[962,46]]},"211":{"position":[[962,46]]}}}],["world.md",{"_index":2499,"t":{"1049":{"position":[[117,9]]}}}],["world</div",{"_index":528,"t":{"114":{"position":[[480,18]]},"211":{"position":[[480,18]]}}}],["world</h1",{"_index":3077,"t":{"1312":{"position":[[629,10]]}}}],["world会变为nihao",{"_index":5027,"t":{"1997":{"position":[[205,14]]}}}],["world是作为一个使用js从后端读取来的数据，因此不能直接使用<div>hello",{"_index":527,"t":{"114":{"position":[[437,42]]},"211":{"position":[[437,42]]}}}],["world的java",{"_index":1553,"t":{"542":{"position":[[13,13]]}}}],["wrapper",{"_index":4841,"t":{"1966":{"position":[[356,9],[425,9]]}}}],["write",{"_index":639,"t":{"150":{"position":[[875,5]]},"319":{"position":[[875,5]]},"1665":{"position":[[9,5],[305,5]]},"1667":{"position":[[9,5]]}}}],["writefail.j",{"_index":2249,"t":{"946":{"position":[[152,12],[285,12]]}}}],["writefil",{"_index":2169,"t":{"873":{"position":[[0,9],[38,9]]},"950":{"position":[[179,9],[919,9]]}}}],["wrong:execut",{"_index":926,"t":{"273":{"position":[[12,15]]}}}],["www",{"_index":305,"t":{"66":{"position":[[609,3]]},"171":{"position":[[609,3]]},"1964":{"position":[[467,3]]}}}],["www.bjfu.edu.cn",{"_index":5953,"t":{"2287":{"position":[[73,15]]}}}],["www.bjfu.edu.com。但是对于网络中的设备来说（比如路由器），解析这些名字是困难的。所以可以用ip地址来标识主机。比如：202.204.121.124",{"_index":5218,"t":{"2062":{"position":[[0,145]]}}}],["www.exotiquecuisine.com",{"_index":5152,"t":{"2055":{"position":[[284,23]]}}}],["www.exotiquecuisine.comif",{"_index":5165,"t":{"2055":{"position":[[699,25]]}}}],["www.someschool.eduus",{"_index":5124,"t":{"2047":{"position":[[42,22]]}}}],["wx.cloud.databas",{"_index":4623,"t":{"1872":{"position":[[2065,19]]},"1874":{"position":[[124,19]]},"1878":{"position":[[172,19]]}}}],["wx.getstoragesync('log",{"_index":4861,"t":{"1974":{"position":[[62,25]]}}}],["wx.getuserinfo",{"_index":4580,"t":{"1872":{"position":[[233,16]]}}}],["wx.getuserprofil",{"_index":4581,"t":{"1872":{"position":[[286,19]]}}}],["wx.hideload",{"_index":4613,"t":{"1872":{"position":[[1346,16]]}}}],["wx.login",{"_index":4579,"t":{"1872":{"position":[[199,10]]},"1974":{"position":[[157,10]]}}}],["wx.navigateback",{"_index":4753,"t":{"1928":{"position":[[480,15]]},"1964":{"position":[[540,17]]}}}],["wx.navigateto",{"_index":4749,"t":{"1928":{"position":[[285,13]]},"1981":{"position":[[2235,15]]}}}],["wx.redirectto",{"_index":4751,"t":{"1928":{"position":[[382,13]]}}}],["wx.relaunch",{"_index":4757,"t":{"1928":{"position":[[656,11]]}}}],["wx.request",{"_index":4814,"t":{"1964":{"position":[[76,12]]},"1966":{"position":[[66,12]]}}}],["wx.setstoragesync('log",{"_index":4863,"t":{"1974":{"position":[[119,25]]}}}],["wx.showmod",{"_index":4614,"t":{"1872":{"position":[[1363,14],[2517,14],[2880,14]]},"1876":{"position":[[392,14],[1084,14],[1478,14]]}}}],["wx.showtoast",{"_index":4832,"t":{"1964":{"position":[[588,14]]}}}],["wx.switchtab",{"_index":4755,"t":{"1928":{"position":[[585,12]]}}}],["wx.uploadfil",{"_index":4989,"t":{"1981":{"position":[[1871,15]]}}}],["wx:elif=\"{{view",{"_index":5037,"t":{"2001":{"position":[[91,15]]}}}],["wx:els",{"_index":5015,"t":{"1995":{"position":[[296,8]]}}}],["wx:else=\"{{view",{"_index":5038,"t":{"2001":{"position":[[137,15]]}}}],["wx:for=\"{{array",{"_index":5030,"t":{"1999":{"position":[[45,19]]}}}],["wx:for=\"{{list",{"_index":4837,"t":{"1966":{"position":[[282,17]]}}}],["wx:for='{{maillist",{"_index":4571,"t":{"1868":{"position":[[951,21]]},"1878":{"position":[[616,21]]}}}],["wx:if",{"_index":5022,"t":{"1995":{"position":[[815,5]]}}}],["wx:if=\"{{!hasuserinfo",{"_index":5013,"t":{"1995":{"position":[[235,21]]}}}],["wx:if=\"{{isstud",{"_index":4959,"t":{"1981":{"position":[[353,22]]}}}],["wx:if=\"{{view",{"_index":5034,"t":{"2001":{"position":[[39,13]]}}}],["wx:key=\"index",{"_index":4838,"t":{"1966":{"position":[[300,15]]}}}],["wx:key='index",{"_index":4572,"t":{"1868":{"position":[[973,15]]},"1878":{"position":[[638,15]]}}}],["wx_weather_class_push",{"_index":1090,"t":{"355":{"position":[[179,28]]},"382":{"position":[[28,26]]}}}],["wxcontext",{"_index":4599,"t":{"1872":{"position":[[827,9]]}}}],["wxcontext.appid",{"_index":4604,"t":{"1872":{"position":[[970,16]]}}}],["wxcontext.from_openid",{"_index":4603,"t":{"1872":{"position":[[940,22]]}}}],["wxcontext.openid",{"_index":4601,"t":{"1872":{"position":[[910,17]]}}}],["wxcontext.unionid",{"_index":4606,"t":{"1872":{"position":[[996,18]]}}}],["wxml",{"_index":4702,"t":{"1903":{"position":[[36,27]]},"1905":{"position":[[181,40],[363,25]]},"1918":{"position":[[93,4]]},"1940":{"position":[[189,4]]},"1950":{"position":[[171,4]]},"1966":{"position":[[259,16]]},"1983":{"position":[[72,4],[81,4]]},"1995":{"position":[[119,4],[534,5],[545,9],[733,4]]},"1997":{"position":[[51,4]]},"1999":{"position":[[32,4]]},"2001":{"position":[[26,4]]},"2003":{"position":[[30,4]]}}}],["wxml代码似乎有点空洞，那我们开始写css（wxss",{"_index":4798,"t":{"1960":{"position":[[0,35]]}}}],["wxml代码，为盒子添加class",{"_index":4799,"t":{"1960":{"position":[[36,21]]}}}],["wxss",{"_index":4714,"t":{"1918":{"position":[[100,9]]},"1950":{"position":[[193,4]]},"1983":{"position":[[91,4],[100,4]]},"2005":{"position":[[15,4],[39,4],[83,53],[327,4]]}}}],["x",{"_index":253,"t":{"49":{"position":[[522,1],[536,7],[544,1],[595,1]]},"257":{"position":[[1082,1]]},"396":{"position":[[71,1]]},"406":{"position":[[116,1],[131,1],[169,1],[177,1],[182,4]]},"408":{"position":[[276,1],[315,1],[323,1],[328,4],[365,1]]},"410":{"position":[[362,1],[370,1],[378,1],[416,1],[424,1]]},"412":{"position":[[245,1],[278,1]]},"414":{"position":[[182,1],[201,1],[219,1],[258,1]]},"416":{"position":[[233,1],[253,1],[329,1]]},"420":{"position":[[121,1],[133,1]]},"486":{"position":[[394,1]]},"488":{"position":[[353,1]]},"490":{"position":[[225,1]]},"492":{"position":[[67,1]]},"494":{"position":[[554,1]]},"496":{"position":[[353,1]]},"510":{"position":[[112,1],[224,2]]},"512":{"position":[[93,1],[205,2]]},"514":{"position":[[177,1],[295,2]]},"516":{"position":[[92,1],[205,2]]},"530":{"position":[[66,1]]},"532":{"position":[[92,1]]},"585":{"position":[[69,2]]},"1223":{"position":[[0,36],[813,4],[818,4],[823,4],[1023,3],[1126,9],[1347,4],[1453,4],[3250,4],[3441,3]]},"1239":{"position":[[40,3],[433,3],[526,3],[674,3],[968,3],[1224,3]]},"1241":{"position":[[505,43],[781,3],[1030,3]]},"1248":{"position":[[1058,3]]},"1257":{"position":[[182,3]]},"1263":{"position":[[27,1],[622,3],[1496,7],[1803,3]]},"1342":{"position":[[978,15]]},"1683":{"position":[[141,1]]},"1685":{"position":[[70,1],[118,1]]},"1687":{"position":[[20,2],[29,1],[46,1],[59,1],[68,1],[86,1]]},"1693":{"position":[[27,1]]},"1713":{"position":[[125,1]]},"1718":{"position":[[35,1],[101,1]]},"1720":{"position":[[76,1],[98,1],[146,1],[165,1],[218,1],[260,1]]},"1722":{"position":[[181,1],[195,1]]},"1725":{"position":[[55,1],[84,1]]},"1727":{"position":[[63,1]]},"1729":{"position":[[36,1]]},"1731":{"position":[[38,1]]},"1733":{"position":[[23,1],[51,1]]},"1739":{"position":[[38,1],[98,1]]},"1765":{"position":[[196,1],[217,1]]},"1767":{"position":[[198,1],[226,1]]},"1794":{"position":[[206,1],[265,2],[289,2]]},"1833":{"position":[[159,1]]},"2208":{"position":[[246,7],[451,11],[463,8]]}}}],["x*2",{"_index":1628,"t":{"585":{"position":[[171,4]]}}}],["x+1",{"_index":1224,"t":{"410":{"position":[[382,4]]}}}],["x+dx",{"_index":6311,"t":{"2519":{"position":[[371,6]]}}}],["x,y)对应数字图像中的一个基本单元，称其为图像元素(pictur",{"_index":6039,"t":{"2412":{"position":[[85,40]]}}}],["x,y)的街区距离小于2或等于2",{"_index":6087,"t":{"2439":{"position":[[289,42]]}}}],["x.bytevalu",{"_index":1384,"t":{"486":{"position":[[439,13]]}}}],["x.longvalu",{"_index":1386,"t":{"486":{"position":[[551,13]]}}}],["x0a0b",{"_index":905,"t":{"257":{"position":[[1071,10]]}}}],["x0a0b，意为星期x的第a",{"_index":787,"t":{"245":{"position":[[1009,22]]},"257":{"position":[[955,22]]}}}],["x1",{"_index":4240,"t":{"1691":{"position":[[39,2]]}}}],["x2",{"_index":4242,"t":{"1691":{"position":[[62,2]]}}}],["x64",{"_index":702,"t":{"179":{"position":[[404,4]]},"221":{"position":[[404,4]]},"1165":{"position":[[404,4]]}}}],["x=10",{"_index":1625,"t":{"585":{"position":[[44,5]]}}}],["x=100",{"_index":1627,"t":{"585":{"position":[[145,6]]}}}],["x_distanc",{"_index":6120,"t":{"2443":{"position":[[643,10]]}}}],["xd、figma、sketch",{"_index":603,"t":{"133":{"position":[[42,28]]}}}],["xfunction",{"_index":4262,"t":{"1713":{"position":[[163,9]]}}}],["xhtml",{"_index":3887,"t":{"1547":{"position":[[309,5]]}}}],["xisnext",{"_index":2873,"t":{"1239":{"position":[[216,8],[236,61],[326,7],[478,8],[853,8],[1013,8]]},"1241":{"position":[[1075,8]]}}}],["xml",{"_index":3065,"t":{"1312":{"position":[[55,3]]}}}],["xmlhttprequest",{"_index":193,"t":{"37":{"position":[[49,14],[81,14],[120,17],[774,17]]}}}],["xnn",{"_index":4128,"t":{"1642":{"position":[[193,10]]}}}],["xnxqid",{"_index":803,"t":{"249":{"position":[[577,10]]},"363":{"position":[[818,10]]}}}],["xs=\"20",{"_index":3382,"t":{"1366":{"position":[[2454,8]]}}}],["xs=\"4",{"_index":3339,"t":{"1366":{"position":[[910,7]]}}}],["xss",{"_index":3730,"t":{"1483":{"position":[[266,3]]}}}],["xxx",{"_index":594,"t":{"126":{"position":[[318,3],[331,3],[389,3],[396,3]]},"486":{"position":[[30,3]]}}}],["xxx.class",{"_index":1337,"t":{"464":{"position":[[188,15]]}}}],["xxx.java",{"_index":1335,"t":{"464":{"position":[[17,21]]}}}],["xxx.jsconst",{"_index":4732,"t":{"1922":{"position":[[428,11]]}}}],["xxx.json",{"_index":4785,"t":{"1935":{"position":[[214,8]]},"1991":{"position":[[192,8]]}}}],["xxx.md",{"_index":600,"t":{"126":{"position":[[456,6],[466,6]]}}}],["xxx.xxx.xxx，或者看被路由器分成几个部分，因此下图中有**六个**。中间三个ip子网可以分ip",{"_index":5560,"t":{"2171":{"position":[[337,70]]}}}],["xxxvalu",{"_index":1372,"t":{"486":{"position":[[0,10]]}}}],["xxxx.vercel.app",{"_index":2557,"t":{"1088":{"position":[[240,15]]}}}],["x”，“o",{"_index":2882,"t":{"1241":{"position":[[434,7]]}}}],["x、y、z三个节点向其邻居发送了自己的向量表之后，x节点收到了来自y节点和z节点的距离向量分别是2、0、1和7、1、0。分别将这两个向量放在第二行和第三行的第一列中。然后利用收到的新的信息来更新自己的距离向量。首先更新x节点到y节点的最低路径费用。根据b",{"_index":5750,"t":{"2208":{"position":[[693,127]]}}}],["x坐标从200更改为250",{"_index":87,"t":{"18":{"position":[[427,36]]}}}],["x轴的主刻度设置为50",{"_index":6131,"t":{"2443":{"position":[[892,15]]}}}],["x轴的刻度间隔设置为50",{"_index":6122,"t":{"2443":{"position":[[678,13]]}}}],["x（bit）。从源点到终点共经过k段链路，每段链路的传播时延为d（s），数据率为b(b/s)。在电路交换时电路的建立时间为s(s)。在分组交换时分组长度为p(bit)，且各结点的排队等待时间可忽略不计。问在怎样的条件下，分组交换的时延比电路交换的要小？（提示：画一下草图观察k",{"_index":5252,"t":{"2079":{"position":[[632,175]]}}}],["x，y)，(u，v)和(w，z)处的像素p、q和r",{"_index":6079,"t":{"2439":{"position":[[0,47]]}}}],["y",{"_index":816,"t":{"251":{"position":[[207,3]]},"490":{"position":[[240,1]]},"510":{"position":[[131,1]]},"512":{"position":[[112,1]]},"514":{"position":[[196,1],[298,2],[313,4]]},"516":{"position":[[111,1]]},"530":{"position":[[83,1]]},"532":{"position":[[109,1]]},"1342":{"position":[[1088,15]]},"1691":{"position":[[104,1]]},"1693":{"position":[[40,1]]},"1718":{"position":[[59,1],[127,1]]},"1722":{"position":[[212,1],[227,1]]},"1794":{"position":[[236,1],[270,2],[294,2]]},"1833":{"position":[[38,1]]},"2429":{"position":[[61,4]]},"2519":{"position":[[347,2]]}}}],["y+di",{"_index":6312,"t":{"2519":{"position":[[378,5]]}}}],["yacop",{"_index":2360,"t":{"1010":{"position":[[70,5]]}}}],["yahoo",{"_index":5209,"t":{"2059":{"position":[[190,6]]},"2064":{"position":[[455,12]]}}}],["yangshun",{"_index":2366,"t":{"1010":{"position":[[207,8]]}}}],["yarn.lock",{"_index":3308,"t":{"1364":{"position":[[138,9]]}}}],["ye",{"_index":2808,"t":{"1211":{"position":[[193,4]]},"1487":{"position":[[109,5]]}}}],["year",{"_index":881,"t":{"255":{"position":[[1608,4]]},"1735":{"position":[[132,8]]},"1737":{"position":[[145,8]]}}}],["year:2001},{type:\"bmw",{"_index":4399,"t":{"1794":{"position":[[52,23]]}}}],["year:2010",{"_index":4400,"t":{"1794":{"position":[[76,12]]}}}],["year:2016},{type:\"saab",{"_index":4398,"t":{"1794":{"position":[[27,24]]}}}],["yellow",{"_index":3011,"t":{"1279":{"position":[[405,8]]},"1281":{"position":[[421,8]]}}}],["yes/no",{"_index":3571,"t":{"1420":{"position":[[149,6]]}}}],["yesno.wtf/api",{"_index":3588,"t":{"1420":{"position":[[873,13]]}}}],["yml",{"_index":976,"t":{"289":{"position":[[2,3]]}}}],["you'r",{"_index":3014,"t":{"1279":{"position":[[505,6]]}}}],["yournam",{"_index":2377,"t":{"1010":{"position":[[510,9]]}}}],["yuv与rgb",{"_index":6070,"t":{"2429":{"position":[[122,12]]}}}],["yuv形式，接受时再还原成rgb",{"_index":6067,"t":{"2429":{"position":[[0,49]]}}}],["yuv适用于pal",{"_index":6069,"t":{"2429":{"position":[[79,39]]}}}],["z",{"_index":1399,"t":{"490":{"position":[[256,1]]},"1511":{"position":[[544,1],[857,1]]},"1515":{"position":[[1388,1]]},"1691":{"position":[[130,1]]}}}],["za",{"_index":1932,"t":{"782":{"position":[[135,5]]}}}],["zc",{"_index":804,"t":{"249":{"position":[[601,6]]},"363":{"position":[[842,6]]}}}],["zepto",{"_index":4791,"t":{"1942":{"position":[[219,5]]}}}],["zh",{"_index":2423,"t":{"1017":{"position":[[986,3],[1020,3],[1039,2],[1059,4]]},"1029":{"position":[[23,2],[56,3],[76,4]]},"1058":{"position":[[394,6]]}}}],["zhuan",{"_index":1598,"t":{"569":{"position":[[20,5]]}}}],["zihan",{"_index":2379,"t":{"1010":{"position":[[532,5]]}}}],["zip",{"_index":2761,"t":{"1148":{"position":[[80,18]]}}}],["zs",{"_index":1941,"t":{"784":{"position":[[233,5]]},"847":{"position":[[934,5]]}}}]],"pipeline":["stemmer"]}}]